
#if defined TAZGEE
================================================================================

	                            INFORMACIJE

	Skripta: PC-RP by Nikola Tasic
	Mape: by Nikola Tasic
	Sistemi: Dinamicni


================================================================================
#endif

#define VERZIJA_SKRIPTE 	"Beta 0.1.5b"
#define SNOW_MODE           0

// BOJA 1985A6
#define STREAMER_OBJECT_SD 500.0

//============================== INCLUDES ======================================
#include <a_samp>
#include <zcmd>
#include <sscanf2>
#include <streamer>
#include <foreach>
#include <YSI\y_ini>
#include <callbacks>
#include <afk>
#include <progress2>
//=============================== DILOGS =======================================
enum {
	DIALOG_REGISTER,
	 DIALOG_LOGIN,
	 DIALOG_STATS,
	 DIALOG_ORGIME,
	 DIALOG_ORGDRZAVNA,
	 DIALOG_ORGRANK1,
	 DIALOG_ORGRANK2,
	 DIALOG_ORGRANK3,
	 DIALOG_ORGRANK4,
	 DIALOG_ORGRANK5,
	 DIALOG_ORGRANK6,
	 DIALOG_ORGRANK7,
	 DIALOG_ORGINFO,
	 DIALOG_ORGLIST,
	 DIALOG_ORGLEADERS,
	 DIALOG_PORT,
	 DIALOG_ALIST,
	 DIALOG_GATEPERM,
	 DIALOG_GATEORGID,
	 DIALOG_GATEINFO,
	 DIALOG_PROMLIST,
	 DIALOG_PLATA,
	 DIALOG_GOTOVPOSAO,
	 DIALOG_STATISTIKA,
	 DIALOG_GPS,
	 DIALOG_POL,
	 DIALOG_GODINE,
	 DIALOG_AUTOMAT,
	 DIALOG_BUSVOZAC,
	 DIALOG_DOZVOLE,
	 DIALOG_PITANJE1,
	 DIALOG_PITANJE2,
	 DIALOG_PITANJE3,
	 DIALOG_PITANJE4,
	 DIALOG_PITANJE5,
	 DIALOG_USPESNOAUTO,
	 DIALOG_HELP,
	 DIALOG_AHELP,
	 DIALOG_PHELP,
	 DIALOG_VHELP,
	 DIALOG_HHELP,
	 DIALOG_VEHHELP,
	 DIALOG_HOUSEHELP,
	 DIALOG_JOBHELP,
	 DIALOG_FIRMAHELP,
	 DIALOG_ORGHELP,
	 DIALOG_CHANGEORG,
	 DIALOG_COI,
	 DIALOG_COD,
	 DIALOG_COR1,
	 DIALOG_COR2,
	 DIALOG_COR3,
	 DIALOG_COR4,
	 DIALOG_COR5,
	 DIALOG_COR6,
	 DIALOG_COR7,
	 DIALOG_CORS1,
	 DIALOG_CORS2,
	 DIALOG_CORS3,
	 DIALOG_CORS4,
	 DIALOG_CORS5,
	 DIALOG_CORS6,
	 DIALOG_CORS7,
	 DIALOG_OLRN,
	 DIALOG_OLRS,
	 DIALOG_SL,
	 DIALOG_SS,
	 DIALOG_ORGINVITE,
	 NAGRADNI_SHOP,
	 NGS_VIP,
	 NGS_BOOST,
	 NGS_STATS,
	 NGS_IME,
	 NGS_TIP,
	 NGS_BROJTELEFONA,
	 DIALOG_ACKICK,
	 DIALOG_ADMINMENU,
	 DIALOG_PORTFC,
	 DIALOG_PORTBB,
	 DIALOG_PORTJB,
	 DIALOG_PORTORG,
	 DIALOG_PORTOST,
	 DIALOG_NAPRAVIPORT,
	 DIALOG_UPDATE,
	 DIALOG_RADIO,
	 DIALOG_ASKLIST,
	 DIALOG_ANSWER,
	 DIALOG_ODGOVOR,
	 DIALOG_TEHNIKA,
	 DIALOG_MOBTEL,
	 DIALOG_EVENT,
	 DIALOG_NAPRAVIVOZILO,
	 DIALOG_KUCA,
	 DIALOG_KUCAINFO,
	 DIALOG_KUCAPRODAJDRZAVI,
	 DIALOG_KUCAPRODAJIGRACU,
	 DIALOG_KUCASEF,
	 DIALOG_FIRMA,
	 DIALOG_FIRMAINFO,
	 DIALOG_FIRMAPRODAJDRZAVI,
	 DIALOG_FIRMAPRODAJIGRACU,
	 DIALOG_FIRMAKASA,
	 DIALOG_FIRMAPRODUKTI,
	 DIALOG_GUNSHOP,
	 DIALOG_UPLATIKREDIT,
	 DIALOG_VIPPORT,
	 DIALOG_PROMPORT,
	 DIALOG_OPREMA,
	 DIALOG_WLIST,
	 DIALOG_OSUMNJICI,
	 DIALOG_OSUMNJICENI
};
//================================= MAX ========================================
#define MAX_HOUSES 			3000
#define MAX_FIRME			300
#define MAX_ORGS            15

#define MAX_FCPORTS         200
#define MAX_BBPORTS         200
#define MAX_JBPORTS         200
#define MAX_ORGPORTS        200
#define MAX_OSPORTS         200
#define MAX_VIPPORTS		40
#define MAX_PROMOTERPORTS	30

#define MAX_GPS  			200
#define MAX_ADMINS          20
#define MAX_HELPERS         20
#define MAX_PROMOTERS       20
#define MAX_GATES           300
#define MAX_VOZILA 			4500
#define MAX_AUTOMATA		100
#define MAX_BANKOMATA		100
#define MAX_KONTEJNERA      50
#define MAX_GARAGES			2000
#define MAX_TOCILICA		200
#define MAX_ASKLIST			20
#define MAX_IMANJA			200

#define MAX_EVENT_SLOTS     20

#define SKIDANJEID          MAX_PLAYERS
//================================ PATHS =======================================
#define PATH 				"/korisnici/%s.ini"
#define HOUSEPATH 			"/kuce/%d.ini"
#define IMANJEPATH 			"/imanja/%d.ini"
#define FIRMAPATH 			"/firme/%d.ini"
#define ORGPATH 			"/organizacije/%d.ini"

#define FCPORTPATH          "/ports/fc/%d.ini"
#define BBPORTPATH          "/ports/bb/%d.ini"
#define JBPORTPATH          "/ports/job/%d.ini"
#define ORGPORTPATH         "/ports/org/%d.ini"
#define OSPORTPATH         	"/ports/ostalo/%d.ini"
#define VIPPORTPATH         "/vipport/%d.ini"
#define PROMOTERPORTPATH    "/promport/%d.ini"

#define GPSPATH             "/gps/%d.ini"
#define ADMINPATH           "/admins/%d.ini"
#define HELPERPATH          "/helpers/%d.ini"
#define GATEPATH            "/gates/%d.ini"
#define PROMPATH            "/promoteri/%d.ini"
#define VEHPATH 			"/vozila/%d.ini"
#define AUTOMATPATH			"/automati/%d.ini"
#define BANKOMATTPATH		"/bankomati/%d.ini"
#define STATPATH			"/statistika.ini"
#define KontejneriFile      "/kontejneri/k_%d.ini"
#define GARAZAPATH			"/garaze/%d.ini"
#define TOCILICAPATH		"/tocilice/%d.ini"
#define ASKLISTPATH			"/asklist/%d.ini"
#define BROJEVIPATH			"/brojevi/%d.ini"
//============================== SKRACENO ======================================
#define SCM                 SendClientMessage
#define SCMTA               SendClientMessageToAll
#define SPD                 ShowPlayerDialog
#define TDSFP               TextDrawShowForPlayer
#define SetPos				taz_SetPlayerPos
#define SetAngle			SetPlayerFacingAngle
#define SCBP				SetCameraBehindPlayer
#define C3D					Create3DTextLabel
#define CP                  CreatePickup
#define UzmiIme             GetPlayerName
#define GTFP				GameTextForPlayer
#define UVozilu             IsPlayerInAnyVehicle
#define UzmiVID				GetPlayerVehicleID
#define UzmiModel			GetVehicleModel
#define DajNovac			taz_GivePlayerMoney
#define Povezan				IsPlayerConnected
#define SCP                 SetCameraPos
#define SCLA                SetCameraLookAt
//===============================  BOJE   ======================================
#define COLOR_GREY 			0xAFAFAFAA
#define COLOR_GREEN 		0x33AA33AA
#define COLOR_RED 			0xAA3333AA
#define COLOR_YELLOW 		0xFFFF00AA
#define COLOR_WHITE 		0xFFFFFFAA
#define COLOR_BLUE 			0x0000BBAA
#define COLOR_LIGHTBLUE 	0x01610EAA
#define COLOR_ORANGE 		0xFF9900AA
#define COLOR_RED 			0xAA3333AA
#define COLOR_LIME 			0x10F441AA
#define COLOR_MAGENTA 		0xFF00FFFF
#define COLOR_NAVY 			0x000080AA
#define COLOR_AQUA 			0xF0F8FFAA
#define COLOR_CRIMSON 		0xDC143CAA
#define COLOR_FLBLUE 		0x6495EDAA
#define COLOR_BISQUE 		0xFFE4C4AA
#define COLOR_BLACK 		0x000000AA
#define COLOR_CHARTREUSE 	0x7FFF00AA
#define COLOR_BROWN 		0XA52A2AAA
#define COLOR_CORAL 		0xFF7F50AA
#define COLOR_GOLD 			0xB8860BAA
#define COLOR_GREENYELLOW 	0xADFF2FAA
#define COLOR_INDIGO 		0x4B00B0AA
#define COLOR_IVORY 		0xFFFF82AA
#define COLOR_LAWNGREEN 	0x7CFC00AA
#define COLOR_LIMEGREEN 	0x32CD32AA 
#define COLOR_MIDNIGHTBLUE 	0X191970AA
#define COLOR_MAROON 		0x800000AA
#define COLOR_OLIVE 		0x808000AA
#define COLOR_ORANGERED 	0xFF4500AA
#define COLOR_PINK 			0xFFC0CBAA 
#define COLOR_SEAGREEN 		0x2E8B57AA
#define COLOR_SPRINGGREEN 	0x00FF7FAA
#define COLOR_TOMATO 		0xFF6347AA 
#define COLOR_YELLOWGREEN 	0x9ACD32AA 
#define COLOR_MEDIUMAQUA 	0x83BFBFAA
#define COLOR_MEDIUMMAGENTA 0x8B008BAA 
//=============================== PLATE ========================================
#define POSTARPLATA 		7500
//============================== DOZVOLE =======================================
#define DRIVERLICNECE       30000
#define MOTORLICNECE       	12500
#define FLYINGLICNECE       75000
#define TRUCKLICNECE        25000
#define WEAPONLICNECE       15000
//=========================== NAGRADNI SISTEM ==================================
new nagradnaPoruka[64];
new igraTraje;
//==============================================================================
new TutorijalProgres[MAX_PLAYERS];
new UvodProgres[MAX_PLAYERS];
new uvodAvion[MAX_PLAYERS];
//==============================================================================
new pEditujeVozilo[MAX_PLAYERS];
new probnovozilo[MAX_PLAYERS];
new Text3D:textvozila[MAX_VOZILA];
new TutActor[7];
//============================= ANTICHEAT ======================================
new lastmoney[MAX_PLAYERS], newmoney[MAX_PLAYERS], pmoneytokens[MAX_PLAYERS];
new Float:oldX[MAX_PLAYERS], Float:oldY[MAX_PLAYERS], Float:oldZ[MAX_PLAYERS], Float:newX[MAX_PLAYERS], Float:newY[MAX_PLAYERS], Float:newZ[MAX_PLAYERS], ppostokens[MAX_PLAYERS];
new oldGun[MAX_PLAYERS][13], newGun[MAX_PLAYERS][13], oldAmmo[MAX_PLAYERS][13], newAmmo[MAX_PLAYERS][13], pweptokens[MAX_PLAYERS];
//==============================================================================

//NEW STUFF

new pDuty[MAX_PLAYERS];
new pPancir[MAX_PLAYERS];
new pOprema[MAX_PLAYERS];
new pTazer[MAX_PLAYERS];
new pTazed[MAX_PLAYERS];
new pTazTimer[MAX_PLAYERS];
new pCuffed[MAX_PLAYERS];
new pCuffTimer[MAX_PLAYERS];
new pDragging[MAX_PLAYERS];
new pDragged[MAX_PLAYERS];
new pDragTimer[MAX_PLAYERS];
new pTrackTimer[MAX_PLAYERS];
new pTracking[MAX_PLAYERS];
new pSumnjicenje[MAX_PLAYERS];

//BLACK SCREEN FADE
new FadeAlpha[MAX_PLAYERS];
new FadeTimer[MAX_PLAYERS];
new pFlyingTimer[MAX_PLAYERS];

//JAIL SISTEM
new pUJailu[MAX_PLAYERS];
new pJailTimer[MAX_PLAYERS];

new Float:pWaypoint[MAX_PLAYERS][3];

new fcZlataraActors[3];

new pEnterijerAutoSK[MAX_PLAYERS];
new pIzborZaPolaganje[MAX_PLAYERS];

//new trenutnoVreme;


//GUN SHOP
new gsNPC;

//Skupljac sek. sirovina
new pPlastika[MAX_PLAYERS];
new pAluminijum[MAX_PLAYERS];
new bool:pNosiSmece[MAX_PLAYERS];
new pKamionet[MAX_PLAYERS];

//Wanted level
new pWantedLevel[MAX_PLAYERS];
new pWantedReason[MAX_PLAYERS][64];
new pWantedTimer[MAX_PLAYERS];

//NAPLATNA RAMPA NPC
new rampaNPC[3];

//VOZILO TD
new PlayerText:BrzinomerTD[MAX_PLAYERS][14];

//TELEFON
new pCall[MAX_PLAYERS];
new pPozivalac[MAX_PLAYERS];
new pCallTimer[MAX_PLAYERS];

//EVENTI
new bool:eventTraje;
new bool:eventPoceo;
new eventTime;
new eventTimer;
new eventPocetakTimer;
new eventID;
new eventVozila[][MAX_EVENT_SLOTS];

new listaIgracaUEventu[MAX_EVENT_SLOTS];
new brojIgracaUEventu;
new bool:pEvent[MAX_PLAYERS];

new LSTrkaPozicije[][3] = {
	{834.5056,-1846.1715,12.2594},
	{630.5897,-1726.7321,13.4875},
	{644.6566,-1399.8417,12.9658},
	{1045.3389,-1400.6570,12.9100},
	{1334.3201,-1395.5055,12.8917},
	{1362.2965,-1043.7164,25.8263},
	{1357.9662,-944.3159,33.7142},
	{1105.9709,-951.2756,42.1297},
	{825.2911,-1042.2758,24.4945},
	{668.8433,-1184.9827,15.9151},
	{633.0366,-1306.4847,13.3899},
	{611.3376,-1399.5682,12.9237},
	{446.9781,-1452.6582,28.6517},
	{327.6521,-1611.2426,32.7360},
	{370.0371,-1662.6033,32.2536},
	{369.5945,-1843.8627,7.1972},
	{369.2843,-2042.8627,7.1982}
};

//BLACK SCREEN
new PlayerText:BlackScreenTD[MAX_PLAYERS];

//DEATH
new PlayerText:DeathTD[MAX_PLAYERS];
new pDeathTimer[MAX_PLAYERS];
new pDeathSecs[MAX_PLAYERS];

//ASKLIST
new pAskTimer[MAX_PLAYERS];
new pAskAnswer[MAX_PLAYERS][192];
new pDobioOdgovor[MAX_PLAYERS];
new pOdgovara[MAX_PLAYERS];

//REPORT
new pRepTimer[MAX_PLAYERS];

new Float:pSpecPos[MAX_PLAYERS][3];
new pSpec[MAX_PLAYERS];

new gledalicnu[MAX_PLAYERS];

new pPortIme[MAX_PLAYERS][32];

new pBarValue[MAX_PLAYERS];
new pBarTimer[MAX_PLAYERS];

new spoiler[20] = {
	1000,1001,1002,1003,1014,1015,1016,1023, 1049, 1050, 1058, 1069, 1138, 1139, 1146, 1147, 1158, 1162, 1163, 1164
};
 
new nitro[3] = {
    1008,1009,1010
};
 
new fbumper[23] = {
    1117,1152,1153,1155,1157,1160,1165,1167,1169,1170,1171,1172,1173,1174,1175,1179,1181,1182,1185,1188,1189,1192,1193
};
 
new rbumper[22] = {
    1140,1141,1148,1149,1150,1151,1154,1156,1159,1161,1166,1168,1176,1177,1178,1180,1183,1184,1186,1187,1190,1191
};
 
new exhaust[28] = {
    1018,1019,1020,1021,1022,1028,1029,1037,1043,1044,1045,1046,1059,1064,1065,1066,1089,1092,1104,1105,1113,1114,1126,1127,1129,1132,1135,1136
};
 
new bventr[2] = {
    1042,1044
};
 
new bventl[2] = {
    1043,1045
};
 
new bscoop[4] = {
	1004,1005,1011,1012
};
 
new rscoop[13] = {
    1006,1032,1033,1035,1038,1053,1054,1055,1061,1067,1068,1088,1091
};
 
new lskirt[21] = {
    1007,1026,1031,1036,1039,1042,1047,1048,1056,1057,1069,1070,1090,1093,1106,1108,1118,1119,1133,1122,1134
};
 
new rskirt[21] = {
    1017, 1027, 1030,1040,1041,1051,1052,1062,1063,1071,1072,1094,1095,1099,1101,1102,1107,1120,1121,1124,1137
};
 
new rbbars[2] = {
    1109,1110
};
 
new fbbars[2] = {
    1115,1116
};
 
new wheels[17] = {
    1025,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1096,1097,1098
};
 
new svetla[2] = {
	1013,1024
};
stock IsAnyoneInVehicle(vehicleid)
{
    foreach(Player, i)
    {
        if(IsPlayerInAnyVehicle(i) && GetPlayerVehicleID(i) == vehicleid)
        {
            return 1;
        }
    }
    return 0;
}
stock IsSpoiler(id)
{
	for(new i = 0; i < sizeof(spoiler); i++)
	{ if(id == spoiler[i]) return true; }
	return false;
}
stock IsNitro(id)
{
	for(new i = 0; i < sizeof(nitro); i++)
	{ if(id == nitro[i]) return true; }
	return false;
}
stock IsFrontBumper(id)
{
	for(new i = 0; i < sizeof(fbumper); i++)
	{ if(id == fbumper[i]) return true; }
	return false;
}
stock IsRearBumper(id)
{
	for(new i = 0; i < sizeof(rbumper); i++)
	{ if(id == rbumper[i]) return true; }
	return false;
}
stock IsExhaust(id)
{
	for(new i = 0; i < sizeof(exhaust); i++)
	{ if(id == exhaust[i]) return true; }
	return false;
}
stock IsRightVent(id)
{
	for(new i = 0; i < sizeof(bventr); i++)
	{ if(id == bventr[i]) return true; }
	return false;
}
stock IsLeftVent(id)
{
	for(new i = 0; i < sizeof(bventl); i++)
	{ if(id == bventl[i]) return true; }
	return false;
}
stock IsHood(id)
{
	for(new i = 0; i < sizeof(bscoop); i++)
	{ if(id == bscoop[i]) return true; }
	return false;
}
stock IsRoof(id)
{
	for(new i = 0; i < sizeof(rscoop); i++)
	{ if(id == rscoop[i]) return true; }
	return false;
}
stock IsLeftSkirt(id)
{
	for(new i = 0; i < sizeof(lskirt); i++)
	{ if(id == lskirt[i]) return true; }
	return false;
}
stock IsRightSkirt(id)
{
	for(new i = 0; i < sizeof(rskirt); i++)
	{ if(id == rskirt[i]) return true; }
	return false;
}
stock IsHydraulics(id)
{
	if(id == 1087) return true;
	else return false;
}
stock IsRBBars(id)
{
	for(new i = 0; i < sizeof(rbbars); i++)
	{ if(id == rbbars[i]) return true; }
	return false;
}
stock IsFBBars(id)
{
	for(new i = 0; i < sizeof(fbbars); i++)
	{ if(id == fbbars[i]) return true; }
	return false;
}
stock IsWheels(id)
{
	for(new i = 0; i < sizeof(wheels); i++)
	{ if(id == wheels[i]) return true; }
	return false;
}
stock IsSvetla(id)
{
	for(new i = 0; i < sizeof(svetla); i++)
	{ if(id == svetla[i]) return true; }
	return false;
}


//TD STATS
new PlayerText:StatsTD0[MAX_PLAYERS];
new PlayerText:StatsTD1[MAX_PLAYERS];
new PlayerText:StatsTD2[MAX_PLAYERS];
new PlayerText:StatsTD3[MAX_PLAYERS];
new PlayerText:StatsTD4[MAX_PLAYERS];
new PlayerText:StatsTD5[MAX_PLAYERS];
new PlayerText:StatsTD6[MAX_PLAYERS];
new PlayerText:StatsTD7[MAX_PLAYERS];
new PlayerText:StatsTD8[MAX_PLAYERS];
new PlayerText:StatsTD9[MAX_PLAYERS];
new PlayerText:StatsTD10[MAX_PLAYERS];
new PlayerText:StatsTD11[MAX_PLAYERS];
new PlayerText:StatsTD12[MAX_PLAYERS];
new PlayerText:StatsTD13[MAX_PLAYERS];
new PlayerText:StatsTD14[MAX_PLAYERS];
new PlayerText:StatsTD15[MAX_PLAYERS];
new PlayerText:StatsTD16[MAX_PLAYERS];
new PlayerText:StatsTD17[MAX_PLAYERS];
new PlayerText:StatsTD18[MAX_PLAYERS];
new PlayerText:StatsTD19[MAX_PLAYERS];
new PlayerText:StatsTD20[MAX_PLAYERS];
new PlayerText:StatsTD21[MAX_PLAYERS];
new PlayerText:StatsTD22[MAX_PLAYERS];
new PlayerText:StatsTD23[MAX_PLAYERS];
new PlayerText:StatsTD24[MAX_PLAYERS];
new PlayerText:StatsTD25[MAX_PLAYERS];
new PlayerText:StatsTD26[MAX_PLAYERS];
new PlayerText:StatsTD27[MAX_PLAYERS];
new PlayerText:StatsTD28[MAX_PLAYERS];
new PlayerText:StatsTD29[MAX_PLAYERS];
new PlayerText:StatsTD30[MAX_PLAYERS];
new PlayerText:StatsTD31[MAX_PLAYERS];
new PlayerText:StatsTD32[MAX_PLAYERS];
new PlayerText:StatsTD33[MAX_PLAYERS];
new PlayerText:StatsTD34[MAX_PLAYERS];
new PlayerText:StatsTD35[MAX_PLAYERS];
new PlayerText:StatsTD36[MAX_PLAYERS];
new PlayerText:StatsTD37[MAX_PLAYERS];
new PlayerText:StatsTD38[MAX_PLAYERS];
new PlayerText:StatsTD39[MAX_PLAYERS];
new PlayerText:StatsTD40[MAX_PLAYERS];
new PlayerText:StatsTD41[MAX_PLAYERS];
new PlayerText:StatsTD42[MAX_PLAYERS];
new PlayerText:StatsTD43[MAX_PLAYERS];
new PlayerText:StatsTD44[MAX_PLAYERS];
new PlayerText:StatsTD45[MAX_PLAYERS];
new PlayerText:StatsTD46[MAX_PLAYERS];

//

new pIzborGrada[MAX_PLAYERS];

new pPizza[MAX_PLAYERS];
new pPojas[MAX_PLAYERS];
new pAFK[MAX_PLAYERS];
new pozvanuorg[MAX_PLAYERS];
new rekord;
new fcr;
new bbr;
new ulogovan[MAX_PLAYERS];
new cmdtime[MAX_PLAYERS];
new pUniforma[MAX_PLAYERS];
new pJobProgress[MAX_PLAYERS];
new radi[MAX_PLAYERS];
new vrstaposla[MAX_PLAYERS];
new zarada[MAX_PLAYERS];
new pvoz[MAX_PLAYERS];

new obadirdozvole[MAX_PLAYERS];

new chorg[MAX_PLAYERS];

new polaze[MAX_PLAYERS];
new ppolaze[MAX_PLAYERS];
new pKatalog[MAX_PLAYERS];
new pKazneni[MAX_PLAYERS];

new dftvozilo[MAX_PLAYERS];
new dft[MAX_PLAYERS][8];

new Float:CPIgraca[MAX_PLAYERS][3];

new StanicaActor[48];

Float:GetSpeed(playerid)
{
	new veh, Float:X, Float:Y, Float:Z;
	veh = GetPlayerVehicleID(playerid);
	GetVehicleVelocity(veh, X, Y, Z);
	return floatsqroot(floatpower(X,2)+floatpower(Y,2))*180.0;
}

Float:GetPlayerSpeed(playerid)
{
	new Float:X, Float:Y, Float:Z;
	GetPlayerVelocity(playerid, X, Y, Z);
	return floatsqroot(floatpower(X,2)+floatpower(Y,2))*180.0;
}

//KONTEJNERSYS
enum koInfo {
    Float:koX,
    Float:koY,
    Float:koZ,
    Float:koRotX,
    Float:koRotY,
    Float:koRotZ
}
new KontejnerInfo[ MAX_KONTEJNERA ][ koInfo ], k_object[ sizeof(KontejnerInfo) ],Text3D:kLabel[ sizeof(KontejnerInfo) ], creates_container[ MAX_PLAYERS ],k_pretrazen[MAX_PLAYERS];
new pretrezujeKontejner[MAX_PLAYERS];

new Indicators_xqz[MAX_VEHICLES][6];


stock SetVehicleIndicator(vehicleid, leftindicator=0, rightindicator=0)
{
	if(!leftindicator & !rightindicator) return false;
	new Float:_vX[2], Float:_vY[2], Float:_vZ[2];
	if(rightindicator)
	{
	    if(IsTrailerAttachedToVehicle(vehicleid))
	    {
	        new omg = GetVehicleModel(GetVehicleTrailer(vehicleid));
            GetVehicleModelInfo(omg, VEHICLE_MODEL_INFO_SIZE, _vX[0], _vY[0], _vZ[0]);
 			Indicators_xqz[vehicleid][4] = CreateObject(19294, 0, 0, 0,0,0,0);
			AttachObjectToVehicle(Indicators_xqz[vehicleid][4], GetVehicleTrailer(vehicleid),  _vX[0]/2.4, -_vY[0]/3.35, -1.0 ,0,0,0);
		}
	    GetVehicleModelInfo(GetVehicleModel(vehicleid), VEHICLE_MODEL_INFO_SIZE, _vX[0], _vY[0], _vZ[0]);
 		Indicators_xqz[vehicleid][0] = CreateObject(19294, 0, 0, 0,0,0,0);
		AttachObjectToVehicle(Indicators_xqz[vehicleid][0], vehicleid,  _vX[0]/2.23, _vY[0]/2.23, 0.1 ,0,0,0);
 		Indicators_xqz[vehicleid][1] = CreateObject(19294, 0, 0, 0,0,0,0);
		AttachObjectToVehicle(Indicators_xqz[vehicleid][1], vehicleid,  _vX[0]/2.23, -_vY[0]/2.23, 0.1 ,0,0,0);
	}
	if(leftindicator)
	{
	    if(IsTrailerAttachedToVehicle(vehicleid))
	    {
	    	new omg = GetVehicleModel(GetVehicleTrailer(vehicleid));
            GetVehicleModelInfo(omg, VEHICLE_MODEL_INFO_SIZE, _vX[0], _vY[0], _vZ[0]);
 			Indicators_xqz[vehicleid][5] = CreateObject(19294, 0, 0, 0,0,0,0);
			AttachObjectToVehicle(Indicators_xqz[vehicleid][5], GetVehicleTrailer(vehicleid),  -_vX[0]/2.4, -_vY[0]/3.35, -1.0 ,0,0,0);
		}
	    GetVehicleModelInfo(GetVehicleModel(vehicleid), VEHICLE_MODEL_INFO_SIZE, _vX[0], _vY[0], _vZ[0]);
 		Indicators_xqz[vehicleid][2] = CreateObject(19294, 0, 0, 0,0,0,0);
		AttachObjectToVehicle(Indicators_xqz[vehicleid][2], vehicleid,  -_vX[0]/2.23, _vY[0]/2.23, 0.1 ,0,0,0);
 		Indicators_xqz[vehicleid][3] = CreateObject(19294, 0, 0, 0,0,0,0);
		AttachObjectToVehicle(Indicators_xqz[vehicleid][3], vehicleid,  -_vX[0]/2.23, -_vY[0]/2.23, 0.1 ,0,0,0);
	}
	return 1;
}

stock next_container(const len) {
    new container_id = (-1);
    for( new loop = ( 0 ), c_check = ( -1 ), Data_[ 64 ] = "\0"; loop != len; ++ loop )
	{
       c_check = ( loop+1 );
       format( Data_, ( sizeof Data_ ), KontejneriFile, c_check );
       if(!fexist(Data_))
	   {
          container_id = ( c_check );
          break;
        }
    }
    return ( container_id );
}

stock save_container(id) {

    new c_file[ 60 ];
    format(c_file, sizeof(c_file), KontejneriFile, id);
    new INI:File = INI_Open(c_file);
    INI_WriteFloat(File, "X", KontejnerInfo[ id ][ koX ]);
    INI_WriteFloat(File, "Y", KontejnerInfo[ id ][ koY ]);
    INI_WriteFloat(File, "Z", KontejnerInfo[ id ][ koZ ]);
    INI_WriteFloat(File, "rX", KontejnerInfo[ id ][ koRotX ]);
    INI_WriteFloat(File, "rY", KontejnerInfo[ id ][ koRotY ]);
    INI_WriteFloat(File, "rZ", KontejnerInfo[ id ][ koRotZ ]);
    INI_Close(File);
}

new Poslovi [][] = 
{
	"Postar",
	"Bus Vozac",
	"Masinovodja",
	"Kamiondzjia",
	"Zaprasivac Komaraca",
	"Pilot",
	"Pizza Dostavljac",
	"Dostavljac Delova",
	"Cistac Ulica",
	"Prevoznik Novca",
	"Prevoznik Kamenja",
	"Logisticar",
	"Skupljac Sekundarnih Sirovina"
};


new pSalonVozilo[MAX_PLAYERS];

new SalonskaVozila[52][3] = {
	{461, 250000, 1},
	{462, 75000, 1},
	{463, 225000, 1},
	{468, 275000, 1},
	{586, 250000, 1},
	{581, 260000, 1},
	{521, 275000, 1},
	{411, 1250000, 2},
	{560, 750000, 2},
	{506, 750000, 2},
	{429, 650000, 2},
	{451, 600000, 2},
	{477, 550000, 2},
	{541, 500000, 2},
	{558, 400000, 2},
	{559, 400000, 2},
	{603, 350000, 2},
	{562, 350000, 2},
	{579, 350000, 2},
	{489, 350000, 2},
	{400, 300000, 2},
	{402, 270000, 2},
	{405, 200000, 2},
	{410, 190000, 2},
	{421, 175000, 2},
	{422, 175000, 2},
	{424, 250000, 2},
	{434, 300000, 2},
	{445, 175000, 2},
	{458, 250000, 2},
	{475, 200000, 2},
	{478, 75000, 2},
	{480, 300000, 2},
	{482, 200000, 2},
	{500, 250000, 2},
	{507, 175000, 2},
	{517, 125000, 2},
	{526, 275000, 2},
	{531, 75000, 3},
	{533, 175000, 2},
	{534, 150000, 2},
	{535, 225000, 2},
	{545, 200000, 2},
	{550, 275000, 2},
	{555, 200000, 2},
	{561, 250000, 2},
	{565, 250000, 2},
	{567, 250000, 2},
	{585, 220000, 2},
	{587, 320000, 2},
	{589, 200000, 2},
	{602, 320000, 2}
};
new zalihevozila[52];

new Float:CistacPos[24][3] = {
	{95.5946,1196.3555,18.0953},
	{167.3594,1149.7880,14.0392},
	{184.8005,1104.2770,15.8662},
	{13.1679,1200.3059,18.9073},
	{-65.4487,1193.1923,19.3071},
	{-46.0343,1146.5908,19.3188},
	{26.3700,1125.1067,19.3188},
	{-26.0860,1100.8081,19.3188},
	{-67.0072,1100.2052,19.3188},
	{-177.6267,1095.9991,19.3187},
	{-247.1216,1095.3354,19.3188},
	{-275.4453,1135.8062,19.3188},
	{-344.9247,1134.4268,19.3188},
	{-324.8960,1099.0804,19.3188},
	{-281.5040,1062.0112,19.3237},
	{-258.9709,1018.6211,19.3188},
	{-197.6152,1019.1408,19.3110},
	{-188.8438,1058.2064,19.318},
	{-68.2768,1061.6157,19.3189},
	{-41.5571,1022.4520,19.3188},
	{-14.4078,1065.1061,19.318},
	{-115.2165,1235.4340,17.479},
	{-75.3319,1260.7856,12.0095},
	{-64.4984,1344.4205,10.3994}
};

new Float:LogisticarPos[7][3] = {
	{1400.2780,389.9301,19.2830},
	{1383.6693,266.3428,19.0921},
	{1209.1154,190.5005,19.8633},
	{322.6181,-162.8726,1.1026},
	{310.5683,-239.5137,1.1033},
	{42.1338,-283.3256,1.4759},
	{-160.2238,-287.5145,3.4302}
};
new logisticarID[MAX_PLAYERS];
new logisticarZarada[MAX_PLAYERS];

new Float:LogisticarKucaPos[24][4] = {
	{-13.0993,1213.1471,18.8778,86.0780},
	{9.3163,1229.4377,18.8709,145.7403},
	{-72.3340,1221.1321,19.2354,306.9030},
	{-97.5718,1217.9164,19.2604,82.3555},
	{-34.7521,1107.2831,19.2742,251.7926},
	{-20.4571,1107.3777,19.2674,282.1991},
	{2.3261,1106.3734,19.2674,270.3386},
	{1.6471,1086.0791,19.2700,143.5170},
	{-42.2349,1091.1486,19.2676,52.7298},
	{-72.4374,968.4269,19.3431,181.7135},
	{-129.8441,914.0502,19.0033,32.9446},
	{-130.4019,883.5699,18.4607,212.2542},
	{-796.9012,1497.5400,21.4248,270.3054},
	{-799.7871,1557.2509,26.6424,354.2414},
	{-822.2080,1601.0824,26.6441,91.3034},
	{-889.5057,1561.7106,25.4608,189.0290},
	{-887.7918,1524.6091,25.4393,196.5723},
	{-901.0368,1518.5420,25.3107,55.0037},
	{1233.1473,357.9938,19.0800,235.6122},
	{804.9943,373.4099,19.1554,175.8334},
	{784.8512,357.7292,19.1035,105.7524},
	{766.5626,346.3819,19.5420,216.9578},
	{747.1055,264.1865,26.6112,101.5556},
	{712.3126,297.2726,19.7657,183.6405}
};

new Float:PizzaPos[54][4] = {
	{10.5487,1221.4202,18.9407,330.7532},
	{-28.6462,1214.8629,18.9496,90.6732},
	{-69.5962,1221.8956,19.2739,342.0859},
	{-90.1146,1228.3466,19.3391,95.1685},
	{-267.7632,1171.4725,19.3369,180.0558},
	{-282.5153,1170.5773,19.3364,162.0666},
	{-268.2011,1149.6168,19.3361,232.4858},
	{-267.9278,1125.1979,19.3401,179.0395},
	{-324.4210,1156.1136,19.3399,89.0670},
	{-359.7022,1166.7996,19.3370,105.4855},
	{-353.6577,1139.7913,19.3390,176.2940},
	{-354.1870,1115.3428,19.3397,178.8468},
	{-255.0293,1089.9832,19.3401,267.3421},
	{-267.6732,1049.5511,19.3399,180.8578},
	{-271.8293,1012.7220,19.3312,238.0888},
	{-250.1841,1011.9136,19.3394,272.9919},
	{-183.6534,999.7742,19.3156,197.8438},
	{-185.4909,976.1788,18.6546,174.2586},
	{-158.8695,987.5302,18.1071,274.1749},
	{-149.7002,979.5429,18.1624,192.1381},
	{-148.7435,964.6721,18.1488,186.8425},
	{-128.2519,918.5872,19.3015,208.9938},
	{-95.6840,888.7388,20.4567,254.4563},
	{-54.0402,896.8109,21.5905,269.4350},
	{-15.8891,929.6633,20.6560,320.2691},
	{18.5442,941.8285,19.4884,293.4205},
	{24.1627,970.9809,19.3186,96.9957},
	{32.3007,919.5513,23.2046,91.7155},
	{18.5597,912.0323,23.3790,106.6643},
	{-121.4072,861.3262,17.6334,106.6733},
	{-832.9669,1484.6779,17.6339,179.3593},
	{-823.9210,1485.6060,18.6736,275.6626},
	{-814.6447,1485.8997,19.7188,271.1217},
	{-808.7512,1485.3767,20.2696,264.7595},
	{-795.0620,1484.9285,21.7866,268.8763},
	{-785.5978,1484.7411,22.8369,268.8699},
	{-778.0071,1484.5906,23.5647,268.8636},
	{-782.2468,1499.5248,23.2088,88.2403},
	{-790.8163,1499.4117,22.2606,90.8578},
	{-798.8982,1499.6079,21.3429,89.6058},
	{-810.1135,1499.6854,20.1444,89.6042},
	{-827.5737,1569.8119,26.6091,351.3671},
	{-828.5314,1589.9917,26.6089,40.9293},
	{-827.6483,1601.8153,26.7134,352.5542},
	{-821.2947,1602.6494,26.7221,287.6710},
	{-802.9495,1596.2731,26.5816,240.8611},
	{-816.2241,1570.8617,26.7137,179.1781},
	{-765.2458,1614.9459,26.7143,244.2975},
	{-742.7367,1430.7783,15.5829,302.6383},
	{-717.1916,1434.4554,18.0717,286.0667},
	{-686.7211,1443.5195,16.9213,340.0843},
	{-656.7886,1447.0272,13.2105,157.2220},
	{-652.8891,1446.1853,13.2113,238.4704},
	{-639.5695,1444.0111,13.2117,35.8209}
};

new Float:ZaprasivacPos[34][4] = {
	{364.1031,2503.3953,16.7667,91.1405},
	{195.3536,2499.9805,36.6867,91.1830},
	{-20.3615,2265.2080,78.1251,157.9047},
	{-64.9729,1954.3093,84.6115,175.5705},
	{-9.9550,1380.2275,40.5798,188.5436},
	{26.5477,1076.7070,48.4509,187.2942},
	{-144.2440,939.2535,47.8799,94.5662},
	{-355.6177,988.2521,57.5808,56.6993},
	{-315.6904,1159.4233,50.1327,320.1382},
	{-177.4635,1198.4999,50.4350,260.0486},
	{-52.6928,1114.5557,53.3048,219.8525},
	{-82.7849,987.8433,51.1278,91.3268},
	{-170.6506,1067.0164,42.7119,32.9321},
	{-177.0501,1183.2947,43.5267,354.5952},
	{-461.3425,1362.9628,42.3248,90.0330},
	{-639.9559,1429.7312,39.0091,69.1594},
	{-709.7242,1454.9785,40.5820,69.3719},
	{-782.6934,1560.4257,46.4332,22.1661},
	{-871.1863,1585.7799,57.3581,204.1906},
	{-831.6502,1472.5709,46.4504,199.3413},
	{-584.2868,1391.8718,61.7461,285.2553},
	{-466.3140,1552.8558,66.6217,338.3036},
	{-368.1776,1715.4120,68.1143,326.3147},
	{-306.5543,1829.6860,64.0560,331.6288},
	{-245.1389,1968.3560,61.2715,335.1234},
	{-340.8560,2142.6426,69.1915,35.1977},
	{-368.3232,2236.2227,68.5275,13.1414},
	{-370.4212,2547.3047,93.8504,352.9863},
	{-303.8749,2634.9348,88.3121,316.3361},
	{-222.6395,2698.8264,82.2592,308.3241},
	{-183.7174,2648.6204,89.1256,119.5459},
	{-17.0396,2492.9792,37.6944,276.5539},
	{297.6783,2504.2341,16.8069,257.3305},
	{364.1031,2503.3953,16.7667,91.1405}
};

new Float:Poligon[10][3] = {
	{-2083.6140,-136.4295,34.8454},
	{-2083.5745,-160.3074,34.8454},
	{-2090.6628,-172.5392,34.8466},
	{-2083.5911,-181.8316,34.8447},
	{-2072.5154,-192.6648,34.8455},
	{-2053.8633,-183.8568,34.8531},
	{-2053.7222,-158.5806,34.8455},
	{-2062.5149,-152.2648,34.8454},
	{-2053.7959,-136.7119,34.8526},
	{-2044.0906,-126.9210,34.7830}
};

new Float:GradVoznja[16][3] = {
	{-75.8343,1363.3492,9.8693},
	{-73.3666,1282.9154,11.4721},
	{-118.0868,1212.6173,18.8082},
	{-258.8195,1200.3207,19.1200},
	{-278.0896,1162.6313,19.1194},
	{-347.9240,1111.0377,19.1192},
	{-288.8759,1060.7131,19.1186},
	{-209.9149,1015.5640,19.1125},
	{-283.2662,819.7234,13.7845},
	{-133.4995,816.9025,20.7069},
	{104.6629,885.2328,21.8464},
	{214.7543,961.7916,27.7167},
	{188.3904,1126.2465,14.4948},
	{126.2264,1191.5133,16.7827},
	{-54.9605,1264.6345,9.7670},
	{-76.1095,1363.0382,9.8988}
};

new Float:GradVoznjaBB[13][4] = {
	{1234.0999,155.6749,19.9324,247.3251},
	{1289.6271,243.6763,18.9278,335.2580},
	{1355.4304,299.5580,18.9315,70.4118},
	{1370.9076,450.7247,19.3965,57.7559},
	{1117.9176,577.2737,19.4108,65.3984},
	{1043.7181,465.4265,19.7604,241.0945},
	{1220.7946,353.1257,18.9311,244.9212},
	{1281.1780,349.7148,18.9330,334.8148},
	{1328.8057,344.9941,18.9315,153.1243},
	{1395.0040,276.1923,18.9315,244.3281},
	{1362.8153,219.4623,18.9314,65.9127},
	{1262.7357,194.7530,18.9362,155.2813},
	{1233.7709,155.9607,19.9867,94.9205}
};

new Float:PostarLokacije[46][3] = {
	{-43.4347,1090.7808,19.8106},
	{-37.5661,1105.6101,19.8121},
	{-16.2650,1105.3013,19.8077},
	{7.0344,1104.9235,19.8143},
	{-8.2981,1075.2360,19.8087},
	{-39.1451,1031.3309,19.8107},
	{-20.3940,1190.9832,19.4315},
	{9.8147,1205.6858,19.4123},
	{-21.3706,1206.0796,19.4276},
	{-70.7966,1206.0896,19.8083},
	{-89.9856,1191.4811,19.8112},
	{-131.4412,1205.8091,19.8071},
	{-150.3941,1191.0110,19.8106},
	{-183.4694,1037.0117,19.7667},
	{-183.0801,1078.8905,19.8093},
	{-183.0633,1113.0229,19.8126},
	{-183.6340,1168.8506,19.8114},
	{-268.6403,1173.5869,19.8085},
	{-282.5029,1173.8756,19.8088},
	{-268.0950,1151.1642,19.8064},
	{-321.9650,1155.6344,19.8082},
	{-356.5619,1164.2915,19.8087},
	{-353.2758,1137.0552,19.8091},
	{-352.9516,1116.3424,19.8097},
	{-338.2070,1120.9119,19.8084},
	{-299.7482,1104.9216,19.8106},
	{-268.1504,1047.3925,19.8091},
	{-274.5612,1014.1744,19.8000},
	{-251.4768,1011.1357,19.8090},
	{-251.3842,1090.1968,19.8058},
	{-267.9312,1122.2545,19.8152},
	{-121.7438,977.1251,19.9200},
	{-139.4428,931.6760,19.5340},
	{-143.2680,908.3980,19.050},
	{-146.0770,885.9374,18.7313},
	{-123.3257,865.6015,18.1964},
	{-96.9770,888.6113,20.8516},
	{-55.0840,899.5125,22.0606},
	{-55.2188,925.0830,21.9358},
	{-17.5989,926.2678,21.1195},
	{21.0964,895.4129,24.1411},
	{39.0779,926.3736,22.1131},
	{24.1468,954.3013,20.1278},
	{22.2791,975.4733,19.6978},
	{65.5264,984.6954,15.1470},
	{72.2591,1000.1411,14.2398}
};

//STATS TD
new Text:StatsTextdrawPublic[62];
new PlayerText:StatsTextdrawPlayer[MAX_PLAYERS][32];

new Text:Textdraw0;
new Text:Textdraw1;
new Text:Textdraw2;
new Text:Textdraw3;
new Text:Textdraw4;
new Text:Textdraw5;
new Text:Textdraw6;
new Text:Textdraw7;
new Text:Textdraw8;
new Text:Textdraw9;
new Text:Textdraw10;
new Text:Textdraw11;
new Text:Textdraw12;
new Text:Textdraw13;
new Text:Textdraw14;
new Text:Textdraw15;
new Text:Textdraw16;
new Text:Textdraw17;
new Text:Textdraw18;
new Text:Textdraw19;
new Text:Textdraw20;
new Text:Textdraw21;
new Text:Textdraw22;
new Text:Textdraw23;
new Text:Textdraw24;
new Text:Textdraw25;
new Text:Textdraw26;
new Text:Textdraw27;
new Text:Textdraw28;
new Text:Textdraw29;
new Text:Textdraw30;
new Text:Textdraw31;
new Text:Textdraw32;
new Text:Textdraw33;
new Text:Textdraw34;
new Text:Textdraw35;
new Text:Textdraw36;
new Text:Textdraw37;
new Text:Textdraw38;
new Text:Textdraw39;
new Text:Textdraw40;
new Text:Textdraw41;
new Text:Textdraw42;
new Text:Textdraw43;

new PlayerText:IzborSelaTD0[MAX_PLAYERS];
new PlayerText:IzborSelaTD1[MAX_PLAYERS];
new PlayerText:IzborSelaTD2[MAX_PLAYERS];
new PlayerText:IzborSelaTD3[MAX_PLAYERS];
new PlayerText:IzborSelaTD4[MAX_PLAYERS];
new PlayerText:IzborSelaTD5[MAX_PLAYERS];
new PlayerText:IzborSelaTD6[MAX_PLAYERS];
new PlayerText:IzborSelaTD7[MAX_PLAYERS];
new PlayerText:IzborSelaTD8[MAX_PLAYERS];
new PlayerText:IzborSelaTD9[MAX_PLAYERS];

new PlayerText:Textdrawp0[MAX_PLAYERS];
new PlayerText:Textdrawp1[MAX_PLAYERS];
new PlayerText:Textdrawp2[MAX_PLAYERS];
new PlayerText:Textdrawp3[MAX_PLAYERS];
new PlayerText:Textdrawp4[MAX_PLAYERS];
new PlayerText:Textdrawp5[MAX_PLAYERS];
new PlayerText:Textdrawp6[MAX_PLAYERS];

new PlayerText:REGTDPRVI[MAX_PLAYERS];
new PlayerText:REGTD0[MAX_PLAYERS];
new PlayerText:REGTD1[MAX_PLAYERS];
new PlayerText:REGTD2[MAX_PLAYERS];
new PlayerText:REGTD3[MAX_PLAYERS];
new PlayerText:REGTD4[MAX_PLAYERS];
new PlayerText:REGTD5[MAX_PLAYERS];
new PlayerText:REGTD6[MAX_PLAYERS];
new PlayerText:REGTD7[MAX_PLAYERS];
new PlayerText:REGTD8[MAX_PLAYERS];
new PlayerText:REGTD9[MAX_PLAYERS];
new PlayerText:REGTD10[MAX_PLAYERS];
new PlayerText:REGTD11[MAX_PLAYERS];
new PlayerText:REGTD12[MAX_PLAYERS];
new PlayerText:REGTD13[MAX_PLAYERS];
new PlayerText:REGTD14[MAX_PLAYERS];
new PlayerText:REGTD15[MAX_PLAYERS];
new PlayerText:REGTD16[MAX_PLAYERS];
new PlayerText:REGTD17[MAX_PLAYERS];
new PlayerText:REGTD18[MAX_PLAYERS];
new PlayerText:REGTD19[MAX_PLAYERS];
new PlayerText:REGTD20[MAX_PLAYERS];
new PlayerText:REGTD21[MAX_PLAYERS];
new PlayerText:REGTD22[MAX_PLAYERS];
new PlayerText:REGTD23[MAX_PLAYERS];
new PlayerText:REGTD24[MAX_PLAYERS];
new PlayerText:REGTD25[MAX_PLAYERS];
new PlayerText:REGTD26[MAX_PLAYERS];
new PlayerText:REGTD27[MAX_PLAYERS];
new PlayerText:REGTD28[MAX_PLAYERS];
new PlayerText:REGTD29[MAX_PLAYERS];
new PlayerText:REGTD30[MAX_PLAYERS];
new PlayerText:REGTD31[MAX_PLAYERS];
new PlayerText:REGTD32[MAX_PLAYERS];
new PlayerText:REGTD33[MAX_PLAYERS];
new PlayerText:REGTD34[MAX_PLAYERS];
new PlayerText:REGTD35[MAX_PLAYERS];
new PlayerText:REGTD36[MAX_PLAYERS];
new PlayerText:REGTD37[MAX_PLAYERS];
new PlayerText:REGTD38[MAX_PLAYERS];
new PlayerText:REGTD39[MAX_PLAYERS];

new PlayerText:SalonTD[MAX_PLAYERS];
new PlayerText:SalonTD1[MAX_PLAYERS];
new PlayerText:SalonTD2[MAX_PLAYERS];
new PlayerText:SalonTD3[MAX_PLAYERS];
new PlayerText:SalonTD4[MAX_PLAYERS];
new PlayerText:SalonTD5[MAX_PLAYERS];
new PlayerText:SalonTD6[MAX_PLAYERS];
new PlayerText:SalonTD7[MAX_PLAYERS];
new PlayerText:SalonTD8[MAX_PLAYERS];
new PlayerText:SalonTD9[MAX_PLAYERS];

new PlayerText:LoadingTextdraw[MAX_PLAYERS][13];
new PlayerBar:LoadingProgressBar[MAX_PLAYERS][1];

/*new PlayerText:LoadingTD0[MAX_PLAYERS];
new PlayerText:LoadingTD1[MAX_PLAYERS];
new PlayerText:LoadingTD2[MAX_PLAYERS];
new PlayerText:LoadingTD3[MAX_PLAYERS];
new PlayerText:LoadingTD4[MAX_PLAYERS];
new PlayerText:LoadingTD5[MAX_PLAYERS];
new PlayerText:LoadingTD6[MAX_PLAYERS];
new PlayerText:LoadingTD7[MAX_PLAYERS];
new PlayerText:LoadingTD8[MAX_PLAYERS];
new PlayerText:LoadingTD9[MAX_PLAYERS];
new PlayerText:LoadingTD10[MAX_PLAYERS];
new PlayerText:LoadingTD11[MAX_PLAYERS];
new PlayerText:LoadingTD12[MAX_PLAYERS];
new PlayerText:LoadingTD13[MAX_PLAYERS];
new PlayerText:LoadingTD14[MAX_PLAYERS];
new PlayerText:LoadingTD15[MAX_PLAYERS];
new PlayerText:LoadingTD16[MAX_PLAYERS];
new PlayerText:LoadingTD17[MAX_PLAYERS];
new PlayerText:LoadingTD18[MAX_PLAYERS];
new PlayerText:LoadingTD19[MAX_PLAYERS];
new PlayerText:LoadingTD20[MAX_PLAYERS];
new PlayerText:LoadingTD21[MAX_PLAYERS];
new PlayerText:LoadingTD22[MAX_PLAYERS];
new PlayerText:LoadingTD23[MAX_PLAYERS];
new PlayerText:LoadingTD24[MAX_PLAYERS];
new PlayerText:LoadingTD25[MAX_PLAYERS];
new PlayerText:LoadingTD26[MAX_PLAYERS];
new PlayerText:LoadingTD27[MAX_PLAYERS];
new PlayerText:LoadingTD28[MAX_PLAYERS];*/

//==============================================================================
new NasumicniKarakter [][] =
{
	"a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o",
	"p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "A", "B", "C", "D",
	"E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S",
	"T", "U", "V", "W", "X", "Y", "Z", "0", "1", "2", "3", "4", "5", "6", "7",
	"8", "9"
};

new nenapravljenovozilo[MAX_VOZILA];
enum vehInfo
{
	vID,
	vOwnable,
	vOwner[128],
	vCena,
	vNeaktivnost,
	vRegistracija,
	vAutoskola,
	vPosaoID,
	vOrgID,
	vRent,
	vAdmin,
	vHelper,
	vVip,
	vPromoter,
	vSalon,
	vBoja,
	vBoja2,
	vUSalonu,
	vGorivo,
	Float:vX,
	Float:vY,
	Float:vZ,
	Float:vRot,
	vDozvola,
	vSpoiler,
	vHood,
	vRoof,
	vSideSkirt,
	vLamps,
	vNitro,
	vExhaust,
	vWheels,
	vHydraulics,
	vFrontBumper,
	vRearBumper,
	vVentRight,
	vVentLeft,
	vPainJob,
	vEvent
};
new VoziloInfo[MAX_VOZILA][vehInfo];

new Text3D:automat[MAX_AUTOMATA];
enum autoInfo
{
	Float:aX,
	Float:aY,
	Float:aZ
};
new AutomatInfo[MAX_AUTOMATA][autoInfo];

new Text3D:bankomat[MAX_AUTOMATA];
enum bankomatInfo
{
	Float:bX,
	Float:bY,
	Float:bZ
};
new BankomatInfo[MAX_BANKOMATA][bankomatInfo];

enum promInfo
{
	promName[128],
	promNeaktivnost
};
new PromoterInfo[MAX_PROMOTERS][promInfo];


enum gInfo
{
	gObjID,
	Float:gX,
	Float:gY,
	Float:gZ,
	Float:gRX,
	Float:gRY,
	Float:gRZ,
	Float:gOX,
	Float:gOY,
	Float:gOZ,
	Float:gORX,
	Float:gORY,
	Float:gORZ,
	gOrgID,
	gPerm
};
new GateInfo[MAX_GATES][gInfo];
new gate[MAX_GATES];
new gateObj[MAX_GATES];
new gatefaza[MAX_PLAYERS];
new editagate[MAX_PLAYERS];
new editagateid[MAX_PLAYERS];
new editing[MAX_PLAYERS];
new otvaraGate[MAX_PLAYERS];


enum aInfo
{
	aName[128],
	aNeaktivnost,
	aDuty
};
new AdminInfo[MAX_ADMINS][aInfo];
new pADuty[MAX_PLAYERS];

enum hlInfo
{
	hlName[128],
	hlNeaktivnost,
	hlDuty
};
new HelperInfo[MAX_HELPERS][hlInfo];
new pHDuty[MAX_PLAYERS];

enum orgInfo
{
	orgIme[128],
	orgLeader[128],
	orgLeaderNeaktivnost,
	orgLeaderSkin,
	orgMember1[128],
	orgMember2[128],
	orgMember3[128],
	orgMember4[128],
	orgMember5[128],
	orgMember6[128],
	orgMember7[128],
	orgMember8[128],
	orgMember9[128],
	orgMember10[128],
	orgMember11[128],
	orgMember12[128],
	orgMember13[128],
	orgMember14[128],
	orgMember15[128],
	orgMember16[128],
	orgMember17[128],
	orgMember18[128],
	orgMember19[128],
	orgMember20[128],
	orgSefMoney,
	orgSefMats,
	orgSefDrugs,
	orgDrzavna,
	orgRank1[128],
	orgRank2[128],
	orgRank3[128],
	orgRank4[128],
	orgRank5[128],
	orgRank6[128],
	orgRank7[128],
	orgRank1Skin,
	orgRank2Skin,
	orgRank3Skin,
	orgRank4Skin,
	orgRank5Skin,
	orgRank6Skin,
	orgRank7Skin,
	orgLeaderRankName[128],
	Float:orgX,
	Float:orgY,
	Float:orgZ
};
new OrgInfo[MAX_ORGS][orgInfo];
new brojorg;


new NasumicnePoruke[][] =
{
	"Ako vam je potrebna pomoc ukucajte /help!",
	"Ako ne znate broj neke drzavne organizacije, ukucajte /call 222!",
	"Listu organizacija mozete videti na /organizacije!",
	"Listu lidera mozete videti na /lideri!",
	"Ako ne mozete da se snadjete, koristite /gps!",
	"Ako zelite da pozovete admina, ukucajte /pomoc ili /askq!",
	"Ako zelite da se zaposlite, to mozete uraditi u opstini!",
	"Ne mozete primati platu ako ne otvorite bankovni racun u banci!",
	"Nagradnim poenima mozete da kupujete razne donatorske pogodnost!",
	"Ako zelite da vidite listu vasih dostignuca, koristite /dostignuca!",
	"Vas level ne zavisi samo od sati igranja, vec i od aktvnosti! /levelhelp",
	"Morate redovno izmirivati racune kako ne biste izgubili nekretninu.",
	"Naplatne rampe su vam dostupne cak i kad vas juri policija.",
	"Na serveru postoji sistem dostignuca. /dostignuca"
};

new brojkuca;

enum fcPortInfo
{
	fcportIme[32],
	Float:fcportX,
	Float:fcportY,
	Float:fcportZ
};
new FCPortInfo[MAX_FCPORTS][fcPortInfo];
new brojfcportova;

enum vipPortInfo
{
	vipportIme[32],
	Float:vipportX,
	Float:vipportY,
	Float:vipportZ
};
new VipPortInfo[MAX_VIPPORTS][vipPortInfo];
new brojvipportova;

enum promPortInfo
{
	promportIme[32],
	Float:promportX,
	Float:promportY,
	Float:promportZ
};
new PromPortInfo[MAX_FCPORTS][promPortInfo];
new brojpromportova;

enum osPortInfo
{
	osportIme[32],
	Float:osportX,
	Float:osportY,
	Float:osportZ
};
new OSPortInfo[MAX_OSPORTS][osPortInfo];
new brojostalihportova;

enum bbPortInfo
{
	bbportIme[32],
	Float:bbportX,
	Float:bbportY,
	Float:bbportZ
};
new BBPortInfo[MAX_BBPORTS][bbPortInfo];
new brojbbportova;

enum jbPortInfo
{
	jbportIme[32],
	Float:jbportX,
	Float:jbportY,
	Float:jbportZ
};
new JBPortInfo[MAX_JBPORTS][jbPortInfo];
new brojjbportova;

enum orgPortInfo
{
	orgportIme[32],
	Float:orgportX,
	Float:orgportY,
	Float:orgportZ
};
new ORGPortInfo[MAX_ORGPORTS][orgPortInfo];
new brojorgportova;

enum gpsInfo
{
	gpsIme[128],
	Float:gX,
	Float:gY,
	Float:gZ
};
new GPSInfo[MAX_GPS][gpsInfo];
new brojgpsova;

enum hInfo
{
	hOwner[128],
	hOwned,
	hCena,
	hLevel,
	hNeaktivnost,
	hTip,
	Float:hX,
	Float:hY,
	Float:hZ,
	hSef,
	hZakljucana,
	hGaraza
};
new HouseInfo[MAX_HOUSES][hInfo];

enum iInfo
{
	iOwner[128],
	iOwned,
	iCena,
	iLevel,
	iNeaktivnost,
	iPrecnik,
	Float:iX,
	Float:iY,
	Float:iZ,
	iBrojStabala
};
new ImanjeInfo[MAX_IMANJA][iInfo];


enum askInfo
{
	askSender[128],
	askText[128],
	askID
};
new AskInfo[MAX_ASKLIST][askInfo];

enum brojInfo
{
	bVlasnik[128]
};
new BrojInfo[MAX_ASKLIST][brojInfo];

enum gaInfo
{
	Float:gaX,
	Float:gaY,
	Float:gaZ,
	gaHouse
};
new GarazaInfo[MAX_GARAGES][gaInfo];

enum tInfo
{
	Float:tX,
	Float:tY,
	Float:tZ,
	tFirma
};
new TocilicaInfo[MAX_TOCILICA][tInfo];

enum fiInfo
{
	fiOwner[128],
	fiOwned,
	fiCena,
	fiLevel,
	fiNeaktivnost,
	fiTip,
	Float:fiX,
	Float:fiY,
	Float:fiZ,
	fiKasa,
	fiProdukti
};
new FirmaInfo[MAX_FIRME][fiInfo];

enum pInfo
{
	pLozinka,
	pNovac,
	pLevel,
	pRespekti,
	pAdmin,
	pHelper,
	pPasos,
	pNeededRep,
	pPosao,
	pLeader,
	pOrg,
	pRank,
	pRacun,
	pBanka,
	pZlato,
	pPlata,
	pDoPlate,
	pPol,
	pGodine,
	pKlasa,
	pRate,
	pKredit,
	pKuca,
	pBan,
	pBanRazlog[128],
	pPromoter,
	pNagradniPoeni,
	pTutorijal,
	pSkin,
	pRacuni,
	pVikendica,
	pFirma,
	pImanje,
	pVozilo1,
	pVozilo2,
	pVozilo3,
	pVozilo4,
	pVozilo5,
	pGlad,
	pZedj,
	pAL,
	pBL,
	pCL,
	pDL,
	pFL,
	pLetenjeL,
	pBrodL,
	pGunL,
	pVip,
	pVipDani,
	pPenzija,
	pPotrosio,
	pPoslovi,
	pSatiIgranja,
	pKupljenaVozila,
	pUhapsio,
	pOpljackao,
	pGrad,
	pVerzija[64],
	pAsklist,
	pTelefon,
	pBrojTelefona,
	pFonKredit,
	pSemeDroge,
	pMarihuana,
	pJailTime,
	pJailPlace,
	pTickets
};
new PlayerInfo[MAX_PLAYERS+1][pInfo];

enum vInfo
{
	vEngine,
	vLights,
	vAlarm,
	vDoor,
	vBonnet,
	vBoot,
	vObj,
	vFuel,
	vPizza
};
new VehInfo[MAX_VEHICLES][vInfo];

stock PrikaziLoadingTD(playerid)
{
	new n;
	n = random(14);
	if(n == 0) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][0], "loadsc1:loadsc1"); }
	if(n == 1) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][0], "loadsc2:loadsc2"); }
	if(n == 2) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][0], "loadsc3:loadsc3"); }
	if(n == 3) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][0], "loadsc4:loadsc4"); }
	if(n == 4) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][0], "loadsc5:loadsc5"); }
	if(n == 5) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][0], "loadsc6:loadsc6"); }
	if(n == 6) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][0], "loadsc7:loadsc7"); }
	if(n == 7) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][0], "loadsc8:loadsc8"); }
	if(n == 8) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][0], "loadsc9:loadsc9"); }
	if(n == 9) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][0], "loadsc10:loadsc10"); }
	if(n == 10) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][0], "loadsc11:loadsc11"); }
	if(n == 11) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][0], "loadsc12:loadsc12"); }
	if(n == 12) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][0], "loadsc13:loadsc13"); }
	if(n == 13) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][0], "loadsc14:loadsc14"); }

	n-=5;
	if(n < 0) 
	{ n+=10; }

	if(n == 0) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][1], "loadsc1:loadsc1"); }
	if(n == 1) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][1], "loadsc2:loadsc2"); }
	if(n == 2) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][1], "loadsc3:loadsc3"); }
	if(n == 3) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][1], "loadsc4:loadsc4"); }
	if(n == 4) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][1], "loadsc5:loadsc5"); }
	if(n == 5) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][1], "loadsc6:loadsc6"); }
	if(n == 6) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][1], "loadsc7:loadsc7"); }
	if(n == 7) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][1], "loadsc8:loadsc8"); }
	if(n == 8) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][1], "loadsc9:loadsc9"); }
	if(n == 9) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][1], "loadsc10:loadsc10"); }
	if(n == 10) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][1], "loadsc11:loadsc11"); }
	if(n == 11) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][1], "loadsc12:loadsc12"); }
	if(n == 12) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][1], "loadsc13:loadsc13"); }
	if(n == 13) { PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][1], "loadsc14:loadsc14"); }

	//LoadingTextdraw[playerid][1] = CreatePlayerTextDraw(playerid, -321.000000, -31.000000, "loadsc11:loadsc11");
	for(new i = 0; i < 9; i++)
	{
		PlayerTextDrawShow(playerid, LoadingTextdraw[playerid][i]);
	}
	new ltdstr[128];
	new rnd = random(sizeof(NasumicnePoruke));
	format(ltdstr, 128, "TIP: %s", NasumicnePoruke[rnd]);
	PlayerTextDrawSetString(playerid, LoadingTextdraw[playerid][12], ltdstr);
	PlayerTextDrawShow(playerid, LoadingTextdraw[playerid][12]);
	/*PlayerTextDrawShow(playerid, LoadingTD0[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD1[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD2[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD3[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD4[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD5[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD6[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD7[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD8[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD9[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD10[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD11[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD12[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD13[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD14[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD15[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD16[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD17[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD18[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD19[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD20[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD21[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD22[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD23[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD24[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD25[playerid]);
	PlayerTextDrawShow(playerid, LoadingTD26[playerid]);*/
	//PlayerTextDrawShow(playerid, LoadingTD27[playerid]);
	//PlayerTextDrawShow(playerid, LoadingTD28[playerid]);
}

stock SakrijLoadingTD(playerid)
{
	for(new i = 0; i < 13; i++)
	{
		PlayerTextDrawHide(playerid, LoadingTextdraw[playerid][i]);
	}
	/*PlayerTextDrawHide(playerid, LoadingTD0[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD1[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD2[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD3[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD4[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD5[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD6[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD7[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD8[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD9[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD10[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD11[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD12[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD13[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD14[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD15[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD16[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD17[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD18[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD19[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD20[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD21[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD22[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD23[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD24[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD25[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD26[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD27[playerid]);
	PlayerTextDrawHide(playerid, LoadingTD28[playerid]);*/
}

stock PostarCP(playerid)
{
	new rnd = random(47);
	taz_SetPlayerCheckpoint(playerid, PostarLokacije[rnd][0], PostarLokacije[rnd][1], PostarLokacije[rnd][2], 5.0);
	SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Nova adresa je oznacena na mapi, dostavite pisma tamo!");
}

stock StaviLabel(i, vozilo)
{
	if(VoziloInfo[i][vRent] == 1)
	{
		textvozila[i] = Create3DTextLabel("{1985A6}[ {FFFFFF}RENT {1985A6}]", COLOR_BLACK, 0.0, 0.0, 0.0, 10.0, 0, 1);
		Attach3DTextLabelToVehicle(textvozila[i], vozilo, 0.0, 0.0, 0.0);
	}
	else if(VoziloInfo[i][vHelper] == 1)
	{
		textvozila[i] = Create3DTextLabel("{FFFFFF}[ {DAA520}HELPER {FFFFFF}]", COLOR_BLACK, 0.0, 0.0, 0.0, 10.0, 0, 1);
		Attach3DTextLabelToVehicle(textvozila[i], vozilo, 0.0, 0.0, 0.0);
	}
	else if(VoziloInfo[i][vAdmin] == 1)
	{
		textvozila[i] = Create3DTextLabel("{FFFFFF}[ {DAA520}ADMIN {FFFFFF}]", COLOR_BLACK, 0.0, 0.0, 0.0, 10.0, 0, 1);
		Attach3DTextLabelToVehicle(textvozila[i], vozilo, 0.0, 0.0, 0.0);
	}
	else if(VoziloInfo[i][vVip] == 1)
	{
		textvozila[i] = Create3DTextLabel("{1985A6}[ {FFFFFF}VIP {1985A6}]", COLOR_BLACK, 0.0, 0.0, 0.0, 10.0, 0, 1);
		Attach3DTextLabelToVehicle(textvozila[i], vozilo, 0.0, 0.0, 0.0);
	}
	else if(VoziloInfo[i][vPromoter] == 1)
	{
		textvozila[i] = Create3DTextLabel("{1985A6}[ {FFFFFF}PROMOTER {1985A6}]", COLOR_BLACK, 0.0, 0.0, 0.0, 10.0, 0, 1);
		Attach3DTextLabelToVehicle(textvozila[i], vozilo, 0.0, 0.0, 0.0);
	}
	else if(VoziloInfo[i][vPosaoID] != 0)
	{
		new tekst[64];
		format(tekst, 64, "{1985A6}[ {FFFFFF}%s {1985A6}]", Poslovi[VoziloInfo[i][vPosaoID]-1]);
		textvozila[i] = Create3DTextLabel(tekst, COLOR_BLACK, 0.0, 0.0, 0.0, 5.0, 0, 1);
		Attach3DTextLabelToVehicle(textvozila[i], vozilo, 0.0, 0.0, 0.0);
	}
	else if(VoziloInfo[i][vOrgID] != 0)
	{
		new tekst[128];
		format(tekst, 128, "{1985A6}[ {FFFFFF}%s {1985A6}]", OrgInfo[VoziloInfo[i][vOrgID]][orgIme]);
		textvozila[i] = Create3DTextLabel(tekst, COLOR_BLACK, 0.0, 0.0, 0.0, 5.0, 0, 1);
		Attach3DTextLabelToVehicle(textvozila[i], vozilo, 0.0, 0.0, 0.0);
	}
	else if(VoziloInfo[i][vAutoskola] != 0)
	{
		new tekst[128];
		format(tekst, 128, "{1985A6}[ {FFFFFF}AUTO SKOLA {1985A6}]");
		textvozila[i] = Create3DTextLabel(tekst, COLOR_BLACK, 0.0, 0.0, 0.0, 15.0, 0, 1);
		Attach3DTextLabelToVehicle(textvozila[i], vozilo, 0.0, 0.0, 0.0);
	}
}

stock SavePromoter(id)
{
	new p_file[64];
	format(p_file, sizeof(p_file), PROMPATH, id);
	new INI:File = INI_Open(p_file);
	INI_WriteString(File, "Name", PromoterInfo[id][promName]);
	INI_WriteInt(File, "Neaktivnost", PromoterInfo[id][promNeaktivnost]);
	INI_Close(File);
}
stock UzetPromSlot(id)
{
	new str[128];
	format(str, 128, "Niko");
	if(!strcmp(PromoterInfo[id][promName], str)) return false;
	return true;
}

stock ClearChat(id)
{
	for(new i = 0; i < 30; i++)
	{
	    SCM(id, -1, "");
 	}
}

stock UpdateBubble(id)
{
	new str[128];
	if(PlayerInfo[id][pLevel] <= 3) format(str, sizeof(str), "{8B8989}[ Novajlija ]");
	if(PlayerInfo[id][pLevel] > 3) format(str, sizeof(str), "{FFFFFF}[ Gradjanin ]");
	if(PlayerInfo[id][pPromoter] != 0) format(str, sizeof(str), "{02C709}[ Promoter ]");
	if(PlayerInfo[id][pPromoter] == 1) format(str, sizeof(str), "{B5597C}[ Bronze VIP ]");
	if(PlayerInfo[id][pPromoter] == 2) format(str, sizeof(str), "{B5597C}[ Silver VIP ]");
	if(PlayerInfo[id][pPromoter] == 3) format(str, sizeof(str), "{B5597C}[ Gold VIP ]");
	if(PlayerInfo[id][pPromoter] == 4) format(str, sizeof(str), "{B5597C}[ Diamond VIP ]");
	if(PlayerInfo[id][pPromoter] == 5) format(str, sizeof(str), "{B5597C}[ Platinum VIP ]");
	if(PlayerInfo[id][pHelper] == 1) format(str, sizeof(str), "{D6B41A}[ Helper ]");
	if(PlayerInfo[id][pHelper] == 2) format(str, sizeof(str), "{D6B41A}[ Z.V. Helpera ]");
	if(PlayerInfo[id][pHelper] == 3) format(str, sizeof(str), "{D6B41A}[ Vodja Helpera ]");
	if(PlayerInfo[id][pAdmin] == 1) format(str, sizeof(str), "{FC2121}[ Admin 1 ]");
	if(PlayerInfo[id][pAdmin] == 2) format(str, sizeof(str), "{FC2121}[ Admin 2 ]");
	if(PlayerInfo[id][pAdmin] == 3) format(str, sizeof(str), "{FC2121}[ Admin 3 ]");
	if(PlayerInfo[id][pAdmin] == 4) format(str, sizeof(str), "{FC2121}[ Admin 4 ]");
	if(PlayerInfo[id][pAdmin] == 5) format(str, sizeof(str), "{FC2121}[ Head Admin ]");
	if(PlayerInfo[id][pAdmin] == 6) format(str, sizeof(str), "{FC2121}[ Direktor ]");
	if(PlayerInfo[id][pAdmin] == 7) format(str, sizeof(str), "{FC2121}[ Generalni Direktor ]");
	if(PlayerInfo[id][pAdmin] == 8) format(str, sizeof(str), "{FC2121}[ Suvlasnik ]");
	if(PlayerInfo[id][pAdmin] == 9) format(str, sizeof(str), "{FC2121}[ Vlasnik ]");
	if(PlayerInfo[id][pAdmin] == 10) format(str, sizeof(str), "{FC2121}[ Predsednica ]");
	if(PlayerInfo[id][pAdmin] == 1337) format(str, sizeof(str), "{FC2121}[ Skripter ]");
	SetPlayerColor(id, 0xFFFFFFFF);
	if(pADuty[id] == 1) {SetPlayerColor(id, 0x300A0AFF);}
	if(PlayerInfo[id][pPromoter] != 0) {SetPlayerColor(id, 0x02C709FF);}
	if(PlayerInfo[id][pVip] != 0) {SetPlayerColor(id, 0xB5597CFF);}
	if(pDuty[id] != 0)
	{
		if(PlayerInfo[id][pOrg] > 0 && PlayerInfo[id][pOrg] < 5)
		{
			if(PlayerInfo[id][pOrg] == 1 || PlayerInfo[id][pOrg] == 2)
			{
				SetPlayerColor(id, 0x0048BDFF);
			}
			else if(PlayerInfo[id][pOrg] == 3)
			{
				SetPlayerColor(id, 0xFF5E4DFF);
			}
			else
			{
				SetPlayerColor(id, 0xB3A570FF);
			}
		}
	}

	if(pWantedLevel[id] > 0)
	{
		SetPlayerColor(id, 0xA30000FF);
	}

	if(IsPlayerPaused(id))
		{ pAFK[id] = 1; SetPlayerChatBubble(id, "{948A68}[ Igrac je AFK ]", COLOR_RED, 20.0, 0); }
	else
		{ pAFK[id] = 0; }
	SetPlayerChatBubble(id, str, -1, 30.0, 1001);
}

stock UzetSlot(id)
{
	new str[128];
	format(str, sizeof(str), "Niko");
	if(!strcmp(AdminInfo[id][aName], str)) return false;
	return true;
}

stock UzetHSlot(id)
{
	new str[128];
	format(str, sizeof(str), "Niko");
	if(!strcmp(HelperInfo[id][hlName], str)) return false;
	return true;
}

stock SaveAdmin(id)
{
	new a_file[64];
	format(a_file, sizeof(a_file), ADMINPATH, id);
	new INI:File = INI_Open(a_file);
	INI_WriteString(File, "Name", AdminInfo[id][aName]);
	INI_WriteInt(File, "Neaktivnost", AdminInfo[id][aNeaktivnost]);
	INI_WriteInt(File, "Duty", AdminInfo[id][aDuty]);
	INI_Close(File);
}
stock SaveHelper(id)
{
	new h_file[64];
	format(h_file, sizeof(h_file), HELPERPATH, id);
	new INI:File = INI_Open(h_file);
	INI_WriteString(File, "Name", HelperInfo[id][hlName]);
	INI_WriteInt(File, "Neaktivnost", HelperInfo[id][hlNeaktivnost]);
	INI_WriteInt(File, "Duty", HelperInfo[id][hlDuty]);
	INI_Close(File);
}
stock GetPlayerID(name[])
{
	new ime[128];
	for(new i = 0; i <= MAX_PLAYERS; i++)
	{
	    GetPlayerName(i, ime, sizeof(ime));
	    if(!strcmp(name, ime)) return i;
	}
	return -1;
}
stock Sacuvaj(playerid, ime[128])
{
	new upath[128];
	format(upath, sizeof(upath), PATH, ime);
	new INI:File = INI_Open(upath);
	INI_SetTag(File, "data");
	INI_WriteInt(File, "Lozinka", PlayerInfo[playerid][pLozinka]);
 	INI_WriteInt(File, "Novac", GetPlayerMoney(playerid));
 	INI_WriteInt(File, "Level", PlayerInfo[playerid][pLevel]);
 	INI_WriteInt(File, "Respekti", PlayerInfo[playerid][pRespekti]);
 	INI_WriteInt(File, "Admin", PlayerInfo[playerid][pAdmin]);
 	INI_WriteInt(File, "Helper", PlayerInfo[playerid][pHelper]);
 	INI_WriteInt(File, "Pasos", PlayerInfo[playerid][pPasos]);
 	INI_WriteInt(File, "NeededRep", PlayerInfo[playerid][pNeededRep]);
 	INI_WriteInt(File, "Posao", PlayerInfo[playerid][pPosao]);
 	INI_WriteInt(File, "Leader", PlayerInfo[playerid][pLeader]);
 	INI_WriteInt(File, "Org", PlayerInfo[playerid][pOrg]);
 	INI_WriteInt(File, "Rank", PlayerInfo[playerid][pRank]);
 	INI_WriteInt(File, "Racun", PlayerInfo[playerid][pRacun]);
 	INI_WriteInt(File, "Banka", PlayerInfo[playerid][pBanka]);
 	INI_WriteInt(File, "Zlato", PlayerInfo[playerid][pZlato]);
 	INI_WriteInt(File, "Plata", PlayerInfo[playerid][pPlata]);
 	INI_WriteInt(File, "DoPlate", PlayerInfo[playerid][pDoPlate]);
 	INI_WriteInt(File, "Kredit", PlayerInfo[playerid][pKredit]);
 	INI_WriteInt(File, "Pol", PlayerInfo[playerid][pPol]);
 	INI_WriteInt(File, "Godine", PlayerInfo[playerid][pGodine]);
 	INI_WriteInt(File, "Klasa", PlayerInfo[playerid][pKlasa]);
 	INI_WriteInt(File, "Kuca", PlayerInfo[playerid][pKuca]);
 	INI_WriteInt(File, "Ban", PlayerInfo[playerid][pBan]);
 	INI_WriteString(File, "BanRazlog", PlayerInfo[playerid][pBanRazlog]);
 	INI_WriteInt(File, "Promoter", PlayerInfo[playerid][pPromoter]);
 	INI_WriteInt(File, "NagradniPoeni", PlayerInfo[playerid][pNagradniPoeni]);
 	INI_WriteInt(File, "Tutorijal", PlayerInfo[playerid][pTutorijal]);
 	INI_WriteInt(File, "Skin", PlayerInfo[playerid][pSkin]);
 	INI_WriteInt(File, "Racuni", PlayerInfo[playerid][pRacuni]);
 	INI_WriteInt(File, "Vikendica", PlayerInfo[playerid][pVikendica]);
 	INI_WriteInt(File, "Firma", PlayerInfo[playerid][pFirma]);
 	INI_WriteInt(File, "Imanje", PlayerInfo[playerid][pImanje]);
 	INI_WriteInt(File, "Vozilo1", PlayerInfo[playerid][pVozilo1]);
 	INI_WriteInt(File, "Vozilo2", PlayerInfo[playerid][pVozilo2]);
 	INI_WriteInt(File, "Vozilo3", PlayerInfo[playerid][pVozilo3]);
 	INI_WriteInt(File, "Vozilo4", PlayerInfo[playerid][pVozilo4]);
 	INI_WriteInt(File, "Vozilo5", PlayerInfo[playerid][pVozilo5]);
 	INI_WriteInt(File, "Glad", PlayerInfo[playerid][pGlad]);
 	INI_WriteInt(File, "Zedj", PlayerInfo[playerid][pZedj]);
 	INI_WriteInt(File, "AL", PlayerInfo[playerid][pAL]);
 	INI_WriteInt(File, "BL", PlayerInfo[playerid][pBL]);
 	INI_WriteInt(File, "CL", PlayerInfo[playerid][pCL]);
 	INI_WriteInt(File, "DL", PlayerInfo[playerid][pDL]);
 	INI_WriteInt(File, "FL", PlayerInfo[playerid][pFL]);
 	INI_WriteInt(File, "LetenjeL", PlayerInfo[playerid][pLetenjeL]);
 	INI_WriteInt(File, "BrodL", PlayerInfo[playerid][pBrodL]);
 	INI_WriteInt(File, "GunL", PlayerInfo[playerid][pGunL]);
 	INI_WriteInt(File, "Vip", PlayerInfo[playerid][pVip]);
 	INI_WriteInt(File, "VipDani", PlayerInfo[playerid][pVipDani]);
 	INI_WriteInt(File, "Penzija", PlayerInfo[playerid][pPenzija]);
 	INI_WriteInt(File, "Potrosio", PlayerInfo[playerid][pPotrosio]);
 	INI_WriteInt(File, "Poslovi", PlayerInfo[playerid][pPoslovi]);
 	INI_WriteInt(File, "SatiIgranja", PlayerInfo[playerid][pSatiIgranja]);
 	INI_WriteInt(File, "KupljenaVozila", PlayerInfo[playerid][pKupljenaVozila]);
 	INI_WriteInt(File, "Uhapsio", PlayerInfo[playerid][pUhapsio]);
 	INI_WriteInt(File, "Opljackao", PlayerInfo[playerid][pOpljackao]);
 	INI_WriteInt(File, "Grad", PlayerInfo[playerid][pGrad]);
 	INI_WriteString(File, "Verzija", PlayerInfo[playerid][pVerzija]);
 	INI_WriteInt(File, "Asklist", PlayerInfo[playerid][pAsklist]);
 	INI_WriteInt(File, "Telefon", PlayerInfo[playerid][pTelefon]);
 	INI_WriteInt(File, "BrojTelefona", PlayerInfo[playerid][pBrojTelefona]);
 	INI_WriteInt(File, "FonKredit", PlayerInfo[playerid][pFonKredit]);
 	INI_WriteInt(File, "SemeDroge", PlayerInfo[playerid][pSemeDroge]);
 	INI_WriteInt(File, "Marihuana", PlayerInfo[playerid][pMarihuana]);
 	INI_WriteInt(File, "JailTime", PlayerInfo[playerid][pJailTime]);
 	INI_WriteInt(File, "JailPlace", PlayerInfo[playerid][pJailPlace]);
 	INI_WriteInt(File, "Tickets", PlayerInfo[playerid][pTickets]);
 	INI_Close(File);
}

stock SnijegObjekti(modelid, Float:x, Float:y, Float:z, Float:rx, Float:ry, Float:rz)
{
	new
	object = CreateDynamicObject(modelid, x + 0.05, y + 0.075, z + 0.1, rx, ry, rz, -1, -1, -1, 300.0, 0.0);
	for(new a = 0; a < 30; a++)
		SetDynamicObjectMaterial(object, a, 17944, "lngblok_lae2", "white64bumpy", 0);
	return object;
}
/*
	tip 1 = house
	tip 2 = org
	tip 3 = port
	tip 4 = gate
*/
stock NewID(tip)
{
	new id = -1, len;
	if(tip == 1)
	{
	    len = MAX_HOUSES;
	    for(new loop = (0), check = (-1), Data_[64] = "\0"; loop != len; ++ loop)
		{
		    check = (loop+1);
		    format(Data_, sizeof(Data_), HOUSEPATH, check);
		    if(!fexist(Data_))
		    {
		        id = (check);
		        break;
		    }
		}
	}
	if(tip == 2)
	{
	    len = MAX_ORGS;
	    for(new loop = (0), check = (-1), Data_[64] = "\0"; loop != len; ++ loop)
		{
		    check = (loop+1);
		    format(Data_, sizeof(Data_), ORGPATH, check);
		    if(!fexist(Data_))
		    {
		        id = (check);
		        break;
		    }
		}
	}
	if(tip == 3)
	{
	    len = MAX_FCPORTS;
	    for(new loop = (0), check = (-1), Data_[64] = "\0"; loop != len; ++ loop)
		{
		    check = (loop+1);
		    format(Data_, sizeof(Data_), FCPORTPATH, check);
		    if(!fexist(Data_))
		    {
		        id = (check);
		        break;
		    }
		}
	}
	if(tip == 4)
	{
	    len = MAX_GATES;
	    for(new loop = (0), check = (-1), Data_[64] = "\0"; loop != len; ++ loop)
		{
		    check = (loop+1);
		    format(Data_, sizeof(Data_), GATEPATH, check);
		    if(!fexist(Data_))
		    {
		        id = (check);
		        break;
		    }
		}
	}
	if(tip == 5)
	{
	    len = MAX_VOZILA;
	    for(new loop = (0), check = (-1), Data_[64] = "\0"; loop != len; ++ loop)
		{
		    check = (loop+1);
		    format(Data_, sizeof(Data_), VEHPATH, check);
		    if(!fexist(Data_))
		    {
		        id = (check);
		        break;
		    }
		}
	}
	if(tip == 6)
	{
	    len = MAX_AUTOMATA;
	    for(new loop = (0), check = (-1), Data_[64] = "\0"; loop != len; ++ loop)
		{
		    check = (loop+1);
		    format(Data_, sizeof(Data_), AUTOMATPATH, check);
		    if(!fexist(Data_))
		    {
		        id = (check);
		        break;
		    }
		}
	}
	if(tip == 7)
	{
	    len = MAX_GPS;
	    for(new loop = (0), check = (-1), Data_[64] = "\0"; loop != len; ++ loop)
		{
		    check = (loop+1);
		    format(Data_, sizeof(Data_), GPSPATH, check);
		    if(!fexist(Data_))
		    {
		        id = (check);
		        break;
		    }
		}
	}
	if(tip == 8)
	{
	    len = MAX_FIRME;
	    for(new loop = (0), check = (-1), Data_[64] = "\0"; loop != len; ++ loop)
		{
		    check = (loop+1);
		    format(Data_, sizeof(Data_), FIRMAPATH, check);
		    if(!fexist(Data_))
		    {
		        id = (check);
		        break;
		    }
		}
	}
	if(tip == 9)
	{
	    len = MAX_BANKOMATA;
	    for(new loop = (0), check = (-1), Data_[64] = "\0"; loop != len; ++ loop)
		{
		    check = (loop+1);
		    format(Data_, sizeof(Data_), BANKOMATTPATH, check);
		    if(!fexist(Data_))
		    {
		        id = (check);
		        break;
		    }
		}
	}
	if(tip == 10)
	{
	    len = MAX_GARAGES;
	    for(new loop = (0), check = (-1), Data_[64] = "\0"; loop != len; ++ loop)
		{
		    check = (loop+1);
		    format(Data_, sizeof(Data_), GARAZAPATH, check);
		    if(!fexist(Data_))
		    {
		        id = (check);
		        break;
		    }
		}
	}
	if(tip == 11)
	{
	    len = MAX_TOCILICA;
	    for(new loop = (0), check = (-1), Data_[64] = "\0"; loop != len; ++ loop)
		{
		    check = (loop+1);
		    format(Data_, sizeof(Data_), TOCILICAPATH, check);
		    if(!fexist(Data_))
		    {
		        id = (check);
		        break;
		    }
		}
	}
	if(tip == 12)
	{
	    len = MAX_BBPORTS;
	    for(new loop = (0), check = (-1), Data_[64] = "\0"; loop != len; ++ loop)
		{
		    check = (loop+1);
		    format(Data_, sizeof(Data_), BBPORTPATH, check);
		    if(!fexist(Data_))
		    {
		        id = (check);
		        break;
		    }
		}
	}
	if(tip == 13)
	{
	    len = MAX_JBPORTS;
	    for(new loop = (0), check = (-1), Data_[64] = "\0"; loop != len; ++ loop)
		{
		    check = (loop+1);
		    format(Data_, sizeof(Data_), JBPORTPATH, check);
		    if(!fexist(Data_))
		    {
		        id = (check);
		        break;
		    }
		}
	}
	if(tip == 14)
	{
	    len = MAX_ORGPORTS;
	    for(new loop = (0), check = (-1), Data_[64] = "\0"; loop != len; ++ loop)
		{
		    check = (loop+1);
		    format(Data_, sizeof(Data_), ORGPORTPATH, check);
		    if(!fexist(Data_))
		    {
		        id = (check);
		        break;
		    }
		}
	}
	if(tip == 15)
	{
	    len = MAX_ASKLIST;
	    for(new loop = (0), check = (-1), Data_[64] = "\0"; loop != len; ++ loop)
		{
		    check = (loop+1);
		    format(Data_, sizeof(Data_), ASKLISTPATH, check);
		    if(!fexist(Data_))
		    {
		        id = (check);
		        break;
		    }
		}
	}
	if(tip == 16)
	{
	    len = MAX_OSPORTS;
	    for(new loop = (0), check = (-1), Data_[64] = "\0"; loop != len; ++ loop)
		{
		    check = (loop+1);
		    format(Data_, sizeof(Data_), OSPORTPATH, check);
		    if(!fexist(Data_))
		    {
		        id = (check);
		        break;
		    }
		}
	}
	if(tip == 17)
	{
	    len = MAX_IMANJA;
	    for(new loop = (0), check = (-1), Data_[64] = "\0"; loop != len; ++ loop)
		{
		    check = (loop+1);
		    format(Data_, sizeof(Data_), IMANJEPATH, check);
		    if(!fexist(Data_))
		    {
		        id = (check);
		        break;
		    }
		}
	}
	if(tip == 19)
	{
	    len = MAX_VIPPORTS;
	    for(new loop = (0), check = (-1), Data_[64] = "\0"; loop != len; ++ loop)
		{
		    check = (loop+1);
		    format(Data_, sizeof(Data_), VIPPORTPATH, check);
		    if(!fexist(Data_))
		    {
		        id = (check);
		        break;
		    }
		}
	}
	if(tip == 20)
	{
	    len = MAX_PROMOTERPORTS;
	    for(new loop = (0), check = (-1), Data_[64] = "\0"; loop != len; ++ loop)
		{
		    check = (loop+1);
		    format(Data_, sizeof(Data_), PROMOTERPORTPATH, check);
		    if(!fexist(Data_))
		    {
		        id = (check);
		        break;
		    }
		}
	}
	return id;
}

stock SaveVozilo(id)
{
	new v_file[64];
	format(v_file, 64, VEHPATH, id);
	new INI:File = INI_Open(v_file);
	INI_WriteInt(File, "ID", VoziloInfo[id][vID]);
	INI_WriteInt(File, "Ownable", VoziloInfo[id][vOwnable]);
	INI_WriteString(File, "Owner", VoziloInfo[id][vOwner]);
	INI_WriteInt(File, "Cena", VoziloInfo[id][vCena]);
	INI_WriteInt(File, "Neaktivnost", VoziloInfo[id][vNeaktivnost]);
	INI_WriteInt(File, "Registracija", VoziloInfo[id][vRegistracija]);
	INI_WriteInt(File, "Autoskola", VoziloInfo[id][vAutoskola]);
	INI_WriteInt(File, "PosaoID", VoziloInfo[id][vPosaoID]);
	INI_WriteInt(File, "OrgID", VoziloInfo[id][vOrgID]);
	INI_WriteInt(File, "Rent", VoziloInfo[id][vRent]);
	INI_WriteInt(File, "Vip", VoziloInfo[id][vVip]);
	INI_WriteInt(File, "Admin", VoziloInfo[id][vAdmin]);
	INI_WriteInt(File, "Helper", VoziloInfo[id][vHelper]);
	INI_WriteInt(File, "Promoter", VoziloInfo[id][vPromoter]);
	INI_WriteInt(File, "Salon", VoziloInfo[id][vSalon]);
	INI_WriteInt(File, "Boja", VoziloInfo[id][vBoja]);
	INI_WriteInt(File, "Boja2", VoziloInfo[id][vBoja2]);
	INI_WriteInt(File, "USalonu", VoziloInfo[id][vUSalonu]);
	INI_WriteFloat(File, "X", VoziloInfo[id][vX]);
	INI_WriteFloat(File, "Y", VoziloInfo[id][vY]);
	INI_WriteFloat(File, "Z", VoziloInfo[id][vZ]);
	INI_WriteFloat(File, "Rot", VoziloInfo[id][vRot]);
	INI_WriteInt(File, "Dozvola", VoziloInfo[id][vDozvola]);
	INI_WriteInt(File, "Spoiler", VoziloInfo[id][vSpoiler]);
	INI_WriteInt(File, "Hood", VoziloInfo[id][vHood]);
	INI_WriteInt(File, "Roof", VoziloInfo[id][vRoof]);
	INI_WriteInt(File, "SideSkirt", VoziloInfo[id][vSideSkirt]);
	INI_WriteInt(File, "Lamps", VoziloInfo[id][vLamps]);
	INI_WriteInt(File, "Nitro", VoziloInfo[id][vNitro]);
	INI_WriteInt(File, "Exhaust", VoziloInfo[id][vExhaust]);
	INI_WriteInt(File, "Wheels", VoziloInfo[id][vWheels]);
	INI_WriteInt(File, "Hydraulics", VoziloInfo[id][vHydraulics]);
	INI_WriteInt(File, "FrontBumper", VoziloInfo[id][vFrontBumper]);
	INI_WriteInt(File, "RearBumper", VoziloInfo[id][vRearBumper]);
	INI_WriteInt(File, "VentRight", VoziloInfo[id][vVentRight]);
	INI_WriteInt(File, "VentLeft", VoziloInfo[id][vVentLeft]);
	INI_WriteInt(File, "PainJob", VoziloInfo[id][vPainJob]);
	INI_WriteInt(File, "Event", VoziloInfo[id][vEvent]);
	INI_Close(File);
}

stock SaveGate(id)
{
	new g_file[64];
	format(g_file, sizeof(g_file), GATEPATH, id);
	new INI:File = INI_Open(g_file);
	INI_WriteInt(File, "ObjID", GateInfo[id][gObjID]);
	INI_WriteFloat(File, "X", GateInfo[id][gX]);
	INI_WriteFloat(File, "Y", GateInfo[id][gY]);
	INI_WriteFloat(File, "Z", GateInfo[id][gZ]);
	INI_WriteFloat(File, "RX", GateInfo[id][gRX]);
	INI_WriteFloat(File, "RY", GateInfo[id][gRY]);
	INI_WriteFloat(File, "RZ", GateInfo[id][gRZ]);
	INI_WriteFloat(File, "OX", GateInfo[id][gOX]);
	INI_WriteFloat(File, "OY", GateInfo[id][gOY]);
	INI_WriteFloat(File, "OZ", GateInfo[id][gOZ]);
	INI_WriteFloat(File, "ORX", GateInfo[id][gORX]);
	INI_WriteFloat(File, "ORY", GateInfo[id][gORY]);
	INI_WriteFloat(File, "ORZ", GateInfo[id][gORZ]);
	INI_WriteInt(File, "OrgID", GateInfo[id][gOrgID]);
	INI_WriteInt(File, "Perm", GateInfo[id][gPerm]);
	INI_Close(File);
}

stock SaveAutomat(id)
{
	new a_file[64];
	format(a_file, sizeof(a_file), AUTOMATPATH, id);
	new INI:File = INI_Open(a_file);
	INI_WriteFloat(File, "X", AutomatInfo[id][aX]);
	INI_WriteFloat(File, "Y", AutomatInfo[id][aY]);
	INI_WriteFloat(File, "Z", AutomatInfo[id][aZ]);
	INI_Close(File);
}

stock SaveBankomat(id)
{
	new a_file[64];
	format(a_file, sizeof(a_file), BANKOMATTPATH, id);
	new INI:File = INI_Open(a_file);
	INI_WriteFloat(File, "X", BankomatInfo[id][bX]);
	INI_WriteFloat(File, "Y", BankomatInfo[id][bY]);
	INI_WriteFloat(File, "Z", BankomatInfo[id][bZ]);
	INI_Close(File);
}
stock SaveOSPort(id)
{
	new port_file[64];
	format(port_file, sizeof(port_file), OSPORTPATH, id);
	new INI:File = INI_Open(port_file);
	INI_WriteString(File, "Ime", OSPortInfo[id][osportIme]);
	INI_WriteFloat(File, "X", OSPortInfo[id][osportX]);
	INI_WriteFloat(File, "Y", OSPortInfo[id][osportY]);
	INI_WriteFloat(File, "Z", OSPortInfo[id][osportZ]);
	INI_Close(File);
}
stock SaveFCPort(id)
{
	new port_file[64];
	format(port_file, sizeof(port_file), FCPORTPATH, id);
	new INI:File = INI_Open(port_file);
	INI_WriteString(File, "Ime", FCPortInfo[id][fcportIme]);
	INI_WriteFloat(File, "X", FCPortInfo[id][fcportX]);
	INI_WriteFloat(File, "Y", FCPortInfo[id][fcportY]);
	INI_WriteFloat(File, "Z", FCPortInfo[id][fcportZ]);
	INI_Close(File);
}
stock SaveVipPort(id)
{
	new port_file[64];
	format(port_file, sizeof(port_file), VIPPORTPATH, id);
	new INI:File = INI_Open(port_file);
	INI_WriteString(File, "Ime", VipPortInfo[id][vipportIme]);
	INI_WriteFloat(File, "X", VipPortInfo[id][vipportX]);
	INI_WriteFloat(File, "Y", VipPortInfo[id][vipportY]);
	INI_WriteFloat(File, "Z", VipPortInfo[id][vipportZ]);
	INI_Close(File);
}
stock SavePromoterPort(id)
{
	new port_file[64];
	format(port_file, sizeof(port_file), PROMOTERPORTPATH, id);
	new INI:File = INI_Open(port_file);
	INI_WriteString(File, "Ime", PromPortInfo[id][promportIme]);
	INI_WriteFloat(File, "X", PromPortInfo[id][promportX]);
	INI_WriteFloat(File, "Y", PromPortInfo[id][promportY]);
	INI_WriteFloat(File, "Z", PromPortInfo[id][promportZ]);
	INI_Close(File);
}
stock SaveBBPort(id)
{
	new port_file[64];
	format(port_file, sizeof(port_file), BBPORTPATH, id);
	new INI:File = INI_Open(port_file);
	INI_WriteString(File, "Ime", BBPortInfo[id][bbportIme]);
	INI_WriteFloat(File, "X", BBPortInfo[id][bbportX]);
	INI_WriteFloat(File, "Y", BBPortInfo[id][bbportY]);
	INI_WriteFloat(File, "Z", BBPortInfo[id][bbportZ]);
	INI_Close(File);
}
stock SaveJBPort(id)
{
	new port_file[64];
	format(port_file, sizeof(port_file), JBPORTPATH, id);
	new INI:File = INI_Open(port_file);
	INI_WriteString(File, "Ime", JBPortInfo[id][jbportIme]);
	INI_WriteFloat(File, "X", JBPortInfo[id][jbportX]);
	INI_WriteFloat(File, "Y", JBPortInfo[id][jbportY]);
	INI_WriteFloat(File, "Z", JBPortInfo[id][jbportZ]);
	INI_Close(File);
}
stock SaveORGPort(id)
{
	new port_file[64];
	format(port_file, sizeof(port_file), ORGPORTPATH, id);
	new INI:File = INI_Open(port_file);
	INI_WriteString(File, "Ime", ORGPortInfo[id][orgportIme]);
	INI_WriteFloat(File, "X", ORGPortInfo[id][orgportX]);
	INI_WriteFloat(File, "Y", ORGPortInfo[id][orgportY]);
	INI_WriteFloat(File, "Z", ORGPortInfo[id][orgportZ]);
	INI_Close(File);
}

stock SaveGPS(id)
{
	new gps_file[64];
	format(gps_file, sizeof(gps_file), GPSPATH, id);
	new INI:File = INI_Open(gps_file);
	INI_WriteString(File, "Ime", GPSInfo[id][gpsIme]);
	INI_WriteFloat(File, "X", GPSInfo[id][gX]);
	INI_WriteFloat(File, "Y", GPSInfo[id][gY]);
	INI_WriteFloat(File, "Z", GPSInfo[id][gZ]);
	INI_Close(File);
}

stock SaveOrg(id)
{
	new org_file[64];
	format(org_file, sizeof(org_file), ORGPATH, id);
	new INI:File = INI_Open(org_file);
	INI_WriteString(File, "Ime", OrgInfo[id][orgIme]);
	INI_WriteString(File, "Leader", OrgInfo[id][orgLeader]);
	INI_WriteInt(File, "LeaderNeaktivnost", OrgInfo[id][orgLeaderNeaktivnost]);
	INI_WriteInt(File, "LeaderSkin", OrgInfo[id][orgLeaderSkin]);
	INI_WriteString(File, "Member1", OrgInfo[id][orgMember1]);
	INI_WriteString(File, "Member2", OrgInfo[id][orgMember2]);
	INI_WriteString(File, "Member3", OrgInfo[id][orgMember3]);
	INI_WriteString(File, "Member4", OrgInfo[id][orgMember4]);
	INI_WriteString(File, "Member5", OrgInfo[id][orgMember5]);
	INI_WriteString(File, "Member6", OrgInfo[id][orgMember6]);
	INI_WriteString(File, "Member7", OrgInfo[id][orgMember7]);
	INI_WriteString(File, "Member8", OrgInfo[id][orgMember8]);
	INI_WriteString(File, "Member9", OrgInfo[id][orgMember9]);
	INI_WriteString(File, "Member10", OrgInfo[id][orgMember10]);
	INI_WriteString(File, "Member11", OrgInfo[id][orgMember11]);
	INI_WriteString(File, "Member12", OrgInfo[id][orgMember12]);
	INI_WriteString(File, "Member13", OrgInfo[id][orgMember13]);
	INI_WriteString(File, "Member14", OrgInfo[id][orgMember14]);
	INI_WriteString(File, "Member15", OrgInfo[id][orgMember15]);
	INI_WriteString(File, "Member16", OrgInfo[id][orgMember16]);
	INI_WriteString(File, "Member17", OrgInfo[id][orgMember17]);
	INI_WriteString(File, "Member18", OrgInfo[id][orgMember18]);
	INI_WriteString(File, "Member19", OrgInfo[id][orgMember19]);
	INI_WriteString(File, "Member20", OrgInfo[id][orgMember20]);
	INI_WriteInt(File, "SefMoney", OrgInfo[id][orgSefMoney]);
	INI_WriteInt(File, "SefMats", OrgInfo[id][orgSefMats]);
	INI_WriteInt(File, "SefDroga", OrgInfo[id][orgSefDrugs]);
	INI_WriteInt(File, "Drzavna", OrgInfo[id][orgDrzavna]);
	INI_WriteString(File, "Rank1", OrgInfo[id][orgRank1]);
	INI_WriteString(File, "Rank2", OrgInfo[id][orgRank2]);
	INI_WriteString(File, "Rank3", OrgInfo[id][orgRank3]);
	INI_WriteString(File, "Rank4", OrgInfo[id][orgRank4]);
	INI_WriteString(File, "Rank5", OrgInfo[id][orgRank5]);
	INI_WriteString(File, "Rank6", OrgInfo[id][orgRank6]);
	INI_WriteString(File, "Rank7", OrgInfo[id][orgRank7]);
	INI_WriteInt(File, "Rank1Skin", OrgInfo[id][orgRank1Skin]);
	INI_WriteInt(File, "Rank2Skin", OrgInfo[id][orgRank2Skin]);
	INI_WriteInt(File, "Rank3Skin", OrgInfo[id][orgRank3Skin]);
	INI_WriteInt(File, "Rank4Skin", OrgInfo[id][orgRank4Skin]);
	INI_WriteInt(File, "Rank5Skin", OrgInfo[id][orgRank5Skin]);
	INI_WriteInt(File, "Rank6Skin", OrgInfo[id][orgRank6Skin]);
	INI_WriteInt(File, "Rank7Skin", OrgInfo[id][orgRank7Skin]);
	INI_WriteString(File, "LeaderRankName", OrgInfo[id][orgLeaderRankName]);
	INI_WriteFloat(File, "X", OrgInfo[id][orgX]);
	INI_WriteFloat(File, "Y", OrgInfo[id][orgY]);
	INI_WriteFloat(File, "Z", OrgInfo[id][orgZ]);
	INI_Close(File);
}

stock UserPath(playerid)
{
	new string[128],playername[MAX_PLAYER_NAME];
	GetPlayerName(playerid,playername,sizeof(playername));
	format(string,sizeof(string),PATH,playername);
	return string;
}

stock SavePlayer(playerid)
{
    new INI:File = INI_Open(UserPath(playerid));
	INI_SetTag(File, "data");
	INI_WriteInt(File, "Lozinka", PlayerInfo[playerid][pLozinka]);
 	INI_WriteInt(File, "Novac", GetPlayerMoney(playerid));
 	INI_WriteInt(File, "Level", PlayerInfo[playerid][pLevel]);
 	INI_WriteInt(File, "Respekti", PlayerInfo[playerid][pRespekti]);
 	INI_WriteInt(File, "Admin", PlayerInfo[playerid][pAdmin]);
 	INI_WriteInt(File, "Helper", PlayerInfo[playerid][pHelper]);
 	INI_WriteInt(File, "Pasos", PlayerInfo[playerid][pPasos]);
 	INI_WriteInt(File, "NeededRep", PlayerInfo[playerid][pNeededRep]);
 	INI_WriteInt(File, "Posao", PlayerInfo[playerid][pPosao]);
 	INI_WriteInt(File, "Leader", PlayerInfo[playerid][pLeader]);
 	INI_WriteInt(File, "Org", PlayerInfo[playerid][pOrg]);
 	INI_WriteInt(File, "Rank", PlayerInfo[playerid][pRank]);
 	INI_WriteInt(File, "Racun", PlayerInfo[playerid][pRacun]);
 	INI_WriteInt(File, "Banka", PlayerInfo[playerid][pBanka]);
 	INI_WriteInt(File, "Zlato", PlayerInfo[playerid][pZlato]);
 	INI_WriteInt(File, "Plata", PlayerInfo[playerid][pPlata]);
 	INI_WriteInt(File, "DoPlate", PlayerInfo[playerid][pDoPlate]);
 	INI_WriteInt(File, "Pol", PlayerInfo[playerid][pPol]);
 	INI_WriteInt(File, "Godine", PlayerInfo[playerid][pGodine]);
 	INI_WriteInt(File, "Klasa", PlayerInfo[playerid][pKlasa]);
 	INI_WriteInt(File, "Rate", PlayerInfo[playerid][pRate]);
 	INI_WriteInt(File, "Kredit", PlayerInfo[playerid][pKredit]);
 	INI_WriteInt(File, "Kuca", PlayerInfo[playerid][pKuca]);
 	INI_WriteInt(File, "Ban", PlayerInfo[playerid][pBan]);
 	INI_WriteString(File, "BanRazlog", PlayerInfo[playerid][pBanRazlog]);
 	INI_WriteInt(File, "Promoter", PlayerInfo[playerid][pPromoter]);
 	INI_WriteInt(File, "NagradniPoeni", PlayerInfo[playerid][pNagradniPoeni]);
 	INI_WriteInt(File, "Tutorijal", PlayerInfo[playerid][pTutorijal]);
 	INI_WriteInt(File, "Skin", PlayerInfo[playerid][pSkin]);
 	INI_WriteInt(File, "Racuni", PlayerInfo[playerid][pRacuni]);
 	INI_WriteInt(File, "Vikendica", PlayerInfo[playerid][pVikendica]);
 	INI_WriteInt(File, "Firma", PlayerInfo[playerid][pFirma]);
 	INI_WriteInt(File, "Imanje", PlayerInfo[playerid][pImanje]);
 	INI_WriteInt(File, "Vozilo1", PlayerInfo[playerid][pVozilo1]);
 	INI_WriteInt(File, "Vozilo2", PlayerInfo[playerid][pVozilo2]);
 	INI_WriteInt(File, "Vozilo3", PlayerInfo[playerid][pVozilo3]);
 	INI_WriteInt(File, "Vozilo4", PlayerInfo[playerid][pVozilo4]);
 	INI_WriteInt(File, "Vozilo5", PlayerInfo[playerid][pVozilo5]);
 	INI_WriteInt(File, "Glad", PlayerInfo[playerid][pGlad]);
 	INI_WriteInt(File, "Zedj", PlayerInfo[playerid][pZedj]);
 	INI_WriteInt(File, "AL", PlayerInfo[playerid][pAL]);
 	INI_WriteInt(File, "BL", PlayerInfo[playerid][pBL]);
 	INI_WriteInt(File, "CL", PlayerInfo[playerid][pCL]);
 	INI_WriteInt(File, "DL", PlayerInfo[playerid][pDL]);
 	INI_WriteInt(File, "FL", PlayerInfo[playerid][pFL]);
 	INI_WriteInt(File, "LetenjeL", PlayerInfo[playerid][pLetenjeL]);
 	INI_WriteInt(File, "BrodL", PlayerInfo[playerid][pBrodL]);
 	INI_WriteInt(File, "GunL", PlayerInfo[playerid][pGunL]);
 	INI_WriteInt(File, "Vip", PlayerInfo[playerid][pVip]);
 	INI_WriteInt(File, "VipDani", PlayerInfo[playerid][pVipDani]);
 	INI_WriteInt(File, "Penzija", PlayerInfo[playerid][pPenzija]);
 	INI_WriteInt(File, "Potrosio", PlayerInfo[playerid][pPotrosio]);
 	INI_WriteInt(File, "Poslovi", PlayerInfo[playerid][pPoslovi]);
 	INI_WriteInt(File, "SatiIgranja", PlayerInfo[playerid][pSatiIgranja]);
 	INI_WriteInt(File, "KupljenaVozila", PlayerInfo[playerid][pKupljenaVozila]);
 	INI_WriteInt(File, "Uhapsio", PlayerInfo[playerid][pUhapsio]);
 	INI_WriteInt(File, "Opljackao", PlayerInfo[playerid][pOpljackao]);
 	INI_WriteInt(File, "Grad", PlayerInfo[playerid][pGrad]);
 	INI_WriteString(File, "Verzija", PlayerInfo[playerid][pVerzija]);
 	INI_WriteInt(File, "Asklist", PlayerInfo[playerid][pAsklist]);
 	INI_WriteInt(File, "Telefon", PlayerInfo[playerid][pTelefon]);
 	INI_WriteInt(File, "BrojTelefona", PlayerInfo[playerid][pBrojTelefona]);
 	INI_WriteInt(File, "FonKredit", PlayerInfo[playerid][pFonKredit]);
 	INI_WriteInt(File, "SemeDroge", PlayerInfo[playerid][pSemeDroge]);
 	INI_WriteInt(File, "Marihuana", PlayerInfo[playerid][pMarihuana]);
 	INI_WriteInt(File, "JailTime", PlayerInfo[playerid][pJailTime]);
 	INI_WriteInt(File, "JailPlace", PlayerInfo[playerid][pJailPlace]);
 	INI_WriteInt(File, "Tickets", PlayerInfo[playerid][pTickets]);
 	INI_Close(File);
}
stock SacuvajStatistiku()
{
    new INI:File = INI_Open(STATPATH), str[64];
	INI_SetTag(File, "data");
 	INI_WriteInt(File, "Rekord", rekord);
 	INI_WriteInt(File, "FCR", fcr);
 	INI_WriteInt(File, "BBR", bbr);
 	for(new i = 0; i < 52; i++)
 	{
 		format(str, 64, "zalihevozila%d", i);
 		INI_WriteInt(File, str, zalihevozila[i]);
 	}
 	INI_Close(File);
}
stock SaveImanje(id)
{
	new h_file[64];
	format(h_file, sizeof(h_file), IMANJEPATH, id);
	new INI:File = INI_Open(h_file);
	INI_WriteString(File, "Owner", ImanjeInfo[id][iOwner]);
	INI_WriteInt(File, "Owned", ImanjeInfo[id][iOwned]);
	INI_WriteInt(File, "Cena", ImanjeInfo[id][iCena]);
	INI_WriteInt(File, "Level", ImanjeInfo[id][iLevel]);
	INI_WriteInt(File, "Neaktivnost", ImanjeInfo[id][iNeaktivnost]);
	INI_WriteInt(File, "Precnik", ImanjeInfo[id][iPrecnik]);
	INI_WriteFloat(File, "X", ImanjeInfo[id][iX]);
	INI_WriteFloat(File, "Y", ImanjeInfo[id][iY]);
	INI_WriteFloat(File, "Z", ImanjeInfo[id][iZ]);
	INI_WriteInt(File, "BrojStabala", ImanjeInfo[id][iBrojStabala]);
	INI_Close(File);
}
stock SaveHouse(id)
{
	new h_file[64];
	format(h_file, sizeof(h_file), HOUSEPATH, id);
	new INI:File = INI_Open(h_file);
	INI_WriteString(File, "Owner", HouseInfo[id][hOwner]);
	INI_WriteInt(File, "Owned", HouseInfo[id][hOwned]);
	INI_WriteInt(File, "Cena", HouseInfo[id][hCena]);
	INI_WriteInt(File, "Level", HouseInfo[id][hLevel]);
	INI_WriteInt(File, "Neaktivnost", HouseInfo[id][hNeaktivnost]);
	INI_WriteInt(File, "Tip", HouseInfo[id][hTip]);
	INI_WriteFloat(File, "X", HouseInfo[id][hX]);
	INI_WriteFloat(File, "Y", HouseInfo[id][hY]);
	INI_WriteFloat(File, "Z", HouseInfo[id][hZ]);
	INI_WriteInt(File, "Sef", HouseInfo[id][hSef]);
	INI_WriteInt(File, "Zakljucana", HouseInfo[id][hZakljucana]);
	INI_Close(File);
}
stock SaveAsk(id)
{
	new h_file[64];
	format(h_file, sizeof(h_file), ASKLISTPATH, id);
	new INI:File = INI_Open(h_file);
	INI_WriteString(File, "AskSender", AskInfo[id][askSender]);
	INI_WriteString(File, "AskText", AskInfo[id][askText]);
	INI_WriteInt(File, "AskText", AskInfo[id][askID]);
	INI_Close(File);
}
stock SaveBroj(id)
{
	new h_file[64];
	format(h_file, sizeof(h_file), BROJEVIPATH, id);
	new INI:File = INI_Open(h_file);
	INI_WriteString(File, "Vlasnik", BrojInfo[id][bVlasnik]);
	INI_Close(File);
}
stock SaveGaraza(id)
{
	new g_file[64];
	format(g_file, sizeof(g_file), GARAZAPATH, id);
	new INI:File = INI_Open(g_file);
	INI_WriteFloat(File, "X", GarazaInfo[id][gaX]);
	INI_WriteFloat(File, "Y", GarazaInfo[id][gaY]);
	INI_WriteFloat(File, "Z", GarazaInfo[id][gaZ]);
	INI_WriteInt(File, "House", GarazaInfo[id][gaHouse]);
	INI_Close(File);
}

stock SaveTocilica(id)
{
	new g_file[64];
	format(g_file, sizeof(g_file), TOCILICAPATH, id);
	new INI:File = INI_Open(g_file);
	INI_WriteFloat(File, "X", TocilicaInfo[id][tX]);
	INI_WriteFloat(File, "Y", TocilicaInfo[id][tY]);
	INI_WriteFloat(File, "Z", TocilicaInfo[id][tZ]);
	INI_WriteInt(File, "Firma", TocilicaInfo[id][tFirma]);
	INI_Close(File);
}

stock SaveFirma(id)
{
	new fi_file[64];
	format(fi_file, sizeof(fi_file), FIRMAPATH, id);
	new INI:File = INI_Open(fi_file);
	INI_WriteString(File, "Owner", FirmaInfo[id][fiOwner]);
	INI_WriteInt(File, "Owned", FirmaInfo[id][fiOwned]);
	INI_WriteInt(File, "Cena", FirmaInfo[id][fiCena]);
	INI_WriteInt(File, "Level", FirmaInfo[id][fiLevel]);
	INI_WriteInt(File, "Neaktivnost", FirmaInfo[id][fiNeaktivnost]);
	INI_WriteInt(File, "Tip", FirmaInfo[id][fiTip]);
	INI_WriteFloat(File, "X", FirmaInfo[id][fiX]);
	INI_WriteFloat(File, "Y", FirmaInfo[id][fiY]);
	INI_WriteFloat(File, "Z", FirmaInfo[id][fiZ]);
	INI_WriteInt(File, "Kasa", FirmaInfo[id][fiKasa]);
	INI_WriteInt(File, "Produkti", FirmaInfo[id][fiProdukti]);
	INI_Close(File);
}
stock udb_hash(buf[])
{
	new length=strlen(buf);
	new s1 = 1;
	new s2 = 0;
	new n;
	for (n=0; n<length; n++)
	{
		s1 = (s1 + buf[n]) % 65521;
		s2 = (s2 + s1)     % 65521;
	}
	return (s2 << 16) + s1;
}

new ImenaVozila[212][] = {
{"Landstalker"},{"Bravura"},{"Buffalo"},{"Linerunner"},{"Perrenial"},{"Sentinel"},{"Dumper"},{"Firetruck"},{"Trashmaster"},{"Stretch"},{"Manana"},{"Infernus"},{"Voodoo"},
{"Pony"},{"Mule"},{"Cheetah"},{"Ambulance"},{"Leviathan"},{"Moonbeam"},{"Esperanto"},{"Taxi"},{"Washington"},{"Bobcat"},{"Mr Whoopee"},{"BF Injection"},{"Hunter"},{"Premier"},
{"Enforcer"},{"Securicar"},{"Banshee"},{"Predator"},{"Bus"},{"Rhino"},{"Barracks"},{"Hotknife"},{"Trailer 1"},{"Previon"},{"Coach"},{"Cabbie"},{"Stallion"},{"Rumpo"},{"RC Bandit"},
{"Romero"},{"Packer"},{"Monster"},{"Admiral"},{"Squalo"},{"Seasparrow"},{"Pizzaboy"},{"Tram"},{"Trailer 2"},{"Turismo"},{"Speeder"},{"Reefer"},{"Tropic"},{"Flatbed"},{"Yankee"},{"Caddy"},{"Solair"},
{"Berkley's RC Van"},{"Skimmer"},{"PCJ-600"},{"Faggio"},{"Freeway"},{"RC Baron"},{"RC Raider"},{"Glendale"},{"Oceanic"},{"Sanchez"},{"Sparrow"},{"Patriot"},{"Quad"},{"Coastguard"},{"Dinghy"},
{"Hermes"},{"Sabre"},{"Rustler"},{"ZR-350"},{"Walton"},{"Regina"},{"Comet"},{"BMX"},{"Burrito"},{"Camper"},{"Marquis"},{"Baggage"},{"Dozer"},{"Maverick"},{"News Chopper"},{"Rancher"},{"FBI Rancher"},
{"Virgo"},{"Greenwood"},{"Jetmax"},{"Hotring"},{"Sandking"},{"Blista Compact"},{"Police Maverick"},{"Boxville"},{"Benson"},{"Mesa"},{"RC Goblin"},{"Hotring Racer A"},{"Hotring Racer B"},{"Bloodring Banger"},
{"Rancher"},{"Super GT"},{"Elegant"},{"Journey"},{"Bike"},{"Mountain Bike"},{"Beagle"},{"Cropdust"},{"Stunt"},{"Tanker"},{"Roadtrain"},{"Nebula"},{"Majestic"},{"Buccaneer"},{"Shamal"},{"Hydra"},{"FCR-900"},
{"NRG-500"},{"HPV1000"},{"Cement Truck"},{"Tow Truck"},{"Fortune"},{"Cadrona"},{"FBI Truck"},{"Willard"},{"Forklift"},{"Tractor"},{"Combine"},{"Feltzer"},{"Remington"},{"Slamvan"},{"Blade"},{"Freight"},
{"Streak"},{"Vortex"},{"Vincent"},{"Bullet"},{"Clover"},{"Sadler"},{"Firetruck LA"},{"Hustler"},{"Intruder"},{"Primo"},{"Cargobob"},{"Tampa"},{"Sunrise"},{"Merit"},{"Utility"},{"Nevada"},{"Yosemite"},
{"Windsor"},{"Monster A"},{"Monster B"},{"Uranus"},{"Jester"},{"Sultan"},{"Stratum"},{"Elegy"},{"Raindance"},{"RC Tiger"},{"Flash"},{"Tahoma"},{"Savanna"},{"Bandito"},{"Freight Flat"},{"Streak Carriage"},
{"Kart"},{"Mower"},{"Duneride"},{"Sweeper"},{"Broadway"},{"Tornado"},{"AT-400"},{"DFT-30"},{"Huntley"},{"Stafford"},{"BF-400"},{"Newsvan"},{"Tug"},{"Trailer 3"},{"Emperor"},{"Wayfarer"},{"Euros"},{"Hotdog"},
{"Club"},{"Freight Carriage"},{"Trailer 3"},{"Andromada"},{"Dodo"},{"RC Cam"},{"Launch"},{"Police Car (LSPD)"},{"Police Car (SFPD)"},{"Police Car (LVPD)"},{"Police Ranger"},{"Picador"},{"S.W.A.T. Van"},
{"Alpha"},{"Phoenix"},{"Glendale"},{"Sadler"},{"Luggage Trailer A"},{"Luggage Trailer B"},{"Stair Trailer"},{"Boxville"},{"Farm Plow"},{"Utility Trailer"}
};

new editaorg[MAX_PLAYERS];

new logintimer[MAX_PLAYERS];

new renta[MAX_PLAYERS];
new rented[MAX_VEHICLES];
new rentvreme[MAX_PLAYERS];

new sneg[MAX_PLAYERS] = 0;
new snegobj[MAX_PLAYERS];

new gaPickup[MAX_HOUSES];
new Text3D:gaLabel[MAX_HOUSES];

new hPickup[MAX_HOUSES];
new Text3D:hLabel[MAX_HOUSES];

new iPickup[MAX_IMANJA];
new Text3D:iLabel[MAX_IMANJA];

new fPickup[MAX_FIRME];
new Text3D:fLabel[MAX_FIRME];

new tPickup[MAX_FIRME];
new Text3D:tLabel[MAX_FIRME];

new orgPickup[MAX_ORGS];
new Text3D:orgLabel[MAX_ORGS];

new excludedveh[MAX_VEHICLES];


//============================= GATES ==========================================
new vipgate;

#if defined FILTERSCRIPT

public OnFilterScriptInit()
{
	print("\n--------------------------------------");
	print(" Blank Filterscript by your name here");
	print("--------------------------------------\n");
	return 1;
}

public OnFilterScriptExit()
{
	return 1;
}

#else

main()
{
	print("\n----------------------------------");
	print(" PerfectCrime by TazGee");
	print("----------------------------------\n");
}

#endif

public OnGameModeInit()
{
	//EVENTI
	eventTraje = false;

	SetGameModeText("[PCRP] by TazGee");
	AddPlayerClass(0, 55.8133,1167.2178,18.6641, 269.1425, 0, 0, 0, 0, 0, 0);
	DisableInteriorEnterExits();
	EnableStuntBonusForAll(0);
	ShowPlayerMarkers(2);
	LimitPlayerMarkerRadius(35.0); //Zato sto je iskljucen ShowPlayerMarkers!

	print("Ucitan uvod");

	INI_ParseFile(STATPATH, "UcitajStatistiku");

	brojorg = 0;
	brojfcportova = 0;
	brojbbportova = 0;
	brojjbportova = 0;
	brojorgportova = 0;
	brojostalihportova = 0;

	for(new i = 0; i < MAX_VEHICLES; i++)
	{
	    excludedveh[i] = 0;
	}

//============================== TIMERS ========================================

	SetTimer("DrugGrowth", 60000, true);
	SetTimer("Fuel", 60000, true);
	SetTimer("AntiCheatTimer", 1000, true);
	SetTimer("RandomWeather", 1800000, true);
	SetWeather(0);

//==============================================================================

	print("Ucitana vozila za BUS POSAO");

//==============================================================================

//KONTEJNERSYS
    for(new i; i < MAX_KONTEJNERA; i++){
        new cfile[ 50 ];
        format(cfile, sizeof(cfile), KontejneriFile, i);
        if(fexist(cfile))
		{
            INI_ParseFile(cfile, "load_containers", .bExtra = true, .extra = i);
            k_object[ i ] = CreateObject(3035, KontejnerInfo[ i ][ koX ], KontejnerInfo[ i ][ koY ], KontejnerInfo[ i ][ koZ ], KontejnerInfo[ i ][ koRotX ], KontejnerInfo[ i ][ koRotY ], KontejnerInfo[ i ][ koRotZ ], 300.0);
            kLabel[ i ] = Create3DTextLabel("{1985A6}[ {FFFFFF}KONTEJNER {1985A6}]\n{FFFFFF}/kontejner\n/skupisirovine", 0xFFFFFFFF, KontejnerInfo[ i ][ koX ], KontejnerInfo[ i ][ koY ], KontejnerInfo[ i ][ koZ ], 10.0, 0, 0);
        }
    }
    

//PROMOTER SISTEM
	for(new i = 0; i < MAX_PROMOTERS; i++)
	{
	    new pfile[64];
	    format(pfile, 64, PROMPATH, i);
	    if(!fexist(pfile))
	    {
	        new str[128];
	        format(str, 128, "Niko");
	        PromoterInfo[i][promName] = str;
	        PromoterInfo[i][promNeaktivnost] = 0;
	        SavePromoter(i);
	        INI_ParseFile(pfile, "LoadPromoters", .bExtra = true, .extra = i);
	    }
	    else
	    {
	        INI_ParseFile(pfile, "LoadPromoters", .bExtra = true, .extra = i);
	    }
	}
	
	print("Ucitan promoter sistem");

	for(new i = 0; i < MAX_ADMINS; i++)
	{
	    new afile[64];
	    format(afile, sizeof(afile), ADMINPATH, i);
		if(!fexist(afile))
		{
		    new str[128];
		    format(str, sizeof(str), "Niko");
		    AdminInfo[i][aName] = str;
		    AdminInfo[i][aNeaktivnost] = 0;
		    AdminInfo[i][aDuty] = 0;
		    SaveAdmin(i);
		    INI_ParseFile(afile, "LoadAdmins", .bExtra = true, .extra = i);
		}
		else
		{
		    INI_ParseFile(afile, "LoadAdmins", .bExtra = true, .extra = i);
		}
	}
	
	for(new i = 0; i < MAX_HELPERS; i++)
	{
	    new hfile[64];
	    format(hfile, sizeof(hfile), HELPERPATH, i);
		if(!fexist(hfile))
		{
		    new str[128];
		    format(str, sizeof(str), "Niko");
		    HelperInfo[i][hlName] = str;
		    HelperInfo[i][hlNeaktivnost] = 0;
		    HelperInfo[i][hlDuty] = 0;
		    SaveHelper(i);
		    INI_ParseFile(hfile, "LoadHelpers", .bExtra = true, .extra = i);
		}
		else
		{
		    INI_ParseFile(hfile, "LoadHelpers", .bExtra = true, .extra = i);
		}
	}
	
	print("Ucitan admin sistem");
//GATE SISTEM
	for(new i = 0; i < MAX_GATES; i++)
	{
	    new gfile[64];
	    format(gfile, sizeof(gfile), GATEPATH, i);
	    if(fexist(gfile))
	    {
	        INI_ParseFile(gfile, "LoadGates", .bExtra = true, .extra = i);
	        gate[i] = CreateDynamicObject(GateInfo[i][gObjID], GateInfo[i][gX], GateInfo[i][gY], GateInfo[i][gZ], GateInfo[i][gRX], GateInfo[i][gRY], GateInfo[i][gRZ]);
	    }
	}
	print("Ucitan gate sistem");

	//AUTOMAT SISTEM
	for(new i = 0; i < MAX_AUTOMATA; i++)
	{
	    new afile[64], str[128];
	    format(afile, sizeof(afile), AUTOMATPATH, i);
	    if(fexist(afile))
	    {
	        INI_ParseFile(afile, "LoadAutomat", .bExtra = true, .extra = i);
	        format(str, 128, "{1985A6}[ {FFFFFF}AUTOMAT {1985A6}]\n{FFFFFF}/automat\nID: {1985A6}%d", i);
	        automat[i] = Create3DTextLabel(str, -1, AutomatInfo[i][aX],AutomatInfo[i][aY],AutomatInfo[i][aZ], 25.0, 0, 0);
	    }
	}
	
	for(new i = 0; i < MAX_AUTOMATA; i++)
	{
	    new afile[64], str[128];
	    format(afile, sizeof(afile), AUTOMATPATH, i);
	    if(fexist(afile))
	    {
	        INI_ParseFile(afile, "LoadAutomat", .bExtra = true, .extra = i);
	        format(str, 128, "{1985A6}[ {FFFFFF}BANKOMAT {1985A6}]\n{FFFFFF}/bankomat\n/robbankomat\nID: {1985A6}%d", i);
	        bankomat[i] = Create3DTextLabel(str, -1, BankomatInfo[i][bX],BankomatInfo[i][bY],BankomatInfo[i][bZ], 25.0, 0, 0);
	    }
	}

	for(new i = 0; i < MAX_ASKLIST; i++)
	{
	    new afile[64];
	    format(afile, sizeof(afile), ASKLISTPATH, i);
	    if(fexist(afile))
	    {
	        fremove(afile);
	    }
	}

//HOUSE SISTEM
	brojkuca = 0;
	for(new i = 0; i < MAX_HOUSES; i++)
	{
	    new hfile[64];
	    format(hfile, sizeof(hfile), HOUSEPATH, i);
	    if(fexist(hfile))
	    {
	    	brojkuca++;
	        INI_ParseFile(hfile, "LoadHouses", .bExtra = true, .extra = i);
			if(HouseInfo[i][hOwned] == 0)
			{
			    new string[512], tipk[64];
				if(HouseInfo[i][hTip] == 1) format(tipk, 64, "Stan");
				if(HouseInfo[i][hTip] == 2) format(tipk, 64, "Mala kuca");
				if(HouseInfo[i][hTip] == 3) format(tipk, 64, "Srednja kuca");
				if(HouseInfo[i][hTip] == 4) format(tipk, 64, "Velika kuca");
				if(HouseInfo[i][hTip] == 5) format(tipk, 64, "Vila");
			    format(string, sizeof(string), "{1985A6}[ {FFFFFF}Kuca na prodaju {1985A6}]\nOwner: {FFFFFF}Niko\n{1985A6}Cena: {FFFFFF}$%d\n{1985A6}Level: {FFFFFF}%d\n{1985A6}Tip: {FFFFFF}%s\n{1985A6}Adresa: {FFFFFF}%d\n/kupikucu", HouseInfo[i][hCena], HouseInfo[i][hLevel], tipk, i);
			    hPickup[i] = CreatePickup(1273, 1, HouseInfo[i][hX], HouseInfo[i][hY], HouseInfo[i][hZ]);
			    hLabel[i] = CreateDynamic3DTextLabel(string, COLOR_WHITE, HouseInfo[i][hX]+0.1, HouseInfo[i][hY], HouseInfo[i][hZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
			}
			else
			{
			    new string[512], tipk[64];
				if(HouseInfo[i][hTip] == 1) format(tipk, 64, "Stan");
				if(HouseInfo[i][hTip] == 2) format(tipk, 64, "Mala kuca");
				if(HouseInfo[i][hTip] == 3) format(tipk, 64, "Srednja kuca");
				if(HouseInfo[i][hTip] == 4) format(tipk, 64, "Velika kuca");
				if(HouseInfo[i][hTip] == 5) format(tipk, 64, "Vila");
			    format(string, sizeof(string), "{1985A6}[ {FFFFFF}Kupljena kuca {1985A6}]\nOwner: {FFFFFF}%s\n{1985A6}Cena: {FFFFFF}$%d\n{1985A6}Level: {FFFFFF}%d\n{1985A6}Tip: {FFFFFF}%s\n{1985A6}Adresa: {FFFFFF}%d", HouseInfo[i][hOwner], HouseInfo[i][hCena], HouseInfo[i][hLevel], tipk, i);
			    hPickup[i] = CreatePickup(1272, 1, HouseInfo[i][hX], HouseInfo[i][hY], HouseInfo[i][hZ]);
			    hLabel[i] = CreateDynamic3DTextLabel(string, COLOR_WHITE, HouseInfo[i][hX]+0.1, HouseInfo[i][hY], HouseInfo[i][hZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
			}
	    }
	}
	//IMANJE SISTEM
	for(new i = 0; i < MAX_IMANJA; i++)
	{
	    new hfile[64];
	    format(hfile, sizeof(hfile), IMANJEPATH, i);
	    if(fexist(hfile))
	    {
	        INI_ParseFile(hfile, "LoadImanje", .bExtra = true, .extra = i);
			if(ImanjeInfo[i][iOwned] == 0)
			{
			    new string[512];
			    format(string, sizeof(string), "{FCBA03}[ {FFFFFF}Imanje na prodaju {FCBA03}]\nOwner: {FFFFFF}Niko\n{FCBA03}Cena: {FFFFFF}$%d\n{FCBA03}Level: {FFFFFF}%d\n{FCBA03}Precnik: {FFFFFF}%d\n{FCBA03}Adresa: {FFFFFF}%d\n{FCBA03}/kupiimanje", ImanjeInfo[i][iCena], ImanjeInfo[i][iLevel], ImanjeInfo[i][iPrecnik], i);
			    iPickup[i] = CreatePickup(19320, 1, ImanjeInfo[i][iX], ImanjeInfo[i][iY], ImanjeInfo[i][iZ]);
			    iLabel[i] = CreateDynamic3DTextLabel(string, COLOR_WHITE, ImanjeInfo[i][iX]+0.1, ImanjeInfo[i][iY], ImanjeInfo[i][iZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
			}
			else
			{
			    new string[512];
			    format(string, sizeof(string), "{FCBA03}[ {FFFFFF}Imanje {FCBA03}]\nOwner: {FFFFFF}%s\n{FCBA03}Cena: {FFFFFF}$%d\n{FCBA03}Level: {FFFFFF}%d\n{FCBA03}Precnik: {FFFFFF}%s\n{FCBA03}Adresa: {FFFFFF}%d", ImanjeInfo[i][iOwner], ImanjeInfo[i][iCena], ImanjeInfo[i][iLevel], ImanjeInfo[i][iPrecnik], i);
			    iPickup[i] = CreatePickup(19320, 1, ImanjeInfo[i][iX], ImanjeInfo[i][iY], ImanjeInfo[i][iZ]);
			    iLabel[i] = CreateDynamic3DTextLabel(string, COLOR_WHITE, ImanjeInfo[i][iX]+0.1, ImanjeInfo[i][iY], ImanjeInfo[i][iZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
			}
	    }
	}
	for(new i = 0; i < MAX_GARAGES; i++)
	{
	    new hfile[64];
	    format(hfile, sizeof(hfile), GARAZAPATH, i);
	    if(fexist(hfile))
	    {
	        INI_ParseFile(hfile, "LoadGaraze", .bExtra = true, .extra = i);
			if(HouseInfo[GarazaInfo[i][gaHouse]][hOwned] == 0)
			{
				new string[512];
			    format(string, sizeof(string), "{1985A6}[ {FFFFFF}Privatna Garaza {1985A6}]\nOwner: {FFFFFF}Niko\n{1985A6}Adresa garaze: {FFFFFF}%d\n{1985A6}Adresa kuce kojoj pripada: {FFFFFF}%d", i, GarazaInfo[i][gaHouse]);
			    gaPickup[i] = CreatePickup(19130, 1, GarazaInfo[i][gaX], GarazaInfo[i][gaY], GarazaInfo[i][gaZ]);
			    gaLabel[i] = Create3DTextLabel(string, COLOR_WHITE, GarazaInfo[i][gaX], GarazaInfo[i][gaY], GarazaInfo[i][gaZ], 10.0, 0, 0);
			    HouseInfo[GarazaInfo[i][gaHouse]][hGaraza] = i;
			}
			else
			{
				new string[512];
			    format(string, sizeof(string), "{1985A6}[ {FFFFFF}Privatna Garaza {1985A6}]\nOwner: {FFFFFF}Niko\n{1985A6}Adresa garaze: {FFFFFF}%d\n{1985A6}Adresa kuce kojoj pripada: {FFFFFF}%d", HouseInfo[GarazaInfo[i][gaHouse]][hOwner], i, GarazaInfo[i][gaHouse]);
			    gaPickup[i] = CreatePickup(19130, 1, GarazaInfo[i][gaX], GarazaInfo[i][gaY], GarazaInfo[i][gaZ]);
			    gaLabel[i] = Create3DTextLabel(string, COLOR_WHITE, GarazaInfo[i][gaX], GarazaInfo[i][gaY], GarazaInfo[i][gaZ], 10.0, 0, 0);
			    HouseInfo[GarazaInfo[i][gaHouse]][hGaraza] = i;
			}
	    }
	}
	
	for(new i = 0; i < MAX_TOCILICA; i++)
	{
	    new hfile[64];
	    format(hfile, sizeof(hfile), TOCILICAPATH, i);
	    if(fexist(hfile))
	    {
	        INI_ParseFile(hfile, "LoadTocilica", .bExtra = true, .extra = i);
			new string[512];
			format(string, sizeof(string), "{1985A6}[ {FFFFFF}Benzinska Pumpa {1985A6}]\n{FFFFFF}/fill | /kupikanister\n{1985A6}Cena benzina: {FFFFFF}$30/l\n{1985A6}Cena plina: {FFFFFF}$15/l\n{1985A6}Adresa: {FFFFFF}%d", i);
			tPickup[i] = CreatePickup(1650, 1, TocilicaInfo[i][tX], TocilicaInfo[i][tY], TocilicaInfo[i][tZ]+0.20);
			tLabel[i] = Create3DTextLabel(string, COLOR_WHITE, TocilicaInfo[i][tX], TocilicaInfo[i][tY], TocilicaInfo[i][tZ], 10.0, 0, 0);
	    }
	}
	for(new i = 0; i < MAX_FIRME; i++)
	{
	    new ffile[64];
	    format(ffile, sizeof(ffile), FIRMAPATH, i);
	    if(fexist(ffile))
	    {
	        INI_ParseFile(ffile, "LoadFirme", .bExtra = true, .extra = i);
			if(FirmaInfo[i][fiOwned] == 0)
			{
			    new string[512], tipk[64];
				if(FirmaInfo[i][fiTip] == 1) format(tipk, 64, "Market 24/7");
				if(FirmaInfo[i][fiTip] == 2) format(tipk, 64, "Picerija");
				if(FirmaInfo[i][fiTip] == 3) format(tipk, 64, "Restoran");
				if(FirmaInfo[i][fiTip] == 4) format(tipk, 64, "Prodavnica Tehnike");
				if(FirmaInfo[i][fiTip] == 5) format(tipk, 64, "Gun Shop");
				if(FirmaInfo[i][fiTip] == 6) format(tipk, 64, "Poljoprivredna Prodavnica");
				if(FirmaInfo[i][fiTip] == 7) format(tipk, 64, "Auto Skola");
			    format(string, sizeof(string), "{DAA520}[ {FFFFFF}Firma na prodaju {DAA520}]\nOwner: {FFFFFF}Niko\n{DAA520}Cena: {FFFFFF}%d\n{DAA520}Level: {FFFFFF}%d\n{DAA520}Tip: {FFFFFF}%s\n{DAA520}Adresa: {FFFFFF}%d\n/kupifirmu", FirmaInfo[i][fiCena], FirmaInfo[i][fiLevel], tipk, i);
			    fPickup[i] = CreatePickup(1274, 1, FirmaInfo[i][fiX], FirmaInfo[i][fiY], FirmaInfo[i][fiZ]);
			    fLabel[i] = CreateDynamic3DTextLabel(string, COLOR_WHITE, FirmaInfo[i][fiX]+0.1, FirmaInfo[i][fiY], FirmaInfo[i][fiZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
			}
			else
			{
			    new string[512], tipk[64];
				if(FirmaInfo[i][fiTip] == 1) format(tipk, 64, "Market 24/7");
				if(FirmaInfo[i][fiTip] == 2) format(tipk, 64, "Picerija");
				if(FirmaInfo[i][fiTip] == 3) format(tipk, 64, "Restoran");
				if(FirmaInfo[i][fiTip] == 4) format(tipk, 64, "Prodavnica Tehnike");
				if(FirmaInfo[i][fiTip] == 5) format(tipk, 64, "Gun Shop");
				if(FirmaInfo[i][fiTip] == 6) format(tipk, 64, "Poljoprivredna Prodavnica");
				if(FirmaInfo[i][fiTip] == 7) format(tipk, 64, "Auto Skola");
			    format(string, sizeof(string), "{DAA520}[ {FFFFFF}Firma {DAA520}]\nOwner: {FFFFFF}%s\n{DAA520}Cena: {FFFFFF}%d\n{DAA520}Level: {FFFFFF}%d\n{DAA520}Tip: {FFFFFF}%s\n{DAA520}Adresa: {FFFFFF}%d", FirmaInfo[i][fiOwner], FirmaInfo[i][fiCena], FirmaInfo[i][fiLevel], tipk, i);
			    fPickup[i] = CreatePickup(1274, 1, FirmaInfo[i][fiX], FirmaInfo[i][fiY], FirmaInfo[i][fiZ]);
			    fLabel[i] = CreateDynamic3DTextLabel(string, COLOR_WHITE, FirmaInfo[i][fiX]+0.1, FirmaInfo[i][fiY], FirmaInfo[i][fiZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
			}
	    }
	}
	print("Ucitan house sistem");

//ORG SISTEM
	for(new i = 1; i < MAX_ORGS; i++)
	{
	    new orgfile[64];
	    format(orgfile, sizeof(orgfile), ORGPATH, i);
     	if(fexist(orgfile))
     	{
     		INI_ParseFile(orgfile, "LoadOrgs", .bExtra = true, .extra = i);
        	new string[400];
        	format(string, sizeof(string), "{1985A6}[ {FFFFFF}%s {1985A6}]\n{FFFFFF}Leader: {1985A6}%s\n{FFFFFF}Pritisnite {1985A6}ENTER {FFFFFF}da udjete!\nAdresa: {1985A6}%d", OrgInfo[i][orgIme], OrgInfo[i][orgLeader], i);
        	orgLabel[i] = Create3DTextLabel(string, COLOR_BLACK, OrgInfo[i][orgX], OrgInfo[i][orgY], OrgInfo[i][orgZ], 20.0, 0, 0);
        	orgPickup[i] = CreatePickup(19132, 1, OrgInfo[i][orgX], OrgInfo[i][orgY], OrgInfo[i][orgZ]);
        	brojorg++;
     	}
	}
	
	print("Ucitan org sistem");
//PORT SISTEM
	for(new i = 0; i < MAX_VIPPORTS; i++)
	{
	    new portfile[64];
	    format(portfile, sizeof(portfile), VIPPORTPATH, i);
	    if(fexist(portfile))
	    {
	        INI_ParseFile(portfile, "LoadVipPorts", .bExtra = true, .extra = i);
	        brojvipportova++;
	    }
	}
	for(new i = 0; i < MAX_PROMOTERPORTS; i++)
	{
	    new portfile[64];
	    format(portfile, sizeof(portfile), PROMOTERPORTPATH, i);
	    if(fexist(portfile))
	    {
	        INI_ParseFile(portfile, "LoadPromPorts", .bExtra = true, .extra = i);
	        brojpromportova++;
	    }
	}
	for(new i = 0; i < MAX_FCPORTS; i++)
	{
	    new portfile[64];
	    format(portfile, sizeof(portfile), FCPORTPATH, i);
	    if(fexist(portfile))
	    {
	        INI_ParseFile(portfile, "LoadFCPorts", .bExtra = true, .extra = i);
	        brojfcportova++;
	    }
	}
	for(new i = 0; i < MAX_BBPORTS; i++)
	{
	    new portfile[64];
	    format(portfile, sizeof(portfile), BBPORTPATH, i);
	    if(fexist(portfile))
	    {
	        INI_ParseFile(portfile, "LoadBBPorts", .bExtra = true, .extra = i);
	        brojbbportova++;
	    }
	}
	for(new i = 0; i < MAX_JBPORTS; i++)
	{
	    new portfile[64];
	    format(portfile, sizeof(portfile), JBPORTPATH, i);
	    if(fexist(portfile))
	    {
	        INI_ParseFile(portfile, "LoadJBPorts", .bExtra = true, .extra = i);
	        brojjbportova++;
	    }
	}
	for(new i = 0; i < MAX_ORGPORTS; i++)
	{
	    new portfile[64];
	    format(portfile, sizeof(portfile), ORGPORTPATH, i);
	    if(fexist(portfile))
	    {
	        INI_ParseFile(portfile, "LoadORGPorts", .bExtra = true, .extra = i);
	        brojorgportova++;
	    }
	}
	for(new i = 0; i < MAX_OSPORTS; i++)
	{
	    new portfile[64];
	    format(portfile, sizeof(portfile), OSPORTPATH, i);
	    if(fexist(portfile))
	    {
	        INI_ParseFile(portfile, "LoadOSPorts", .bExtra = true, .extra = i);
	        brojostalihportova++;
	    }
	}

	print("Ucitan port sistem");
	for(new i = 0; i < MAX_GPS; i++)
	{
	    new gpsfile[64];
	    format(gpsfile, sizeof(gpsfile), GPSPATH, i);
	    if(fexist(gpsfile))
	    {
	        INI_ParseFile(gpsfile, "LoadGPS", .bExtra = true, .extra = i);
	        brojgpsova++;
	    }
	}
	
	print("Ucitan gps sistem");
	//VEH SISTEM
	for(new i = 1; i < MAX_VOZILA; i++)
	{
	    new vfile[64];
	    format(vfile, 64, VEHPATH, i);
	    if(fexist(vfile))
	    {
	        INI_ParseFile(vfile, "LoadVozila", .bExtra = true, .extra = i);
	        new vozilo = AddStaticVehicle(VoziloInfo[i][vID], VoziloInfo[i][vX], VoziloInfo[i][vY], VoziloInfo[i][vZ], VoziloInfo[i][vRot], VoziloInfo[i][vBoja], VoziloInfo[i][vBoja2]);
	        if(VoziloInfo[vozilo][vEvent] != 0)
	        {
	        	for(new j = 0; j < MAX_EVENT_SLOTS; j++)
	        	{
	        		if(eventVozila[VoziloInfo[vozilo][vEvent]][j] == 0)
	        		{
	        			eventVozila[VoziloInfo[vozilo][vEvent]][j] = vozilo;
	        			break;
	        		}
	        	}
	        }
	        StaviLabel(i, vozilo);
	    }
	    else
	    {
	    	nenapravljenovozilo[i] = AddStaticVehicle(411, -3122.87036, 1042.63818, 1.69223, 0.0, 1, 1);
	    }
	}
	
	print("Ucitan veh sistem");
//===============================  PICKUPI  ====================================
	CreatePickup(1239, 1, -2237.1228,130.1769,1035.4141, -1); //Prodavnica Tehnike
	CreateDynamic3DTextLabel("{1985A6}[ {FFFFFF}Prodavnica Tehnike {1985A6}]\n{FFFFFF}/prodavnica", -1, -2237.1228,130.1769,1035.4141, 10);

	CreatePickup(1239, 1, 287.3644,-106.3382,1001.5156, -1); //Gun Shop
	CreateDynamic3DTextLabel("{1985A6}[ {FFFFFF}Gun Shop {1985A6}]\n{FFFFFF}/kupi", -1, 287.3644,-106.3382,1001.5156, 10);

	CreatePickup(1239, 1, 89.1872,1081.1329,13.6094, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Garaza Salona {1985A6}]\n{FFFFFF}/preuzmivozilo", -1, 89.1872,1081.1329,13.6094, 15.0, 0, 0);

	//FC
	CreatePickup(19132, 1, -215.0918,1148.4674,19.7556, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}OPSTINA {1985A6}]\n{FFFFFF}Pritisnite {1985A6}F {FFFFFF}za ulaz!", -1, -215.0918,1148.4674,19.7556, 15.0, 0, 0);
	CreatePickup(19132, 1, -176.3848,1114.3026,19.8095, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}BANKA {1985A6}]\n{FFFFFF}Pritisnite {1985A6}F {FFFFFF}za ulaz!", -1, -176.3848,1114.3026,19.8095, 15.0, 0, 0);
	CreatePickup(19132, 1, -313.3308,1177.3732,19.7570, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}ZLATARA {1985A6}]\n{FFFFFF}Pritisnite {1985A6}F {FFFFFF}za ulaz!", -1, -313.3308,1177.3732,19.7570, 15.0, 0, 0);
	//BB
	CreatePickup(19132, 1, 1373.8088,405.1312,19.9555, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}OPSTINA {1985A6}]\n{FFFFFF}Pritisnite {1985A6}F {FFFFFF}za ulaz!", -1, 1373.8088,405.1312,19.9555, 15.0, 0, 0);
	CreatePickup(19132, 1, 1311.0319,329.7282,19.9141, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}BANKA {1985A6}]\n{FFFFFF}Pritisnite {1985A6}F {FFFFFF}za ulaz!", -1, 1311.0319,329.7282,19.9141, 15.0, 0, 0);
	CreatePickup(19132, 1, 1223.6421,246.9161,19.5469, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}ZLATARA {1985A6}]\n{FFFFFF}Pritisnite {1985A6}F {FFFFFF}za ulaz!", -1, 1223.6421,246.9161,19.5469, 15.0, 0, 0);

	CreatePickup(19132, 1, -257.6290,1535.6111,32.9923, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}IZLAZ {1985A6}]\n{FFFFFF}Pritisnite {1985A6}F {FFFFFF}za izlaz!", -1, -257.6290,1535.6111,32.9923, 15.0, 0, 0);
	CreatePickup(19132, 1, -152.6935,1084.7131,20.5303, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}POSTA {1985A6}]\n{FFFFFF}Pritisnite {1985A6}F {FFFFFF}za ulaz!", -1, -152.6935,1084.7131,20.5303, 15.0, 0, 0);
	
	Create3DTextLabel("[ {1985A6}PerfectCrime {FFFFFF}]\nSince {1985A6}2019\n{FFFFFF}by {1985A6}TazGee", -1, 1223.5305, 299.3724, 22.7544, 40.0, 0, 0);
	Create3DTextLabel("[ {1985A6}PerfectCrime {FFFFFF}]\nSince {1985A6}2019\n{FFFFFF}by {1985A6}TazGee", -1, 70.05804, 1167.66064, 21.62017, 40.0, 0, 0);

	Create3DTextLabel("{1985A6}[ {FFFFFF}Pesacka Zona {1985A6}]\n{FFFFFF}Trg Fort Carson", -1, -193.0892,1185.9567,19.7969, 30.0, 0, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Pesacka Zona {1985A6}]\n{FFFFFF}Trg Fort Carson", -1, -193.0140,1110.5034,19.7906, 30.0, 0, 0);

	//LABORATORIJE
	CreatePickup(1241, 1, 1540.5923,20.1591,24.1406, 0);
	Create3DTextLabel("{DAA520}[ {FFFFFF}Laboratorija {DAA520}]\n{FFFFFF}/cookdrugs", -1, 1540.5923,20.1591,24.1406, 15.0, 0, 0);

	CreatePickup(1239, 1, 362.1759,173.6288,1008.3828, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Salter {1985A6}]\n{FFFFFF}/kupipasos", -1, 362.1759,173.6288,1008.3828, 15.0, 0, 0);
	CreatePickup(1239, 1, 358.7209,178.6033,1008.3828, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Salter {1985A6}]\n{FFFFFF}/otkaz", -1, 358.7209,178.6033,1008.3828, 15.0, 0, 0);

	CreatePickup(1239, 1, 362.1759,173.6288,1008.3828, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Salter za prodaju zlata {1985A6}]\n{FFFFFF}Pritisni N da prodas gram zlata", -1, 362.1759,173.6288,1008.3828, 15.0, 0, 0);
	CreatePickup(1239, 1, 358.7209,178.6033,1008.3828, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Salter za kupovinu zlata {1985A6}]\n{FFFFFF}Pritisni N da kupis gram zlata", -1, 358.7209,178.6033,1008.3828, 15.0, 0, 0);

	CreatePickup(1239, 1, 430.6861,143.7691,1003.0840, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Salter {1985A6}]\n{FFFFFF}/kupipasos", -1, 430.6861,143.7691,1003.0840, 15.0, 0, 0);
	CreatePickup(1239, 1, 427.3395,148.3786,1003.0827, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Salter {1985A6}]\n{FFFFFF}/otkaz", -1, 427.3395,148.3786,1003.0827, 15.0, 0, 0);
	
	//FC
	CreatePickup(1239, 1, 1456.4519,-972.4586,19.1609, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Salter {1985A6}]\n{FFFFFF}/napraviracun", -1, 1456.4519,-972.4586,19.1609, 15.0, 0, 0);
	CreatePickup(1239, 1, 1458.5801,-972.6403,19.1646, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Salter {1985A6}]\n{FFFFFF}/kredit\n/transfer", -1,1458.5801,-972.6403,19.1646, 15.0, 0, 0);
	CreatePickup(1239, 1, 1460.8018,-972.6647,19.1685, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Salter {1985A6}]\n{FFFFFF}/deposit", -1, 1460.8018,-972.6647,19.1685, 15.0, 0, 0);
	CreatePickup(1239, 1, 1463.0957,-972.5809,19.1725, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Salter {1985A6}]\n{FFFFFF}/withdraw", -1, 1463.0957,-972.5809,19.1725, 15.0, 0, 0);
	//BB
	CreatePickup(1239, 1, 2014.9720,1165.7174,541.0759, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Salter {1985A6}]\n{FFFFFF}/napraviracun", -1, 2014.9720,1165.7174,541.0759, 15.0, 0, 0);
	CreatePickup(1239, 1, 2018.7411,1165.7174,541.0759, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Salter {1985A6}]\n{FFFFFF}/kredit\n/transfer", -1,2018.7411,1165.7174,541.0759, 15.0, 0, 0);
	CreatePickup(1239, 1, 255.0708,77.1883,1003.6406, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Salter {1985A6}]\n{FFFFFF}/deposit\n/withdraw", -1, 2022.3209,1165.7174,541.0759, 15.0, 0, 0);

	//FC SHERIFF
	CreatePickup(1239, 1, 255.0708,77.1883,1003.6406, 0);
	CreateDynamic3DTextLabel("{1985A6}[ {FFFFFF}Ormaric {1985A6}]\n{FFFFFF}/duty\n/oprema\n/pancir", -1, 255.0708,77.1883,1003.6406, 10.0);
	CreatePickup(367, 1, 237.9564,72.9204,1005.0391, 0);
	CreateDynamic3DTextLabel("{1985A6}[ {FFFFFF}Kamere {1985A6}]\n{FFFFFF}/kamere", -1, 237.9564,72.9204,1005.0391, 10.0);
	CreatePickup(1239, 1, -221.0871,987.7327,19.6181, 0);
	CreateDynamic3DTextLabel("{1985A6}[ {FFFFFF}Hapsenje {1985A6}]\n{FFFFFF}/uhapsi", -1, -220.9871,987.7327,19.6181, 10.0);
	//BB SHERIFF
	CreatePickup(1239, 1, 230.6727,111.9174,1003.2188, 0);
	CreateDynamic3DTextLabel("{1985A6}[ {FFFFFF}Ormaric {1985A6}]\n{FFFFFF}/duty\n/oprema", -1, 230.6727,111.9174,1003.2188, 10.0);
	CreatePickup(367, 1, 234.5037,111.3881,1003.2257, 0);
	CreateDynamic3DTextLabel("{1985A6}[ {FFFFFF}Kamere {1985A6}]\n{FFFFFF}/kamere", -1, 234.5037,111.3881,1003.2257, 10.0);
	CreatePickup(1239, 1, 1357.1274,190.7570,19.5500, 0);
	CreateDynamic3DTextLabel("{1985A6}[ {FFFFFF}Hapsenje {1985A6}]\n{FFFFFF}/uhapsi", -1, 1357.2274,190.7570,19.5500, 10.0);

	//FC ZLATARA
	CreatePickup(1239, 1, 1013.0212,-14.8336,1001.0859, 0);
	CreateDynamic3DTextLabel("{C7A52A}[ {FFFFFF}Prodaja Zlata {C7A52A}]\n{FFFFFF}Pritisni N da prodas gram zlata\nCena za gram: {C7A52A}$1000", -1, 1013.0212,-14.8336,1001.0859, 10.0);
	CreatePickup(1239, 1, 1015.8776,-14.8913,1001.0859, 0);
	CreateDynamic3DTextLabel("{C7A52A}[ {FFFFFF}Kupovina Zlata {C7A52A}]\n{FFFFFF}Pritisni N da kupis gram zlata\nCena za gram: {C7A52A}$1100", -1, 1015.8776,-14.8913,1001.0859, 10.0);

	CreatePickup(1239, 1, -137.1933,1160.9027,19.7500, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Poslovni Servis {1985A6}]\n{FFFFFF}/popravivozilo\n/fill", -1, -137.1933,1160.9027,19.7500, 15.0, 0, 0);

	//POSTA
	CreatePickup(1239, 1, -271.1917,1537.7119,33.0030, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Salter {1985A6}]\n{FFFFFF}/platiracun\n/uplatikredit", -1, -271.1917,1537.7119,33.0030, 15.0, 0, 0);
	CreatePickup(1239, 1, -271.1917,1539.7571,33.0068, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Salter {1985A6}]\n{FFFFFF}/platiracun\n/uplatikredit", -1, -271.1917,1539.7571,33.0068, 15.0, 0, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Sef Poste {1985A6}]\n{FFFFFF}/opljackaj", -1, -284.5452,1538.3352,32.4923, 5.0, 0, 0);
	CreatePickup(1275, 1, -281.2949,1540.4186,32.9923, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Ormarici {1985A6}]\n{FFFFFF}/uniforma", -1, -281.2949,1540.4186,32.9923, 5.0, 0, 0);
	CreatePickup(1210, 1, -271.2486,1533.0491,32.9949, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Posao: Postar {1985A6}]\n{FFFFFF}/zaposlise\nPotrebna: {1985A6}C Kategorija", -1, -271.1917,1533.0491,32.9949, 15.0, 0, 0);
	CreatePickup(1210, 1, -162.0365,1161.6694,19.9003, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Posao: Vozac Autobusa {1985A6}]\n{FFFFFF}/zaposlise\nPotrebna: {1985A6}D Kategorija", -1, -162.0365,1161.6694,19.9003, 15.0, 0, 0);
	CreatePickup(1275, 1, -158.6285,1160.3898,19.9003, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Ormarici {1985A6}]\n{FFFFFF}/uniforma", -1, -158.6285,1160.3898,19.9003, 5.0, 0, 0);
	CreatePickup(1210, 1, -32.3799,1287.0350,18.0486, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Posao: Masinovodja {1985A6}]\n{FFFFFF}/zaposlise\nOvde se mozete zaposliti\niako nemate nikakvo\niskustvo niti dozvolu!", -1, -32.3799,1287.0350,18.0486, 15.0, 0, 0);
	CreatePickup(1275, 1, -28.3458,1285.8611,18.0486, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Ormarici {1985A6}]\n{FFFFFF}/uniforma", -1, -28.3458,1285.8611,18.0486, 5.0, 0, 0);
	CreatePickup(1210, 1, -824.2012,1443.6980,13.9725, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Posao: Kamiondzija {1985A6}]\n{FFFFFF}/zaposlise\nPotrebna: {1985A6}C Kategorija", -1, -824.2012,1443.6980,13.9725, 15.0, 0, 0);
	CreatePickup(1210, 1, 414.9254,2535.3982,19.1484, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Posao: Zaprasivac Komaraca {1985A6}]\n{FFFFFF}/zaposlise\nPotrebna: {1985A6}Dozvola za letenje", -1, 414.9254,2535.3982,19.1484, 15.0, 0, 0);
	CreatePickup(1210, 1, 1347.3105,1257.9911,10.8203, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Posao: Pilot {1985A6}]\n{FFFFFF}/zaposlise\n/uniforma\nPotrebna: {1985A6}Dozvola za letenje", -1, 1347.3105,1257.9911,10.8203, 15.0, 0, 0);
	CreatePickup(1210, 1, 171.8137,1180.7561,14.7578, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Posao: Pizza Dostavljac {1985A6}]\n{FFFFFF}/zaposlise\n/uniforma\nPotrebna: {1985A6}A Kategorija", -1, 171.8137,1180.7561,14.7578, 15.0, 0, 0);
	CreatePickup(1210, 1, 94.8884,1059.6193,13.8096, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Posao: Dostavljac Delova {1985A6}]\n{FFFFFF}/zaposlise\nPotrebna: {1985A6}C Kategorija", -1, 94.8884,1059.6193,13.8096, 15.0, 0, 0);
	CreatePickup(1239, 1, 111.7311,1051.4434,13.7996, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Katalog {1985A6}]\n{FFFFFF}/katalog", -1, 111.7311,1051.4434,13.7996, 15.0, 0, 0);
	CreatePickup(1239, 1, 111.5714,1053.4357,13.7996, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Katalog {1985A6}]\n{FFFFFF}/katalog", -1, 111.5714,1053.4357,13.7996, 15.0, 0, 0);
	CreatePickup(1239, 1, 111.5134,1055.4646,13.7996, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Katalog {1985A6}]\n{FFFFFF}/katalog", -1, 111.5134,1055.4646,13.7996, 15.0, 0, 0);

	//TEHNICKI FC
	CreatePickup(1239, 1, -100.0269,1119.0984,20.7417, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Tehnicki Pregled {1985A6}]\n{FFFFFF}/fixveh\n/tehnickipregled", -1, -109.8256,1117.2198,19.7450, 25.0, 0, 0);
	//TEHNICKI BB
	CreatePickup(1239, 1, 1409.0424,460.6784,20.4439, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Tehnicki Pregled {1985A6}]\n{FFFFFF}/fixveh\n/tehnickipregled", -1, 1409.0424,460.6784,20.4439, 25.0, 0, 0);

	CreatePickup(1210, 1, 14.0222,1188.0099,19.4749, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Posao: Cistac Ulica {1985A6}]\n{FFFFFF}/zaposlise\nPotrebna: {1985A6}B Kategorija", -1, 14.0222,1188.0099,19.4749, 15.0, 0, 0);
	CreatePickup(1210, 1, -146.3646,1155.9105,20.1754, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Posao: Prevoznik Novca {1985A6}]\n{FFFFFF}/zaposlise\nPotrebna: {1985A6}B Kategorija", -1, -146.3646,1155.9105,20.1754, 15.0, 0, 0);
	CreatePickup(1210, 1, 321.9052,851.5593,20.4063, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Posao: Prevoznik Kamenja {1985A6}]\n{FFFFFF}/zaposlise\nPotrebna: {1985A6}C Kategorija", -1, 321.9052,851.5593,20.4063, 15.0, 0, 0);
	CreatePickup(1210, 1, 1352.0740,348.3827,20.5010, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Posao: Logističar {1985A6}]\n{FFFFFF}/zaposlise\nPotrebna: {1985A6}B Kategorija", -1, 1352.0740,348.3827,20.5010, 15.0, 0, 0);

	CreatePickup(1210, 1, 1374.9788,475.1432,20.0520, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Posao: Skupljac Sekundarnih Sirovina {1985A6}]\n{FFFFFF}/zaposlise\nPotrebna: {1985A6}B Kategorija", -1, 1374.9788,475.1432,20.0520, 15.0, 0, 0);
	CreatePickup(1275, 1, 1373.5853,472.3205,20.1277, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Uniforma Posla {1985A6}]\n{FFFFFF}/uniforma", -1, 1373.5853,472.3205,20.1277, 15.0, 0, 0);

	//SEMENA
	CreatePickup(2247, 1, 870.2169,-25.4223,63.9526, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Seme Marihuane {1985A6}]\n{FFFFFF}/kupiseme", -1, 870.2169,-25.4223,63.9526, 15.0, 0, 0);
	CreatePickup(2247, 1, -59.7621,83.5426,3.1172, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Seme Marihuane {1985A6}]\n{FFFFFF}/kupiseme", -1, -59.7621,83.5426,3.1172, 15.0, 0, 0);
	CreatePickup(2247, 1, -792.4700,1627.8301,27.1563, 0);
	Create3DTextLabel("{1985A6}[ {FFFFFF}Seme Marihuane {1985A6}]\n{FFFFFF}/kupiseme", -1, -792.4700,1627.8301,27.1563, 15.0, 0, 0);

	// - NAPLATNE RAMPE -
	//Most FC-BB
	CreateDynamic3DTextLabel("{1985A6}[ {FFFFFF}Magistralni Put SA-M03 {1985A6}]\n{FFFFFF}Fort Carson {1985A6}- {FFFFFF}Blueberry", -1, 520.65161, 472.33252, 18.62254, 20);
	CreateDynamic3DTextLabel("{1985A6}[ {FFFFFF}Naplatna Rampa {1985A6}]\n{FFFFFF}Pritisnite H da platite putarinu\n{1985A6}Cena putarine: {FFFFFF}$200", -1, 518.8883,480.4178,18.4556, 20);
	CreateDynamic3DTextLabel("{1985A6}[ {FFFFFF}Naplatna Rampa {1985A6}]\n{FFFFFF}Pritisnite H da platite putarinu\n{1985A6}Cena putarine: {FFFFFF}$200", -1, 522.4777,464.1671,18.4557, 20);
	
	//Most FC-LB
	CreateDynamic3DTextLabel("{1985A6}[ {FFFFFF}Magistralni Put SA-M01 {1985A6}]\n{FFFFFF}Fort Carson {1985A6}- {FFFFFF}Las Barrancas", -1, -477.8373, 1054.2146, 10.8199, 20);
	CreateDynamic3DTextLabel("{1985A6}[ {FFFFFF}Naplatna Rampa {1985A6}]\n{FFFFFF}Pritisnite H da platite putarinu\n{1985A6}Cena putarine: {FFFFFF}$200", -1, -482.8087,1061.1154,10.5560, 20);
	CreateDynamic3DTextLabel("{1985A6}[ {FFFFFF}Naplatna Rampa {1985A6}]\n{FFFFFF}Pritisnite H da platite putarinu\n{1985A6}Cena putarine: {FFFFFF}$200", -1, -472.6409,1047.4696,10.5567, 20);

	//Most FC-SF
	CreateDynamic3DTextLabel("{1985A6}[ {FFFFFF}Autoput SA-A01 {1985A6}]\n{FFFFFF}Fort Carson {1985A6}- {FFFFFF}San Fierro", -1, -628.7093, 652.0122, 18.0891, 20);
	CreateDynamic3DTextLabel("{1985A6}[ {FFFFFF}Naplatna Rampa {1985A6}]\n{FFFFFF}Pritisnite H da platite putarinu\n{1985A6}Cena putarine: {FFFFFF}$200", -1, -631.2253,645.6463,16.1646, 20);
	CreateDynamic3DTextLabel("{1985A6}[ {FFFFFF}Naplatna Rampa {1985A6}]\n{FFFFFF}Pritisnite H da platite putarinu\n{1985A6}Cena putarine: {FFFFFF}$200", -1, -626.2454,658.2614,16.2265, 20);

	//Most FC-TP
	CreateDynamic3DTextLabel("{1985A6}[ {FFFFFF}Magistralni Put SA-M02 {1985A6}]\n{FFFFFF}Fort Carson {1985A6}- {FFFFFF}The Panopticon", -1, -168.5725, 365.0541, 11.7215, 20);
	CreateDynamic3DTextLabel("{1985A6}[ {FFFFFF}Naplatna Rampa {1985A6}]\n{FFFFFF}Pritisnite H da platite putarinu\n{1985A6}Cena putarine: {FFFFFF}$200", -1, -163.1036,372.4486,11.6040, 20);
	CreateDynamic3DTextLabel("{1985A6}[ {FFFFFF}Naplatna Rampa {1985A6}]\n{FFFFFF}Pritisnite H da platite putarinu\n{1985A6}Cena putarine: {FFFFFF}$200", -1, -174.0498,357.6174,11.6040, 20);

	//IZLAZI IZ OBJEKATA
	CreatePickup(19134, 1, 384.808624,173.804992,1008.382812, -1);
	CreatePickup(19134, 1, -215.0918,1148.4674,19.7556, -1);
	CreatePickup(19134, 1, 1466.1982,-1004.7651,16.2557, -1);
	CreatePickup(19134, 1, -25.72,-187.82,1003.54, -1);
	CreatePickup(19134, 1, -2240.6296,137.2068,1035.4141, -1); 			// PROD TEHNIKE
	CreatePickup(19134, 1, -2026.8237,-103.7391,1035.1719, -1);
	CreatePickup(19134, 1, 244.1447,304.9606,999.1484, -1);
	CreatePickup(19134, 1, 2282.97,-1140.28,1050.89, -1);
	CreatePickup(19134, 1, 2236.69,-1078.94,1049.02, -1); 				//SREDNJA KUCA
	CreatePickup(19134, 1, -262.17,1456.61,1084.36, -1);
	CreatePickup(19134, 1, 2324.38,-1148.48,1050.71, -1);
	CreatePickup(19134, 1, 2016.1735,1151.2471,539.4459, -1);
	CreatePickup(19134, 1, 296.8690,-111.9940,1001.5156, -1);
	CreatePickup(19134, 1, 1014.87078, 3.78490, 1001.10498, -1);		//ZLATARA FC
	

	//AUTOSKOLA
	CreatePickup(1239, 1, -2033.4338,-117.4285,1035.1719, -1);
	for(new i = 0; i < MAX_FIRME; i++)
	{
		Create3DTextLabel("{1985A6}[ {FFFFFF}Dozvole {1985A6}]\n{FFFFFF}/dozvole", -1, -2033.4338,-117.4285,1035.1719, 15.0, i, 0);
	}
	CreatePickup(1239, 1, -2032.9714,-115.7158,1035.1719, -1);
	for(new i = 0; i < MAX_FIRME; i++)
	{
		Create3DTextLabel("{1985A6}[ {FFFFFF}Dozvole {1985A6}]\n{FFFFFF}/dozvole", -1, -2032.9714,-115.7158,1035.1719, 15.0, i, 0);
	}
	
	
	print("Ucitani pickupi");
//==============================================================================
	
	SetTimer("PosaljiPoruku", 60000, true);
	SetTimer("PayDay", 60000, true);
	SetTimer("RespawnVozila", 1800000, true);
	SetTimer("RentTimer", 60000, true);
	SetTimer("NagradnaPoruka", 180000, true);
    NagradnaPoruka();
	print("Ucitani timeri");
////////////////////////////////////////////////////////////////////////////////
//=================================== MAPE =====================================
////////////////////////////////////////////////////////////////////////////////

	//PRISON
	CreateDynamicObject(19913, 213.71040, 1856.18945, 22.08298,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19913, 238.62994, 1881.20898, 22.08300,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19913, 188.75722, 1881.17285, 22.08300,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8314, 181.18645, 1917.46130, 19.59360,   0.00000, 0.00000, 16.74002);
	CreateDynamicObject(19913, 198.67233, 1929.28333, 22.08820,   0.00000, 0.00000, 2.04000);
	CreateDynamicObject(19913, 213.75951, 1929.83472, 22.08824,   0.00000, 0.00000, 2.04000);
	CreateDynamicObject(19913, 238.61696, 1906.22217, 22.08300,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2990, 174.05492, 1916.27197, 21.00481,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18980, 173.87070, 1910.99304, 12.40730,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18980, 173.81703, 1921.49158, 12.40728,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(980, 226.35538, 1872.67065, 13.80880,   0.00000, 0.00000, 90.11982);
	CreateDynamicObject(2628, 197.11224, 1874.90991, 16.66760,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2628, 197.10239, 1876.30811, 16.66760,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2628, 197.10646, 1877.68542, 16.66760,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2629, 197.16559, 1879.16272, 16.62900,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2629, 197.14789, 1880.72766, 16.62900,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2629, 197.17093, 1882.33496, 16.62900,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2630, 196.99323, 1884.50867, 16.63090,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2630, 196.96970, 1885.68030, 16.63090,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2630, 196.95132, 1886.83276, 16.63090,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1368, 198.24370, 1889.25110, 17.30000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19922, 198.25684, 1891.03687, 16.61107,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1368, 198.25259, 1892.63867, 17.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19922, 202.43723, 1887.23022, 16.61107,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19922, 203.89421, 1892.48218, 16.61107,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19922, 205.47862, 1883.02197, 16.61107,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19922, 202.08330, 1879.18042, 16.61107,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1368, 203.76720, 1890.97522, 17.30000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1368, 202.36424, 1885.61084, 17.30000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1368, 205.48093, 1881.46875, 17.30000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1368, 201.97797, 1877.62451, 17.30000,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1368, 202.01866, 1880.77283, 17.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1368, 205.47638, 1884.55859, 17.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1368, 202.45506, 1888.75903, 17.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1368, 203.85086, 1893.98816, 17.30000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 209.40771, 1877.94983, 17.15494,   0.00000, 0.00000, -81.72018);
	CreateDynamicObject(970, 208.70898, 1882.56787, 17.15494,   0.00000, 0.00000, -81.72018);
	CreateDynamicObject(970, 208.05431, 1887.21582, 17.15494,   0.00000, 0.00000, -81.72018);
	CreateDynamicObject(970, 207.37357, 1891.96729, 17.15494,   0.00000, 0.00000, -81.72018);
	CreateDynamicObject(970, 206.66544, 1896.64783, 17.15494,   0.00000, 0.00000, -81.72018);

	//TEHNICKI BB
	CreateDynamicObject(3359, 1407.20959, 460.18008, 18.90700,   0.00000, 0.00000, -25.00000);
	CreateDynamicObject(19375, 1407.88647, 460.23413, 19.16429,   0.00000, 90.00000, -25.00000);
	CreateDynamicObject(19375, 1406.88770, 460.69324, 19.16094,   0.00000, 90.00000, -25.00000);
	CreateDynamicObject(19815, 1412.67114, 458.59381, 20.70560,   0.00000, 0.00000, -115.08010);
	CreateDynamicObject(19817, 1407.62390, 457.73923, 17.52234,   0.00000, 0.00000, -25.00000);
	CreateDynamicObject(19817, 1408.01526, 458.54950, 17.52200,   0.00000, 0.00000, -25.00000);
	CreateDynamicObject(640, 1401.51868, 457.01904, 19.83503,   0.00000, 0.00000, 64.98006);
	CreateDynamicObject(638, 1409.66943, 453.21408, 19.83070,   0.00000, 0.00000, 64.98010);
	CreateDynamicObject(1215, 1404.48645, 456.66656, 19.67997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1408.64783, 454.74478, 19.67997,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14693, 1407.67773, 462.47119, 19.66475,   0.00000, 0.00000, -30.84005);
	CreateDynamicObject(2008, 1410.99609, 458.69235, 19.28222,   0.00000, 0.00000, 64.74000);
	CreateDynamicObject(2356, 1412.71179, 459.64035, 19.23509,   0.00000, 0.00000, 111.47988);
	CreateDynamicObject(19900, 1411.54041, 461.43964, 19.25000,   0.00000, 0.00000, -154.14030);
	CreateDynamicObject(19899, 1406.31116, 464.53104, 19.24930,   0.00000, 0.00000, -115.14010);
	CreateDynamicObject(19899, 1401.86719, 460.58795, 19.24930,   0.00000, 0.00000, -23.70003);
	CreateDynamicObject(19899, 1403.03406, 463.28540, 19.24930,   0.00000, 0.00000, -23.70003);
	CreateDynamicObject(1327, 1402.93213, 458.60046, 19.25030,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(1327, 1403.66760, 460.31985, 19.25030,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(1327, 1403.42175, 459.28836, 19.87942,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19921, 1405.04150, 463.20050, 19.33642,   0.00000, 0.00000, 9.17999);


	// POSTA BB
	CreateDynamicObject(16006, 1201.04431, 344.96555, 18.23913,   0.00000, 0.00000, -24.23999);
	CreateDynamicObject(3515, 1204.25854, 334.10895, 18.15898,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1211.53271, 349.93066, 18.15898,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1208.69751, 348.18695, 18.43701,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1203.82922, 336.94061, 18.47383,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(823, 1203.66882, 336.52527, 17.92281,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(823, 1209.94275, 350.13980, 17.89960,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(673, 1208.01074, 338.53183, 18.32736,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(673, 1210.25037, 343.73950, 18.32736,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(673, 1197.11523, 335.87579, 18.32736,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(673, 1205.23364, 354.18530, 18.32736,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1210.21594, 342.39413, 19.00973,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1209.05823, 339.75519, 19.00973,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1214.00500, 339.16367, 19.12170,   0.00000, 0.00000, 66.06011);
	CreateDynamicObject(970, 1215.93518, 343.51767, 19.12170,   0.00000, 0.00000, 66.06011);
	CreateDynamicObject(970, 1212.09180, 334.80188, 19.12170,   0.00000, 0.00000, 66.06011);
	CreateDynamicObject(640, 1211.85815, 336.14508, 19.16414,   0.00000, 0.00000, -24.00001);
	CreateDynamicObject(640, 1214.83765, 342.69693, 19.16414,   0.00000, 0.00000, -24.00001);
	CreateDynamicObject(1215, 1212.98169, 336.98132, 19.00973,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1214.92554, 341.36658, 19.00973,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1206.72791, 333.83835, 19.66279,   0.00000, 0.00000, 66.06011);
	CreateDynamicObject(970, 1213.07043, 348.01465, 19.66279,   0.00000, 0.00000, 66.06011);

	//UHAPSI VRATA
	CreateDynamicObject(1492, 1357.38123, 189.84756, 18.52959,   0.00000, 0.00000, 65.94010);
	CreateDynamicObject(1492, -221.83420, 987.03290, 18.60047,   0.00000, 0.00000, 0.00000);

	//FC SHERIFF ENT
	CreateDynamicObject(1535, 226.23753, 71.05694, 1004.03961,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1535, 226.24023, 75.06118, 1004.03961,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19454, 226.10017, 73.91650, 1005.25897,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 259.05872, 90.99985, 1002.65918,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19302, 259.04797, 89.31672, 1002.65918,   0.00000, 0.00000, -90.00000);

	//BB SHERIFF ENT
	CreateDynamicObject(19302, 217.97952, 116.56537, 999.28925,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19302, 216.25926, 116.56343, 999.28918,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(11729, 231.46640, 113.04790, 1002.13519,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(11729, 231.46640, 112.37190, 1002.13519,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(11729, 231.46640, 111.69230, 1002.13519,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(11729, 231.46640, 111.03200, 1002.13519,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1535, 236.80576, 119.25141, 1002.20313,   356.85840, 0.00000, -3.14159);
	CreateDynamicObject(1535, 253.22972, 108.02398, 1002.20313,   3.14160, 0.00000, 90.00000);
	CreateDynamicObject(1535, 253.25900, 109.50590, 1002.20313,   3.14160, 0.00000, 90.00000);
	CreateDynamicObject(19444, 227.68687, 123.27907, 1004.02411,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19444, 227.68420, 124.25900, 1004.02411,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19444, 227.66420, 124.27900, 1007.48071,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19444, 227.66690, 123.27910, 1007.45941,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19466, 240.59357, 119.30321, 1005.27100,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 242.83521, 119.30320, 1005.27100,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 245.07520, 119.30320, 1005.27100,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 247.31520, 119.30320, 1005.27100,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 249.55521, 119.30320, 1005.27100,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 251.79050, 119.30320, 1005.27100,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19466, 239.66693, 111.60782, 1004.65808,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19466, 239.66690, 113.83240, 1004.65808,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19466, 253.17213, 116.98989, 1004.65808,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19466, 253.17210, 119.22190, 1004.65808,   0.00000, 0.00000, 0.00000);


	//ZLATARA ENTERIJER FC
	CreateDynamicObject(19458, 1020.00000, 0.00000, 1000.00000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1016.50000, 0.00000, 1000.00000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1013.00000, 0.00000, 1000.00000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1009.50000, 0.00000, 1000.00000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1020.00000, -9.50000, 1000.00000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1020.00000, -19.00000, 1000.00000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1016.50000, -9.50000, 1000.00000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1013.00000, -9.50000, 1000.00000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1009.49823, -9.50000, 1000.00000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1016.50000, -19.00000, 1000.00000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1013.00000, -19.00000, 1000.00000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1009.50000, -19.00000, 1000.00000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(2433, 1020.95154, -7.38572, 1000.06592,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(18070, 1014.60150, -17.90579, 1000.53668,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(640, 1018.08081, -7.82410, 1000.75513,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(640, 1011.21881, -7.82410, 1000.75513,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2433, 1020.95148, -5.34420, 1000.06592,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2433, 1020.95148, -9.44510, 1000.06592,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2433, 1008.35022, -8.40817, 1000.06592,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2433, 1008.35022, -10.48900, 1000.06592,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2433, 1008.35022, -6.32730, 1000.06592,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1671, 1015.84827, -17.67421, 1000.52148,   0.00000, 0.00000, -162.23943);
	CreateDynamicObject(1671, 1013.19476, -17.71870, 1000.52148,   0.00000, 0.00000, -187.91850);
	CreateDynamicObject(1514, 1015.78931, -16.19122, 1001.28107,   0.00000, 0.00000, 178.49937);
	CreateDynamicObject(1514, 1013.11481, -16.23394, 1001.28107,   0.00000, 0.00000, 184.85924);
	CreateDynamicObject(2190, 1012.30457, -16.05466, 1001.04382,   0.00000, 0.00000, 23.76000);
	CreateDynamicObject(2190, 1017.11835, -16.34280, 1001.04382,   0.00000, 0.00000, -51.60003);
	CreateDynamicObject(2433, 1014.21857, -7.35749, 1000.06592,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2433, 1014.98932, -8.34820, 1000.06592,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2433, 1014.21863, -5.31280, 1000.06592,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2433, 1014.21863, -9.42350, 1000.06592,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2433, 1014.98932, -10.38830, 1000.06592,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2433, 1014.98932, -6.30820, 1000.06592,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(640, 1014.52649, -12.84820, 1000.75513,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19462, 1021.68213, 0.00000, 1001.81531,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1021.66211, -9.50000, 1001.81531,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1021.66211, -19.00000, 1001.81531,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1007.83252, 0.00000, 1001.81531,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1007.85248, -9.50000, 1001.81531,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1007.85248, -19.00000, 1001.81531,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19462, 1018.97980, -23.77428, 1001.81531,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19462, 1009.38605, -23.75443, 1001.81531,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19462, 1012.75012, 4.70072, 1001.81531,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19462, 1022.26526, 4.69144, 1001.81531,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19458, 1020.00000, 0.00000, 1003.62000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1016.50000, 0.00000, 1003.62000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1013.00000, 0.00000, 1003.62000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1009.50000, 0.00000, 1003.62000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1020.00000, -9.50000, 1003.62000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1016.50000, -9.50000, 1003.62000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1013.00000, -9.50000, 1003.62000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1009.49823, -9.50000, 1003.62000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1009.50000, -19.00000, 1003.62000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1013.00000, -19.00000, 1003.62000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1016.50000, -19.00000, 1003.62000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19458, 1020.00000, -19.00000, 1003.62000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(1557, 1013.27258, 4.64187, 1000.07941,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1557, 1016.27448, 4.64190, 1000.07941,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19859, 1019.29974, -23.59105, 1001.33502,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 1017.61957, 3.95013, 1000.08667,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1703, 1020.83252, 2.84196, 1000.08667,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2009, 1011.85913, 3.64253, 1000.04730,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1671, 1009.83350, 4.02687, 1000.52148,   0.00000, 0.00000, -292.91727);
	CreateDynamicObject(1808, 1021.26611, 0.00218, 1000.02979,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1776, 1020.98700, -1.05396, 1001.16895,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(638, 1014.72491, -2.83790, 1000.70398,   0.00000, 0.00000, 90.00000);
	fcZlataraActors[0] = CreateActor(12,1013.7825,-17.1763,1001.0859,359.7533);
	fcZlataraActors[1] = CreateActor(40,1015.4962,-17.1549,1001.0859,358.6174);
	fcZlataraActors[2] = CreateActor(275,1011.1079,3.4019,1001.0859,268.3764);

	ApplyActorAnimation(fcZlataraActors[0], "ped","woman_idlestance",4.1, true, false, false, false, 0);
	ApplyActorAnimation(fcZlataraActors[1], "ped","woman_idlestance",4.1, true, false, false, false, 0);
	ApplyActorAnimation(fcZlataraActors[2], "ped","IDLE_stance",4.1, true, false, false, false, 0);


	//Laboratorija 1 (Blueberry)
	CreateDynamicObject(935, 1539.82788, 11.04179, 23.66218,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(935, 1540.72290, 11.17839, 23.66218,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(935, 1540.23206, 11.81718, 23.66218,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3287, 1548.23877, 13.73520, 25.66240,   0.00000, 0.00000, -80.76000);
	CreateDynamicObject(3675, 1548.94104, 15.96271, 22.33254,   0.00000, 0.00000, 188.21898);
	CreateDynamicObject(3675, 1543.75818, 14.67337, 22.33254,   0.00000, 0.00000, 188.21898);
	CreateDynamicObject(2132, 1538.11426, 20.40933, 23.11665,   0.00000, 0.00000, 9.48000);
	CreateDynamicObject(2132, 1542.05127, 21.07247, 23.10456,   0.00000, 0.00000, 9.48000);
	CreateDynamicObject(11709, 1538.24487, 18.71169, 23.80540,   0.00000, 0.00000, 99.84016);
	CreateDynamicObject(19584, 1539.94067, 21.05613, 24.33211,   0.00000, 0.00000, -26.58001);
	CreateDynamicObject(19584, 1537.87097, 20.55942, 24.33211,   0.00000, 0.00000, 55.08004);
	CreateDynamicObject(930, 1548.36816, 22.22761, 23.59727,   0.00000, 0.00000, 8.40000);
	CreateDynamicObject(19570, 1538.41309, 20.67522, 24.16700,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19570, 1540.10852, 20.96221, 24.16700,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19570, 1542.39709, 21.37329, 24.16700,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19570, 1542.19299, 21.19357, 24.16700,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2339, 1540.10120, 20.74205, 23.11670,   0.00000, 0.00000, 9.48000);
	CreateDynamicObject(2339, 1541.08337, 20.90246, 23.11670,   0.00000, 0.00000, 9.48000);
	CreateDynamicObject(2149, 1541.00427, 20.99121, 24.30416,   0.00000, 0.00000, 10.08000);
	CreateDynamicObject(1666, 1540.12976, 20.69703, 24.24395,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1666, 1538.43579, 20.40933, 24.24395,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1666, 1542.06689, 21.42049, 24.24395,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1666, 1541.90723, 21.00246, 24.24395,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1666, 1541.75806, 21.28892, 24.24395,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2478, 1547.10571, 22.05275, 23.40343,   0.00000, 0.00000, 12.18001);
	CreateDynamicObject(2478, 1548.20251, 21.57098, 23.40343,   0.00000, 0.00000, 7.50000);
	CreateDynamicObject(3042, 1539.41443, 21.60485, 25.92987,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3675, 1541.28467, 15.22311, 25.97174,   0.00000, 90.00000, 278.21899);
	CreateDynamicObject(2771, 1540.44482, 20.90869, 24.34870,   0.00000, 0.00000, -171.05910);
	CreateDynamicObject(11707, 1537.81152, 19.46140, 24.73512,   0.00000, 0.00000, 98.33991);

	//FC Zlatara
	CreateDynamicObject(13015, -319.86536, 1186.38611, 21.76078,   0.00000, 0.00000, 90.00032);
	CreateDynamicObject(19545, -316.76608, 1165.84216, 18.75700,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19545, -316.77090, 1180.83704, 18.75700,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18762, -347.57336, 1179.14893, 20.09477,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, -347.57339, 1158.84558, 20.09480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, -347.57339, 1168.97583, 20.09480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, -334.97751, 1158.84558, 20.09480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, -286.04218, 1187.82434, 20.09480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, -286.04221, 1158.83911, 20.09480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, -286.04221, 1168.48511, 20.09480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, -286.04221, 1178.25195, 20.09480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, -295.87411, 1158.83911, 20.09480,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18766, -347.57300, 1173.96558, 17.24500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, -347.57300, 1164.20227, 17.24500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, -342.47769, 1158.84558, 17.24500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18766, -340.30649, 1158.84497, 17.24000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18766, -344.77933, 1183.45422, 17.24500,   0.00000, 0.00000, 54.89988);
	CreateDynamicObject(18766, -291.28830, 1158.83911, 17.24500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18766, -286.04199, 1164.28198, 17.24500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, -286.04221, 1174.25745, 17.24500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, -286.04001, 1182.70996, 17.24000,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18766, -291.51004, 1187.83264, 17.24500,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, -344.42526, 1183.83179, 20.45302,   0.00000, 0.00000, 54.89990);
	CreateDynamicObject(8674, -347.59570, 1174.15125, 20.45300,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, -347.59570, 1164.27405, 20.45300,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, -343.02686, 1158.84229, 20.45300,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, -340.46466, 1158.84717, 20.45300,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, -290.74643, 1158.85559, 20.45300,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, -286.06558, 1163.79211, 20.45300,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, -286.06561, 1173.27905, 20.45300,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, -286.06561, 1183.50952, 20.45300,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, -291.10718, 1187.81470, 20.45300,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(640, -290.99002, 1157.63757, 19.36380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(640, -284.95056, 1163.55457, 19.36380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(640, -284.95059, 1173.18213, 19.36380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(640, -284.95059, 1183.00879, 19.36380,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(640, -341.43182, 1157.66772, 19.36380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(655, -294.99597, 1157.64392, 18.83567,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(655, -285.07974, 1157.84375, 18.83567,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(655, -284.90747, 1168.66296, 18.83567,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(655, -285.01559, 1178.45166, 18.83567,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(655, -285.02390, 1188.10754, 18.83567,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(655, -335.20050, 1157.60486, 18.83567,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(655, -348.67249, 1157.80042, 18.83567,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(655, -349.11749, 1168.89880, 18.83567,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(655, -348.86981, 1179.28418, 18.83567,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(640, -313.46078, 1174.00220, 19.64102,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(640, -300.70221, 1174.00220, 19.64100,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(640, -326.24359, 1174.00220, 19.64100,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(640, -337.23529, 1174.00220, 19.64100,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19462, -313.41217, 1178.17554, 20.43661,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18762, -318.41803, 1177.71875, 19.69787,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, -308.31439, 1177.71875, 19.69790,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1557, -314.87915, 1177.95569, 18.75128,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1557, -311.87689, 1177.95569, 18.75130,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1215, -338.38998, 1157.59741, 19.25877,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -344.55173, 1157.61584, 19.25877,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -334.08929, 1158.83484, 19.25877,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -296.80386, 1158.86267, 19.25877,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -294.07733, 1157.55212, 19.25877,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -287.96286, 1157.54602, 19.25877,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -285.05414, 1160.37927, 19.25877,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -285.01535, 1166.76038, 19.25877,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -284.96478, 1170.02759, 19.25877,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -285.06674, 1176.29114, 19.25877,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -285.10938, 1179.91467, 19.25877,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -285.09494, 1186.07874, 19.25877,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -315.17276, 1177.53052, 19.30112,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -311.61331, 1177.53052, 19.30110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -313.40369, 1173.39233, 19.52000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -318.34280, 1173.39233, 19.52005,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -308.44461, 1173.39233, 19.52000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -313.40408, 1174.67358, 19.52000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -318.34280, 1174.67358, 19.52000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -308.44461, 1174.67358, 19.52000,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -310.92154, 1173.40771, 19.30110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -315.92108, 1173.43738, 19.30110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -320.75858, 1173.42310, 19.30110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -306.06415, 1173.41003, 19.30110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -310.89005, 1174.70764, 19.30110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -315.87305, 1174.69373, 19.30110,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(673, -322.13580, 1173.97852, 18.73438,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(673, -331.61093, 1174.01086, 18.73438,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(673, -342.02802, 1173.91296, 18.73438,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(673, -304.81848, 1174.00867, 18.73438,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(673, -296.26379, 1174.10376, 18.73438,   0.00000, 0.00000, 0.00000);


	//BB Zlatara
	CreateDynamicObject(19462, 1222.91992, 247.12148, 20.27463,   0.00000, 0.00000, -23.75998);
	CreateDynamicObject(1557, 1222.45166, 245.73073, 18.55538,   0.00000, 0.00000, 66.60022);
	CreateDynamicObject(1557, 1223.64551, 248.50763, 18.55538,   0.00000, 0.00000, -113.93999);
	CreateDynamicObject(18762, 1225.25525, 251.40244, 19.58061,   0.00000, 0.00000, -23.94001);
	CreateDynamicObject(18762, 1221.29895, 242.31705, 19.58061,   0.00000, 0.00000, -23.94001);
	CreateDynamicObject(1215, 1222.67175, 245.44501, 19.10674,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1224.00903, 248.50902, 19.10674,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1225.99463, 245.81439, 19.29172,   0.00000, 0.00000, 66.00014);
	CreateDynamicObject(970, 1224.02612, 241.36887, 19.29172,   0.00000, 0.00000, 66.00014);
	CreateDynamicObject(970, 1227.98010, 250.25148, 19.29172,   0.00000, 0.00000, 66.00014);
	CreateDynamicObject(970, 1227.37598, 245.22491, 19.29172,   0.00000, 0.00000, 66.00014);
	CreateDynamicObject(970, 1229.38196, 249.60916, 19.29172,   0.00000, 0.00000, 66.00014);
	CreateDynamicObject(970, 1225.39905, 240.76099, 19.29172,   0.00000, 0.00000, 66.00014);
	CreateDynamicObject(640, 1226.67322, 245.51387, 19.38319,   0.00000, 0.00000, -24.05999);
	CreateDynamicObject(640, 1231.84021, 256.92032, 19.38319,   0.00000, 0.00000, -24.05999);
	CreateDynamicObject(640, 1221.08728, 232.61452, 19.38319,   0.00000, 0.00000, -24.05999);
	CreateDynamicObject(640, 1216.93420, 223.18842, 19.38319,   0.00000, 0.00000, -24.05999);
	CreateDynamicObject(638, 1224.98474, 241.76115, 19.42502,   0.00000, 0.00000, -24.23999);
	CreateDynamicObject(638, 1228.35815, 249.28932, 19.42502,   0.00000, 0.00000, -24.23999);
	CreateDynamicObject(1215, 1226.38391, 243.00766, 19.31483,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1228.34277, 247.43010, 19.31483,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1230.26831, 251.79552, 19.31483,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1224.39539, 238.57483, 19.31483,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1225.00806, 243.54709, 19.31483,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1226.98499, 247.99590, 19.31483,   0.00000, 0.00000, 0.00000);

	//Blueberry autoskola
	CreateDynamicObject(19552, 1160.74780, 141.96132, 19.47507,   0.00000, 0.00000, -23.16000);
	CreateDynamicObject(16146, 1217.52087, 135.98056, 22.39064,   0.00000, 0.00000, -114.48010);
	CreateDynamicObject(17064, 1198.85168, 147.94453, 19.49712,   0.00000, 0.00000, 157.07884);
	CreateDynamicObject(7520, 1205.30347, 164.72719, 19.7451,   0.00000, 0.00000, 66.36018);
	CreateDynamicObject(8674, 1230.23010, 145.46397, 20.05087,   0.00000, 0.00000, 66.29994);
	CreateDynamicObject(8674, 1240.84119, 169.80255, 20.05087,   0.00000, 0.00000, 66.59993);
	CreateDynamicObject(8674, 1238.80249, 165.07787, 20.05087,   0.00000, 0.00000, 66.59993);
	CreateDynamicObject(8674, 1238.16516, 176.54344, 20.05087,   0.00000, 0.00000, -23.34020);
	CreateDynamicObject(8674, 1228.76672, 180.61102, 20.05087,   0.00000, 0.00000, -23.34020);
	CreateDynamicObject(8674, 1219.75415, 185.46289, 20.05087,   0.00000, 0.00000, -33.12020);
	CreateDynamicObject(18762, 1232.25549, 150.21419, 19.40717,   0.00000, 0.00000, -24.30000);
	CreateDynamicObject(18762, 1236.73438, 160.24261, 19.40717,   0.00000, 0.00000, -24.30000);
	CreateDynamicObject(18762, 1242.82935, 174.50992, 19.40717,   0.00000, 0.00000, -24.30000);
	CreateDynamicObject(18762, 1239.80420, 167.41782, 19.40717,   0.00000, 0.00000, -24.30000);
	CreateDynamicObject(18762, 1235.78760, 177.54980, 19.40720,   0.00000, 0.00000, -24.30000);
	CreateDynamicObject(18762, 1228.82690, 180.57880, 19.40720,   0.00000, 0.00000, -24.30000);
	CreateDynamicObject(18762, 1221.93774, 184.00851, 19.40717,   0.00000, 0.00000, -34.25998);
	CreateDynamicObject(18766, 1230.05811, 145.19528, 17.78235,   0.00000, 0.00000, -113.64003);
	CreateDynamicObject(18766, 1238.69446, 164.83965, 17.78235,   0.00000, 0.00000, -113.10004);
	CreateDynamicObject(18766, 1241.02478, 170.29411, 17.78200,   0.00000, 0.00000, -113.10000);
	CreateDynamicObject(18766, 1237.75110, 176.71481, 17.78200,   0.00000, 0.00000, -23.45965);
	CreateDynamicObject(18766, 1228.60693, 180.68321, 17.78200,   0.00000, 0.00000, -23.45965);
	CreateDynamicObject(18766, 1219.88049, 185.29514, 17.78200,   0.00000, 0.00000, -32.33940);
	CreateDynamicObject(19425, 1233.07068, 152.09962, 19.43985,   0.00000, 0.00000, 66.36028);
	CreateDynamicObject(19425, 1234.38672, 155.11119, 19.43985,   0.00000, 0.00000, 66.36028);
	CreateDynamicObject(19425, 1235.70129, 158.12283, 19.43985,   0.00000, 0.00000, 66.36028);
	CreateDynamicObject(19425, 1237.01770, 161.14293, 19.43985,   0.00000, 0.00000, 66.36028);
	CreateDynamicObject(640, 1231.24072, 145.01836, 19.93966,   0.00000, 0.00000, -23.57999);
	CreateDynamicObject(640, 1239.43616, 163.63210, 19.93966,   0.00000, 0.00000, -23.57999);
	CreateDynamicObject(640, 1242.70984, 171.20370, 19.93966,   0.00000, 0.00000, -23.57999);
	CreateDynamicObject(640, 1240.24329, 176.90244, 19.93966,   0.00000, 0.00000, -113.81995);
	CreateDynamicObject(640, 1232.73047, 180.15872, 19.93966,   0.00000, 0.00000, -113.81995);
	CreateDynamicObject(640, 1225.64856, 183.27440, 19.93966,   0.00000, 0.00000, -116.69987);
	CreateDynamicObject(640, 1219.19458, 187.18079, 19.93966,   0.00000, 0.00000, -123.11990);
	CreateDynamicObject(738, 1233.65222, 149.44153, 19.23203,   0.00000, 0.00000, -24.47999);
	CreateDynamicObject(738, 1229.92773, 140.76814, 19.23203,   0.00000, 0.00000, -24.47999);
	CreateDynamicObject(738, 1238.29675, 159.93555, 19.23203,   0.00000, 0.00000, -24.47999);
	CreateDynamicObject(738, 1241.40247, 167.37317, 19.23203,   0.00000, 0.00000, -24.47999);
	CreateDynamicObject(738, 1244.65991, 175.06523, 19.23203,   0.00000, 0.00000, -24.47999);
	CreateDynamicObject(738, 1236.66113, 178.71301, 19.23203,   0.00000, 0.00000, -24.47999);
	CreateDynamicObject(738, 1229.60645, 181.83086, 19.23203,   0.00000, 0.00000, -24.47999);
	CreateDynamicObject(738, 1222.78760, 185.21013, 19.23203,   0.00000, 0.00000, -35.09999);
	CreateDynamicObject(1215, 1233.21155, 150.55566, 19.69986,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1237.15344, 159.26056, 19.69986,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1232.61462, 148.27367, 19.69986,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1229.89380, 142.06245, 19.69986,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1238.14209, 160.85442, 19.69986,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1240.51233, 166.50540, 19.69986,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1241.33142, 168.44685, 19.69986,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1243.73352, 174.17191, 19.69986,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1243.18066, 175.50601, 19.69986,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1237.26270, 178.19180, 19.69986,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1235.46497, 178.92166, 19.69986,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1230.04309, 181.38751, 19.69986,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1228.35620, 182.02283, 19.69986,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1223.09705, 184.70038, 19.69986,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1221.70044, 185.62976, 19.69986,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1216.32581, 188.73988, 19.69986,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19454, 1217.54944, 144.55522, 17.21162,   90.00000, 0.00000, 64.92008);
	CreateDynamicObject(1569, 1216.79395, 145.00212, 19.39547,   0.00000, 0.00000, -25.74002);


	//OPSTINA BB
	CreateDynamicObjectEx(14602, 445.09, 143.93, 1007.37,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19450, 422.28, 133.01, 1003.72,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19450, 422.28, 142.57, 1003.72,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19450, 422.28, 152.19, 1003.72,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19450, 422.29, 161.81, 1003.72,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19450, 422.28, 133.01, 1007.16,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19450, 422.26, 142.50, 1007.16,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19450, 422.24, 152.10, 1007.16,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19450, 422.26, 161.58, 1007.16,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19450, 437.40, 132.04, 1003.72,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19450, 437.42, 132.04, 1007.16,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19450, 437.47, 154.84, 1003.72,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19450, 437.49, 154.83, 1007.16,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19450, 442.10, 144.79, 1003.72,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19450, 442.10, 135.28, 1003.72,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19450, 446.11, 144.87, 1007.16,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19450, 442.11, 135.42, 1007.16,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19450, 442.20, 150.00, 1003.72,   0.00, 0.00, 90.31,300,300);
	CreateDynamicObjectEx(19450, 442.20, 149.86, 1003.72,   0.00, 0.00, 90.31,300,300);
	CreateDynamicObjectEx(19450, 442.21, 149.70, 1003.72,   0.00, 0.00, 90.31,300,300);
	CreateDynamicObjectEx(19450, 442.21, 149.65, 1003.72,   0.00, 0.00, 90.31,300,300);
	CreateDynamicObjectEx(19450, 442.12, 145.02, 1007.16,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19450, 442.20, 149.97, 1007.16,   0.00, 0.00, 89.83,300,300);
	CreateDynamicObjectEx(19450, 442.20, 149.79, 1007.16,   0.00, 0.00, 89.83,300,300);
	CreateDynamicObjectEx(19450, 442.20, 149.66, 1007.16,   0.00, 0.00, 89.83,300,300);
	CreateDynamicObjectEx(19450, 442.22, 149.60, 1007.16,   0.00, 0.00, 89.83,300,300);
	CreateDynamicObjectEx(19450, 442.13, 136.93, 1003.72,   0.00, 0.00, 90.31,300,300);
	CreateDynamicObjectEx(19450, 442.13, 136.83, 1007.16,   0.00, 0.00, 89.83,300,300);
	CreateDynamicObjectEx(19450, 432.57, 128.34, 1003.72,   0.00, 0.00, 90.31,300,300);
	CreateDynamicObjectEx(19450, 422.95, 128.29, 1003.72,   0.00, 0.00, 90.31,300,300);
	CreateDynamicObjectEx(19450, 432.55, 128.32, 1007.16,   0.00, 0.00, 90.44,300,300);
	CreateDynamicObjectEx(19450, 422.96, 128.24, 1007.16,   0.00, 0.00, 90.44,300,300);
	CreateDynamicObjectEx(19450, 426.84, 159.51, 1003.72,   0.00, 0.00, 90.31,300,300);
	CreateDynamicObjectEx(19450, 436.39, 159.56, 1003.72,   0.00, 0.00, 90.31,300,300);
	CreateDynamicObjectEx(19450, 427.05, 159.50, 1007.16,   0.00, 0.00, 90.44,300,300);
	CreateDynamicObjectEx(19450, 436.64, 159.59, 1007.16,   0.00, 0.00, 90.70,300,300);
	CreateDynamicObjectEx(6959, 436.11, 147.39, 1006.34,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19431, 433.79, 140.28, 1003.77,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19431, 432.37, 140.32, 1003.77,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19431, 433.08, 141.05, 1003.77,   0.00, 0.00, 89.38,300,300);
	CreateDynamicObjectEx(19431, 433.08, 139.56, 1003.77,   0.00, 0.00, 89.38,300,300);
	CreateDynamicObjectEx(19431, 433.08, 139.58, 1007.15,   0.00, 0.00, 89.38,300,300);
	CreateDynamicObjectEx(19431, 432.38, 140.28, 1007.14,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19431, 433.10, 141.05, 1007.15,   0.00, 0.00, 89.38,300,300);
	CreateDynamicObjectEx(19431, 433.78, 140.29, 1007.14,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19431, 432.29, 147.61, 1003.77,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19431, 433.73, 147.60, 1003.77,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19431, 433.01, 146.89, 1003.77,   0.00, 0.00, 89.38,300,300);
	CreateDynamicObjectEx(19431, 433.00, 148.34, 1003.77,   0.00, 0.00, 89.38,300,300);
	CreateDynamicObjectEx(19431, 433.01, 146.89, 1007.15,   0.00, 0.00, 89.38,300,300);
	CreateDynamicObjectEx(19431, 432.31, 147.62, 1007.14,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19431, 433.73, 147.61, 1007.14,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(19431, 433.02, 148.33, 1007.15,   0.00, 0.00, 89.38,300,300);
	CreateDynamicObjectEx(19379, 438.55, 145.84, 1002.00,   -180.06, 89.94, 0.00,300,300);
	CreateDynamicObjectEx(19379, 438.60, 136.25, 1002.00,   -180.06, 89.94, 0.00,300,300);
	CreateDynamicObjectEx(19379, 438.62, 126.66, 1002.00,   -180.06, 89.94, 0.00,300,300);
	CreateDynamicObjectEx(19379, 428.33, 134.73, 1002.00,   -180.06, 89.94, 0.00,300,300);
	CreateDynamicObjectEx(19379, 428.16, 125.14, 1002.00,   -180.06, 89.94, 0.00,300,300);
	CreateDynamicObjectEx(19379, 417.72, 125.13, 1002.00,   -180.06, 89.94, 0.00,300,300);
	CreateDynamicObjectEx(19379, 418.10, 134.76, 1002.00,   -180.06, 89.94, 0.00,300,300);
	CreateDynamicObjectEx(19379, 428.61, 144.04, 1002.00,   -180.06, 89.94, 0.00,300,300);
	CreateDynamicObjectEx(19379, 419.39, 144.02, 1002.00,   -180.06, 89.94, 0.00,300,300);
	CreateDynamicObjectEx(19379, 426.29, 153.60, 1002.00,   -180.06, 89.94, 0.00,300,300);
	CreateDynamicObjectEx(19379, 436.70, 153.61, 1002.00,   -180.06, 89.94, 0.00,300,300);
	CreateDynamicObjectEx(19379, 436.70, 163.22, 1002.00,   -180.06, 89.94, 0.00,300,300);
	CreateDynamicObjectEx(19379, 426.40, 163.19, 1002.00,   -180.06, 89.94, 0.00,300,300);
	CreateDynamicObjectEx(1569, 442.03, 142.39, 1002.09,   0.00, 0.00, 90.48,300,300);
	CreateDynamicObjectEx(1569, 442.05, 145.36, 1002.09,   0.00, 0.00, 268.51,300,300);
	CreateDynamicObjectEx(2195, 441.80, 145.64, 1002.71,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(2195, 441.90, 142.06, 1002.71,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(3440, 425.79, 128.65, 1004.24,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(3440, 425.82, 132.67, 1004.24,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(1649, 425.92, 130.67, 1005.10,   0.00, 0.00, 89.66,300,300);
	CreateDynamicObjectEx(1649, 425.78, 135.13, 1005.10,   0.00, 0.00, 89.66,300,300);
	CreateDynamicObjectEx(3440, 425.74, 137.19, 1004.24,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(1649, 425.79, 139.29, 1005.10,   0.00, 0.00, 89.66,300,300);
	CreateDynamicObjectEx(3440, 425.75, 141.32, 1004.24,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(1649, 425.78, 139.18, 1005.10,   0.00, 0.00, 269.60,300,300);
	CreateDynamicObjectEx(1649, 425.72, 134.88, 1005.10,   0.00, 0.00, 269.60,300,300);
	CreateDynamicObjectEx(1649, 425.80, 130.62, 1005.10,   0.00, 0.00, 269.60,300,300);
	CreateDynamicObjectEx(3440, 425.79, 159.10, 1004.24,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(1649, 425.90, 156.93, 1005.10,   0.00, 0.00, 89.66,300,300);
	CreateDynamicObjectEx(3440, 425.87, 154.53, 1004.24,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(1649, 425.99, 152.59, 1005.10,   0.00, 0.00, 89.66,300,300);
	CreateDynamicObjectEx(3440, 425.96, 150.46, 1004.24,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(1649, 425.99, 148.52, 1005.10,   0.00, 0.00, 89.66,300,300);
	CreateDynamicObjectEx(3440, 425.82, 146.21, 1004.24,   0.00, 0.00, 0.00,300,300);
	CreateDynamicObjectEx(1649, 425.93, 148.34, 1005.10,   0.00, 0.00, 269.60,300,300);
	CreateDynamicObjectEx(1649, 425.95, 152.79, 1005.10,   0.00, 0.00, 269.60,300,300);
	CreateDynamicObjectEx(1649, 425.89, 156.81, 1005.10,   0.00, 0.00, 269.60,300,300);
	CreateDynamicObjectEx(1806, 424.13, 139.13, 1002.09,   0.00, 0.00, 267.32,300,300);
	CreateDynamicObjectEx(1806, 424.22, 134.40, 1002.09,   0.00, 0.00, 267.32,300,300);
	CreateDynamicObjectEx(1806, 424.10, 130.66, 1002.09,   0.00, 0.00, 267.32,300,300);
	CreateDynamicObjectEx(1806, 424.16, 148.45, 1002.09,   0.00, 0.00, 267.32,300,300);
	CreateDynamicObjectEx(1806, 424.22, 152.76, 1002.09,   0.00, 0.00, 267.32,300,300);
	CreateDynamicObjectEx(1806, 424.22, 156.90, 1002.09,   0.00, 0.00, 267.32,300,300);
	CreateDynamicObjectEx(1671, 427.53, 143.72, 1002.61,   0.00, 0.00, 90.18,300,300);
	CreateDynamicObjectEx(2000, 422.84, 136.00, 1002.01,   0.00, 0.00, 89.78,300,300);
	CreateDynamicObjectEx(2000, 422.85, 136.46, 1002.01,   0.00, 0.00, 89.78,300,300);
	CreateDynamicObjectEx(2000, 422.85, 136.91, 1002.01,   0.00, 0.00, 89.78,300,300);
	CreateDynamicObjectEx(2000, 422.85, 137.39, 1002.01,   0.00, 0.00, 89.78,300,300);
	CreateDynamicObjectEx(2000, 422.84, 135.55, 1002.01,   0.00, 0.00, 89.78,300,300);
	CreateDynamicObjectEx(2000, 422.85, 135.09, 1002.01,   0.00, 0.00, 89.78,300,300);
	CreateDynamicObjectEx(2000, 422.85, 135.09, 1003.39,   0.00, 0.00, 89.78,300,300);
	CreateDynamicObjectEx(2000, 422.86, 135.56, 1003.39,   0.00, 0.00, 89.78,300,300);
	CreateDynamicObjectEx(2000, 422.86, 136.03, 1003.39,   0.00, 0.00, 89.78,300,300);
	CreateDynamicObjectEx(2000, 422.87, 136.48, 1003.39,   0.00, 0.00, 89.78,300,300);
	CreateDynamicObjectEx(2000, 422.87, 136.94, 1003.39,   0.00, 0.00, 89.78,300,300);
	CreateDynamicObjectEx(2000, 422.87, 137.41, 1003.39,   0.00, 0.00, 89.78,300,300);
	CreateDynamicObjectEx(2191, 422.87, 148.23, 1002.14,   0.00, 0.00, 89.23,300,300);
	CreateDynamicObjectEx(2191, 422.89, 149.58, 1002.14,   0.00, 0.00, 89.23,300,300);
	CreateDynamicObjectEx(2191, 422.88, 150.93, 1002.14,   0.00, 0.00, 89.23,300,300);
	CreateDynamicObjectEx(2161, 422.40, 155.35, 1002.09,   0.00, 0.00, 90.07,300,300);
	CreateDynamicObjectEx(2161, 422.40, 156.66, 1002.09,   0.00, 0.00, 90.07,300,300);
	CreateDynamicObjectEx(2164, 422.38, 130.20, 1002.10,   0.00, 0.00, 89.64,300,300);
	CreateDynamicObjectEx(2164, 422.39, 131.97, 1002.10,   0.00, 0.00, 89.64,300,300);
	CreateDynamicObjectEx(2199, 422.44, 140.24, 1002.09,   0.00, 0.00, 89.35,300,300);
	CreateDynamicObjectEx(2199, 422.44, 141.58, 1002.09,   0.00, 0.00, 89.35,300,300);
	CreateDynamicObjectEx(2200, 422.51, 145.29, 1002.04,   0.00, 0.00, 90.02,300,300);
	CreateDynamicObjectEx(2190, 381.08, 155.61, 1008.10,   356.86, 0.00, -0.99,300,300);


	//BB SHERIFF
	CreateDynamicObject(16563, 1364.33704, 186.33760, 17.18646,   0.00000, 0.00000, 65.94008);
	CreateDynamicObject(19531, 1385.76550, 127.44920, 18.55000,   0.00000, 0.00000, -24.00000);
	CreateDynamicObject(19536, 1422.75806, 147.29520, 18.55250,   0.00000, 0.00000, -23.70000);
	CreateDynamicObject(638, 1374.48987, 199.60550, 19.22598,   0.00000, 0.00000, 65.70007);
	CreateDynamicObject(638, 1366.93054, 202.89964, 19.22598,   0.00000, 0.00000, 65.70007);
	CreateDynamicObject(638, 1360.69067, 205.63417, 19.22598,   0.00000, 0.00000, 65.70007);
	CreateDynamicObject(970, 1367.10864, 203.60632, 19.06592,   0.00000, 0.00000, -23.82001);
	CreateDynamicObject(970, 1374.62219, 200.18062, 19.06592,   0.00000, 0.00000, -23.82001);
	CreateDynamicObject(638, 1356.16101, 207.67107, 19.22598,   0.00000, 0.00000, 65.70007);
	CreateDynamicObject(970, 1361.01941, 206.30371, 19.06592,   0.00000, 0.00000, -23.82001);
	CreateDynamicObject(970, 1356.36304, 208.34738, 19.06592,   0.00000, 0.00000, -23.82001);
	CreateDynamicObject(1215, 1365.50623, 203.77864, 19.06987,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1362.32422, 205.18681, 19.06987,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1358.61401, 207.22530, 19.06987,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1371.74597, 188.43457, 19.06592,   0.00000, 0.00000, 66.24007);
	CreateDynamicObject(970, 1373.59998, 192.69675, 19.06592,   0.00000, 0.00000, 66.24007);
	CreateDynamicObject(970, 1375.50208, 197.02110, 19.06592,   0.00000, 0.00000, 66.24007);
	CreateDynamicObject(638, 1374.09021, 195.15979, 19.22598,   0.00000, 0.00000, 156.35950);
	CreateDynamicObject(638, 1372.22278, 190.83725, 19.22598,   0.00000, 0.00000, 156.35950);
	CreateDynamicObject(970, 1352.79297, 206.71185, 19.06592,   0.00000, 0.00000, 66.24007);
	CreateDynamicObject(970, 1345.08264, 189.23935, 19.06592,   0.00000, 0.00000, 66.24007);
	CreateDynamicObject(970, 1346.97803, 193.56596, 19.06592,   0.00000, 0.00000, 66.24007);
	CreateDynamicObject(970, 1348.90442, 197.92462, 19.06592,   0.00000, 0.00000, 66.24007);
	CreateDynamicObject(970, 1350.86719, 202.33443, 19.06592,   0.00000, 0.00000, 66.24007);
	CreateDynamicObject(970, 1346.34790, 185.76459, 19.06592,   0.00000, 0.00000, -23.82001);
	CreateDynamicObject(970, 1350.68884, 183.84738, 19.06592,   0.00000, 0.00000, -23.82001);
	CreateDynamicObject(970, 1355.07813, 181.91202, 19.06592,   0.00000, 0.00000, -23.82001);
	CreateDynamicObject(970, 1359.42407, 180.02686, 19.06592,   0.00000, 0.00000, -23.82001);
	CreateDynamicObject(638, 1352.46924, 204.26483, 19.22598,   0.00000, 0.00000, 156.35950);
	CreateDynamicObject(638, 1350.49585, 199.86534, 19.22598,   0.00000, 0.00000, 156.35950);
	CreateDynamicObject(638, 1348.58252, 195.48271, 19.22598,   0.00000, 0.00000, 156.35950);
	CreateDynamicObject(638, 1346.67627, 191.22961, 19.22598,   0.00000, 0.00000, 156.35950);
	CreateDynamicObject(638, 1348.74524, 185.29259, 19.22598,   0.00000, 0.00000, 65.70007);
	CreateDynamicObject(638, 1353.08997, 183.34296, 19.22598,   0.00000, 0.00000, 65.70007);
	CreateDynamicObject(638, 1357.48169, 181.42119, 19.22598,   0.00000, 0.00000, 65.70007);
	CreateDynamicObject(1215, 1354.04150, 209.14638, 19.06987,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1351.91284, 204.42018, 19.06987,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1349.97668, 200.05911, 19.06987,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1347.99243, 195.69862, 19.06987,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1346.06628, 191.34373, 19.06987,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1344.23828, 186.93069, 19.06987,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1348.52771, 184.85484, 19.06987,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1352.89966, 182.94547, 19.06987,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1357.25073, 180.97215, 19.06987,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1372.82739, 200.29710, 19.06987,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1368.46655, 202.24876, 19.06987,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1376.38477, 199.14888, 19.06987,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1374.48718, 194.88322, 19.06987,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1372.60156, 190.56723, 19.06987,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1367.42029, 189.68581, 19.06987,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1364.84985, 190.82416, 19.06987,   0.00000, 0.00000, 0.00000);

	//FC ILEGALNA ORG4
	CreateDynamicObject(19313, -719.11652, 918.64142, 14.32130,   0.00000, 0.00000, 85.98010);
	CreateDynamicObject(19313, -712.61407, 911.62439, 14.32130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, -698.67609, 911.60638, 14.32130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, -684.71405, 911.57355, 14.32130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, -670.95209, 913.32269, 14.32130,   0.00000, 0.00000, 15.42001);
	CreateDynamicObject(19313, -659.34869, 920.16461, 14.32130,   0.00000, 0.00000, 46.08006);
	CreateDynamicObject(19313, -650.93250, 931.23633, 14.32130,   0.00000, 0.00000, 59.34013);
	CreateDynamicObject(19313, -647.43011, 944.23248, 14.32130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, -647.41669, 958.21997, 14.32130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, -647.45697, 972.18225, 14.32130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, -647.46027, 981.24969, 14.32130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, -654.44659, 988.22095, 14.32130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, -668.42871, 988.19476, 14.32130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, -682.41266, 988.23499, 14.32130,   0.00000, 0.00000, -0.90000);
	CreateDynamicObject(19313, -696.37158, 988.40247, 14.32130,   0.00000, 0.00000, -1.26000);
	CreateDynamicObject(19313, -708.03082, 988.65588, 14.32130,   0.00000, 0.00000, -1.26000);
	CreateDynamicObject(19313, -715.46820, 981.77930, 14.32130,   0.00000, 0.00000, 85.98010);
	CreateDynamicObject(19313, -716.44189, 967.80566, 14.32130,   0.00000, 0.00000, 85.98010);
	CreateDynamicObject(3749, -715.60852, 954.60291, 16.77952,   0.00000, 0.00000, 87.66004);
	CreateDynamicObject(19313, -718.21283, 932.61469, 14.32130,   0.00000, 0.00000, 86.22021);
	CreateDynamicObject(19313, -717.78027, 939.50360, 14.32130,   0.00000, 0.00000, 86.22021);
	CreateDynamicObject(3515, -687.70923, 958.13470, 11.55697,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, -689.49109, 959.74591, 11.12277,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, -689.95776, 956.17554, 11.10315,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, -686.77032, 955.48846, 11.07046,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, -684.32050, 957.81909, 11.10315,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, -686.29675, 961.06049, 11.11623,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(824, -686.71118, 961.64716, 11.43293,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(824, -685.31409, 957.93286, 11.43293,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(824, -688.89056, 956.81818, 11.43293,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(824, -689.63293, 959.72473, 11.43293,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1829, -691.67914, 935.25183, 13.08696,   0.00000, 0.00000, 106.20029);
	CreateDynamicObject(2332, -692.01752, 936.18945, 13.10735,   0.00000, 0.00000, 88.20004);


	//FC ILEGALNA ORG3
	CreateDynamicObject(3749, -303.94803, 1736.15637, 47.51759,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3515, -308.06262, 1742.97925, 42.33776,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, -311.58182, 1742.99768, 42.18726,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, -315.10165, 1743.05469, 42.02354,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, -318.48300, 1742.94897, 41.87712,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, -321.84125, 1743.12390, 41.68518,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, -315.81439, 1745.28577, 43.89210,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, -311.20959, 1745.28931, 43.89214,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, -322.82901, 1752.30505, 43.89210,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, -322.83453, 1766.27075, 43.89210,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, -322.78116, 1780.24829, 43.89210,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, -322.78558, 1794.23499, 43.89210,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, -315.79053, 1801.21973, 43.89210,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, -305.90363, 1801.24353, 43.89210,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, -298.99725, 1789.33997, 43.89210,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, -292.02957, 1782.23755, 43.89210,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, -298.95551, 1794.32104, 43.89210,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, -285.26138, 1775.24524, 43.89210,   0.00000, 0.00000, 88.26003);
	CreateDynamicObject(19313, -285.68842, 1761.28406, 43.89210,   0.00000, 0.00000, 88.26003);
	CreateDynamicObject(19313, -286.49939, 1733.15930, 43.89210,   0.00000, 0.00000, 88.26003);
	CreateDynamicObject(19313, -286.08179, 1747.23267, 43.89210,   0.00000, 0.00000, 88.26003);
	CreateDynamicObject(19313, -293.71109, 1726.33044, 43.89210,   0.00000, 0.00000, -1.20000);
	CreateDynamicObject(19313, -298.42957, 1726.41687, 43.89210,   0.00000, 0.00000, -1.20000);
	CreateDynamicObject(824, -309.79788, 1743.53491, 43.17768,   0.00000, 0.00000, -6.84000);
	CreateDynamicObject(824, -315.46692, 1743.84827, 42.77430,   0.00000, 0.00000, -6.84000);
	CreateDynamicObject(824, -320.14743, 1743.76953, 42.45300,   0.00000, 0.00000, -6.84000);

	//FC ILEGALNA ORG2
	CreateDynamicObject(19313, 674.15454, 1945.90100, 7.80130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 674.21082, 1937.33533, 7.80130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3749, 713.18634, 1928.98840, 10.36398,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 681.30945, 1930.32422, 7.80130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 695.35858, 1930.30603, 7.80130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 699.82581, 1930.36365, 7.80130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 727.34595, 1934.42676, 7.80130,   0.00000, 0.00000, 51.24009);
	CreateDynamicObject(19313, 731.00592, 1946.80432, 7.80130,   0.00000, 0.00000, 95.58000);
	CreateDynamicObject(19313, 730.28302, 1960.77734, 7.80130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 730.28394, 1974.79211, 7.80130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 730.29413, 1988.78308, 7.80130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 730.26556, 1994.41150, 7.80130,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 676.37561, 1959.49841, 7.32359,   0.00000, 0.00000, 71.63998);
	CreateDynamicObject(19313, 678.56775, 1973.17041, 7.28408,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 678.57043, 1987.13306, 7.28408,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 678.60229, 1994.40430, 7.28408,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19313, 723.24841, 2001.39197, 7.80130,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 709.20972, 2001.40356, 7.60902,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 695.22760, 2001.42395, 7.38557,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19313, 685.63647, 2001.38452, 7.21656,   0.00000, 0.00000, 0.00000);

	//FC ILEGALNA ORG1
	CreateDynamicObject(19868, -320.83673, 1309.06641, 52.64639,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, -336.34091, 1309.04163, 52.64639,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, -331.16428, 1309.04773, 52.64639,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19868, -326.02438, 1309.06921, 52.64639,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3749, -311.18326, 1323.94092, 58.54496,   0.00000, 0.00000, 86.88007);
	CreateDynamicObject(19868, -316.27252, 1310.74536, 52.47532,   0.00000, 0.00000, 40.32010);
	CreateDynamicObject(19868, -313.14630, 1314.76306, 52.47532,   0.00000, 0.00000, 64.14013);
	CreateDynamicObject(19868, -338.90994, 1306.44385, 52.64640,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19868, -338.89883, 1301.21814, 52.64640,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19868, -338.89087, 1295.99890, 52.64640,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19868, -338.90897, 1293.47571, 52.64640,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19868, -336.26987, 1290.87268, 52.64640,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19868, -331.05054, 1290.87610, 52.64640,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19868, -325.83191, 1290.88171, 52.64640,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19868, -320.62796, 1290.90112, 52.64640,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19868, -315.42249, 1290.87842, 52.64640,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19868, -310.21326, 1290.86035, 52.64640,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19868, -305.01556, 1290.88037, 52.64640,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19868, -299.78998, 1290.85828, 52.64640,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19868, -294.59048, 1290.86621, 52.64640,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19868, -291.17755, 1290.89368, 52.64640,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19868, -288.27783, 1293.45911, 52.64640,   0.00000, 0.00000, 262.44031);
	CreateDynamicObject(19868, -287.58347, 1298.57336, 52.64640,   0.00000, 0.00000, 262.44031);
	CreateDynamicObject(19868, -286.88937, 1303.66895, 52.89424,   0.00000, 0.00000, 262.44031);
	CreateDynamicObject(19868, -286.24191, 1308.82568, 53.00861,   0.00000, 0.00000, 262.44031);
	CreateDynamicObject(19868, -285.55875, 1313.93994, 53.13492,   0.00000, 0.00000, 262.44031);
	CreateDynamicObject(19868, -284.89154, 1319.08911, 53.27674,   0.00000, 0.00000, 262.44031);
	CreateDynamicObject(19868, -284.20596, 1324.24451, 53.46642,   0.00000, 0.00000, 262.44031);
	CreateDynamicObject(19868, -283.87622, 1326.56873, 53.45956,   0.00000, 0.00000, 262.44031);
	CreateDynamicObject(19868, -286.13962, 1329.29321, 53.49025,   0.00000, 0.00000, -4.44000);
	CreateDynamicObject(19868, -291.27512, 1329.65625, 53.45946,   0.00000, 0.00000, -4.44000);
	CreateDynamicObject(19868, -296.43094, 1330.04749, 53.45946,   0.00000, 0.00000, -4.44000);
	CreateDynamicObject(19868, -301.57986, 1330.45398, 53.49974,   0.00000, 0.00000, -4.44000);
	CreateDynamicObject(19868, -306.73575, 1330.69714, 53.49974,   0.00000, 0.00000, -1.80000);

	//Opstina spolja BB
	CreateDynamicObject(3515, 1372.57471, 411.42303, 18.53323,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1368.30652, 401.60098, 18.53323,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1373.50842, 414.25137, 18.29894,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1366.71509, 398.84573, 18.29890,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(824, 1367.88794, 400.92737, 19.02580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(824, 1373.13782, 413.36728, 19.02580,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1365.99475, 408.45309, 19.10875,   0.00000, 0.00000, 66.06003);
	CreateDynamicObject(970, 1364.11780, 404.21210, 19.10875,   0.00000, 0.00000, 66.06003);
	CreateDynamicObject(970, 1367.91541, 412.74075, 19.10875,   0.00000, 0.00000, 66.06003);
	CreateDynamicObject(1215, 1365.05432, 406.31271, 19.12021,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1366.94312, 410.55737, 19.12021,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1368.80981, 414.84955, 19.12021,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1363.13025, 402.05801, 19.12021,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1364, 1365.62988, 393.94620, 19.39299,   0.00000, 0.00000, -115.02050);
	CreateDynamicObject(1364, 1363.36157, 388.95840, 19.39299,   0.00000, 0.00000, -115.02050);
	CreateDynamicObject(1364, 1376.30798, 417.72684, 19.39299,   0.00000, 0.00000, -113.64052);

	//Banka spolja BB
	CreateDynamicObject(970, 1317.70959, 326.09830, 19.06582,   0.00000, 0.00000, 66.12010);
	CreateDynamicObject(970, 1319.63123, 330.43546, 19.06582,   0.00000, 0.00000, 66.12010);
	CreateDynamicObject(970, 1321.55859, 334.75754, 19.06582,   0.00000, 0.00000, 66.12010);
	CreateDynamicObject(970, 1309.16162, 322.78018, 19.06582,   0.00000, 0.00000, 155.75916);
	CreateDynamicObject(970, 1304.76965, 324.72815, 19.06582,   0.00000, 0.00000, 155.75916);
	CreateDynamicObject(970, 1300.37402, 326.71042, 19.06582,   0.00000, 0.00000, 155.75916);
	CreateDynamicObject(1215, 1311.58667, 321.82953, 19.10691,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1316.37524, 323.66318, 19.10691,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1318.63196, 328.25650, 19.10691,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1320.58118, 332.59409, 19.10691,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1322.53662, 337.01810, 19.10691,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1306.95178, 323.75998, 19.10691,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1302.57727, 325.70230, 19.10691,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 1298.18457, 327.65204, 19.10691,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 1313.14856, 322.09793, 17.44496,   0.00000, 90.00000, 190.49849);
	CreateDynamicObject(970, 1315.13843, 322.92365, 17.40524,   0.00000, -90.00000, 212.87790);


	//GUN SHOP NPC
	for(new i = 1; i < MAX_FIRME; i++)
	{
		if(FirmaInfo[i][fiTip] == 5)
		{
			gsNPC = CreateActor(179, 285.2237,-106.4004,1001.5156,268.3779);
			ApplyActorAnimation(gsNPC, "COP_AMBIENT","Coplook_loop",4.1, true, false, false, false, 0);
			SetActorVirtualWorld(gsNPC, i);
		}
	}
	
	//Naplatna Rampa FC-SF
	rampaNPC[0] = CreateActor(275,-631.2365,655.7940,16.6850,289.5806);
	rampaNPC[1] = CreateActor(275,-631.0527,650.1970,16.6488,159.1934);
	rampaNPC[2] = CreateActor(280,-623.9108,650.0028,16.8274,247.8167);
	SetPlayerSpecialAction(rampaNPC[2], SPECIAL_ACTION_SMOKE_CIGGY);

	ApplyActorAnimation(rampaNPC[0], "COP_AMBIENT","Coplook_loop",4.1, true, false, false, false, 0);
	ApplyActorAnimation(rampaNPC[1], "COP_AMBIENT","Coplook_loop",4.1, true, false, false, false, 0);
	ApplyActorAnimation(rampaNPC[2], "SMOKING","M_smk_loop",4.1, true, false, false, false, 0);

	CreateDynamicObject(7033, -628.70929, 652.01221, 20.08912,   0.00000, 0.00000, 66.23992);
	CreateDynamicObject(8674, -628.07495, 665.85443, 16.99102,   0.00000, 0.00000, -23.10000);
	CreateDynamicObject(8674, -618.63477, 661.76434, 16.99102,   0.00000, 0.00000, -23.75999);
	CreateDynamicObject(8674, -609.19202, 657.60931, 16.73870,   0.00000, 0.00000, -23.76000);
	CreateDynamicObject(8674, -637.51434, 669.96094, 16.73875,   0.00000, 0.00000, -23.75999);
	CreateDynamicObject(8674, -628.69788, 637.68866, 16.99102,   0.00000, 0.00000, -23.75999);
	CreateDynamicObject(8674, -638.11829, 641.81500, 16.99102,   0.00000, 0.00000, -23.75999);
	CreateDynamicObject(8674, -647.52008, 645.93378, 16.73870,   0.00000, 0.00000, -23.76000);
	CreateDynamicObject(8674, -619.26929, 633.55267, 16.73870,   0.00000, 0.00000, -23.76000);
	CreateDynamicObject(970, -619.38049, 649.67822, 16.40445,   0.00000, 0.00000, -24.30002);
	CreateDynamicObject(970, -615.11707, 647.73596, 16.40445,   0.00000, 0.00000, -24.30002);
	CreateDynamicObject(970, -610.85443, 645.79425, 16.40445,   0.00000, 0.00000, -24.30002);
	CreateDynamicObject(970, -620.61481, 646.83923, 16.40445,   0.00000, 0.00000, -24.30002);
	CreateDynamicObject(970, -616.33710, 644.90045, 16.40445,   0.00000, 0.00000, -24.30002);
	CreateDynamicObject(970, -612.05109, 642.98187, 16.40445,   0.00000, 0.00000, -24.30002);
	CreateDynamicObject(1215, -609.88690, 641.98889, 16.35785,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -608.69086, 644.78558, 16.35785,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -613.03528, 646.72198, 16.35785,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -614.24072, 643.87006, 16.35785,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -618.58514, 645.80682, 16.35785,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -617.30786, 648.66486, 16.35785,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -636.82843, 657.21283, 16.34420,   0.00000, 0.00000, -24.30000);
	CreateDynamicObject(970, -641.26215, 659.12061, 16.34420,   0.00000, 0.00000, -23.28000);
	CreateDynamicObject(970, -645.65167, 660.99646, 16.34420,   0.00000, 0.00000, -23.28000);
	CreateDynamicObject(970, -638.12897, 654.31226, 16.34421,   0.00000, 0.00000, -23.88000);
	CreateDynamicObject(970, -642.49103, 656.20862, 16.34420,   0.00000, 0.00000, -23.28000);
	CreateDynamicObject(970, -646.84998, 658.07098, 16.34420,   0.00000, 0.00000, -23.28000);
	CreateDynamicObject(1215, -644.65887, 657.17010, 16.35857,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -648.99316, 659.03925, 16.35857,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -647.79688, 661.86798, 16.35857,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -643.45331, 660.03247, 16.35857,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -639.07672, 658.15436, 16.35857,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -640.29730, 655.28412, 16.35857,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -642.53259, 672.18384, 16.80638,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -652.70813, 648.14716, 16.76867,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -614.10059, 631.17480, 16.75628,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -603.99670, 655.25500, 16.75628,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1422, -608.54169, 643.23773, 16.21438,   0.00000, 0.00000, -117.60002);
	CreateDynamicObject(1422, -648.85388, 660.66058, 16.21439,   0.00000, 0.00000, -112.80005);
	CreateDynamicObject(966, -627.15088, 662.47906, 15.66408,   0.00000, 0.00000, 66.84010);
	CreateDynamicObject(970, -624.79449, 661.28735, 16.24904,   0.00000, 0.00000, -24.30002);
	CreateDynamicObject(970, -620.64459, 660.23297, 16.24904,   0.00000, 0.00000, -3.00002);
	CreateDynamicObject(970, -627.51550, 655.18213, 16.24904,   0.00000, 0.00000, -24.30002);
	CreateDynamicObject(970, -623.80060, 652.84180, 16.24904,   0.00000, 0.00000, -40.38007);
	CreateDynamicObject(970, -629.04791, 663.91571, 16.24904,   0.00000, 0.00000, -42.54005);
	CreateDynamicObject(970, -632.31512, 656.50128, 16.24904,   0.00000, 0.00000, -3.00000);
	CreateDynamicObject(966, -630.31561, 641.45111, 15.66408,   0.00000, 0.00000, -113.52019);
	CreateDynamicObject(970, -632.74353, 642.68518, 16.24904,   0.00000, 0.00000, -24.30002);
	CreateDynamicObject(970, -636.90448, 643.82275, 16.24904,   0.00000, 0.00000, -6.05999);
	CreateDynamicObject(970, -629.89093, 648.62970, 16.24904,   0.00000, 0.00000, -24.30002);
	CreateDynamicObject(970, -633.48376, 651.06018, 16.24904,   0.00000, 0.00000, -42.90013);
	CreateDynamicObject(970, -628.39410, 640.02148, 16.17563,   0.00000, 0.00000, -39.96012);
	CreateDynamicObject(970, -625.25275, 647.51825, 16.17563,   0.00000, 0.00000, -0.54010);
	CreateDynamicObject(1422, -626.96686, 648.63507, 16.02349,   0.00000, 0.00000, -22.61987);
	CreateDynamicObject(1422, -633.21100, 641.50940, 16.02349,   0.00000, 0.00000, -22.61987);
	CreateDynamicObject(1422, -623.88300, 662.64703, 16.02349,   0.00000, 0.00000, -22.61987);
	CreateDynamicObject(1422, -625.40820, 653.22046, 16.02349,   0.00000, 0.00000, -22.61987);
	CreateDynamicObject(738, -610.91205, 644.23676, 15.5056,   0.00000, 0.00000, -23.81998);
	CreateDynamicObject(738, -615.40771, 646.23840, 15.5056,   0.00000, 0.00000, -23.81998);
	CreateDynamicObject(738, -641.67133, 657.55640, 15.5056,   0.00000, 0.00000, -23.81998);
	CreateDynamicObject(738, -646.07404, 659.47198, 15.5056,   0.00000, 0.00000, -23.81998);
	CreateDynamicObject(638, -644.15991, 658.53827, 16.40273,   0.00000, 0.00000, 66.53999);
	CreateDynamicObject(638, -639.78577, 656.57721, 16.40273,   0.00000, 0.00000, 66.53999);
	CreateDynamicObject(638, -637.00659, 655.36182, 16.40273,   0.00000, 0.00000, 66.53999);
	CreateDynamicObject(638, -613.50665, 645.25232, 16.40273,   0.00000, 0.00000, 66.18015);
	CreateDynamicObject(638, -617.87659, 647.19330, 16.40273,   0.00000, 0.00000, 66.18015);
	CreateDynamicObject(638, -620.72803, 648.47070, 16.40273,   0.00000, 0.00000, 66.18015);
	CreateDynamicObject(1238, -620.49799, 659.38525, 16.01901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, -618.10553, 658.47510, 16.01901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, -616.10333, 657.74927, 16.01901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, -614.26923, 657.46710, 16.01901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, -612.68561, 657.44592, 16.01901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, -611.13892, 657.30908, 16.01901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, -636.39777, 644.28333, 16.01901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, -638.13507, 645.03339, 16.01901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, -639.62592, 645.40283, 16.01901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, -641.29059, 645.54059, 16.01901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, -642.82330, 645.57452, 16.01901,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1238, -644.34326, 645.44440, 16.01901,   0.00000, 0.00000, 0.00000);

	//Naplatna Rampa FC-BB
	CreateDynamicObject(16003, 516.64233, 477.91837, 19.35184,   0.00000, 0.00000, -234.11996);
	CreateDynamicObject(16003, 524.65894, 466.76001, 19.37378,   0.00000, 0.00000, -413.57944);
	CreateDynamicObject(8674, 520.65161, 472.33252, 18.62254,   0.00000, 0.00000, -54.59999);
	CreateDynamicObject(984, 529.61047, 459.63461, 17.92513,   0.00000, 0.00000, 34.92003);
	CreateDynamicObject(984, 511.76791, 485.14404, 17.92513,   0.00000, 0.00000, 34.92003);
	CreateDynamicObject(966, 526.61969, 463.97562, 17.89772,   0.00000, 0.00000, 34.98012);
	CreateDynamicObject(966, 514.85876, 480.71375, 17.89772,   0.00000, 0.00000, -145.56012);
	CreateDynamicObject(1215, 507.90128, 490.62268, 18.44523,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 533.45697, 454.08344, 18.44523,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 522.95837, 468.02112, 18.44523,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 517.34174, 475.95914, 18.44523,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 518.31262, 476.71347, 18.44523,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 523.95087, 468.70685, 18.44523,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, 529.98090, 472.72064, 20.14520,   0.00000, 0.00000, -54.59999);
	CreateDynamicObject(8674, 524.01331, 481.11938, 20.14520,   0.00000, 0.00000, -54.60000);
	CreateDynamicObject(8674, 518.03442, 489.48492, 18.98000,   0.00000, 0.00000, -54.60000);
	CreateDynamicObject(8674, 535.96387, 464.33337, 18.98000,   0.00000, 0.00000, -54.60000);
	CreateDynamicObject(8674, 517.53748, 463.44037, 20.14520,   0.00000, 0.00000, -54.59999);
	CreateDynamicObject(8674, 511.59488, 471.82498, 20.14520,   0.00000, 0.00000, -54.59999);
	CreateDynamicObject(8674, 505.63361, 480.19751, 18.98000,   0.00000, 0.00000, -54.60000);
	CreateDynamicObject(8674, 523.46759, 455.07260, 18.98000,   0.00000, 0.00000, -54.60000);
	CreateDynamicObject(1215, 538.99823, 459.81567, 19.26635,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 526.54333, 450.50336, 19.26635,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 514.90930, 493.98248, 19.26635,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 502.59116, 484.70642, 19.26635,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1459, 522.16718, 469.14401, 18.48856,   0.00000, 0.00000, -49.92002);
	CreateDynamicObject(1459, 518.22498, 474.80081, 18.48856,   0.00000, 0.00000, -60.66002);
	CreateDynamicObject(1459, 521.04016, 472.85678, 18.48856,   0.00000, 0.00000, -57.23999);
	CreateDynamicObject(1459, 523.15613, 469.68335, 18.48856,   0.00000, 0.00000, -52.19994);
	CreateDynamicObject(1422, 506.72382, 492.36740, 18.35313,   0.00000, 0.00000, -54.60011);
	CreateDynamicObject(1422, 534.66290, 452.40909, 18.35313,   0.00000, 0.00000, -54.60011);
	CreateDynamicObject(1422, 520.05664, 472.13596, 18.35313,   0.00000, 0.00000, -58.20012);
	CreateDynamicObject(1422, 519.36786, 475.04074, 18.35313,   0.00000, 0.00000, -48.84008);
	CreateDynamicObject(19986, 499.73248, 491.42047, 17.70817,   0.00000, 0.00000, -149.22011);
	CreateDynamicObject(19986, 541.49060, 453.78583, 17.70817,   0.00000, 0.00000, -330.95898);
	CreateDynamicObject(970, 515.92999, 468.57318, 18.66183,   0.00000, 0.00000, -54.72008);
	CreateDynamicObject(970, 518.68567, 464.61896, 18.66183,   0.00000, 0.00000, -54.72008);
	CreateDynamicObject(970, 513.18140, 472.45743, 18.66183,   0.00000, 0.00000, -54.72008);
	CreateDynamicObject(970, 525.90179, 475.54095, 18.66183,   0.00000, 0.00000, -54.72008);
	CreateDynamicObject(970, 523.12866, 479.49048, 18.66183,   0.00000, 0.00000, -54.72008);
	CreateDynamicObject(970, 528.68890, 471.60788, 18.66183,   0.00000, 0.00000, -54.72008);
	CreateDynamicObject(640, 534.21844, 464.78955, 18.74803,   0.00000, 0.00000, 35.03996);
	CreateDynamicObject(640, 523.11389, 457.14539, 18.74803,   0.00000, 0.00000, 35.03996);
	CreateDynamicObject(640, 515.45001, 468.03265, 18.74803,   0.00000, 0.00000, 35.03996);
	CreateDynamicObject(640, 526.45190, 475.89957, 18.74803,   0.00000, 0.00000, 35.03996);
	CreateDynamicObject(640, 518.47729, 487.48300, 18.74803,   0.00000, 0.00000, 35.03996);
	CreateDynamicObject(640, 507.59650, 479.35889, 18.74803,   0.00000, 0.00000, 35.03996);
	CreateDynamicObject(2001, 526.20917, 465.92130, 17.94771,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 525.15442, 465.08942, 17.94771,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 516.34766, 479.56198, 17.94771,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, 515.22528, 478.79428, 17.94771,   0.00000, 0.00000, 0.00000);

	//Naplatna rampa FC-LB
	CreateDynamicObject(8674, -477.83734, 1054.21460, 10.81989,   0.00000, 0.00000, -29.94002);
	CreateDynamicObject(16003, -471.91025, 1050.86975, 11.47276,   0.00000, 0.00000, -29.58002);
	CreateDynamicObject(16003, -483.77039, 1057.66235, 11.47276,   0.00000, 0.00000, -209.57939);
	CreateDynamicObject(8674, -486.19626, 1050.14160, 12.27641,   0.00000, 0.00000, -29.94002);
	CreateDynamicObject(8674, -477.27441, 1045.00037, 12.27641,   0.00000, 0.00000, -29.94002);
	CreateDynamicObject(8674, -495.09998, 1055.27112, 10.92888,   0.00000, 0.00000, -29.94002);
	CreateDynamicObject(8674, -468.34286, 1039.87036, 10.92888,   0.00000, 0.00000, -29.94002);
	CreateDynamicObject(8674, -469.59158, 1058.38428, 12.27641,   0.00000, 0.00000, -29.94002);
	CreateDynamicObject(8674, -478.52707, 1063.51062, 12.27641,   0.00000, 0.00000, -29.94002);
	CreateDynamicObject(8674, -487.44531, 1068.63672, 10.92888,   0.00000, 0.00000, -29.94002);
	CreateDynamicObject(8674, -460.67044, 1053.21863, 10.92888,   0.00000, 0.00000, -29.94002);
	CreateDynamicObject(984, -491.35461, 1061.98193, 10.03730,   0.00000, 0.00000, 60.24010);
	CreateDynamicObject(984, -464.32306, 1046.46069, 10.03726,   0.00000, 0.00000, 60.24010);
	CreateDynamicObject(1422, -499.09396, 1066.31531, 10.44256,   0.00000, 0.00000, -29.46000);
	CreateDynamicObject(1422, -456.60028, 1042.01135, 10.44256,   0.00000, 0.00000, -29.46000);
	CreateDynamicObject(19986, -450.42828, 1046.10535, 10.12194,   0.00000, 0.00000, 53.75990);
	CreateDynamicObject(19986, -505.65707, 1062.49805, 10.12194,   0.00000, 0.00000, 230.15939);
	CreateDynamicObject(1215, -482.24200, 1056.22046, 10.56735,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -473.89301, 1051.42395, 10.56735,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -473.41019, 1052.26404, 10.56735,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -481.82178, 1057.02075, 10.56735,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -497.44287, 1065.34558, 10.56735,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -458.29730, 1043.01526, 10.56735,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1459, -474.64038, 1052.93933, 10.58486,   0.00000, 0.00000, -33.66006);
	CreateDynamicObject(1459, -480.65759, 1056.42969, 10.58486,   0.00000, 0.00000, -28.74005);
	CreateDynamicObject(1459, -479.89236, 1054.71680, 10.58486,   0.00000, 0.00000, -31.26004);
	CreateDynamicObject(1422, -476.98953, 1053.19055, 10.44256,   0.00000, 0.00000, -27.24001);
	CreateDynamicObject(1422, -477.51743, 1054.73376, 10.44256,   0.00000, 0.00000, -29.94001);
	CreateDynamicObject(966, -468.81424, 1049.05542, 9.98995,   0.00000, 0.00000, 59.70007);
	CreateDynamicObject(966, -486.76099, 1059.30322, 9.99000,   0.00000, 0.00000, 239.70010);
	CreateDynamicObject(970, -480.94632, 1048.89758, 10.74938,   0.00000, 0.00000, -29.70000);
	CreateDynamicObject(970, -476.81290, 1046.53284, 10.74938,   0.00000, 0.00000, -29.70000);
	CreateDynamicObject(970, -485.10638, 1051.25928, 10.74938,   0.00000, 0.00000, -29.70000);
	CreateDynamicObject(970, -474.85330, 1059.56726, 10.74938,   0.00000, 0.00000, -29.70000);
	CreateDynamicObject(970, -479.00125, 1061.94214, 10.74938,   0.00000, 0.00000, -29.70000);
	CreateDynamicObject(970, -470.75705, 1057.22949, 10.74938,   0.00000, 0.00000, -29.70000);
	CreateDynamicObject(640, -481.22934, 1048.33813, 10.91048,   0.00000, 0.00000, 60.18003);
	CreateDynamicObject(640, -469.25528, 1041.46191, 10.91048,   0.00000, 0.00000, 60.18003);
	CreateDynamicObject(640, -474.56039, 1060.23499, 10.91048,   0.00000, 0.00000, 60.18003);
	CreateDynamicObject(640, -486.50830, 1066.94250, 10.91048,   0.00000, 0.00000, 60.18003);
	CreateDynamicObject(640, -493.28427, 1055.21790, 10.91048,   0.00000, 0.00000, 60.18003);
	CreateDynamicObject(640, -462.51337, 1053.21045, 10.91048,   0.00000, 0.00000, 60.18003);
	CreateDynamicObject(2001, -470.15808, 1050.69299, 9.96611,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, -470.78879, 1049.44958, 9.96611,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, -484.69379, 1059.01660, 9.96611,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, -485.42307, 1057.83337, 9.96611,   0.00000, 0.00000, 0.00000);

	//NAPLATNA RAMPA FC-TP
	CreateDynamicObject(8674, -168.57251, 365.05411, 11.72151,   0.00000, 0.00000, 75.29990);
	CreateDynamicObject(16003, -170.33717, 358.42410, 12.52605,   0.00000, 0.00000, -105.06001);
	CreateDynamicObject(16003, -166.91655, 371.64642, 12.52605,   0.00000, 0.00000, 75.71999);
	CreateDynamicObject(8674, -177.27939, 362.16440, 13.17949,   0.00000, 0.00000, 75.29990);
	CreateDynamicObject(8674, -174.68896, 372.11456, 13.17949,   0.00000, 0.00000, 75.29990);
	CreateDynamicObject(8674, -179.88194, 352.22839, 11.96125,   0.00000, 0.00000, 75.29990);
	CreateDynamicObject(8674, -172.08437, 382.08765, 11.96125,   0.00000, 0.00000, 75.29990);
	CreateDynamicObject(8674, -162.43796, 358.04019, 13.17949,   0.00000, 0.00000, 75.29990);
	CreateDynamicObject(8674, -159.82068, 368.00015, 13.17949,   0.00000, 0.00000, 75.29990);
	CreateDynamicObject(8674, -157.20851, 377.96329, 11.96125,   0.00000, 0.00000, 75.29990);
	CreateDynamicObject(8674, -165.06293, 348.06329, 11.96125,   0.00000, 0.00000, 75.29990);
	CreateDynamicObject(984, -172.72340, 349.36865, 11.14817,   0.00000, 0.00000, -14.70001);
	CreateDynamicObject(984, -164.50868, 380.71118, 11.14817,   0.00000, 0.00000, -14.70001);
	CreateDynamicObject(966, -165.77698, 375.67117, 11.03120,   0.00000, 0.00000, -193.85841);
	CreateDynamicObject(966, -171.39317, 354.34854, 11.03120,   0.00000, 0.00000, -374.57483);
	CreateDynamicObject(1215, -162.74637, 387.34647, 11.62142,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -168.04399, 369.72589, 11.62142,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -166.80591, 369.39188, 11.62142,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -169.25847, 360.27740, 11.62142,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -170.43364, 360.60577, 11.62142,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -174.49837, 342.59924, 11.62142,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1459, -168.86533, 362.13849, 11.65767,   0.00000, 0.00000, 75.23996);
	CreateDynamicObject(1459, -168.30663, 368.17160, 11.65767,   0.00000, 0.00000, 72.12000);
	CreateDynamicObject(1459, -169.86249, 362.19025, 11.65767,   0.00000, 0.00000, 77.69997);
	CreateDynamicObject(1422, -167.47351, 367.11191, 11.45556,   0.00000, 0.00000, -101.52006);
	CreateDynamicObject(1422, -169.04321, 365.38495, 11.45556,   0.00000, 0.00000, -104.34001);
	CreateDynamicObject(1422, -175.05414, 340.48416, 11.45556,   0.00000, 0.00000, -105.29999);
	CreateDynamicObject(1422, -162.20271, 389.36499, 11.45556,   0.00000, 0.00000, -105.29999);
	CreateDynamicObject(19986, -167.54440, 394.36526, 11.07255,   0.00000, 0.00000, 169.73912);
	CreateDynamicObject(19986, -169.95956, 334.38470, 11.07255,   0.00000, 0.00000, 334.61868);
	CreateDynamicObject(970, -162.59764, 363.64215, 11.80754,   0.00000, 0.00000, 75.41999);
	CreateDynamicObject(970, -161.27997, 368.57019, 11.80754,   0.00000, 0.00000, 75.41999);
	CreateDynamicObject(970, -163.85750, 358.69827, 11.80754,   0.00000, 0.00000, 75.41999);
	CreateDynamicObject(970, -174.63947, 366.43298, 11.80754,   0.00000, 0.00000, 75.41999);
	CreateDynamicObject(970, -175.92824, 361.51648, 11.80754,   0.00000, 0.00000, 75.41999);
	CreateDynamicObject(970, -173.35695, 371.35107, 11.80754,   0.00000, 0.00000, 75.41999);
	CreateDynamicObject(640, -175.18314, 366.50763, 11.95838,   0.00000, 0.00000, -14.70001);
	CreateDynamicObject(640, -178.82805, 352.55991, 11.95838,   0.00000, 0.00000, -14.70001);
	CreateDynamicObject(640, -162.03894, 363.48615, 11.95838,   0.00000, 0.00000, -14.70001);
	CreateDynamicObject(640, -158.25719, 377.57144, 11.95838,   0.00000, 0.00000, -14.70001);
	CreateDynamicObject(640, -171.34761, 381.03473, 11.95838,   0.00000, 0.00000, -14.70001);
	CreateDynamicObject(640, -165.77647, 349.24039, 11.95838,   0.00000, 0.00000, -14.70001);
	CreateDynamicObject(2001, -165.78790, 372.92395, 11.04568,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, -167.16684, 373.28043, 11.04568,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, -170.03752, 356.74387, 11.04568,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2001, -171.33098, 357.09406, 11.04568,   0.00000, 0.00000, 0.00000);


	//Promoter baza
	CreateDynamicObjectEx(3749, 1067.26489, 2403.56592, 15.44713,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1084.21118, 2403.19971, 13.96675,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1084.21118, 2403.19971, 11.12510,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1091.03674, 2403.20215, 11.12510,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1091.03674, 2403.20215, 13.96680,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1097.59729, 2409.75757, 11.12510,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1097.61096, 2416.61353, 11.12510,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1091.05591, 2423.78394, 11.12510,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1077.32581, 2423.79199, 11.12510,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1063.62488, 2423.80884, 11.12510,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1049.90430, 2423.82422, 11.12510,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1044.67200, 2423.83594, 11.12510,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1037.47522, 2409.86084, 11.12510,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1037.47937, 2416.69873, 11.12510,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1044.59814, 2403.28052, 11.12510,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1051.43127, 2403.25610, 11.12510,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1097.59729, 2409.75757, 13.96680,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1097.61096, 2416.61353, 13.96680,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1091.05591, 2423.78394, 13.96680,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1077.32581, 2423.79199, 13.96680,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1063.62488, 2423.80884, 13.96680,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1049.90430, 2423.82422, 13.96680,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1044.67200, 2423.83594, 13.96680,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1037.47937, 2416.69873, 13.96680,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1037.47522, 2409.86084, 13.96680,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1044.59814, 2403.28052, 13.96680,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1051.43127, 2403.25610, 13.96680,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	new promoterbazasf1 = CreateDynamicObjectEx(18980, 1037.83875, 2403.64844, 3.00580,   0.00000, 0.00000, 0.00000,300,300);
	new promoterbazasf2 = CreateDynamicObjectEx(18980, 1037.85303, 2423.45532, 3.00580,   0.00000, 0.00000, 0.00000,300,300);
	new promoterbazasf3 = CreateDynamicObjectEx(18980, 1056.27588, 2423.55542, 3.00580,   0.00000, 0.00000, 0.00000,300,300);
	new promoterbazasf4 = CreateDynamicObjectEx(18980, 1078.58118, 2423.69043, 3.00580,   0.00000, 0.00000, 0.00000,300,300);
	new promoterbazasf5 = CreateDynamicObjectEx(18980, 1097.32190, 2423.39136, 3.00580,   0.00000, 0.00000, 0.00000,300,300);
	new promoterbazasf6 = CreateDynamicObjectEx(18980, 1097.23181, 2403.60034, 3.00580,   0.00000, 0.00000, 0.00000,300,300);
	SetDynamicObjectMaterial(promoterbazasf1, 0, 3618,  "bevmans01_la", "adeta");
	SetDynamicObjectMaterial(promoterbazasf2, 0, 3618,  "bevmans01_la", "adeta");
	SetDynamicObjectMaterial(promoterbazasf3, 0, 3618,  "bevmans01_la", "adeta");
	SetDynamicObjectMaterial(promoterbazasf4, 0, 3618,  "bevmans01_la", "adeta");
	SetDynamicObjectMaterial(promoterbazasf5, 0, 3618,  "bevmans01_la", "adeta");
	SetDynamicObjectMaterial(promoterbazasf6, 0, 3618,  "bevmans01_la", "adeta");

	//VIP Baza
	CreateDynamicObjectEx(4100, 1724.40918, 2063.01953, 11.50000,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1738.16931, 2063.01953, 11.50000,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1745.65344, 2063.01953, 11.50000,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1770.86963, 2063.01953, 11.50000,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1777.47095, 2069.60522, 11.50000,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1777.47095, 2083.30347, 11.50000,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1777.47095, 2096.05518, 11.50000,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1770.91064, 2103.24658, 11.50000,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1745.65344, 2063.01953, 14.36000,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1738.16931, 2063.01953, 14.36000,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1724.40918, 2063.01953, 14.36000,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1770.86963, 2063.01953, 14.36000,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1777.47095, 2069.60522, 14.36000,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1777.47095, 2083.30347, 14.36000,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1777.47095, 2096.05518, 14.36000,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1770.91064, 2103.24658, 14.36000,   0.00000, 0.00000, -40.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1717.27466, 2069.65137, 11.50000,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1717.27466, 2083.37451, 11.50000,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1717.27466, 2097.11011, 11.50000,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1717.27466, 2101.83105, 11.50000,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1717.63855, 2115.50024, 11.50000,   0.00000, 0.00000, 227.16843, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1717.27466, 2069.65137, 14.36000,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1717.27466, 2083.37451, 14.36000,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1717.27466, 2097.11011, 14.36000,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1717.27466, 2101.83105, 14.36000,   0.00000, 0.00000, -130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(4100, 1717.63855, 2115.50024, 14.36000,   0.00000, 0.00000, 227.16840, 450.0, 450.0);
	CreateDynamicObjectEx(9131, 1752.23828, 2063.02808, 10.94500,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(9131, 1752.23828, 2063.02808, 13.21000,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(9131, 1752.23828, 2063.02808, 15.47000,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(9131, 1763.76086, 2063.02808, 10.94500,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(9131, 1763.76086, 2063.02808, 13.21000,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(9131, 1763.76086, 2063.02808, 15.47000,   0.00000, 0.00000, 0.00000, 450.0, 450.0);

	//Admin baza by DARY
	CreateDynamicObjectEx(3749, -2433.75, 497.23, 34.80,   0.00, 0.00, 25.00, 450.0, 450.0);
	CreateDynamicObjectEx(8572, -2434.41, 526.74, 31.59,   0.00, 0.00, 90.00, 450.0, 450.0);
	CreateDynamicObjectEx(3928, -2441.30, 522.80, 33.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1215, -2431.18, 502.34, 29.60,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1215, -2440.15, 498.53, 29.70,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1215, -2445.40, 540.10, 29.60,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1215, -2447.40, 519.60, 29.90,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1215, -2447.30, 526.40, 29.90,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1215, -2422.50, 542.90, 29.90,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1215, -2422.60, 530.70, 29.90,   0.00, 0.00, 0.00, 450.0, 450.0);

	//ukrasi za restoran
	CreateDynamicObject(1281, 183.83084, 1167.36914, 14.56205,   0.00000, 0.00000, -35.40002);
	CreateDynamicObject(1281, 178.98360, 1166.21411, 14.56205,   0.00000, 0.00000, -35.40002);
	CreateDynamicObject(1281, 179.42101, 1161.47717, 14.56205,   0.00000, 0.00000, -35.40002);
	CreateDynamicObject(1281, 173.98833, 1165.13696, 14.56205,   0.00000, 0.00000, -35.40002);
	CreateDynamicObject(1281, 178.11607, 1171.40247, 14.56205,   0.00000, 0.00000, -35.40002);
	CreateDynamicObject(1281, 173.33589, 1170.21411, 14.56205,   0.00000, 0.00000, -35.40002);
	CreateDynamicObject(1281, 169.33154, 1167.31409, 14.56205,   0.00000, 0.00000, -35.40002);
	CreateDynamicObject(627, 174.30420, 1175.62036, 15.49229,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(627, 171.25597, 1177.91248, 15.49229,   0.00000, 0.00000, 0.00000);

	//rudar
	CreateDynamicObject(7503, 760.63934, 814.11261, -43.92603,   0.00000, 0.00000, -199.49837);
	CreateDynamicObject(11459, 690.80310, 838.41406, -45.80172,   0.00000, 0.00000, 150.59949);
	CreateDynamicObject(11459, 690.89197, 838.34375, -42.80510,   0.00000, 0.00000, 150.59949);
	CreateDynamicObject(1508, 688.80603, 839.39648, -42.49647,   0.00000, 0.00000, -29.40001);
	CreateDynamicObject(1508, 693.38550, 837.80121, -42.36208,   0.00000, 0.00000, -29.40001);
	CreateDynamicObject(752, 691.42450, 832.73743, -45.02156,   0.00000, 0.00000, 160.49921);
	CreateDynamicObject(752, 696.74103, 843.19189, -45.02156,   0.00000, 0.00000, 374.93643);
	CreateDynamicObject(752, 698.90454, 841.68005, -44.44577,   25.07999, -15.60000, 374.93643);
	CreateDynamicObject(752, 696.01428, 843.16541, -40.24092,   18.30005, -84.84000, 411.35590);
	CreateDynamicObject(752, 698.08704, 842.55524, -41.20959,   18.30005, -84.84000, 435.17566);
	CreateDynamicObject(752, 690.60437, 831.82501, -41.20959,   18.30005, -84.84000, 220.43678);
	CreateDynamicObject(752, 692.48529, 833.51971, -37.96408,   19.68002, -133.55974, 224.63660);
	CreateDynamicObject(752, 692.53381, 836.75702, -37.76603,   16.86003, -163.25949, 224.63660);
	CreateDynamicObject(752, 692.84619, 835.07410, -37.76603,   16.86003, -163.25949, 224.63660);
	CreateDynamicObject(752, 694.19592, 840.10205, -37.76603,   17.76003, -178.25954, 224.63660);
	CreateDynamicObject(752, 695.11353, 838.99048, -37.14484,   18.24002, -172.49968, 224.63660);
	CreateDynamicObject(752, 697.49219, 840.44220, -37.56952,   17.76003, -178.25954, 224.63660);
	CreateDynamicObject(752, 692.04529, 830.42194, -41.20959,   19.08006, -71.82012, 220.43678);
	CreateDynamicObject(752, 695.30731, 832.22040, -44.93212,   0.00000, 0.00000, 160.49921);
	CreateDynamicObject(752, 695.10321, 830.58234, -43.92243,   0.00000, 0.00000, 160.49921);
	CreateDynamicObject(752, 694.31628, 831.07245, -37.96408,   19.68002, -133.55974, 224.63660);
	CreateDynamicObject(752, 694.11902, 828.39490, -41.20959,   19.08006, -71.82012, 220.43678);
	CreateDynamicObject(752, 696.29175, 828.09161, -40.14090,   19.08006, -71.82012, 220.43678);
	CreateDynamicObject(752, 694.76239, 843.39410, -41.42683,   18.72005, -66.12009, 430.97574);
	CreateDynamicObject(752, 702.07111, 840.93719, -44.71289,   25.67997, 8.63998, 374.93643);
	CreateDynamicObject(752, 700.69739, 841.70087, -41.58091,   18.30005, -84.84000, 435.17566);
	CreateDynamicObject(752, 699.57019, 841.79803, -39.55162,   14.34007, -98.15980, 435.17566);
	CreateDynamicObject(752, 698.91205, 839.71887, -37.15381,   17.76003, -178.25954, 224.63660);
	CreateDynamicObject(752, 695.18579, 834.45398, -36.60863,   16.86003, -163.25949, 224.63660);
	CreateDynamicObject(752, 695.79602, 836.99799, -36.60863,   19.92003, -177.71933, 224.63660);
	CreateDynamicObject(16139, 732.10565, 836.53748, -55.83509,   0.00000, 0.00000, -35.70000);
	CreateDynamicObject(16139, 739.99420, 840.43384, -53.39025,   27.48000, 13.14002, -35.70000);
	CreateDynamicObject(752, 703.12305, 842.15491, -41.58091,   18.30005, -84.84000, 435.17566);
	CreateDynamicObject(16139, 700.08344, 810.61395, -55.91822,   -29.16002, -3.78000, 126.78007);
	CreateDynamicObject(16139, 707.60950, 809.50470, -55.91822,   -29.16002, -3.78000, 135.47989);
	CreateDynamicObject(16139, 709.58679, 807.53381, -55.91822,   -29.16002, -3.78000, 117.47996);
	CreateDynamicObject(16139, 725.57928, 792.27228, -53.18527,   0.00000, 0.00000, -134.09999);
	CreateDynamicObject(16139, 717.19873, 808.76727, -57.04950,   -29.16002, -3.78000, 117.47996);
	CreateDynamicObject(16139, 727.17389, 803.63757, -56.26771,   -29.16002, -3.78000, 128.15994);
	CreateDynamicObject(16134, 692.65619, 821.58295, -45.14052,   0.00000, 0.00000, -47.58001);
	CreateDynamicObject(16134, 693.74890, 807.19244, -42.79861,   0.00000, 0.00000, -32.34001);
	CreateDynamicObject(16134, 708.92651, 798.57764, -42.79861,   0.00000, 0.00000, -3.66000);
	CreateDynamicObject(16134, 724.16595, 790.21515, -42.79861,   0.00000, 0.00000, 14.46000);
	CreateDynamicObject(16134, 702.07477, 849.83533, -42.79861,   0.00000, 0.00000, -151.97981);
	CreateDynamicObject(16134, 702.07477, 849.83533, -42.79861,   0.00000, 0.00000, -151.97981);
	CreateDynamicObject(16134, 717.36011, 849.98621, -42.79861,   0.00000, 0.00000, -167.99963);
	CreateDynamicObject(16134, 693.58240, 813.91058, -30.50370,   -4.50006, 177.42014, -167.99963);
	CreateDynamicObject(16134, 705.02399, 804.69672, -30.50370,   -4.50006, 177.42014, -167.99963);
	CreateDynamicObject(16134, 719.98779, 801.62622, -30.50370,   -4.50006, 177.42014, -362.27884);
	CreateDynamicObject(16134, 728.53003, 799.00415, -35.14682,   -4.50006, 177.42014, -362.27884);
	CreateDynamicObject(16134, 725.04346, 809.95294, -30.45953,   -4.50006, 177.42014, -362.27884);
	CreateDynamicObject(16134, 718.44537, 822.39874, -30.45953,   -4.50006, 177.42014, -362.27884);
	CreateDynamicObject(16134, 696.17297, 836.93579, -30.45953,   -4.50006, 177.42014, -362.27884);
	CreateDynamicObject(16134, 716.07898, 842.74744, -30.45953,   -4.50006, 177.42014, -457.67801);
	CreateDynamicObject(16134, 728.45477, 832.30145, -30.45953,   -4.50006, 177.42014, -457.67801);
	CreateDynamicObject(16134, 739.39038, 821.30743, -30.45953,   -4.50006, 177.42014, -457.67801);
	CreateDynamicObject(16139, 730.10291, 790.49127, -53.18527,   0.00000, 0.00000, -134.09999);
	CreateDynamicObject(16139, 740.64771, 787.54010, -53.18527,   0.00000, 0.00000, -122.03999);
	CreateDynamicObject(16139, 770.40594, 828.85486, -53.39025,   27.48000, 13.14002, -39.48001);
	CreateDynamicObject(16139, 777.13501, 825.95587, -53.39025,   27.48000, 13.14002, -39.48001);
	CreateDynamicObject(16134, 739.22620, 825.94885, -31.23896,   -4.50006, 177.42014, -457.67801);
	CreateDynamicObject(16085, 702.41278, 806.04370, -43.54097,   3.14159, 0.00000, 1.57080);
	CreateDynamicObject(16085, 691.64374, 812.25604, -43.04483,   3.14159, 0.00000, 1.57080);
	CreateDynamicObject(16085, 713.03320, 802.51172, -44.67810,   3.14159, 0.00000, 1.57080);
	CreateDynamicObject(16139, 756.51141, 798.61157, -53.39025,   27.48000, 13.14002, -224.99985);
	CreateDynamicObject(16139, 766.82965, 794.68500, -53.39025,   27.48000, 13.14002, -227.39984);
	CreateDynamicObject(16139, 794.02637, 785.18457, -53.39025,   27.48000, 13.14002, -221.87993);
	CreateDynamicObject(16139, 786.71442, 799.55121, -53.39025,   27.48000, 13.14002, -141.66058);
	CreateDynamicObject(16134, 748.03424, 819.46826, -31.75731,   -4.50006, 177.42014, -457.67801);
	CreateDynamicObject(16134, 756.03253, 814.25909, -32.48515,   -4.50006, 177.42014, -457.67801);
	CreateDynamicObject(980, 740.27209, 821.41986, -42.75430,   0.00000, 0.00000, 76.32009);
	CreateDynamicObject(980, 740.27209, 821.41986, -37.25497,   0.00000, 0.00000, 76.32009);
	CreateDynamicObject(1215, 692.88367, 835.61755, -43.44814,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 694.93695, 839.64142, -43.44814,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 702.85980, 836.89203, -43.44814,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 710.45032, 834.34308, -43.44814,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 718.28937, 831.59540, -43.44814,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 727.62445, 828.20532, -43.44814,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 736.69098, 824.89789, -43.44814,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3789, 710.28967, 831.50092, -43.43384,   0.00000, 0.00000, -19.74000);
	CreateDynamicObject(3789, 710.52692, 832.13647, -43.43300,   0.00000, 0.00000, -19.74000);
	CreateDynamicObject(3062, 710.69928, 832.83008, -41.92780,   -5.00000, 90.00000, -19.68000);
	CreateDynamicObject(3062, 710.00653, 830.89105, -41.92780,   5.00000, 90.00000, -19.68000);
	CreateDynamicObject(3062, 710.06543, 831.05865, -43.12289,   90.00000, 90.00000, -19.68000);
	CreateDynamicObject(2936, 711.24719, 831.60785, -43.07415,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2936, 711.03778, 831.44440, -43.07415,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2936, 709.61285, 831.76471, -43.07415,   0.00000, 0.00000, 91.07993);
	CreateDynamicObject(2936, 709.78857, 832.34442, -43.07415,   0.00000, 0.00000, 63.24012);
	CreateDynamicObject(2936, 710.48804, 832.14594, -42.90938,   0.00000, 0.00000, 63.24012);
	CreateDynamicObject(2936, 710.35571, 831.55267, -42.78976,   0.00000, 0.00000, -116.57992);
	CreateDynamicObject(2936, 710.04822, 832.03687, -42.63007,   0.00000, 0.00000, -151.73944);
	CreateDynamicObject(2936, 711.02234, 831.71899, -42.52088,   0.00000, 0.00000, -151.73944);
	CreateDynamicObject(2936, 710.53058, 831.98212, -42.30354,   0.00000, 0.00000, -89.69964);
	CreateDynamicObject(2936, 710.42395, 831.49316, -42.40896,   0.00000, 0.00000, -89.69964);
	CreateDynamicObject(2936, 710.58478, 831.64850, -42.10727,   0.00000, 0.00000, -89.69964);


	//podzemlje
	CreateDynamicObject(3865, -40.13244, 1045.73779, 19.73100,   -7.00000, 0.00000, -130.14059);
	CreateDynamicObject(974, -28.82010, 1058.38379, 19.16140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(974, -35.50010, 1058.38379, 19.16140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(974, -42.16010, 1058.38379, 19.16140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(974, -25.49940, 1055.01172, 19.16140,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(974, -50.54580, 1036.64148, 19.16140,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(974, -50.54580, 1043.24146, 19.16140,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(974, -50.54580, 1049.90149, 19.16140,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19447, -48.78040, 1053.55054, 18.71270,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19447, -45.27600, 1053.55823, 18.71270,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(3865, -33.40908, 1039.90454, 17.86646,   -17.00000, 0.00000, -130.14059);
	CreateDynamicObject(3865, -27.06165, 1034.42468, 15.29759,   -17.00000, 0.00000, -130.14059);
	CreateDynamicObject(19447, -41.77800, 1053.55334, 18.71270,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19447, -38.27800, 1053.55334, 18.71270,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19447, -48.78040, 1043.93054, 18.71270,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19447, -45.27600, 1043.93054, 18.71270,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(11459, -27.77090, 1037.28638, 18.72180,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11459, -29.49226, 1049.36902, 18.72180,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(11459, -29.49816, 1044.75452, 18.72180,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19454, -25.70790, 1038.43164, 19.65017,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(11459, -41.56074, 1037.23340, 18.72185,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(974, -47.20128, 1033.29407, 19.16140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19447, -45.71290, 1037.34058, 18.71270,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19447, -45.71241, 1035.06335, 18.69270,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(974, -35.93251, 1033.34546, 19.16140,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19454, -30.92524, 1033.40686, 17.04635,   90.00000, 90.00000, 0.00000);
	CreateDynamicObject(19447, -34.80570, 1053.55334, 18.71270,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19447, -31.29750, 1053.55334, 18.71270,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19447, -27.81610, 1053.55334, 18.71270,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19447, -27.23300, 1053.55334, 18.69270,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19447, -41.37075, 1042.81921, 18.69270,   0.00000, 90.00000, -134.34041);
	CreateDynamicObject(19447, -36.49540, 1046.94409, 18.69270,   0.00000, 90.00000, -130.62061);
	CreateDynamicObject(19447, -34.78200, 1050.50330, 18.67270,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19447, -42.26310, 1039.75977, 18.67270,   0.00000, 90.00000, -132.78050);
	CreateDynamicObject(19447, -36.36765, 1038.09546, 18.67270,   0.00000, 90.00000, -131.04053);
	CreateDynamicObject(19447, -31.51150, 1042.64136, 18.67270,   0.00000, 90.00000, -131.04050);
	CreateDynamicObject(19447, -34.96126, 1035.10840, 18.71270,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19447, -27.49187, 1043.44946, 18.71270,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(647, -45.41278, 1058.48499, 20.08134,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(647, -50.41269, 1053.01147, 20.08134,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(647, -42.26500, 1051.06580, 20.08134,   0.00000, 0.00000, 78.24002);
	CreateDynamicObject(647, -45.64527, 1046.44910, 20.08134,   0.00000, 0.00000, 10.01991);
	CreateDynamicObject(647, -31.80220, 1036.89490, 20.08134,   0.00000, 0.00000, 10.01991);
	CreateDynamicObject(647, -30.14504, 1040.16431, 20.08134,   0.00000, 0.00000, 10.01991);
	CreateDynamicObject(647, -38.09332, 1037.28210, 20.08134,   0.00000, 0.00000, 10.01991);
	CreateDynamicObject(647, -30.84027, 1042.79895, 20.08134,   0.00000, 0.00000, 10.01991);
	CreateDynamicObject(647, -35.22895, 1036.38843, 20.08134,   0.00000, 0.00000, -46.44009);
	CreateDynamicObject(823, -28.67529, 1054.86401, 18.20756,   0.00000, 0.00000, -42.77996);
	CreateDynamicObject(823, -34.31010, 1054.95825, 18.20760,   0.00000, 0.00000, -42.78000);
	CreateDynamicObject(823, -34.68200, 18.20760, 19.32840,   0.00000, 0.00000, -62.70000);
	CreateDynamicObject(823, -38.05630, 1051.74951, 18.20760,   0.00000, 0.00000, -68.21990);
	CreateDynamicObject(823, -39.74430, 1055.05652, 18.20760,   0.00000, 0.00000, -101.99990);
	CreateDynamicObject(823, -44.16810, 1054.53113, 18.20760,   0.00000, 0.00000, -101.99990);
	CreateDynamicObject(823, -46.62600, 1050.48535, 18.20760,   0.00000, 0.00000, -101.99990);
	CreateDynamicObject(823, -46.82890, 1043.36169, 18.20760,   0.00000, 0.00000, -101.99990);
	CreateDynamicObject(823, -46.40990, 1036.92566, 18.20760,   0.00000, 0.00000, -101.99990);
	CreateDynamicObject(823, -42.58570, 1041.86096, 18.20760,   0.00000, 0.00000, -86.15990);
	CreateDynamicObject(823, -33.69766, 1048.13953, 18.20760,   0.00000, 0.00000, -68.21990);
	CreateDynamicObject(657, -30.04657, 1056.10632, 19.07994,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(657, -37.27067, 1039.14282, 19.07994,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(657, -46.49903, 1043.79285, 18.92202,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(737, -39.55760, 1053.31519, 18.37880,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(737, -45.47016, 1036.01929, 18.37880,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(823, -47.60361, 1056.26160, 17.90839,   0.00000, 0.00000, -101.99990);
	CreateDynamicObject(3865, -20.69278, 1028.93774, 12.68905,   -17.00000, 0.00000, -130.14059);
	CreateDynamicObject(3865, -14.37966, 1023.47882, 10.10372,   -17.00000, 0.00000, -130.14059);

	//prevoznik novca
	new prevozniknovca;
	prevozniknovca = CreateDynamicObject(18762, -133.846267, 1142.881103, 19.347246, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 	
	SetDynamicObjectMaterial(prevozniknovca, 0, 10101, "2notherbuildsfe", "sl_vicwall02", 0x00000000);
	prevozniknovca = CreateDynamicObject(18762, -133.846267, 1153.851928, 19.347246, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(prevozniknovca, 0, 10101, "2notherbuildsfe", "sl_vicwall02", 0x00000000);
	prevozniknovca = CreateDynamicObject(3626, -145.274200, 1154.839599, 20.391227, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	prevozniknovca = CreateDynamicObject(19869, -133.849197, 1139.738159, 18.705789, 0.000000, 0.000000, 89.899986, -1, -1, -1, 300.00, 300.00); 
	prevozniknovca = CreateDynamicObject(19869, -133.821090, 1156.039794, 18.675788, 0.000000, 0.000000, 89.899986, -1, -1, -1, 300.00, 300.00); 
	prevozniknovca = CreateDynamicObject(2308, -145.516281, 1155.477905, 19.155357, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	prevozniknovca = CreateDynamicObject(2167, -141.012451, 1155.750366, 19.165357, 0.000000, 0.000000, -90.299949, -1, -1, -1, 300.00, 300.00); 
	prevozniknovca = CreateDynamicObject(2167, -141.018447, 1154.579589, 19.165357, 0.000000, 0.000000, -90.299949, -1, -1, -1, 300.00, 300.00); 
	prevozniknovca = CreateDynamicObject(2356, -144.460174, 1155.517089, 19.145357, 0.000000, 0.000000, 69.699996, -1, -1, -1, 300.00, 300.00); 
	prevozniknovca = CreateDynamicObject(11504, -150.106704, 1119.705810, 18.809537, 0.000000, 0.000000, 90.000015, -1, -1, -1, 300.00, 300.00); 
	prevozniknovca = CreateDynamicObject(16398, -156.301849, 1138.424194, 18.043079, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	prevozniknovca = CreateDynamicObject(968, -133.830566, 1143.427490, 19.784332, 0.000000, -18.000040, -90.000000, -1, -1, -1, 300.00, 300.00); 

	

	//benzinska pumpa
	CreateDynamicObject(16107, 40.89310, 1227.82251, 18.14608,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18284, 57.59928, 1219.02551, 20.72760,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3287, 51.51603, 1228.94360, 20.40321,   0.00000, 0.00000, -91.08002);
	CreateDynamicObject(9193, 57.70612, 1205.91528, 22.59450,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3465, 58.57075, 1210.85291, 19.21770,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3465, 57.09010, 1210.85291, 19.21770,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3465, 58.57070, 1216.38660, 19.21770,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3465, 57.09010, 1216.38660, 19.21770,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3465, 57.09010, 1221.85522, 19.21770,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3465, 58.57070, 1221.85522, 19.21770,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3465, 57.09010, 1227.26892, 19.21770,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(3465, 58.57070, 1227.26892, 19.21770,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1370, 46.56484, 1226.58826, 18.50392,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1370, 47.64356, 1226.43335, 18.50392,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1370, 47.05035, 1225.92712, 18.50392,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1226, 64.27849, 1209.70471, 21.67172,   0.00000, 0.00000, -95.94001);
	CreateDynamicObject(1226, 70.48428, 1226.71899, 21.63487,   0.00000, 0.00000, -301.07932);
	CreateDynamicObject(970, 38.50353, 1208.35315, 18.54397,   0.00000, 0.00000, -0.30000);
	CreateDynamicObject(1215, 40.85301, 1208.34180, 18.00064,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 62.34139, 1208.35364, 18.36221,   0.00000, 0.00000, -0.30000);
	CreateDynamicObject(970, 57.62005, 1208.37134, 18.36221,   0.00000, 0.00000, -0.30000);
	CreateDynamicObject(970, 52.83707, 1208.32471, 18.46848,   0.00000, 0.00000, -0.30000);
	CreateDynamicObject(970, 43.28982, 1208.34290, 18.53805,   0.00000, 0.00000, -0.30000);
	CreateDynamicObject(970, 48.04557, 1208.30054, 18.53805,   0.00000, 0.00000, -1.14000);
	CreateDynamicObject(1215, 45.61654, 1208.37292, 17.98282,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 50.42154, 1208.37427, 17.95185,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 55.26483, 1208.38757, 17.85428,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 59.95988, 1208.35645, 17.85428,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 80.06915, 1210.37146, 18.40572,   0.00000, 0.00000, 72.72009);
	CreateDynamicObject(970, 82.85120, 1219.14172, 18.37991,   0.00000, 0.00000, 72.42010);
	CreateDynamicObject(970, 81.45610, 1214.78174, 18.38860,   0.00000, 0.00000, 72.30010);
	CreateDynamicObject(1215, 80.71957, 1212.55310, 17.85428,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 82.12161, 1216.96533, 17.85428,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, 68.95808, 1228.30127, 18.33436,   0.00000, 0.00000, -9.05999);
	CreateDynamicObject(970, 64.33408, 1229.06812, 18.33436,   0.00000, 0.00000, -9.29999);
	CreateDynamicObject(970, 59.67894, 1229.83215, 18.40728,   0.00000, 0.00000, -9.29999);
	CreateDynamicObject(970, 54.98636, 1230.61853, 18.41302,   0.00000, 0.00000, -9.29999);
	CreateDynamicObject(970, 50.21822, 1231.10303, 18.44580,   0.00000, 0.00000, -1.49999);
	CreateDynamicObject(970, 45.46626, 1231.20117, 18.60046,   0.00000, 0.00000, 0.72001);
	CreateDynamicObject(1215, 66.61201, 1228.65967, 17.85428,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 61.98027, 1229.40198, 17.85428,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 57.29834, 1230.22888, 17.85428,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 52.61301, 1230.95581, 17.93417,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, 47.79534, 1231.13184, 17.93417,   0.00000, 0.00000, 0.00000);

	//apartmani
	CreateObject(7287, -227.20847, 1215.50916, 22.84746,   0.00000, 0.00000, 0.30000);
	CreateObject(7287, -255.93942, 1215.34448, 22.84746,   0.00000, 0.00000, 0.30000);

	//autosalon
	new autosalon;
	CreateObject(18474, 73.96877, 1080.10229, 15.24136,   0.00000, 0.00000, 131.87996);
	autosalon = CreateDynamicObject(18980, 130.766448, 1040.762939, 14.200304, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19325, 130.793914, 1044.570556, 15.613788, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(18980, 130.766448, 1053.763183, 13.157628, -90.099998, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(18980, 130.766448, 1066.742675, 14.200304, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(18980, 130.766448, 1053.745727, 26.197607, -90.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.746261, 1047.915649, 15.215632, 0.000000, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.752059, 1047.915649, 18.505619, 0.000000, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.757431, 1047.915649, 21.585617, 0.000000, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.761932, 1047.915649, 24.185613, 0.000000, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19325, 130.793914, 1050.980102, 15.613788, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(19325, 130.793914, 1057.439575, 15.613788, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(19325, 130.793914, 1063.881103, 15.613788, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(19425, 130.746261, 1054.215820, 15.215632, 0.000000, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.746261, 1060.675903, 15.215632, 0.000000, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19325, 130.793914, 1044.570556, 23.663795, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(19325, 130.793914, 1044.570556, 19.613763, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(19325, 130.793914, 1050.991333, 19.613763, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(19325, 130.793914, 1057.441650, 19.613763, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(19325, 130.793914, 1063.873046, 19.613763, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(19325, 130.793914, 1051.000488, 23.663795, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(19325, 130.793914, 1057.441040, 23.663795, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(19325, 130.793914, 1063.881958, 23.663795, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(19425, 130.751968, 1054.215820, 18.455619, 0.000000, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.757644, 1054.215820, 21.685613, 0.000000, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.763244, 1054.215820, 24.855598, 0.000000, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.751770, 1060.675903, 18.405637, 0.000000, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.757217, 1060.675903, 21.555637, 0.000000, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.761734, 1060.675903, 24.145626, 0.000000, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.717575, 1042.819702, 17.595769, -90.000015, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.723190, 1046.049682, 17.595769, -90.000015, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.729583, 1049.739624, 17.595769, -90.000015, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.734725, 1052.720336, 17.595769, -90.000015, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.740341, 1055.951171, 17.595769, -90.000015, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.745498, 1058.961914, 17.595769, -90.000015, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.751327, 1062.332397, 17.595769, -90.000015, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.756790, 1065.452514, 17.595769, -90.000015, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.755462, 1064.651733, 21.625768, -90.000015, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.749847, 1061.430786, 21.625768, -90.000015, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.744262, 1058.240112, 21.625768, -90.000015, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.738754, 1055.039672, 21.625768, -90.000015, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.733184, 1051.839477, 21.625768, -90.000015, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.727554, 1048.619262, 21.625768, -90.000015, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.721923, 1045.409057, 21.625768, -90.000015, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 130.716262, 1042.168945, 21.625768, -90.000015, 90.100036, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(18980, 90.256423, 1066.742675, 9.630289, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(18980, 117.811386, 1066.794555, 13.166131, -90.099998, 0.399998, -89.799972, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(18980, 117.951255, 1066.754638, 24.824653, -83.600044, 0.199999, -89.799972, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(18980, 102.229644, 1066.754638, 23.061273, -83.600044, 0.199999, -89.799972, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(18980, 104.816444, 1066.832763, 11.170310, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19325, 126.945274, 1066.800415, 15.613788, 0.000000, 0.000000, 89.999923, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(18980, 117.809692, 1066.794555, 12.196134, -90.099998, 0.399998, -89.799972, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19325, 108.005271, 1066.800415, 15.613788, 0.000000, 0.000000, 89.999923, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(19325, 120.645225, 1066.800415, 15.613788, 0.000000, 0.000000, 89.999923, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(19325, 114.365180, 1066.800415, 15.613788, 0.000000, 0.000000, 89.999923, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(19425, 123.789993, 1066.763427, 15.123557, 0.000000, 90.000038, 89.599861, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 117.490074, 1066.797241, 15.123557, 0.000000, 90.000038, 89.599861, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 111.159858, 1066.792846, 15.123557, 0.000000, 90.000038, 89.599861, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 111.159858, 1066.792846, 18.353548, 0.000000, 90.000038, 89.599861, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 111.159790, 1066.782836, 21.423551, 0.000000, 90.000038, 89.599861, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 111.160270, 1066.852905, 22.353559, 0.000000, 90.000038, 89.599861, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 117.490074, 1066.797241, 18.133562, 0.000000, 90.000038, 89.599861, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 117.490005, 1066.787231, 20.953577, 0.000000, 90.000038, 89.599861, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 117.490142, 1066.807250, 23.243576, 0.000000, 90.000038, 89.599861, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 123.789993, 1066.763427, 18.293552, 0.000000, 90.000038, 89.599861, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 123.789993, 1066.763427, 21.373556, 0.000000, 90.000038, 89.599861, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 123.789993, 1066.763427, 23.893564, 0.000000, 90.000038, 89.599861, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19325, 108.005271, 1066.800415, 19.563798, 0.000000, 0.000000, 89.999923, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(19325, 114.375251, 1066.800415, 19.563798, 0.000000, 0.000000, 89.999923, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(19325, 120.685241, 1066.800415, 19.563798, 0.000000, 0.000000, 89.999923, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(19325, 127.155258, 1066.800415, 19.563798, 0.000000, 0.000000, 89.999923, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(19435, 128.751083, 1066.872436, 22.447652, -90.399971, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19435, 121.781333, 1066.848632, 22.398994, -90.399971, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19435, 118.301490, 1066.826293, 22.374706, -90.399971, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19435, 114.831596, 1066.814208, 22.350477, -90.399971, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19435, 111.381690, 1066.802368, 22.326400, -90.399971, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19435, 107.931777, 1066.790649, 22.302305, -90.399971, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19435, 106.251815, 1066.784912, 22.290571, -90.399971, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19435, 108.826995, 1066.795288, 22.998577, -90.399971, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19435, 112.296195, 1066.807373, 23.122802, -90.399971, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19435, 115.750953, 1066.819091, 23.886940, -90.399971, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19435, 119.400337, 1066.832031, 23.982416, -90.399971, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19435, 121.787696, 1066.840332, 24.369102, -90.399971, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19435, 121.795845, 1066.840332, 23.199121, -90.399971, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19425, 128.679321, 1066.749023, 21.625768, -90.000015, -0.099958, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 125.589340, 1066.744018, 21.625768, -90.000015, -0.099958, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 122.039367, 1066.737915, 21.625768, -90.000015, -0.099958, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 118.919395, 1066.732666, 21.625768, -90.000015, -0.099958, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 115.699401, 1066.727294, 21.625768, -90.000015, -0.099958, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 112.569396, 1066.722045, 21.625768, -90.000015, -0.099958, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 109.299400, 1066.716430, 21.625768, -90.000015, -0.099958, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 106.799438, 1066.712402, 21.625768, -90.000015, -0.099958, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 106.919296, 1066.753051, 17.575767, -90.000015, 0.000040, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 128.679214, 1066.753051, 17.575767, -90.000015, 0.000040, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 125.539207, 1066.753051, 17.575767, -90.000015, 0.000040, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 121.939208, 1066.753051, 17.575767, -90.000015, 0.000040, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 118.799217, 1066.753051, 17.575767, -90.000015, 0.000040, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 115.609245, 1066.753051, 17.575767, -90.000015, 0.000040, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 112.419235, 1066.753051, 17.575767, -90.000015, 0.000040, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 109.399230, 1066.753051, 17.575767, -90.000015, 0.000040, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(18980, 90.256385, 1053.763183, 13.087628, -90.099998, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(18980, 90.256401, 1040.772949, 9.670292, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(18980, 90.256385, 1053.777709, 21.647613, -90.099998, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(18980, 117.951713, 1040.762817, 24.814556, -83.600044, 0.199999, -89.799972, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(18980, 102.230216, 1040.762817, 23.051164, -83.600044, 0.199999, -89.799972, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(4735, 126.636756, 1067.071166, 23.199495, 0.000000, 0.000000, -89.399978, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(autosalon, 0, "Salon", 120, "Ariel", 70, 1, 0xFF1985A6, 0x00000000, 1);
	autosalon = CreateDynamicObject(4735, 119.007171, 1066.991821, 23.169494, 0.000000, 0.000000, -89.399978, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(autosalon, 0, "Vozila", 120, "Ariel", 70, 1, 0xFF1985A6, 0x00000000, 1);
	autosalon = CreateDynamicObject(19380, 90.267578, 1061.653320, 16.283254, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0x00000000);
	autosalon = CreateDynamicObject(19380, 90.267578, 1052.093261, 16.283254, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0x00000000);
	autosalon = CreateDynamicObject(19380, 90.277572, 1045.843017, 16.283254, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0x00000000);
	autosalon = CreateDynamicObject(18980, 117.970840, 1040.779785, 13.166015, -90.099998, 0.299998, -89.799972, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(18980, 103.060943, 1040.806884, 13.192049, -90.099998, 0.299998, -89.799972, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19380, 95.142135, 1040.805419, 16.524204, 6.199997, 0.000000, -89.899971, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0x00000000);
	autosalon = CreateDynamicObject(19380, 104.695892, 1040.822631, 17.562086, 6.199997, 0.000000, -89.899971, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0x00000000);
	autosalon = CreateDynamicObject(19380, 114.239753, 1040.840209, 18.598901, 6.199997, 0.000000, -89.899971, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0x00000000);
	autosalon = CreateDynamicObject(19380, 123.793502, 1040.857299, 19.636789, 6.199997, 0.000000, -89.899971, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0x00000000);
	autosalon = CreateDynamicObject(19380, 125.577590, 1040.859008, 20.499300, 0.399998, 0.000000, -89.899971, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0x00000000);
	autosalon = CreateDynamicObject(19380, 125.650566, 1040.859008, 10.049539, 0.399998, 0.000000, -89.899971, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0x00000000);
	autosalon = CreateDynamicObject(19380, 116.020812, 1040.842285, 9.982313, 0.399998, 0.000000, -89.899971, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "Bow_Abpave_Gen", 0x00000000);
	autosalon = CreateDynamicObject(18981, 118.023490, 1053.786865, 24.791563, 0.000000, -96.400054, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(18981, 102.997596, 1053.786865, 23.106170, 0.000000, -96.400054, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19325, 93.985321, 1066.800415, 19.673801, 0.000000, 0.000000, 89.999923, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(19325, 93.985321, 1066.800415, 15.333786, 0.000000, 0.000000, 89.999923, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(19325, 101.055320, 1066.800415, 19.563798, 0.000000, 0.000000, 89.999923, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(18980, 97.566444, 1066.832763, 10.380308, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19435, 99.812011, 1066.762084, 22.245618, -90.399971, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19435, 103.121932, 1066.773437, 22.268714, -90.399971, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19425, 102.959281, 1066.753051, 17.575767, -90.000015, 0.000040, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 99.889297, 1066.753051, 17.575767, -90.000015, 0.000040, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 96.669296, 1066.753051, 17.575767, -90.000015, 0.000040, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 94.179306, 1066.753051, 17.575767, -90.000015, 0.000040, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 91.479309, 1066.753051, 17.575767, -90.000015, 0.000040, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(18980, 102.280067, 1066.818603, 12.333250, -90.099998, 0.099999, -89.799972, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19325, 93.985321, 1066.800415, 11.213788, 0.000000, 0.000000, 89.999923, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, -1, "none", "none", 0xFF33FFFF);
	autosalon = CreateDynamicObject(19425, 95.769287, 1066.753051, 21.655771, -90.000015, 0.000040, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 92.629272, 1066.753051, 21.655771, -90.000015, 0.000040, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19435, 125.391174, 1066.860839, 22.424198, -90.399971, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19435, 125.375503, 1066.860839, 24.674144, -90.399971, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19435, 128.623046, 1066.871948, 25.036825, -90.399971, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19435, 128.632003, 1066.871948, 23.756843, -90.399971, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19435, 125.452079, 1066.860961, 23.734645, -90.399971, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(4735, 126.706420, 1067.102050, 23.139493, 0.000000, 0.000000, -89.399978, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(autosalon, 0, "Salon", 120, "Ariel", 70, 1, 0xFFFFFFFF, 0x00000000, 1);
	autosalon = CreateDynamicObject(4735, 119.117080, 1067.003173, 23.099493, 0.000000, 0.000000, -89.399978, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(autosalon, 0, "Vozila", 120, "Ariel", 70, 1, 0xFFFFFFFF, 0x00000000, 1);
	autosalon = CreateDynamicObject(19425, 99.719299, 1066.753051, 16.625770, -90.000015, 0.000039, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 102.919311, 1066.753051, 16.625770, -90.000015, 0.000039, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 103.549964, 1066.836303, 16.023559, 0.000000, 90.000038, 89.599861, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 103.549964, 1066.836303, 12.823557, 0.000000, 90.000038, 89.599861, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 98.750076, 1066.869750, 12.823557, 0.000000, 90.000038, 89.599861, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(19425, 98.750076, 1066.869750, 16.063560, 0.000000, 90.000038, 89.599861, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFFFFFFF);
	autosalon = CreateDynamicObject(1319, 104.777297, 1065.723754, 13.292730, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19362, 107.522621, 1054.935302, 13.219573, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19362, 107.522621, 1051.765502, 13.209568, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19834, 104.783317, 1064.489501, 13.629582, 0.000000, 0.000000, -89.699974, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 104.795539, 1062.159545, 13.629582, 0.000000, 0.000000, -89.699974, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(1319, 104.777297, 1060.983642, 13.292730, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19834, 106.018028, 1060.969848, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 108.318016, 1060.969848, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(1319, 111.847274, 1060.983642, 13.292730, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19834, 110.638008, 1060.969848, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 113.027984, 1060.969848, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 115.337966, 1060.969848, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 117.657951, 1060.969848, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(1319, 118.887283, 1060.983642, 13.292730, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19834, 120.087936, 1060.969848, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 122.407936, 1060.969848, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 124.257904, 1060.969848, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(1319, 125.437263, 1060.983642, 13.292730, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19834, 125.435821, 1062.158691, 13.629582, 0.000000, 0.000000, -89.699974, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 125.423721, 1064.468750, 13.629582, 0.000000, 0.000000, -89.699974, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(1319, 125.437263, 1065.673828, 13.292730, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(1319, 124.247283, 1059.983764, 13.292730, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19834, 125.477890, 1059.989501, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 127.737892, 1059.989501, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(1319, 128.957351, 1059.983764, 13.292730, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19834, 124.243545, 1058.771606, 13.629582, 0.000000, 0.000000, -89.699974, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 124.255760, 1056.440673, 13.629582, 0.000000, 0.000000, -89.699974, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 124.267982, 1054.109985, 13.629582, 0.000000, 0.000000, -89.699974, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(1319, 124.277290, 1052.883544, 13.292730, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19834, 124.280792, 1051.669555, 13.629582, 0.000000, 0.000000, -89.699974, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 124.292900, 1049.359130, 13.629582, 0.000000, 0.000000, -89.699974, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 124.305076, 1047.038085, 13.629582, 0.000000, 0.000000, -89.699974, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 124.961883, 1044.889282, 13.629582, 0.000000, 0.000000, -54.699974, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(1319, 124.327293, 1045.832763, 13.292730, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19834, 125.528198, 1044.089843, 13.629582, 0.000000, 0.000000, -54.699974, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(1319, 126.207244, 1043.082397, 13.292730, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19834, 127.407897, 1043.089233, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(1319, 128.597335, 1043.082397, 13.292730, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19834, 123.147888, 1045.840087, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 116.097961, 1045.840087, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 118.527877, 1045.840087, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(1319, 117.307327, 1045.832763, 13.292730, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19834, 120.817878, 1045.840087, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 113.767936, 1045.840087, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 111.477951, 1045.840087, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(1319, 110.277351, 1045.832763, 13.292730, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19834, 109.077926, 1045.840087, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 106.767959, 1045.840087, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(1319, 105.597351, 1045.832763, 13.292730, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19834, 105.617301, 1044.649780, 13.629582, 0.000000, 0.000000, -89.699974, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 105.625267, 1043.129882, 13.629582, 0.000000, 0.000000, -89.699974, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(1319, 105.597351, 1041.933105, 13.292730, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19834, 104.407951, 1045.840087, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 102.087951, 1045.840087, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 99.697975, 1045.840087, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 97.367950, 1045.840087, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(1319, 100.897346, 1045.832763, 13.292730, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(1319, 96.197319, 1045.832763, 13.292730, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19834, 96.197380, 1044.601074, 13.629582, 0.000000, 0.000000, -89.699974, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(1319, 96.197357, 1041.933105, 13.292730, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19834, 96.205017, 1043.131958, 13.629582, 0.000000, 0.000000, -89.699974, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 96.184837, 1047.001708, 13.629582, 0.000000, 0.000000, -89.699974, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 96.172752, 1049.311645, 13.629582, 0.000000, 0.000000, -89.699974, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 96.160728, 1051.612060, 13.629582, 0.000000, 0.000000, -89.699974, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(1319, 96.157310, 1055.144775, 13.292730, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19834, 96.148544, 1053.923217, 13.629582, 0.000000, 0.000000, -89.699974, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 94.997985, 1055.150512, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, 92.688026, 1055.150512, 13.629577, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(1319, 91.497337, 1055.144775, 13.292730, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	autosalon = CreateDynamicObject(19379, 125.103103, 1046.045043, 12.713643, 0.000000, -90.000015, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(19379, 125.103103, 1055.665283, 12.713643, 0.000000, -90.000015, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(19379, 125.103103, 1061.704956, 12.693641, 0.000000, -90.000015, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(19379, 114.633079, 1061.704956, 12.693641, 0.000000, -90.000015, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(19379, 104.153091, 1061.704956, 12.693641, 0.000000, -90.000015, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(19379, 95.123092, 1061.704956, 12.683642, 0.000000, -90.000015, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(19379, 114.613105, 1055.665283, 12.713643, 0.000000, -90.000015, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(19379, 104.123130, 1055.665283, 12.713643, 0.000000, -90.000015, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(19379, 95.813148, 1055.665283, 12.723643, 0.000000, -90.000015, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(19379, 114.593116, 1046.045043, 12.713643, 0.000000, -90.000015, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(19379, 104.143127, 1046.045043, 12.713643, 0.000000, -90.000015, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(19379, 95.723136, 1046.045043, 12.703641, 0.000000, -90.000015, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(2370, 102.237304, 1052.995239, 12.739578, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(1768, 101.551574, 1055.318481, 12.809580, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(1768, 103.620956, 1051.428833, 12.809580, 0.000000, 0.000000, 179.499908, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(1768, 100.328430, 1052.308471, 12.809580, 0.000000, 0.000000, 89.499916, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(11686, 105.318496, 1053.370483, 12.799579, 0.000000, 0.000000, 90.200012, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(11686, 107.157958, 1053.370239, 12.799579, 0.000000, 0.000000, -89.999984, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(2427, 107.351173, 1054.559692, 13.889574, 0.000000, 0.000000, -89.999969, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(2427, 107.351173, 1052.089721, 13.889574, 0.000000, 0.000000, -89.999969, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(19823, 102.617401, 1053.480834, 13.589582, 0.000000, 0.000000, -34.799991, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(1455, 102.832717, 1052.827758, 13.649581, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(1455, 101.982719, 1053.258178, 13.649581, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(1667, 102.860206, 1054.036743, 13.669585, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(2608, 107.842163, 1051.228393, 13.399574, 0.000000, 0.000000, 89.899963, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(2161, 107.607704, 1052.675048, 12.789583, 0.000000, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(2167, 107.655738, 1054.013916, 12.799578, 0.000000, 0.000000, 90.099929, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(2161, 107.598777, 1055.225585, 12.789583, 0.000000, 0.000000, 90.199989, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(2165, 110.681236, 1053.972045, 12.799579, 0.000000, 0.000000, -89.799995, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(2165, 110.688179, 1051.981567, 12.799579, 0.000000, 0.000000, -89.799995, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(2165, 110.674278, 1055.962524, 12.799579, 0.000000, 0.000000, -89.799995, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(2356, 109.660644, 1055.103637, 12.769579, 0.000000, 0.000000, -60.699996, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(2356, 109.662826, 1053.450317, 12.769579, 0.000000, 0.000000, -119.799987, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(2356, 109.715316, 1051.288452, 12.769579, 0.000000, 0.000000, -71.600021, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(2350, 104.506080, 1052.830810, 13.149584, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(2350, 104.426063, 1053.851318, 13.149584, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(2604, 93.689666, 1058.814208, 13.569587, 0.000000, 0.000000, -89.999961, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(2604, 93.689666, 1062.483642, 13.569587, 0.000000, 0.000000, -89.999961, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(738, 130.712188, 1069.970581, 12.876750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(738, 123.762161, 1069.970581, 12.876750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(738, 117.472175, 1069.970581, 12.876750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(738, 111.132141, 1069.970581, 12.876750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(738, 104.832145, 1069.970581, 12.876750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(738, 97.562149, 1069.970581, 12.876750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(738, 90.342140, 1069.970581, 12.876750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(738, 133.792144, 1066.580566, 12.876750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(738, 133.792144, 1060.810668, 12.876750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(738, 133.792144, 1054.390625, 12.876750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(738, 133.792144, 1047.909912, 12.876750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	autosalon = CreateDynamicObject(738, 133.792144, 1040.729370, 12.876750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	

	//katalog
	CreateDynamicObject(19379, -348.51221, 1949.62256, 58.69790,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, -348.80240, 1954.35083, 60.42345,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19454, -344.06281, 1949.56372, 60.42340,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19366, -346.93768, 1951.69922, 58.78120,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19366, -346.93771, 1949.39905, 58.78100,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19366, -349.23770, 1951.69922, 58.78100,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19366, -349.23770, 1949.39905, 58.78080,   0.00000, 90.00000, 0.00000);
	autosalon = CreateDynamicObject(19834, -351.28610, 1949.89661, 59.63700,   0.00000, 0.00000, 90.00000);
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(1319, -351.25769, 1948.75806, 59.22820,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(1319, -350.08890, 1947.41772, 59.22820,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19834, -351.28610, 1951.23657, 59.63700,   0.00000, 0.00000, 90.00000);
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(1319, -351.27771, 1952.41809, 59.22820,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	autosalon = CreateDynamicObject(19834, -348.98071, 1947.40454, 59.63700,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(19834, -346.98071, 1947.40454, 59.63700,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFFCC0000);
	autosalon = CreateDynamicObject(1319, -345.82889, 1947.41772, 59.22820,   0.00000, 0.00000, 0.00000);
	SetDynamicObjectMaterial(autosalon, 0, 10101, "2notherbuildsfe", "ferry_build14", 0xFF000000);
	SetDynamicObjectMaterial(autosalon, 1, 10101, "2notherbuildsfe", "ferry_build14", 0x00000000);
	CreateDynamicObject(2002, -350.14923, 1953.49158, 58.78282,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2604, -352.29779, 1953.76538, 59.49170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2608, 2396.29053, 11835.61914, -2474.48657,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2608, -348.94916, 1953.91162, 59.36228,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2161, -347.46771, 1954.16943, 58.75680,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1713, -347.22513, 1945.64856, 58.78320,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1713, -352.78076, 1949.94385, 58.78320,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2200, -346.02609, 1954.08301, 58.77909,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19786, -344.14307, 1951.27869, 61.28318,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19786, -344.14310, 1948.99866, 61.28320,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19786, -344.14310, 1951.27869, 60.10320,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19786, -344.14310, 1948.99866, 60.10320,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(2315, -344.67172, 1945.73804, 58.78510,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2245, -344.71698, 1947.33118, 59.54329,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2245, -344.67746, 1945.63379, 59.54329,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2282, -344.98892, 1946.53040, 59.77319,   -90.00000, 0.00000, -90.00000);
	CreateDynamicObject(19379, -359.00391, 1949.62256, 58.69790,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19454, -348.80240, 1954.35083, 63.91008,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19454, -344.06281, 1949.56372, 63.92403,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19379, -348.51221, 1949.62256, 63.12606,   0.00000, 90.00000, 0.00000);

	//tehnicki
	CreateDynamicObject(19817, -109.84790, 1112.23718, 17.03200,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19817, -109.84590, 1116.37024, 17.03230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19899, -114.24926, 1111.39429, 18.73254,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19899, -106.17087, 1124.05518, 18.72381,   0.00000, 0.00000, -96.06022);
	CreateDynamicObject(19903, -112.68740, 1119.66016, 18.76080,   0.00000, 0.00000, -13.73988);
	CreateDynamicObject(2604, -107.08611, 1116.50403, 19.57063,   0.00000, 0.00000, 90.66006);
	CreateDynamicObject(19903, -112.91444, 1116.56042, 18.76080,   0.00000, 0.00000, 19.26015);
	CreateDynamicObject(11492, -109.90000, 1120.04431, 18.57336,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19462, -112.99990, 1113.16272, 18.65910,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19462, -109.49900, 1113.16272, 18.65910,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19462, -106.00040, 1113.16272, 18.65910,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19462, -106.00040, 1122.78125, 18.65900,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19462, -109.48500, 1122.78125, 18.65900,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19462, -112.98460, 1122.78125, 18.65900,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19899, -113.71050, 1122.97803, 18.72816,   0.00000, 0.00000, -18.48001);
	CreateDynamicObject(3055, -110.91280, 1125.47363, 19.08075,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3055, -110.79873, 1140.19690, 19.08075,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1671, -105.79258, 1117.06726, 19.17590,   0.00000, 0.00000, -51.42001);
	CreateDynamicObject(2714, -110.14281, 1108.31726, 23.17847,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3055, -99.91149, 1111.70679, 21.73571,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3055, -99.91150, 1111.68677, 20.80150,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19447, -114.79402, 1113.34119, 20.43521,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19447, -114.79400, 1122.97461, 20.43520,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19447, -114.79500, 1113.34119, 22.47860,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19447, -114.79500, 1122.97461, 22.47860,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19447, -114.80120, 1126.91748, 22.47860,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19447, -110.00031, 1127.13684, 22.47860,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19447, -109.25900, 1127.11853, 22.47860,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19447, -104.52280, 1113.44153, 20.43520,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19447, -104.52200, 1123.03577, 20.43520,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19447, -104.52000, 1123.03577, 22.35210,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19447, -104.52200, 1113.44153, 22.31890,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1327, -105.97826, 1122.16638, 18.72925,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(2478, -114.09854, 1111.86340, 20.24145,   0.00000, 0.00000, 88.86012);
	CreateDynamicObject(2478, -113.45360, 1123.50269, 20.24145,   0.00000, 0.00000, 250.07852);
	CreateDynamicObject(2478, -105.59222, 1123.94507, 20.24145,   0.00000, 0.00000, 342.41553);
	CreateDynamicObject(2478, -113.98360, 1122.59399, 21.49798,   0.00000, 0.00000, 79.80117);
	CreateDynamicObject(638, -104.74960, 1107.76831, 19.41380,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(638, -115.13710, 1107.76831, 19.41380,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19900, -114.11945, 1113.30945, 18.69288,   0.00000, 0.00000, 11.82000);
	CreateDynamicObject(19900, -61.26821, 1066.09485, 18.69288,   0.00000, 0.00000, 11.82000);
	CreateDynamicObject(19900, -114.09766, 1114.29517, 18.69288,   0.00000, 0.00000, -23.58001);
	CreateDynamicObject(2478, -113.98441, 1116.48218, 19.01611,   0.00000, 0.00000, 88.86012);
	CreateDynamicObject(19815, -114.71039, 1116.46277, 20.75740,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, -114.01662, 1108.41565, 19.28970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -105.79288, 1108.37524, 19.28970,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19447, -106.05830, 1127.10107, 22.75320,   20.64000, 0.00000, 90.00000);
	CreateDynamicObject(19447, -113.92070, 1127.10449, 22.65320,   -19.38010, 0.00000, 90.00000);
	CreateDynamicObject(1215, -113.57880, 1107.92603, 19.27170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -106.33880, 1107.92603, 19.27170,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18075, -110.25388, 1116.04602, 24.62020,   0.00000, 0.00000, 0.00000);

	CreateDynamicObject(8674, -75.52838, 1143.64172, 20.00234,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, -75.50564, 1153.91870, 20.00234,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, -75.49915, 1164.21887, 20.00234,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, -80.66255, 1169.40430, 20.00230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, -107.02687, 1145.41992, 20.00234,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8674, -105.97188, 1155.57825, 20.00234,   0.00000, 0.00000, 78.05999);
	CreateDynamicObject(8674, -101.59130, 1126.08923, 20.00230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8674, -91.30862, 1133.12024, 20.00234,   0.00000, 0.00000, 88.98003);
	CreateDynamicObject(669, -90.52242, 1151.54272, 18.85281,   356.85840, 0.00000, -2.00713);

	//KAMIONDZIJA
	CreateDynamicObject(8168, -827.08160, 1443.96301, 14.80580,   0.00000, 0.00000, 100.50000);

	//ZELEZNICKA
	new zeleznicka;
	zeleznicka = CreateDynamicObject(7914, -19.890264, 1269.715454, 10.832775, -0.700002, -0.099999, 0.999999, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(zeleznicka, 0, "Fort Carson", 130, "Ariel", 60, 0, 0xFFFFFFFF, 0x00000000, 1);
	zeleznicka = CreateDynamicObject(7914, -13.862668, 1269.735839, 6.723939, -0.700002, -0.099999, 0.799999, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(zeleznicka, 0, "Zeleznicka Stanica", 130, "Ariel", 60, 0, 0xFFFFFFFF, 0x00000000, 0);
	zeleznicka = CreateDynamicObject(7914, -21.708765, 1269.666259, 9.965283, -0.700002, -90.499992, 0.799999, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(zeleznicka, 0, "<", 120, "Ariel", 23, 0, 0xFFFFFFFF, 0x00000000, 1);
	zeleznicka = CreateDynamicObject(8578, -15.416761, 1310.617919, 24.315134, 0.000000, 0.000000, 0.799999, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(8565, -17.178546, 1301.554077, 11.438627, 0.000000, 0.000000, 0.799999, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(8565, -5.229734, 1301.717651, 11.468627, 0.000000, 0.000000, -179.199935, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(8565, -17.138559, 1301.552490, 11.448627, 0.000000, 0.000000, -179.199935, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(8565, -5.269714, 1301.719238, 11.458627, 0.000000, 0.000000, 0.799999, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(19378, 9.500060, 1288.572021, 16.906944, 0.000000, 89.899963, 0.899999, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(19378, -0.988624, 1288.408447, 16.888622, 0.000000, 89.899963, 0.899999, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(19378, -11.487318, 1288.243774, 16.870281, 0.000000, 89.899963, 0.899999, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(19378, -21.966011, 1288.079345, 16.851989, 0.000000, 89.899963, 0.899999, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(19378, -31.444805, 1287.929931, 16.825448, 0.000000, 89.899963, 0.899999, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(3626, -30.793880, 1286.812622, 18.264509, 0.000000, 0.000000, -178.899963, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(2165, -33.314064, 1287.752441, 17.085233, 0.000000, 0.000000, -88.999900, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(2356, -34.520801, 1287.661010, 17.022983, 0.000000, 0.000000, -138.600021, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(11730, -28.392351, 1284.993774, 16.922100, 0.000000, 0.000000, -179.500000, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(11729, -27.739244, 1285.008178, 16.918180, 0.000000, 0.000000, -178.899734, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(11729, -27.069368, 1285.021118, 16.918180, 0.000000, 0.000000, -178.899734, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(11729, -29.059001, 1284.982055, 16.918180, 0.000000, 0.000000, -178.899734, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(11729, -29.718885, 1284.968994, 16.918180, 0.000000, 0.000000, -178.899734, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(8674, -31.587432, 1283.178588, 18.414991, 0.000000, 0.000000, 0.799999, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(8674, -21.308443, 1283.322021, 18.414991, 0.000000, 0.000000, 0.799999, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(8674, -10.979450, 1283.465209, 18.414991, 0.000000, 0.000000, 0.799999, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(8674, -0.630458, 1283.609008, 18.414991, 0.000000, 0.000000, 0.799999, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(8674, 9.728526, 1283.753051, 18.414991, 0.000000, 0.000000, 0.799999, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(19869, -36.789497, 1285.700317, 16.969064, 0.000000, 0.000000, -88.900001, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(10244, 16.911478, 1281.304931, 13.465018, 0.000000, 0.000000, 89.400001, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(8565, 18.970554, 1286.548095, 6.538631, 0.000000, 0.000000, 166.900207, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(8418, -25.169282, 1289.233032, 13.745072, 0.000000, 0.000000, 0.800011, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(8418, -36.707767, 1289.027587, 13.705067, 0.000000, 0.000000, 0.800011, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(18802, -55.598640, 1279.925292, 11.435647, -0.299999, 4.199998, -7.899997, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(8565, -27.413209, 1287.456298, 7.490826, 0.699999, 0.000000, -179.099945, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(8565, -19.654302, 1287.587646, 7.460706, 0.699999, 0.000000, -179.099945, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(8418, -10.440715, 1289.442749, 13.795073, 0.000000, 0.000000, 0.800011, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(8565, -19.665006, 1287.647949, 7.750806, -0.099999, 0.199999, -179.099945, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(14407, 3.407102, 1281.571411, 10.137059, 0.000000, 0.000000, -89.599998, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(19449, 0.376163, 1274.448486, 12.639514, 0.000000, 0.000000, 0.799999, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(19449, 3.379836, 1279.535156, 10.231408, -34.200004, 0.000000, -89.400054, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(638, -0.358938, 1277.908813, 14.007976, 0.000000, 0.000000, 0.999999, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(19449, 0.361417, 1274.788696, 12.629514, 0.000000, 0.000000, 0.799999, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(638, -0.252304, 1271.798461, 14.007976, 0.000000, 0.000000, 0.999999, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(638, -0.305533, 1274.847778, 14.007976, 0.000000, 0.000000, 0.999999, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(647, 2.538830, 1278.079956, 11.736155, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(647, 2.538830, 1276.170532, 11.736155, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(647, 2.538830, 1274.319580, 11.736155, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(1368, -23.433542, 1283.909790, 17.622068, 0.000000, 0.000000, -179.199951, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(1368, 1.594011, 1284.258178, 17.652069, 0.000000, 0.000000, -179.199951, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(1368, -3.505492, 1284.186889, 17.652069, 0.000000, 0.000000, -179.199951, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(1368, -8.465006, 1284.117919, 17.652069, 0.000000, 0.000000, -179.199951, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(1368, -18.614009, 1283.977050, 17.652069, 0.000000, 0.000000, -179.199951, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(1368, -13.474510, 1284.048706, 17.652069, 0.000000, 0.000000, -179.199951, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(823, -48.128219, 1271.564208, 10.758606, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(823, -52.348201, 1271.564208, 10.758606, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(823, -57.575885, 1271.564208, 9.946841, 0.000000, -8.299999, 0.000000, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(823, -62.074337, 1271.564208, 9.401757, 0.000000, -8.299999, 0.000000, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(823, -48.128219, 1271.564208, 8.538593, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(823, -52.438213, 1271.564208, 8.538593, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	zeleznicka = CreateDynamicObject(823, -55.118202, 1271.564208, 8.538593, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(11459, -39.54287, 1307.33521, 11.35478,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(11459, -39.60664, 1309.58386, 11.42303,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(11459, -43.86174, 1309.57544, 11.42303,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(11459, -43.79122, 1306.47375, 11.34710,   0.00000, -90.00000, 90.00000);
	CreateDynamicObject(11459, -47.98490, 1305.43787, 11.24874,   0.00000, -90.00000, 179.33981);
	CreateDynamicObject(823, -39.39803, 1311.35669, 11.12484,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(823, -43.26603, 1311.70288, 11.12484,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(823, -47.73674, 1310.89380, 11.12484,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(823, -48.52275, 1306.00989, 12.77196,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(823, -39.43039, 1305.81909, 13.82805,   0.00000, 0.00000, -39.06001);
	

	//AUTOSKOLA
	CreateDynamicObjectEx(1237, -2086.85, -123.51, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -123.51, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -126.97, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -130.37, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -133.31, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -136.17, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -139.37, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -142.58, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -145.62, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -148.88, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -152.04, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -155.64, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -159.43, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -162.90, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -166.53, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -170.20, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2089.94, -170.20, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2092.98, -170.20, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2092.98, -175.81, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2089.94, -175.81, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -175.81, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -179.15, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -182.44, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -185.85, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -189.29, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -192.76, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -196.24, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -126.97, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -130.37, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -133.31, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -136.17, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -139.37, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -142.58, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -145.62, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -148.88, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -152.04, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -155.64, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -159.43, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -162.90, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -166.53, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -170.20, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -173.01, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -175.81, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -179.15, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -182.44, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -185.85, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -189.29, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2080.72, -196.24, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2083.81, -196.24, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2077.18, -189.29, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2073.64, -189.29, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2070.21, -189.29, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2066.99, -189.29, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2063.90, -189.29, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2060.58, -189.29, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2057.24, -189.29, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2077.18, -196.24, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2073.64, -196.24, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2070.21, -196.24, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2066.99, -196.24, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2063.90, -196.24, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2060.58, -196.24, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2057.24, -196.24, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2053.65, -196.24, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2050.19, -196.24, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2057.24, -185.85, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2057.24, -182.44, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2057.24, -179.15, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2057.24, -175.81, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2057.24, -173.01, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2057.24, -170.20, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2057.24, -166.53, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2057.24, -162.90, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2057.24, -159.43, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2057.24, -155.64, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2057.24, -145.62, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2057.24, -142.58, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2057.24, -139.37, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2057.24, -136.17, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2057.24, -133.31, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2057.24, -130.37, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2060.72, -155.64, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2063.99, -155.64, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2067.23, -155.64, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2095.38, -170.20, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2095.38, -173.01, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2095.38, -175.78, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2067.23, -152.04, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2057.24, -148.88, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2067.23, -148.88, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2063.99, -148.88, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2060.72, -148.88, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2050.19, -189.29, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2050.19, -192.87, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2050.19, -185.85, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2050.19, -182.44, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2050.19, -179.15, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2050.19, -175.81, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2050.19, -173.01, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2050.19, -170.20, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2050.19, -166.53, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2050.19, -162.90, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2050.19, -159.43, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2050.19, -155.64, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2050.19, -152.04, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2050.19, -148.88, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2050.19, -145.62, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2050.19, -142.58, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2050.19, -139.37, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2050.19, -136.17, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2047.14, -136.17, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2044.20, -136.17, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2053.73, -130.37, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2050.19, -130.37, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2041.39, -136.17, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2047.14, -130.37, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2047.14, -127.38, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2047.14, -124.60, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2047.14, -121.82, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2041.39, -133.31, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2041.39, -130.37, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2041.39, -127.38, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2041.39, -124.60, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2041.39, -121.82, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1251, -2083.77, -123.46, 34.30,   0.00, 0.00, 90.00, 450.0, 450.0);
	CreateDynamicObjectEx(1251, -2083.77, -133.32, 34.30,   0.00, 0.00, 90.00, 450.0, 450.0);
	CreateDynamicObjectEx(1251, -2083.77, -142.54, 34.30,   0.00, 0.00, 90.00, 450.0, 450.0);
	CreateDynamicObjectEx(1251, -2083.77, -152.02, 34.30,   0.00, 0.00, 90.00, 450.0, 450.0);
	CreateDynamicObjectEx(1251, -2083.77, -162.89, 34.30,   0.00, 0.00, 90.00, 450.0, 450.0);
	CreateDynamicObjectEx(1251, -2086.80, -172.98, 34.30,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -169.52, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2086.85, -176.49, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1251, -2083.77, -182.41, 34.30,   0.00, 0.00, 90.00, 450.0, 450.0);
	CreateDynamicObjectEx(1251, -2083.80, -192.78, 34.30,   0.00, 0.00, 317.28, 450.0, 450.0);
	CreateDynamicObjectEx(1251, -2073.61, -192.66, 34.30,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1251, -2063.88, -192.66, 34.30,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1251, -2053.74, -192.74, 34.30,   0.00, 0.00, 45.36, 450.0, 450.0);
	CreateDynamicObjectEx(1251, -2053.53, -182.40, 34.30,   0.00, 0.00, 90.00, 450.0, 450.0);
	CreateDynamicObjectEx(1251, -2053.53, -173.00, 34.30,   0.00, 0.00, 90.00, 450.0, 450.0);
	CreateDynamicObjectEx(1251, -2053.53, -162.89, 34.30,   0.00, 0.00, 90.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2057.24, -148.17, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2057.24, -156.34, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1251, -2057.22, -152.10, 34.30,   0.00, 0.00, 0.00, 450.0, 450.0);
	CreateDynamicObjectEx(1251, -2053.53, -142.57, 34.30,   0.00, 0.00, 90.00, 450.0, 450.0);
	CreateDynamicObjectEx(1251, -2053.72, -133.28, 34.30,   0.00, 0.00, 50.63, 450.0, 450.0);
	CreateDynamicObjectEx(1251, -2044.29, -133.24, 34.30,   0.00, 0.00, 45.10, 450.0, 450.0);
	CreateDynamicObjectEx(1237, -2044.20, -121.82, 34.20,   0.00, 0.00, 0.00, 450.0, 450.0);

	CreateDynamicObject(16146, -98.80308, 1379.64429, 12.32835,   0.00000, 0.00000, 99.96004);
	CreateDynamicObject(1493, -94.56773, 1372.23633, 9.41050,   0.00000, 0.00000, 9.96000);
	CreateDynamicObject(19425, -85.34280, 1385.62720, 9.25950,   0.00000, 0.00000, 9.00000);
	CreateDynamicObject(19425, -84.82300, 1382.43726, 9.25950,   0.00000, 0.00000, 9.00000);
	CreateDynamicObject(19425, -84.28600, 1379.28577, 9.25950,   0.00000, 0.00000, 9.00000);
	CreateDynamicObject(19425, -83.76820, 1375.93958, 9.25950,   0.00000, 0.00000, 9.00000);
	CreateDynamicObject(19425, -83.22360, 1372.65869, 9.25950,   0.00000, 0.00000, 9.00000);

	new natpisifc;
	natpisifc = CreateDynamicObject(4731, -98.420974, 1372.651489, 14.641839, 0.000000, 0.000000, 40.299987, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(natpisifc, 0, "Auto Skola", 120, "Ariel", 40, 1, 0xFFFFFFFF, 0x00000000, 1);
	natpisifc = CreateDynamicObject(9314, -305.583709, 1053.319335, 22.347612, 0.000000, 0.000000, -90.299964, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(natpisifc, 0, "Bolnica", 130, "Ariel", 150, 1, 0xFFFFFFFF, 0x00000000, 1);
	natpisifc = CreateDynamicObject(19429, -100.546638, 1372.371093, 14.630292, -89.999977, -99.799949, 0.199999, -1, -1, -1, 300.00, 300.00); 
	natpisifc = CreateDynamicObject(19429, -96.390747, 1373.104248, 14.630292, -89.999977, -99.799949, 0.199999, -1, -1, -1, 300.00, 300.00); 
	natpisifc = CreateDynamicObject(19429, -98.491874, 1372.753906, 14.630292, -89.999977, -99.799949, 0.199999, -1, -1, -1, 300.00, 300.00); 
	natpisifc = CreateDynamicObject(19329, -96.657417, 1188.389892, 20.506587, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 

	//bolnica
	CreateDynamicObject(5822, -337.209564, 1059.499877, 19.618728, 0.000000, 0.000000, 3.599999, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3934, -333.591094, 1055.667236, 25.013429, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3934, -333.591094, 1046.187133, 25.013429, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	

	//natpis
	new natpisnabrdu;
	natpisnabrdu = CreateDynamicObject(7914, -241.366348, 1351.788818, 58.345447, 0.000000, 0.000000, 22.100006, -1, -1, -1, 500.00, 500.00, STREAMER_TAG_AREA, 2); 
	SetDynamicObjectMaterialText(natpisnabrdu, 0, "F", 90, "Ariel", 199, 1, 0xFFFFFFFF, 0x00000000, 1);
	natpisnabrdu = CreateDynamicObject(7914, -235.254745, 1354.226684, 58.345447, 0.000000, 0.000000, 22.100006, -1, -1, -1, 500.00, 500.00, STREAMER_TAG_AREA, 2); 
	SetDynamicObjectMaterialText(natpisnabrdu, 0, "O", 90, "Ariel", 199, 1, 0xFFFFFFFF, 0x00000000, 1);
	natpisnabrdu = CreateDynamicObject(7914, -228.379653, 1356.964965, 58.345447, 0.000000, 0.000000, 22.100006, -1, -1, -1, 500.00, 500.00, STREAMER_TAG_AREA, 2); 
	SetDynamicObjectMaterialText(natpisnabrdu, 0, "R", 90, "Ariel", 199, 1, 0xFFFFFFFF, 0x00000000, 1);
	natpisnabrdu = CreateDynamicObject(7914, -222.171890, 1359.485107, 58.345447, 0.000000, 0.000000, 22.100006, -1, -1, -1, 500.00, 500.00, STREAMER_TAG_AREA, 2); 
	SetDynamicObjectMaterialText(natpisnabrdu, 0, "T", 90, "Ariel", 199, 1, 0xFFFFFFFF, 0x00000000, 1);
	natpisnabrdu = CreateDynamicObject(7914, -213.275222, 1363.065307, 58.345447, 0.000000, 0.000000, 22.100006, -1, -1, -1, 500.00, 500.00, STREAMER_TAG_AREA, 2); 
	SetDynamicObjectMaterialText(natpisnabrdu, 0, "C", 90, "Ariel", 199, 1, 0xFFFFFFFF, 0x00000000, 1);
	natpisnabrdu = CreateDynamicObject(7914, -206.752304, 1365.660522, 58.345447, 0.000000, 0.000000, 22.100006, -1, -1, -1, 500.00, 500.00, STREAMER_TAG_AREA, 2); 
	SetDynamicObjectMaterialText(natpisnabrdu, 0, "A", 90, "Ariel", 199, 1, 0xFFFFFFFF, 0x00000000, 1);
	natpisnabrdu = CreateDynamicObject(7914, -199.719940, 1368.517089, 58.345447, 0.000000, 0.000000, 22.100006, -1, -1, -1, 500.00, 500.00, STREAMER_TAG_AREA, 2); 
	SetDynamicObjectMaterialText(natpisnabrdu, 0, "R", 90, "Ariel", 199, 1, 0xFFFFFFFF, 0x00000000, 1);
	natpisnabrdu = CreateDynamicObject(7914, -179.969726, 1376.440063, 58.345447, 0.000000, 0.000000, 22.100006, -1, -1, -1, 500.00, 500.00, STREAMER_TAG_AREA, 2); 
	SetDynamicObjectMaterialText(natpisnabrdu, 0, "N", 90, "Ariel", 199, 1, 0xFFFFFFFF, 0x00000000, 1);
	natpisnabrdu = CreateDynamicObject(7914, -186.788925, 1373.671264, 58.345447, 0.000000, 0.000000, 22.100006, -1, -1, -1, 500.00, 500.00, STREAMER_TAG_AREA, 2); 
	SetDynamicObjectMaterialText(natpisnabrdu, 0, "O", 90, "Ariel", 199, 1, 0xFFFFFFFF, 0x00000000, 1);
	natpisnabrdu = CreateDynamicObject(7914, -193.487792, 1370.951660, 58.345447, 0.000000, 0.000000, 22.100006, -1, -1, -1, 500.00, 500.00, STREAMER_TAG_AREA, 2); 
	SetDynamicObjectMaterialText(natpisnabrdu, 0, "S", 90, "Ariel", 199, 1, 0xFFFFFFFF, 0x00000000, 1);
	natpisnabrdu = CreateDynamicObject(7914, -204.786880, 1366.642333, 53.645450, 0.000000, 0.000000, 22.100006, -1, -1, -1, 500.00, 500.00, STREAMER_TAG_AREA, 2); 
	SetDynamicObjectMaterialText(natpisnabrdu, 0, "Grad", 90, "Ariel", 50, 1, 0xFFFFFFFF, 0x00000000, 1);
	natpisnabrdu = CreateDynamicObject(7914, -197.393218, 1369.644897, 53.645450, 0.000000, 0.000000, 22.100006, -1, -1, -1, 500.00, 500.00, STREAMER_TAG_AREA, 2); 
	SetDynamicObjectMaterialText(natpisnabrdu, 0, "vasih", 90, "Ariel", 50, 1, 0xFFFFFFFF, 0x00000000, 1);
	natpisnabrdu = CreateDynamicObject(7914, -189.054489, 1373.031250, 53.645450, 0.000000, 0.000000, 22.100006, -1, -1, -1, 500.00, 500.00, STREAMER_TAG_AREA, 2); 
	SetDynamicObjectMaterialText(natpisnabrdu, 0, "snova!", 90, "Ariel", 50, 1, 0xFFFFFFFF, 0x00000000, 1);
	natpisnabrdu = CreateDynamicObject(7914, -234.259811, 1354.674804, 63.455455, 0.000000, 0.000000, 22.100006, -1, -1, -1, 500.00, 500.00, STREAMER_TAG_AREA, 2); 
	SetDynamicObjectMaterialText(natpisnabrdu, 0, "Dobrodosli", 90, "Ariel", 50, 1, 0xFFFFFFFF, 0x00000000, 1);
	natpisnabrdu = CreateDynamicObject(7914, -225.559722, 1358.207885, 63.455455, 0.000000, 0.000000, 22.100006, -1, -1, -1, 500.00, 500.00, STREAMER_TAG_AREA, 2); 
	SetDynamicObjectMaterialText(natpisnabrdu, 0, "u", 90, "Ariel", 50, 1, 0xFFFFFFFF, 0x00000000, 1);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	CreateObject(16088, -239.490112, 1361.025634, 57.734992, -0.300000, 88.600028, -68.099998, 400.0);
	CreateObject(16088, -226.936630, 1366.073730, 57.664157, -0.300000, 88.600028, -68.099998, 400.0);
	CreateObject(16088, -214.401779, 1371.113281, 57.593437, -0.300000, 88.600028, -68.099998, 400.0);
	CreateObject(16088, -201.894790, 1376.141479, 57.522853, -0.300000, 88.600028, -68.099998, 400.0);
	CreateObject(16088, -189.285751, 1381.210449, 57.451675, -0.300000, 88.600028, -68.099998, 400.0);
	CreateObject(16088, -229.674606, 1372.883300, 57.484870, -0.300000, 88.600028, -68.099998, 400.0);
	CreateObject(16088, -203.418182, 1375.692871, 53.456211, -0.300000, 88.600028, -68.099998, 400.0);
	CreateObject(16088, -195.260803, 1378.994750, 53.409629, -0.300000, 88.600028, -68.099998, 400.0);
	CreateObject(16088, -235.783645, 1362.656982, 63.152233, -0.300000, 88.600028, -68.099998, 400.0);
	CreateObject(16088, -235.681076, 1362.216796, 55.625755, -0.300000, -3.399931, -68.099998, 400.0);
	CreateObject(16088, -223.164672, 1367.248413, 55.555122, -0.300000, -3.399931, -68.099998, 400.0);
	CreateObject(16088, -210.648345, 1372.279541, 55.484485, -0.300000, -3.399931, -68.099998, 400.0);
	CreateObject(16088, -223.276626, 1367.685058, 63.081645, -0.300000, 88.600028, -68.099998, 400.0);
	CreateObject(16088, -210.769577, 1372.713378, 63.011066, -0.300000, 88.600028, -68.099998, 400.0);
	CreateObject(16088, -198.234710, 1377.752807, 62.940326, -0.300000, 88.600028, -68.099998, 400.0);
	CreateObject(16088, -185.718399, 1382.784790, 62.869705, -0.300000, 88.600028, -68.099998, 400.0);
	CreateObject(16088, -238.573699, 1369.595458, 62.969482, -0.300000, 88.600028, -68.099998, 400.0);
	CreateObject(16088, -226.048049, 1374.630615, 62.898780, -0.300000, 88.600028, -68.099998, 400.0);
	CreateObject(19378, -180.415420, 1380.979248, 63.878055, 0.000000, 90.099983, 21.700012, 400.0);
	CreateObject(19378, -190.152511, 1377.105102, 63.896308, 0.000000, 90.099983, 21.700012, 400.0);
	CreateObject(19378, -199.880508, 1373.233886, 63.914592, 0.000000, 90.099983, 21.700012, 400.0);
	CreateObject(19378, -209.608474, 1369.362304, 63.952808, 0.000000, 90.399978, 21.700012, 400.0);
	CreateObject(19378, -219.354736, 1365.483886, 64.026054, 0.000000, 90.399978, 21.700012, 400.0);
	CreateObject(19378, -229.110351, 1361.601684, 64.099365, 0.000000, 90.399978, 21.700012, 400.0);
	CreateObject(19378, -238.838058, 1357.730468, 64.172538, 0.000000, 90.399978, 21.700012, 400.0);
	CreateObject(19378, -183.972473, 1389.917236, 63.878055, 0.000000, 90.099983, 21.700012, 400.0);
	CreateObject(19378, -187.525665, 1398.846313, 63.878055, 0.000000, 90.099983, 21.700012, 400.0);
	CreateObject(19378, -242.398666, 1366.678344, 64.172538, 0.000000, 90.399978, 21.700012, 400.0);
	CreateObject(19378, -232.680206, 1370.546142, 64.099479, 0.000000, 90.399978, 21.700012, 400.0);
	CreateObject(19378, -222.943145, 1374.420410, 64.026313, 0.000000, 90.399978, 21.700012, 400.0);
	CreateObject(19378, -213.206069, 1378.295166, 63.953170, 0.000000, 90.399978, 21.700012, 400.0);
	CreateObject(970, -239.934249, 1352.303222, 64.799125, 0.000000, 0.000000, 21.699995, 400.0);
	CreateObject(970, -236.106231, 1353.826904, 64.799125, 0.000000, 0.000000, 21.699995, 400.0);
	CreateObject(970, -232.287521, 1355.346557, 64.789138, 0.000000, 0.299998, 21.699995, 400.0);
	CreateObject(970, -228.459655, 1356.869506, 64.747589, 0.000000, 0.699998, 21.699995, 400.0);
	CreateObject(970, -224.622619, 1358.396484, 64.697143, 0.000000, 0.699998, 21.699995, 400.0);
	CreateObject(970, -220.794876, 1359.920043, 64.646835, 0.000000, 0.699998, 21.699995, 400.0);
	CreateObject(970, -216.975906, 1361.439208, 64.626663, 0.000000, -0.100000, 21.699995, 400.0);
	CreateObject(970, -213.157333, 1362.958740, 64.606498, 0.000000, 0.699998, 21.699995, 400.0);
	CreateObject(970, -209.338684, 1364.477905, 64.576316, 0.000000, 0.699998, 21.699995, 400.0);
	CreateObject(970, -205.501617, 1366.004394, 64.525901, 0.000000, 0.699998, 21.699995, 400.0);
	CreateObject(970, -201.674728, 1367.527465, 64.505615, 0.000000, 0.000000, 21.699995, 400.0);
	CreateObject(970, -197.855957, 1369.046875, 64.515609, 0.000000, 0.000000, 21.699995, 400.0);
	CreateObject(970, -194.018646, 1370.573852, 64.525611, 0.000000, 0.000000, 21.699995, 400.0);
	CreateObject(970, -190.181365, 1372.100830, 64.525611, 0.000000, 0.000000, 21.699995, 400.0);
	CreateObject(970, -186.344024, 1373.628051, 64.525611, 0.000000, 0.000000, 21.699995, 400.0);
	CreateObject(970, -182.506668, 1375.155151, 64.525611, 0.000000, 0.000000, 21.699995, 400.0);
	CreateObject(970, -178.678634, 1376.678955, 64.525611, 0.000000, 0.000000, 21.699995, 400.0);
	CreateObject(970, -176.745925, 1377.448242, 64.525611, 0.000000, 0.000000, 21.699995, 400.0);
	CreateObject(970, -175.607406, 1380.120971, 64.495605, 0.000000, 0.000000, -68.200042, 400.0);
	CreateObject(970, -177.137420, 1383.946044, 64.495605, 0.000000, 0.000000, -68.200042, 400.0);
	CreateObject(970, -178.671157, 1387.780151, 64.495605, 0.000000, 0.000000, -68.200042, 400.0);
	CreateObject(970, -180.201263, 1391.604858, 64.495605, 0.000000, 0.000000, -68.200042, 400.0);
	CreateObject(970, -181.738800, 1395.447998, 64.495605, 0.000000, 0.000000, -68.200042, 400.0);
	CreateObject(970, -242.617889, 1353.458984, 64.805633, 0.000000, 0.000000, -68.200042, 400.0);
	CreateObject(970, -244.159149, 1357.311401, 64.805633, 0.000000, 0.000000, -68.200042, 400.0);
	CreateObject(970, -245.692871, 1361.145874, 64.805633, 0.000000, 0.000000, -68.200042, 400.0);
	CreateObject(951, -238.248672, 1353.510864, 64.949699, 0.000000, 0.000000, 22.800012, 400.0);
	CreateObject(951, -207.650527, 1365.717285, 64.949699, 0.000000, 0.000000, 22.800012, 400.0);
	CreateObject(951, -230.623260, 1356.605712, 64.949699, 0.000000, 0.000000, 22.800012, 400.0);
	CreateObject(951, -199.966278, 1368.750610, 64.949699, 0.000000, 0.000000, 22.800012, 400.0);
	CreateObject(951, -222.937515, 1359.662109, 64.949699, 0.000000, 0.000000, 22.800012, 400.0);
	CreateObject(951, -192.342727, 1371.746459, 64.949699, 0.000000, 0.000000, 22.800012, 400.0);
	CreateObject(951, -215.290115, 1362.680664, 64.949699, 0.000000, 0.000000, 22.800012, 400.0);
	CreateObject(19143, -240.631912, 1350.528320, 55.225418, 86.300018, 0.000000, 21.700000, 400.0);
	CreateObject(19143, -234.796997, 1352.850219, 55.225418, 86.300018, 0.000000, 21.700000, 400.0);
	CreateObject(19143, -227.633346, 1355.700683, 55.225418, 86.300018, 0.000000, 21.700000, 400.0);
	CreateObject(19143, -221.631164, 1358.089477, 55.225418, 86.300018, 0.000000, 21.700000, 400.0);
	CreateObject(19143, -212.627899, 1361.672363, 55.225418, 86.300018, 0.000000, 21.700000, 400.0);
	CreateObject(19143, -206.198287, 1364.231079, 55.225418, 86.300018, 0.000000, 21.700000, 400.0);
	CreateObject(19143, -199.081115, 1367.063476, 55.225418, 86.300018, 0.000000, 21.700000, 400.0);
	CreateObject(19143, -192.855941, 1369.541137, 55.225418, 86.300018, 0.000000, 21.700000, 400.0);
	CreateObject(19143, -186.119750, 1372.221679, 55.225418, 86.300018, 0.000000, 21.700000, 400.0);
	CreateObject(19143, -179.141998, 1374.998779, 55.225418, 86.300018, 0.000000, 21.700000, 400.0);
	CreateObject(951, -184.621490, 1374.795166, 64.949699, 0.000000, 0.000000, 22.800012, 400.0);
	CreateObject(951, -176.950195, 1377.834350, 64.949699, 0.000000, 0.000000, 22.800012, 400.0);

	//srednje kuce by tazgee
	CreateDynamicObject(3639, -122.916206, 1037.929443, 23.061677, 0.000000, 0.000000, 89.899993, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3640, -122.831932, 1008.044006, 23.166015, 0.000000, 0.000000, 90.199943, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3604, -126.113502, 1023.089965, 21.116878, 0.000000, 0.000000, 89.799987, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3639, -122.816619, 991.949218, 23.061677, 0.000000, 0.000000, 89.899993, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3604, -125.764099, 977.089355, 21.116878, 0.000000, 0.000000, 89.799987, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3640, -122.481529, 962.055114, 23.166015, 0.000000, 0.000000, 90.199943, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3604, -93.225173, 1010.613037, 21.196886, 0.000000, 0.000000, -90.100082, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3639, -96.779144, 996.214843, 23.061677, 0.000000, 0.000000, -90.100051, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3640, -96.622512, 1025.061279, 23.166015, 0.000000, 0.000000, -90.200035, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3639, -140.294631, 964.440795, 22.021652, 0.000000, 0.000000, -90.100051, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3640, -140.287292, 980.784667, 22.075990, 0.000000, 0.000000, -90.200035, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3640, -173.972381, 999.402770, 22.915981, 0.000000, 0.000000, -90.200035, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3639, -156.849105, 995.663696, 21.581642, 0.000000, 0.000000, -4.000057, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3640, -136.918304, 1037.870849, 23.166015, 0.000000, 0.000000, 179.899993, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3640, -152.948135, 1037.898071, 22.996011, 0.000000, 0.000000, 179.899993, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3639, -82.363510, 1050.919799, 22.881656, 0.000000, 0.000000, 89.899955, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3639, -174.268905, 973.363281, 21.738784, 0.000000, 2.799998, -90.100051, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3640, -160.931549, 973.260192, 21.635980, 0.000000, 0.000000, 90.899932, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3640, -100.421813, 1049.947143, 23.006010, 0.000000, 0.000000, -84.300018, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3639, -128.606094, 1059.074462, 22.991628, 0.000000, 0.000000, 1.299942, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3639, -157.982818, 1058.589233, 22.991628, 0.000000, 0.000000, 1.299942, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3604, -143.439971, 1061.352416, 21.116878, 0.000000, 0.000000, -0.200034, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3640, -160.680160, 957.251525, 21.625978, 0.000000, 0.000000, 90.899932, -1, -1, -1, 300.00, 300.00); 

	//AUTOBUSKE STANICE
	CreateDynamicObject(1257, -785.77930, 1583.69397, 27.13218,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1257, -1475.05151, 2662.94995, 55.98772,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1257, -222.33875, 2692.76978, 62.76694,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1257, -155.13292, 1207.21069, 19.97690,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1257, -1967.70227, 357.09348, 34.44018,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1257, -2723.71069, 423.91870, 4.62771,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1257, -1973.30933, -866.36432, 32.31245,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1257, -325.91592, 1081.82971, 19.91745,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1257, -51.88915, 946.30890, 19.76304,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1257, 38.18589, 1119.61121, 19.90167,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1257, 224.09413, -128.22758, 1.74975,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1257, 1313.24121, 281.12759, 19.65140,   0.00000, 0.00000, -24.84000);
	CreateDynamicObject(1257, 2435.58984, 32.78771, 26.67911,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1257, 1410.41028, -931.80933, 35.52307,   0.00000, 0.00000, 83.88000);
	CreateDynamicObject(1257, 1425.59363, -1740.96338, 13.65142,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1257, 2247.94409, -1392.73047, 24.14162,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1257, 2081.31836, 1317.61084, 11.00915,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1257, 2856.06567, 2069.08716, 11.00583,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1257, 1452.93103, 2721.77661, 10.98394,   0.00000, 0.00000, 90.00000);
	//NPC NA STANICAMA
	StanicaActor[0] = CreateActor(7,-787.2674,1583.5116,27.0055,217.3046); // BUSNPC
	SetPlayerSpecialAction(StanicaActor[0], SPECIAL_ACTION_SMOKE_CIGGY);
	ApplyActorAnimation(StanicaActor[0], "ped","idlestance_old",4.1, true, false, false, false, 0);
	StanicaActor[1] = CreateActor(15,-784.3415,1583.5623,27.0070,89.2441); // BUSNPC
	ApplyActorAnimation(StanicaActor[1], "GANGS","prtial_gngtlkA",4.1, true, false, false, false, 0);
	StanicaActor[2] = CreateActor(32,-785.6446,1583.4121,27.0024,270.4467); // BUSNPC
	ApplyActorAnimation(StanicaActor[2], "GANGS","prtial_gngtlkB",4.1, true, false, false, false, 0);
	StanicaActor[3] = CreateActor(38,-1473.7555,2663.1716,55.8359,40.7047); // BUSNPC
	ApplyActorAnimation(StanicaActor[3], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[4] = CreateActor(39,-1476.6168,2662.8965,55.8359,331.2498); // BUSNPC
	ApplyActorAnimation(StanicaActor[4], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[5] = CreateActor(162,-223.4926,2693.0281,62.6875,358.5651); // BUSNPC
	ApplyActorAnimation(StanicaActor[5], "ped","idlestance_old",4.1, true, false, false, false, 0);
	StanicaActor[6] = CreateActor(32,-221.5596,2692.9502,62.6875,5.7718); // BUSNPC
	ApplyActorAnimation(StanicaActor[6], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[7] = CreateActor(38,-156.9152,1207.4249,19.7422,218.5154); // BUSNPC
	ApplyActorAnimation(StanicaActor[7], "ped","idlestance_old",4.1, true, false, false, false, 0);
	StanicaActor[8] = CreateActor(14,-153.8491,1206.9226,19.7422,182.3526); // BUSNPC
	ApplyActorAnimation(StanicaActor[8], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	//StanicaActor[9] = CreateActor(38,-155.4453,1207.0286,19.7422,206.6361); // BUSNPC
	//ApplyActorAnimation(StanicaActor[9], "ped","idlestance_old",4.0,1,0,0,0,0);
	StanicaActor[10] = CreateActor(39,-155.2034,1206.8854,19.7422,155.7190); // BUSNPC
	ApplyActorAnimation(StanicaActor[10], "ped","idlestance_old",4.1, true, false, false, false, 0);
	StanicaActor[11] = CreateActor(7,-1967.0763,356.7847,34.2747,178.8667); // BUSNPC
	ApplyActorAnimation(StanicaActor[11], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[12] = CreateActor(15,-1969.0559,356.8628,34.3465,187.4051); // BUSNPC
	ApplyActorAnimation(StanicaActor[12], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[13] = CreateActor(38,-2725.4272,423.8633,4.3359,214.8378); // BUSNPC
	ApplyActorAnimation(StanicaActor[13], "ped","idlestance_old",4.1, true, false, false, false, 0);
	StanicaActor[14] = CreateActor(7,-2722.4639,423.6556,4.3359,164.3906); // BUSNPC
	ApplyActorAnimation(StanicaActor[14], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[15] = CreateActor(197,-1972.2676,-866.2682,32.2266,26.3268); // BUSNPC
	ApplyActorAnimation(StanicaActor[15], "ped","idlestance_old",4.1, true, false, false, false, 0);
	StanicaActor[16] = CreateActor(39,-1974.5190,-866.4379,32.2266,355.2907); // BUSNPC
	ApplyActorAnimation(StanicaActor[16], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[17] = CreateActor(197,-325.8154,1080.2203,19.7422,306.1127); // BUSNPC
	ApplyActorAnimation(StanicaActor[17], "ped","idlestance_old",4.1, true, false, false, false, 0);
	StanicaActor[18] = CreateActor(7,-325.8183,1081.5802,19.7422,276.6983); // BUSNPC
	ApplyActorAnimation(StanicaActor[18], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[19] = CreateActor(162,-325.6504,1083.4204,19.7422,242.9363); // BUSNPC
	ApplyActorAnimation(StanicaActor[19], "ped","idlestance_old",4.1, true, false, false, false, 0);
	StanicaActor[20] = CreateActor(197,-50.5866,946.2139,19.8669,34.6619); // BUSNPC
	ApplyActorAnimation(StanicaActor[20], "ped","idlestance_old",4.1, true, false, false, false, 0);
	StanicaActor[21] = CreateActor(7,-53.4559,946.6284,19.8300,347.8964); // BUSNPC
	ApplyActorAnimation(StanicaActor[21], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[22] = CreateActor(32,38.2230,1120.8667,19.7422,89.6406); // BUSNPC
	ApplyActorAnimation(StanicaActor[22], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[23] = CreateActor(39,37.8734,1119.6967,19.7422,100.3998); // BUSNPC
	ApplyActorAnimation(StanicaActor[23], "ped","idlestance_old",4.1, true, false, false, false, 0);
	StanicaActor[24] = CreateActor(15,38.2069,1118.1934,19.7422,72.2387); // BUSNPC
	ApplyActorAnimation(StanicaActor[24], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[25] = CreateActor(14,223.9968,-128.1925,1.5703,270.7923); // BUSNPCsedi
	ApplyActorAnimation(StanicaActor[25], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[26] = CreateActor(7,224.2901,-126.5406,1.5703,267.4239); // BUSNPC
	ApplyActorAnimation(StanicaActor[26], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[27] = CreateActor(197,223.9345,-129.8078,1.5781,290.3641); // BUSNPC
	ApplyActorAnimation(StanicaActor[27], "ped","idlestance_old",4.1, true, false, false, false, 0);
	StanicaActor[28] = CreateActor(14,1313.4417,281.8372,19.5547,64.1979); // BUSNPC
	ApplyActorAnimation(StanicaActor[28], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[29] = CreateActor(235,1312.6161,279.7270,19.5547,64.1979); // BUSNPC
	ApplyActorAnimation(StanicaActor[29], "ped","idlestance_old",4.1, true, false, false, false, 0);
	StanicaActor[30] = CreateActor(7,2436.7700,32.9846,26.4844,2.0791); // BUSNPC
	ApplyActorAnimation(StanicaActor[30], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[31] = CreateActor(197,2433.8191,33.3019,26.4844,317.5461); // BUSNPC
	ApplyActorAnimation(StanicaActor[31], "ped","idlestance_old",4.1, true, false, false, false, 0);
	StanicaActor[32] = CreateActor(15,1411.9972,-932.2895,35.6282,162.5504); // BUSNPC
	ApplyActorAnimation(StanicaActor[32], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[33] = CreateActor(235,1410.3315,-931.7454,35.5293,175.4364); // BUSNPC
	ApplyActorAnimation(StanicaActor[33], "ped","idlestance_old",4.1, true, false, false, false, 0);
	StanicaActor[34] = CreateActor(7,1408.5792,-931.7882,35.4259,175.5539); // BUSNPC
	ApplyActorAnimation(StanicaActor[34], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[35] = CreateActor(197,1427.0377,-1741.1414,13.5469,13.4924); // BUSNPC
	ApplyActorAnimation(StanicaActor[35], "ped","idlestance_old",4.1, true, false, false, false, 0);
	StanicaActor[36] = CreateActor(32,1423.9290,-1740.6536,13.5469,343.4904); // BUSNPC
	ApplyActorAnimation(StanicaActor[36], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[37] = CreateActor(39,2249.4917,-1392.7610,24.0002,28.6891); // BUSNPC
	ApplyActorAnimation(StanicaActor[37], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[38] = CreateActor(162,2246.2351,-1392.5288,23.9995,333.0328); // BUSNPC
	ApplyActorAnimation(StanicaActor[38], "ped","idlestance_old",4.1, true, false, false, false, 0);
	StanicaActor[39] = CreateActor(7,2247.9602,-1392.5875,23.9997,2.2122); // BUSNPC
	ApplyActorAnimation(StanicaActor[39], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[40] = CreateActor(235,2081.4333,1318.8777,10.8203,94.4113); // BUSNPC
	ApplyActorAnimation(StanicaActor[40], "ped","idlestance_old",4.1, true, false, false, false, 0);
	StanicaActor[41] = CreateActor(197,2081.0535,1316.4562,10.8203,64.5661); // BUSNPC
	ApplyActorAnimation(StanicaActor[41], "ped","idlestance_old",4.1, true, false, false, false, 0);
	StanicaActor[42] = CreateActor(15,2855.9580,2068.7764,10.8203,92.6256); // BUSNPC
	ApplyActorAnimation(StanicaActor[42], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[43] = CreateActor(32,2855.8423,2067.2446,10.8203,57.2578); // BUSNPC
	ApplyActorAnimation(StanicaActor[43], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[44] = CreateActor(39,1451.6228,2721.9067,10.8125,195.9875); // BUSNPC
	ApplyActorAnimation(StanicaActor[44], "ped","idlestance_old",4.1, true, false, false, false, 0);
	StanicaActor[45] = CreateActor(7,1454.5503,2721.6768,10.8125,159.6013); // BUSNPC
	ApplyActorAnimation(StanicaActor[45], "ped","IDLE_stance",4.1, true, false, false, false, 0);
	StanicaActor[46] = CreateActor(38,1452.3643,2721.7236,10.8125,182.1615); // BUSNPC
	ApplyActorAnimation(StanicaActor[46], "ped","idlestance_old",4.1, true, false, false, false, 0);
	StanicaActor[47] = CreateActor(15,1453.2018,2721.4058,10.8125,187.0575); // BUSNPC
	ApplyActorAnimation(StanicaActor[47], "ped","IDLE_stance",4.1, true, false, false, false, 0);


	//BUS STANICA
	CreateObject(3626, -161.32152, 1161.25354, 20.11620,   0.00000, 0.00000, 180.00000);
	CreateObject(11729, -157.49863, 1159.49036, 18.78620,   0.00000, 0.00000, 180.00000);
	CreateObject(11729, -158.15860, 1159.49036, 18.78620,   0.00000, 0.00000, 180.00000);
	CreateObject(11729, -158.81860, 1159.49036, 18.78620,   0.00000, 0.00000, 180.00000);
	CreateObject(11730, -159.47861, 1159.47290, 18.78620,   0.00000, 0.00000, 180.00000);
	CreateObject(11729, -160.13860, 1159.49036, 18.78620,   0.00000, 0.00000, 180.00000);
	CreateObject(940, -160.12904, 1161.11255, 21.19490,   0.00000, 0.00000, 0.00000);
	CreateObject(2165, -163.07629, 1162.28699, 18.87900,   0.00000, 0.00000, -90.00000);
	CreateObject(2356, -164.26971, 1162.21423, 18.88570,   0.00000, 0.00000, -133.07993);
	

	#if SNOW_MODE == 1
	
	#endif
	
// MAPE

	//novinari
	CreateDynamicObject(18238, -105.69358, 1078.38977, 18.72420,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3030, -107.16970, 1070.29089, 22.67746,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3031, -103.82610, 1073.03516, 25.23810,   0.00000, 0.00000, 42.96010);
	CreateDynamicObject(638, -101.19517, 1075.00427, 19.36790,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(638, -101.19520, 1082.06433, 19.36790,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16088, -90.67234, 1077.50940, 11.13207,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16088, -83.92050, 1070.80420, 11.13210,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(16088, -92.87390, 1070.83484, 11.13210,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3515, -90.69477, 1070.80591, 18.72015,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14468, -90.50987, 1073.83984, 19.24260,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14468, -90.63572, 1082.83704, 19.24260,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14468, -90.59939, 1078.22473, 19.24260,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14468, -78.73681, 1070.77539, 19.24260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14468, -82.78648, 1070.78577, 19.24260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14468, -87.20319, 1070.80981, 19.24260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14468, -94.79281, 1070.79871, 19.24260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14468, -99.13472, 1070.87024, 19.24260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(737, -77.11680, 1070.87085, 18.77890,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(737, -90.65455, 1084.39258, 18.77886,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(737, -86.04000, 1070.88538, 18.77890,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(737, -98.09240, 1070.92786, 18.77890,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(737, -90.46390, 1077.14697, 18.77890,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16088, -102.01521, 1087.56140, 11.13210,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14468, -96.99199, 1087.49475, 19.24260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14468, -100.71088, 1087.44702, 19.24260,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16088, -76.34568, 1077.53040, 11.13207,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16088, -76.35276, 1080.52734, 11.13207,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(14468, -76.50296, 1085.69946, 19.24260,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14468, -76.63999, 1081.84595, 19.24260,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14468, -76.56718, 1078.06299, 19.24260,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(14468, -76.51543, 1073.58984, 19.24260,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(737, -76.50980, 1087.23254, 18.77890,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(737, -76.58842, 1079.06567, 18.77890,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(737, -98.09241, 1087.71179, 18.77886,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1368, -94.85740, 1074.28149, 19.41310,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1368, -98.42650, 1074.28149, 19.41310,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1368, -98.42650, 1085.33252, 19.41310,   0.00000, 0.00000, 0.00000);

	//CENTAR 
	CreateDynamicObject(17536, -219.64415, 1117.28174, 23.42385,   0.00000, 0.00000, 90.06002);
	CreateDynamicObject(17536, -219.58096, 1179.41565, 23.42385,   0.00000, 0.00000, 90.06002);
	CreateDynamicObject(17536, -224.67258, 1138.98523, 23.40380,   0.00000, 0.00000, 0.06000);
	CreateDynamicObject(17536, -224.72375, 1157.59546, 23.40380,   0.00000, 0.00000, 0.06000);
	CreateDynamicObject(1693, -227.77203, 1116.89392, 36.59840,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1693, -220.18141, 1116.98853, 36.59840,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1693, -212.37852, 1116.97534, 36.59840,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1693, -227.56702, 1179.26416, 36.59840,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1693, -219.95494, 1179.41797, 36.59840,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1693, -212.34630, 1179.53857, 36.59840,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3030, -220.91301, 1146.46228, 34.60071,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3030, -222.72516, 1147.12842, 34.60071,   0.00000, 0.00000, 132.36014);
	CreateDynamicObject(1557, -215.74220, 1146.91565, 18.73080,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1557, -215.74220, 1149.93555, 18.73080,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19379, -210.74174, 1131.04419, 18.66965,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, -210.74170, 1140.66418, 18.66970,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, -210.74170, 1150.28418, 18.66970,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, -210.74170, 1159.88416, 18.66970,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19379, -210.74170, 1169.50427, 18.66970,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(970, -212.55240, 1146.54126, 19.29440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -208.16911, 1144.43616, 19.29440,   0.00000, 0.00000, -45.00000);
	CreateDynamicObject(970, -206.00211, 1139.93164, 19.29440,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, -206.00211, 1134.93164, 19.29440,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, -206.00211, 1129.93164, 19.29440,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, -212.55240, 1150.24133, 19.29440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -208.16910, 1152.39624, 19.29440,   0.00000, 0.00000, 45.00000);
	CreateDynamicObject(970, -206.00211, 1156.87158, 19.29440,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, -206.00211, 1161.87158, 19.29440,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, -206.00211, 1166.87158, 19.29440,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1215, -215.19981, 1146.49121, 19.27929,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -215.14250, 1150.26196, 19.27930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -210.12225, 1146.20715, 19.27929,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -210.12236, 1150.58801, 19.27929,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -206.41669, 1142.45935, 19.27929,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -206.43080, 1154.33154, 19.27929,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -206.05460, 1137.43066, 19.27929,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -206.05479, 1132.44067, 19.27929,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -206.06906, 1159.36572, 19.27929,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -206.05608, 1164.37061, 19.27929,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, -213.40315, 1143.95593, 17.99920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, -213.38344, 1152.83850, 17.99920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, -208.93454, 1140.95508, 17.99920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, -208.92749, 1155.71912, 17.99920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(823, -210.64032, 1141.20288, 19.23207,   0.00000, 0.00000, -90.12000);
	CreateDynamicObject(823, -210.22235, 1136.37988, 19.23207,   0.00000, 0.00000, -90.12000);
	CreateDynamicObject(823, -210.32060, 1131.21826, 19.23207,   0.00000, 0.00000, -90.12000);
	CreateDynamicObject(823, -211.31979, 1155.40613, 19.23207,   0.00000, 0.00000, -90.12000);
	CreateDynamicObject(823, -210.73260, 1161.30322, 19.23207,   0.00000, 0.00000, -90.12000);
	CreateDynamicObject(823, -210.57040, 1165.84192, 19.23207,   0.00000, 0.00000, -90.12000);
	CreateDynamicObject(886, -210.46365, 1134.47681, 18.51001,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(886, -210.22702, 1163.23242, 18.51001,   0.00000, 0.00000, -107.15996);
	CreateDynamicObject(737, -211.76862, 1141.99133, 18.67056,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(737, -211.21213, 1155.15405, 18.67056,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1280, -205.22572, 1139.97290, 19.03720,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1280, -205.22569, 1134.97290, 19.03720,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1280, -205.22569, 1129.97290, 19.03720,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1280, -205.22569, 1156.91125, 19.03720,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1280, -205.22569, 1161.91125, 19.03720,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1280, -205.22569, 1166.91125, 19.03720,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19817, -142.42667, 1160.73999, 17.01770,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19817, -137.20000, 1160.73999, 17.01770,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19817, -134.54030, 1160.74097, 17.01700,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19817, -142.42670, 1161.16003, 17.01770,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19817, -137.20000, 1161.16003, 17.01770,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19817, -134.54030, 1161.16101, 17.01700,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19903, -132.22710, 1158.81152, 18.72350,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1098, -142.54379, 1158.95801, 19.21730,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1098, -142.18491, 1158.95398, 19.21730,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1098, -141.80730, 1158.93372, 19.21730,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -140.47910, 1162.71826, 18.78270,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -136.36630, 1162.71826, 18.78270,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -132.26010, 1162.71826, 18.78270,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2063, -130.23210, 1158.89124, 19.59810,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(19899, -136.76509, 1158.98145, 18.68612,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19899, -134.18539, 1158.98145, 18.68610,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3287, -127.80970, 1164.48108, 20.76590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1098, -133.98380, 1158.97583, 20.25690,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1098, -134.32381, 1158.97583, 20.25690,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1098, -134.64380, 1158.97583, 20.25690,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1098, -133.98380, 1158.97583, 20.25690,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1098, -134.96381, 1158.97583, 20.25690,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1098, -135.28380, 1158.97583, 20.25690,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1098, -136.62379, 1158.97583, 20.25690,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1098, -136.94380, 1158.97583, 20.25690,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1098, -137.26379, 1158.97583, 20.25690,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1098, -137.56380, 1158.97583, 20.25690,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1098, -137.88380, 1158.97583, 20.25690,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1676, -139.00378, 1159.00330, 20.24414,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1676, -140.79187, 1159.01990, 20.24414,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(7922, -126.18240, 1158.89673, 20.10250,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(7922, -126.10651, 1187.51208, 20.10250,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(7922, -179.81604, 1187.77563, 20.10250,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(7922, -180.02098, 1159.14551, 20.10250,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8673, -125.56560, 1170.32239, 19.85230,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8673, -125.56200, 1177.75256, 19.85230,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8673, -168.62440, 1158.38232, 19.83230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8673, -155.60660, 1158.38550, 19.85230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8673, -180.54340, 1170.77356, 19.85230,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(8673, -180.54927, 1178.19336, 19.85230,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(7922, -132.71091, 1187.51208, 20.10250,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(7922, -143.23170, 1187.51208, 20.10250,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(8673, -168.20190, 1188.39526, 19.85230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(8673, -153.39931, 1188.38904, 19.85230,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1412, -128.90590, 1188.30615, 19.96670,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(12944, -173.43950, 1165.52466, 18.71990,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(19444, -173.43512, 1172.32458, 22.76789,   90.00000, 0.00000, 90.00000);
	CreateDynamicObject(638, -170.14740, 1172.83850, 19.29990,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(638, -176.73825, 1172.83850, 19.29990,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1215, -175.15430, 1172.84924, 19.27929,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -171.80585, 1172.84082, 19.27929,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19454, -174.90820, 1180.79407, 18.81690,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(3458, -160.51109, 1182.65686, 22.29100,   3.00000, 0.00000, 0.00000);
	CreateDynamicObject(3458, -160.49780, 1178.79553, 22.29100,   3.00000, 0.00000, 180.00000);
	CreateDynamicObject(18762, -163.99809, 1180.71057, 18.63790,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, -156.99850, 1180.71057, 18.63790,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, -150.01860, 1180.71057, 18.63790,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, -142.79510, 1180.71057, 18.63790,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, -171.00470, 1180.71057, 18.63790,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(18762, -178.16850, 1180.71057, 18.63790,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19454, -165.27080, 1180.79407, 18.81690,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, -155.63680, 1180.79407, 18.81690,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(19454, -146.01540, 1180.79407, 18.81690,   0.00000, 90.00000, 90.00000);
	CreateDynamicObject(18014, -174.55341, 1180.75415, 19.31770,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18014, -167.42870, 1180.75415, 19.31770,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18014, -160.46500, 1180.75415, 19.31770,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18014, -153.50771, 1180.75415, 19.31770,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(18014, -146.26280, 1180.75415, 19.31770,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(2010, -156.13451, 1180.75415, 18.87490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2010, -150.80890, 1180.75415, 18.87490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2010, -149.06870, 1180.75415, 18.87490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2010, -143.56880, 1180.75415, 18.87490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2010, -157.80960, 1180.75415, 18.87490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2010, -163.09190, 1180.75415, 18.87490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2010, -164.77110, 1180.75415, 18.87490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2010, -170.08749, 1180.75415, 18.87490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2010, -171.84920, 1180.75415, 18.87490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(2010, -177.21249, 1180.75415, 18.87490,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1280, -174.44101, 1179.87109, 19.26497,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1280, -167.36079, 1179.87109, 19.26500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1280, -160.47501, 1179.87109, 19.26500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1280, -153.47420, 1179.87109, 19.26500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1280, -146.19189, 1179.87109, 19.26500,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1280, -146.25340, 1181.63000, 19.26500,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1280, -153.56700, 1181.63000, 19.26500,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1280, -160.55640, 1181.63000, 19.26500,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1280, -167.38390, 1181.63000, 19.26500,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1280, -174.48080, 1181.63000, 19.26500,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(970, -187.97380, 1185.92688, 19.29440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -198.09920, 1185.92688, 19.29440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -193.06783, 1184.55383, 19.29440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -182.95799, 1184.55383, 19.29440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -203.06841, 1184.55383, 19.29440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -185.40871, 1185.18481, 19.27930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -190.70192, 1185.18481, 19.27929,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -195.42220, 1185.18481, 19.27930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -200.68871, 1185.18481, 19.27930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(4005, -164.72989, 1132.61743, 20.23802,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(1557, -175.56760, 1115.80481, 18.73080,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1557, -175.56551, 1112.78796, 18.73080,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(19454, -175.51662, 1114.29797, 16.68624,   90.00000, 0.00000, 0.00000);
	CreateDynamicObject(19377, -175.33121, 1113.14282, 18.72360,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -175.33121, 1122.75623, 18.72360,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -175.33121, 1132.37610, 18.72360,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -175.33121, 1142.00183, 18.72360,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -175.33099, 1148.98047, 18.72300,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -175.33121, 1153.60522, 18.72360,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -164.86909, 1153.60522, 18.72360,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -154.40390, 1153.60522, 18.72360,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -143.90440, 1153.60522, 18.72360,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -143.90440, 1143.98083, 18.72360,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -154.29430, 1143.17896, 18.72300,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -154.29430, 1143.98083, 18.72360,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -143.91071, 1143.18372, 18.72300,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -139.36549, 1153.60522, 18.72300,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -139.36549, 1143.98840, 18.72300,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -139.36690, 1143.18164, 18.72000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -145.57967, 1133.56079, 18.72360,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -145.57970, 1123.96191, 18.72360,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -145.57970, 1114.32629, 18.72360,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -145.57970, 1113.16638, 18.72300,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -139.36549, 1133.56201, 18.72300,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -139.36549, 1123.94189, 18.72300,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -139.20378, 1114.45264, 18.72300,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(19377, -139.14940, 1113.14624, 18.72000,   0.00000, 90.00000, 0.00000);
	CreateDynamicObject(970, -161.95827, 1156.13391, 19.29440,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, -193.03783, 1111.18591, 19.29440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -182.95779, 1111.18591, 19.29440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -203.12601, 1111.18591, 19.29440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -198.07520, 1112.36206, 19.29440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -188.07730, 1112.36206, 19.29440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -178.11223, 1108.37085, 19.29440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -180.54491, 1110.53882, 19.29440,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, -178.16110, 1112.66760, 19.29440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -178.16110, 1115.89148, 19.29440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -180.54491, 1118.01636, 19.29440,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3515, -177.68536, 1110.42676, 17.99920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, -177.68539, 1118.02356, 17.99920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(970, -178.16110, 1120.15466, 19.29440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1693, -154.68063, 1146.03906, 34.41227,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1693, -159.79350, 1146.03906, 34.41230,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1693, -164.99370, 1146.03906, 34.41230,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(3030, -170.47932, 1146.66602, 32.53029,   0.00000, 0.00000, 132.36014);
	CreateDynamicObject(3934, -155.97092, 1114.21729, 33.26589,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3934, -167.45000, 1114.21729, 33.26590,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(16003, -155.76923, 1136.09021, 34.57009,   0.00000, 0.00000, 270.00000);
	CreateDynamicObject(3932, -159.33069, 1136.39441, 34.45696,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3932, -159.33070, 1136.39441, 34.45700,   0.00000, 0.00000, 180.00000);
	CreateDynamicObject(17049, -165.42979, 1124.92163, 16.24270,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(17049, -156.40730, 1124.92163, 16.24270,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(759, -177.85744, 1118.04541, 18.22149,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(759, -178.09070, 1110.28442, 18.22150,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19150, -206.28635, 1142.37671, 19.92616,   50.00000, 0.00000, 45.00000);
	CreateDynamicObject(19150, -206.29564, 1154.47388, 19.92620,   50.00000, 0.00000, 135.00000);
	CreateDynamicObject(19150, -205.92030, 1137.44299, 19.92620,   50.00000, 0.00000, 90.00000);
	CreateDynamicObject(19150, -205.92030, 1132.44299, 19.92620,   50.00000, 0.00000, 90.00000);
	CreateDynamicObject(19150, -205.92030, 1137.44299, 19.92620,   50.00000, 0.00000, 90.00000);
	CreateDynamicObject(19150, -205.91292, 1159.36462, 19.92620,   50.00000, 0.00000, 90.00000);
	CreateDynamicObject(19150, -205.91290, 1164.36462, 19.92620,   50.00000, 0.00000, 90.00000);
	CreateDynamicObject(3515, -172.80159, 1128.69617, 17.99920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, -174.09921, 1133.98560, 17.99920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, -175.91635, 1124.35193, 17.99920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, -175.56659, 1138.86499, 17.99920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, -176.75479, 1143.36829, 17.99920,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(823, -175.94096, 1143.17065, 17.91390,   0.00000, 0.00000, -90.12000);
	CreateDynamicObject(823, -175.33980, 1139.40967, 17.91390,   0.00000, 0.00000, -90.12000);
	CreateDynamicObject(823, -173.80840, 1134.80579, 17.91390,   0.00000, 0.00000, -90.12000);
	CreateDynamicObject(823, -172.19810, 1129.35388, 17.91390,   0.00000, 0.00000, -90.12000);
	CreateDynamicObject(823, -175.25610, 1124.56409, 17.91390,   0.00000, 0.00000, -90.12000);
	CreateDynamicObject(823, -176.27248, 1128.15784, 17.91395,   0.00000, 0.00000, -90.12000);
	CreateDynamicObject(823, -176.58600, 1132.84595, 17.91390,   0.00000, 0.00000, -90.12000);
	CreateDynamicObject(14467, -176.93086, 1129.21826, 21.38920,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(823, -176.79263, 1136.97913, 17.91390,   0.00000, 0.00000, -90.12000);
	CreateDynamicObject(823, -177.16124, 1123.15796, 17.91390,   0.00000, 0.00000, -135.29999);
	CreateDynamicObject(3935, -177.06009, 1131.49060, 21.11934,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(886, -173.88779, 1131.64551, 18.51001,   0.00000, 0.00000, 84.00001);
	CreateDynamicObject(886, -175.21094, 1127.08875, 18.51001,   0.00000, 0.00000, 82.20000);
	CreateDynamicObject(886, -178.54036, 1123.02795, 18.51001,   0.00000, 0.00000, 82.20000);
	CreateDynamicObject(886, -176.43491, 1135.35486, 18.51001,   0.00000, 0.00000, 45.83984);
	CreateDynamicObject(886, -177.79523, 1140.17896, 18.51001,   0.00000, 0.00000, 45.83984);
	CreateDynamicObject(970, -180.54491, 1123.01636, 19.29440,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, -180.54491, 1128.01636, 19.29440,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, -180.54491, 1133.01636, 19.29440,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, -180.54491, 1138.01636, 19.29440,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, -180.54491, 1143.01636, 19.29440,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(970, -177.88130, 1146.07349, 19.29440,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -180.38995, 1115.94177, 19.27929,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -180.39439, 1112.60803, 19.27930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -180.45889, 1120.47412, 19.27930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -180.45889, 1125.47412, 19.27930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -180.45889, 1130.47412, 19.27930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -180.45889, 1135.47412, 19.27930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -180.45889, 1140.47412, 19.27930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -180.21490, 1145.58582, 19.27930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1215, -180.37453, 1108.43359, 19.27930,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(19150, -180.61470, 1130.48987, 19.92620,   50.00000, 0.00000, -90.00000);
	CreateDynamicObject(19150, -180.61470, 1135.48987, 19.92620,   50.00000, 0.00000, -90.00000);
	CreateDynamicObject(19150, -180.61470, 1140.48987, 19.92620,   50.00000, 0.00000, -90.00000);
	CreateDynamicObject(19150, -180.30173, 1145.70093, 19.92620,   50.00000, 0.00000, -135.00000);
	CreateDynamicObject(19150, -180.61470, 1125.48987, 19.92620,   50.00000, 0.00000, -90.00000);
	CreateDynamicObject(19150, -180.61470, 1120.48987, 19.92620,   50.00000, 0.00000, -90.00000);
	CreateDynamicObject(19150, -180.51605, 1115.97961, 19.92620,   50.00000, 0.00000, -90.00000);
	CreateDynamicObject(19150, -180.53398, 1112.62659, 19.92620,   50.00000, 0.00000, -90.00000);
	CreateDynamicObject(19150, -180.48242, 1108.31958, 19.92620,   50.00000, 0.00000, -45.00000);
	CreateDynamicObject(16061, -193.08505, 1147.48438, 18.18616,   0.00000, 0.00000, 0.00000);
	CreateObject(19335, -170.24037, 1125.03796, 76.52209,   0.00000, 0.00000, 0.00000);
	CreateObject(19337, -211.74030, 1142.24109, 92.25484,   0.00000, 0.00000, 0.00000);
	CreateObject(19338, -180.09938, 1178.64819, 78.32144,   0.00000, 0.00000, 0.00000);
	

	//POSTA
	CreateDynamicObject(16006, -152.727798, 1076.852172, 18.452180, 0.000000, 0.000000, 89.799903, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3515, -145.354919, 1083.928588, 18.593750, 0.000000, -0.000004, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(3515, -160.084609, 1083.928588, 18.593750, 0.000000, -0.000004, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(640, -144.879791, 1087.161376, 19.393753, 0.000000, 0.000000, 89.799964, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(640, -160.409637, 1087.216064, 19.393753, 0.000000, 0.000000, 89.799964, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(1280, -149.725204, 1087.186767, 19.122184, 0.000000, 0.000000, -90.199996, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(1280, -155.645172, 1087.207885, 19.122184, 0.000000, 0.000000, -90.199996, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(800, -146.336425, 1084.357421, 18.742187, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(800, -158.704299, 1084.341430, 18.742187, 0.000000, 0.000000, 102.700042, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(970, -152.723495, 1092.985473, 19.283756, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(970, -158.883483, 1092.985473, 19.283756, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(970, -146.523529, 1092.985473, 19.283756, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(1215, -155.844528, 1092.988891, 19.263759, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(1215, -149.644577, 1092.988891, 19.263759, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(800, -145.446411, 1069.784790, 18.742187, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(800, -145.446411, 1074.444824, 18.742187, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(800, -145.446411, 1078.935058, 18.742187, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(800, -160.361663, 1070.104370, 18.742187, 0.000000, 0.000000, -179.900009, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(800, -160.370910, 1075.405029, 18.742187, 0.000000, 0.000000, -179.900009, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(800, -160.379608, 1080.395141, 18.742187, 0.000000, 0.000000, -179.900009, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(660, -143.089813, 1085.829833, 18.593750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(660, -147.749786, 1085.829833, 18.593750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(660, -163.029876, 1085.829833, 18.593750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(660, -157.269989, 1085.829833, 18.593750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(14468, -142.994583, 1083.879882, 19.512189, 0.000000, 0.000000, 90.199996, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(14468, -142.979644, 1079.580200, 19.512189, 0.000000, 0.000000, 90.199996, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(14468, -142.965408, 1075.489624, 19.512189, 0.000000, 0.000000, 90.199996, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(14468, -142.949661, 1070.979370, 19.512189, 0.000000, 0.000000, 90.199996, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(14468, -142.942520, 1068.929077, 19.512189, 0.000000, 0.000000, 90.199996, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(14468, -145.052902, 1085.135253, 19.512189, 0.000000, 0.000000, -179.899963, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(14468, -160.032943, 1085.109741, 19.512189, 0.000000, 0.000000, -179.899963, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(14468, -162.639312, 1084.100585, 19.512189, 0.000000, 0.000000, -89.799964, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(14468, -162.625411, 1080.120605, 19.512189, 0.000000, 0.000000, -89.799964, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(14468, -162.610717, 1075.930541, 19.512189, 0.000000, 0.000000, -89.799964, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(14468, -162.595596, 1071.600463, 19.512189, 0.000000, 0.000000, -89.799964, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(660, -143.089813, 1067.888916, 18.593750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(660, -143.089813, 1076.900024, 18.593750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(660, -163.219909, 1076.900024, 18.593750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(660, -163.219909, 1068.609375, 18.593750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(19425, -121.000274, 1068.655639, 18.776678, 0.000000, 0.000000, 86.099990, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(19425, -124.522071, 1068.894409, 18.776678, 0.000000, 0.000000, 86.099990, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(19425, -128.013977, 1069.132690, 18.776678, 0.000000, 0.000000, 86.099990, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(19425, -131.545745, 1069.373168, 18.776678, 0.000000, 0.000000, 86.099990, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(19425, -135.047683, 1069.611938, 18.776678, 0.000000, 0.000000, 86.099990, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(19425, -138.739028, 1069.862548, 18.776678, 0.000000, 0.000000, 86.099990, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(19425, -117.637969, 1068.423828, 18.776678, 0.000000, 0.000000, 86.099990, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(8674, -124.156059, 1088.328247, 19.172197, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(8674, -129.296035, 1088.328247, 19.172197, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(967, -133.497406, 1087.496337, 18.742187, 0.000000, 0.000000, 90.899818, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(966, -134.739746, 1088.883789, 18.593750, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(1215, -143.364715, 1092.888793, 19.263759, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(1215, -162.104446, 1092.988891, 19.263759, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(19425, -132.455581, 1090.994018, 18.776678, 0.000000, 0.000000, 89.599952, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(19425, -129.145660, 1090.970581, 18.776678, 0.000000, 0.000000, 89.599952, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(19425, -125.845771, 1090.947265, 18.776678, 0.000000, 0.000000, 89.599952, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(19425, -122.545837, 1090.923950, 18.776678, 0.000000, 0.000000, 89.599952, -1, -1, -1, 300.00, 300.00); 
	CreateDynamicObject(19425, -119.235939, 1090.900390, 18.776678, 0.000000, 0.000000, 89.599952, -1, -1, -1, 300.00, 300.00); 

//POSTAINTERIOR
	new postainterior;
	postainterior = CreateDynamicObject(7914, -270.859008, 1538.759765, 31.567161, -89.899940, -89.900024, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(postainterior, 0, "______________", 120, "Ariel", 20, 0, 0xFFFFFFFF, 0x00000000, 1);
	postainterior = CreateDynamicObject(7914, -270.910675, 1536.318115, 31.562910, -89.899940, 179.799942, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(postainterior, 0, "___", 120, "Ariel", 20, 0, 0xFFFFFFFF, 0x00000000, 1);
	postainterior = CreateDynamicObject(7914, -270.924957, 1540.418090, 31.570068, -89.899940, 179.799942, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(postainterior, 0, "___", 120, "Ariel", 20, 0, 0xFFFFFFFF, 0x00000000, 1);
	postainterior = CreateDynamicObject(7914, -270.917633, 1538.296386, 31.566375, -89.899940, 179.799942, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(postainterior, 0, "___", 120, "Ariel", 20, 0, 0xFFFFFFFF, 0x00000000, 1);
	postainterior = CreateDynamicObject(19325, -270.648773, 1537.704223, 32.010818, 0.000000, 86.600074, 179.799957, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(postainterior, 0, "Salter 1", 130, "Ariel", 20, 1, 0xFFFFFFFF, 0x00000000, 1);
	postainterior = CreateDynamicObject(19325, -270.662414, 1539.755981, 32.002025, 0.000000, 86.600074, 179.799957, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterialText(postainterior, 0, "Salter 2", 130, "Ariel", 20, 1, 0xFFFFFFFF, 0x00000000, 1);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	postainterior = CreateDynamicObject(14444, -282.345062, 1542.376220, 31.812652, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(14444, -282.345062, 1542.376220, 31.812652, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1557, -256.853454, 1537.135620, 31.988250, 0.000000, 0.000000, -90.199958, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1557, -256.863952, 1534.094970, 31.998249, 0.000000, 0.000000, 89.800071, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(19172, -279.039764, 1535.476928, 35.790050, 0.000000, 0.000000, 89.899787, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(19173, -279.030670, 1537.404296, 34.487136, 0.000000, 0.000000, 90.099960, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2267, -278.994506, 1538.612548, 33.479583, 0.000000, 0.000000, 90.099945, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2258, -278.998199, 1539.587036, 34.701663, 0.000000, 0.000000, 89.999946, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2281, -278.524627, 1535.421752, 33.675735, 0.000000, 0.000000, 90.000030, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2272, -278.534973, 1537.939575, 35.205108, 0.000000, 0.000000, 90.000053, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2261, -278.519378, 1536.850341, 33.079887, 0.000000, 0.000000, 90.400062, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2272, -278.522491, 1540.343872, 33.221515, 0.000000, 0.000000, 90.900024, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2282, -278.536346, 1539.212646, 35.532806, 0.000000, 0.000000, 89.699966, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(8674, -256.939514, 1550.313232, 37.634643, 0.000000, 0.000000, -89.999931, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1491, -284.541351, 1545.455810, 31.998876, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1491, -281.521392, 1545.474487, 32.008876, 0.000000, 0.000000, 179.800033, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1671, -274.521606, 1536.951293, 32.422332, 0.000000, 0.000000, 122.099952, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1671, -274.405639, 1539.919677, 32.422332, 0.000000, 0.000000, 76.899971, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2281, -278.524627, 1540.611694, 35.625709, 0.000000, 0.000000, 90.000030, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2261, -278.528747, 1541.061035, 34.309886, 0.000000, 0.000000, 90.400062, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1368, -259.603088, 1530.148681, 32.652328, 0.000000, 0.000000, 179.899917, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1368, -263.443054, 1530.155761, 32.652328, 0.000000, 0.000000, 179.899917, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1368, -267.352966, 1530.163085, 32.652328, 0.000000, 0.000000, 179.899917, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1368, -267.323699, 1546.655151, 32.652328, 0.000000, 0.000000, 179.899917, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1368, -263.414459, 1546.666992, 32.652328, 0.000000, 0.000000, 179.899917, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1368, -259.574096, 1546.679931, 32.652328, 0.000000, 0.000000, 179.899917, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1368, -259.581329, 1545.649169, 32.652328, 0.000000, 0.000000, -0.400031, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1368, -263.441375, 1545.677734, 32.652328, 0.000000, 0.000000, -0.400031, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1368, -267.341369, 1545.705688, 32.652328, 0.000000, 0.000000, -0.400031, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1808, -278.872375, 1529.900634, 31.992340, 0.000000, 0.000000, 88.899986, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1829, -284.920318, 1538.217529, 32.472335, 0.000000, 0.000000, 141.999938, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1959, -272.909973, 1536.721923, 33.013607, 0.000000, 0.000000, -101.500007, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1959, -272.976135, 1541.081787, 33.013607, 0.000000, 0.000000, -62.600032, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2164, -278.977203, 1530.702880, 31.992340, 0.000000, 0.000000, 90.099983, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2161, -278.994018, 1532.465332, 31.992343, 0.000000, 0.000000, 89.899993, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2163, -278.981109, 1533.780395, 31.992340, 0.000000, 0.000000, 90.199958, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2182, -272.545928, 1531.052978, 31.997722, 0.000000, 0.000000, 179.700119, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2186, -274.651916, 1530.133544, 31.999420, 0.000000, 0.000000, -179.799957, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2197, -276.362335, 1531.096313, 31.992340, 0.000000, 0.000000, 179.899978, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2197, -277.092346, 1531.097656, 31.992340, 0.000000, 0.000000, 179.899978, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2201, -273.892791, 1542.861083, 33.034252, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2190, -272.587738, 1538.104980, 33.025905, 0.000000, 0.000000, -86.599990, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2190, -272.907531, 1538.706176, 33.025905, 0.000000, 0.000000, -138.799972, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2604, -272.417633, 1533.089965, 32.704402, 0.000000, 0.000000, -89.899986, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2611, -278.971710, 1533.010864, 34.053375, 0.000000, 0.000000, 90.099945, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2853, -275.609832, 1542.632690, 33.050018, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(19808, -273.177154, 1539.713623, 33.086170, 0.000000, 0.000000, -117.599990, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(19808, -273.280883, 1537.812011, 33.086170, 0.000000, 0.000000, -62.799976, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(19807, -272.872741, 1540.466796, 33.106170, 0.000000, 0.000000, -69.999992, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(19807, -272.731201, 1537.329223, 33.106170, 0.000000, 0.000000, -98.799972, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1438, -282.753326, 1538.373291, 31.992340, 0.000000, 0.000000, -173.699966, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1271, -280.777191, 1537.846191, 32.342338, 0.000000, 0.000000, 22.399999, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1438, -282.739044, 1538.244018, 32.602344, 0.000000, 0.000000, -173.699966, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(11729, -280.558074, 1539.030639, 31.862337, 0.000000, 0.000000, -89.700057, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(11729, -280.561462, 1539.681274, 31.862337, 0.000000, 0.000000, -89.700057, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(11729, -280.564819, 1540.331909, 31.862337, 0.000000, 0.000000, -89.700057, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(11730, -280.530303, 1540.987915, 31.862337, 0.000000, 0.000000, -89.899993, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(11729, -280.571746, 1541.651611, 31.862337, 0.000000, 0.000000, -89.700057, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(1776, -270.847808, 1530.115478, 33.068416, 0.000000, 0.000000, 179.800064, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2002, -269.995056, 1530.124633, 31.978143, 0.000000, 0.000000, -179.699966, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2267, -278.984741, 1533.082031, 35.319580, 0.000000, 0.000000, 90.099945, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(19173, -279.019378, 1530.924438, 34.687137, 0.000000, 0.000000, 90.099960, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2258, -278.998199, 1531.406738, 35.831665, 0.000000, 0.000000, 89.999946, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2261, -278.472625, 1530.160278, 35.399894, 0.000000, 0.000000, 90.400062, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2261, -278.501708, 1534.340332, 33.619907, 0.000000, 0.000000, 90.400062, -1, -1, -1, 300.00, 300.00); 
	postainterior = CreateDynamicObject(2282, -278.538208, 1533.102172, 35.942806, 0.000000, 0.000000, 89.699966, -1, -1, -1, 300.00, 300.00); 

//BANKAINTERIOR
	new bankainterior;
	bankainterior = CreateDynamicObject(19454, 1457.844360, -992.780700, 13.943711, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF000000);
	bankainterior = CreateDynamicObject(19454, 1457.844360, -992.320251, 13.943715, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF000000);
	bankainterior = CreateDynamicObject(19454, 1453.103027, -987.606079, 13.943709, 0.000000, 0.000000, -89.799911, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF000000);
	bankainterior = CreateDynamicObject(19454, 1453.117797, -997.536743, 13.933707, 0.000000, 0.000000, -89.799911, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF000000);
	bankainterior = CreateDynamicObject(19458, 1455.172607, -981.903930, 16.936452, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1476.124511, -981.903930, 16.936452, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1476.124511, -991.533569, 16.936452, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1476.124511, -1001.163879, 16.936452, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1471.244750, -1005.544433, 16.936452, 0.000000, 0.000000, 89.600021, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1461.653686, -1005.478210, 16.936452, 0.000000, 0.000000, 89.600021, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1452.053833, -1005.411132, 16.936452, 0.000000, 0.000000, 89.600021, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19454, 1478.248901, -997.478698, 13.933707, 0.000000, 0.000000, -89.799911, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF000000);
	bankainterior = CreateDynamicObject(19454, 1478.214355, -987.628479, 13.933707, 0.000000, 0.000000, -89.799911, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF000000);
	bankainterior = CreateDynamicObject(19454, 1473.492187, -992.416503, 13.933707, 0.000000, 0.000000, 0.100084, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF000000);
	bankainterior = CreateDynamicObject(19454, 1473.492187, -992.766845, 13.933707, 0.000000, 0.000000, 0.100084, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF000000);
	bankainterior = CreateDynamicObject(19458, 1455.172607, -972.293701, 16.936452, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1476.123168, -981.913818, 20.436458, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1455.172607, -972.293701, 20.436458, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1476.123168, -972.293701, 20.436458, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1476.123168, -972.293701, 16.956459, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19454, 1459.353637, -971.339233, 17.506990, 0.000000, 0.000000, 89.900009, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFF00);
	bankainterior = CreateDynamicObject(19454, 1455.314575, -970.146545, 14.780833, -90.299995, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF000000);
	bankainterior = CreateDynamicObject(19454, 1457.455078, -970.146545, 14.780833, -90.299995, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF000000);
	bankainterior = CreateDynamicObject(19454, 1459.694824, -970.146545, 14.780833, -90.299995, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF000000);
	bankainterior = CreateDynamicObject(19454, 1461.906250, -970.146545, 14.780833, -90.299995, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF000000);
	bankainterior = CreateDynamicObject(19454, 1464.236938, -970.146545, 14.780833, -90.299995, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF000000);
	bankainterior = CreateDynamicObject(19458, 1475.246582, -971.244995, 20.426454, 0.000000, 0.000000, 89.599975, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1475.246582, -971.244995, 16.946445, 0.000000, 0.000000, 89.599975, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1470.511962, -966.474426, 20.436458, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1470.511962, -966.474426, 16.946462, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1476.123168, -991.533874, 20.436458, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1476.123168, -1001.163696, 20.436458, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1455.171264, -1001.143676, 20.426458, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1455.171264, -991.533752, 20.426458, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1455.171264, -981.903808, 20.426458, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1471.244750, -1005.544433, 20.436454, 0.000000, 0.000000, 89.600021, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1461.655029, -1005.477172, 20.436454, 0.000000, 0.000000, 89.600021, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1452.054565, -1005.410156, 20.436454, 0.000000, 0.000000, 89.600021, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1455.172607, -962.664123, 20.436458, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1455.172607, -962.664123, 16.956445, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1461.902343, -965.094848, 20.436441, 0.000000, 0.000000, -90.099952, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1461.902343, -965.094848, 16.956438, 0.000000, 0.000000, -90.099952, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1452.272460, -965.078430, 16.956438, 0.000000, 0.000000, -90.099952, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1452.272460, -965.078430, 20.456441, 0.000000, 0.000000, -90.099952, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1473.082885, -965.114440, 20.456441, 0.000000, 0.000000, -90.099952, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1473.082885, -965.114440, 16.966438, 0.000000, 0.000000, -90.099952, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1468.322631, -965.095886, 22.416429, 0.000000, 0.000000, -90.099952, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19454, 1466.222412, -1000.628173, 15.169792, 0.000000, 89.899971, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF330000);
	bankainterior = CreateDynamicObject(19454, 1466.222412, -991.008239, 15.169792, 0.000000, 89.899971, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF330000);
	bankainterior = CreateDynamicObject(19454, 1466.222412, -981.388244, 15.169792, 0.000000, 89.899971, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF330000);
	bankainterior = CreateDynamicObject(19454, 1459.687866, -979.559875, 15.172887, 0.000000, 89.899971, 89.500022, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF330000);
	bankainterior = CreateDynamicObject(19454, 1472.789916, -979.673645, 15.172887, 0.000000, 89.899971, 89.500022, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF330000);
	bankainterior = CreateDynamicObject(19454, 1472.764038, -1006.705444, 15.175692, 0.000000, 89.899971, 89.500022, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF330000);
	bankainterior = CreateDynamicObject(19454, 1459.714355, -1006.601867, 15.155674, 0.000000, 89.899971, 89.500022, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF330000);
	bankainterior = CreateDynamicObject(19454, 1453.981567, -1000.628173, 15.148422, 0.000000, 89.899971, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF330000);
	bankainterior = CreateDynamicObject(19454, 1453.981567, -985.357788, 15.148422, 0.000000, 89.899971, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF330000);
	bankainterior = CreateDynamicObject(19454, 1477.331909, -985.357788, 15.189187, 0.000000, 89.899971, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF330000);
	bankainterior = CreateDynamicObject(19454, 1477.331909, -1000.737976, 15.189187, 0.000000, 89.899971, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFF330000);
	bankainterior = CreateDynamicObject(19458, 1470.511962, -956.864379, 16.946462, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1470.511962, -956.864379, 20.426456, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1468.496826, -958.238037, 19.746437, 0.000000, 0.000000, 89.500030, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1455.736572, -958.127319, 19.746437, 0.000000, 0.000000, 89.500030, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1455.736572, -958.127319, 23.246442, 0.000000, 0.000000, 89.500030, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1465.285888, -958.210876, 22.556427, 0.000000, 0.000000, 89.500030, -1, -1, -1, 200.00, 200.00);
	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	bankainterior = CreateDynamicObject(19458, 1474.926635, -958.293762, 23.226448, 0.000000, 0.000000, 89.500030, -1, -1, -1, 200.00, 200.00);

	SetDynamicObjectMaterial(bankainterior, 0, -1, "none", "none", 0xFFFFFFFF);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	bankainterior = CreateDynamicObject(19375, 1470.930908, -1001.138549, 15.150217, 0.000000, -90.100013, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19375, 1460.451782, -1001.138549, 15.131925, 0.000000, -90.100013, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19375, 1460.451782, -991.518920, 15.131925, 0.000000, -90.100013, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19375, 1470.930908, -991.508728, 15.150217, 0.000000, -90.100013, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19375, 1460.451782, -981.909057, 15.131925, 0.000000, -90.100013, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19375, 1470.931030, -981.909057, 15.150214, 0.000000, -90.100013, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19859, 1464.736816, -1005.406799, 16.428606, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19859, 1467.717529, -1005.408630, 16.428606, 0.000000, 0.000000, 179.800033, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19603, 1455.424926, -990.060241, 15.606301, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19603, 1455.424926, -995.060363, 15.606301, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19603, 1455.424926, -995.060363, 15.606301, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19603, 1455.424926, -990.060241, 15.606301, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19603, 1476.015258, -995.060363, 15.606301, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19603, 1476.015258, -995.060363, 15.606301, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19603, 1476.015258, -990.071105, 15.606301, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19603, 1476.015258, -990.071105, 15.606301, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19458, 1455.172607, -1001.143920, 16.936452, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19458, 1455.172607, -991.533691, 16.936452, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(14394, 1467.202270, -979.667480, 15.957322, 0.000000, 0.000000, 90.099952, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(14394, 1459.212646, -979.681396, 15.957322, 0.000000, 0.000000, 90.099952, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(14394, 1475.191772, -979.653564, 15.957322, 0.000000, 0.000000, 90.099952, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(14394, 1459.209228, -977.761474, 17.347339, 0.000000, 0.000000, 90.099952, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(14394, 1467.169799, -977.747619, 17.347339, 0.000000, 0.000000, 90.099952, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(14394, 1475.139770, -977.733825, 17.347339, 0.000000, 0.000000, 90.099952, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19375, 1470.926757, -971.848327, 18.100217, 0.000000, -90.100013, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19375, 1460.425292, -971.848327, 18.081895, 0.000000, -90.100013, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19439, 1462.414428, -970.941467, 19.210439, 0.000000, 89.999992, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19439, 1458.915039, -970.941467, 19.210439, 0.000000, 89.999992, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19439, 1455.445434, -970.941467, 19.210439, 0.000000, 89.999992, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19375, 1460.425292, -962.238464, 18.081895, 0.000000, -90.100013, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19375, 1470.915405, -962.238464, 18.100210, 0.000000, -90.100013, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1470.812255, -1000.700195, 22.086702, 0.000000, -90.100006, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1470.812255, -991.070434, 22.086702, 0.000000, -90.100006, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1470.812255, -981.450622, 22.086702, 0.000000, -90.100006, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1470.812255, -971.831054, 22.086702, 0.000000, -90.100006, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1470.812255, -962.200988, 22.086702, 0.000000, -90.100006, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1460.322509, -962.200988, 22.068386, 0.000000, -90.100006, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1460.322509, -971.840942, 22.068386, 0.000000, -90.100006, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1460.322509, -981.450866, 22.068386, 0.000000, -90.100006, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1460.322509, -991.070373, 22.068386, 0.000000, -90.100006, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1460.322509, -1000.700500, 22.068386, 0.000000, -90.100006, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(3533, 1456.622680, -998.816162, 19.444520, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(3533, 1456.622680, -986.246154, 19.444520, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(3533, 1474.702880, -986.246154, 19.444520, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(3533, 1474.702880, -998.835693, 19.444520, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(2182, 1455.740356, -966.628906, 18.161060, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(2182, 1474.603271, -971.805358, 18.161060, 0.000000, 0.000000, -90.199996, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(1671, 1456.470703, -968.597106, 18.629829, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(1671, 1458.590454, -968.597106, 18.629829, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(1671, 1460.820190, -968.597106, 18.629829, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(1671, 1463.070190, -968.597106, 18.629829, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19893, 1463.060302, -970.630126, 19.283203, 0.000000, 0.000000, 179.799942, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19893, 1460.850830, -970.622680, 19.283203, 0.000000, 0.000000, 179.799942, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19893, 1458.520141, -970.614562, 19.283203, 0.000000, 0.000000, 179.799942, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19893, 1456.440063, -970.607177, 19.283203, 0.000000, 0.000000, 179.799942, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(1808, 1457.560791, -965.564392, 18.165077, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(1808, 1458.051025, -965.564392, 18.165077, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(2161, 1458.975219, -965.300231, 18.157114, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(2167, 1460.339599, -965.314025, 18.169157, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(2167, 1461.280029, -965.314025, 18.169157, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(2273, 1458.922485, -965.659118, 20.419681, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(1557, 1470.374755, -966.141296, 18.171604, 0.000000, 0.000000, -89.199951, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(1557, 1470.416259, -969.161437, 18.171604, 0.000000, 0.000000, 90.700088, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19806, 1466.210449, -1001.905883, 21.242755, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19806, 1466.210449, -985.694335, 21.242755, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19806, 1466.210449, -996.145385, 21.242755, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19806, 1466.210449, -981.114074, 21.242755, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19806, 1466.210449, -990.764709, 21.242755, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(2244, 1460.249877, -965.560424, 19.960596, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(2244, 1461.230102, -965.560424, 19.960596, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(638, 1456.759155, -982.891967, 15.872353, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(638, 1456.759155, -1001.622375, 15.872353, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(638, 1474.419189, -1001.622375, 15.872353, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(638, 1474.419189, -983.171813, 15.872353, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19172, 1476.038696, -989.469848, 17.947078, 0.000000, 0.000000, -89.999900, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19172, 1455.248779, -989.469848, 17.947078, 0.000000, 0.000000, 90.000183, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19173, 1476.041259, -992.025329, 17.562824, 0.000000, 0.000000, -89.999992, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19173, 1455.271118, -992.025329, 17.562824, 0.000000, 0.000000, -89.999992, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(2257, 1455.268066, -991.983947, 19.087335, 0.000000, 0.000000, 90.000007, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(2257, 1476.019042, -991.944091, 19.087335, 0.000000, 0.000000, -89.999992, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19173, 1455.271118, -989.745178, 19.242832, 0.000000, 0.000000, -89.999992, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19173, 1476.021240, -989.735534, 19.212818, 0.000000, 0.000000, -89.999992, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19172, 1455.248779, -994.659545, 17.947078, 0.000000, 0.000000, 90.000183, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19172, 1476.038696, -994.669982, 17.947078, 0.000000, 0.000000, -89.999900, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19173, 1455.271118, -994.395324, 19.242832, 0.000000, 0.000000, -89.999992, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19173, 1476.021240, -994.395568, 19.212818, 0.000000, 0.000000, -89.999992, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(2614, 1466.230102, -1005.372619, 18.756090, 0.000000, 0.000000, 179.699981, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(1491, 1466.711425, -965.100524, 18.179359, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19081, 1459.831787, -958.189758, 18.450147, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19081, 1459.831787, -958.189758, 18.720153, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19081, 1459.831787, -958.189758, 18.990158, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19081, 1459.831787, -958.189758, 19.250165, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19081, 1459.831787, -958.189758, 19.520172, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19081, 1459.831787, -958.189758, 19.790178, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19081, 1459.831787, -958.189758, 20.060184, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19081, 1459.831787, -958.189758, 20.320190, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19081, 1459.831787, -958.189758, 20.570196, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19302, 1460.316284, -958.252929, 19.385076, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19302, 1463.824951, -958.307128, 19.385076, 0.000000, 0.000000, 178.999984, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19302, 1460.824707, -958.277343, 21.504661, 0.000000, -89.899978, 179.599975, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19302, 1463.314331, -958.305236, 21.509008, 0.000000, -89.899978, 179.099960, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1469.819091, -953.397827, 16.884983, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1469.819091, -943.778137, 16.884983, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1456.688842, -953.288391, 16.884983, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1456.688842, -943.668579, 16.884983, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(14394, 1466.887207, -956.368164, 17.347339, 0.000000, 0.000000, -89.700065, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(14394, 1458.956909, -956.409606, 17.347339, 0.000000, 0.000000, -89.700065, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(14394, 1458.945800, -954.209350, 15.727334, 0.000000, 0.000000, -89.700065, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(14394, 1466.935668, -954.167480, 15.727334, 0.000000, 0.000000, -89.700065, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1465.151000, -952.571289, 22.076826, 0.000000, -90.100006, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1465.151000, -943.011535, 22.076826, 0.000000, -90.100006, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1454.721313, -943.011535, 22.058616, 0.000000, -90.100006, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1454.721313, -952.611389, 22.058616, 0.000000, -90.100006, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1465.149902, -939.014892, 16.884983, 0.000000, 0.000000, 89.599998, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1455.549926, -938.947753, 16.884983, 0.000000, 0.000000, 89.599998, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1465.163574, -948.391479, 14.886833, 0.000000, -90.100006, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1465.163574, -938.781494, 14.886833, 0.000000, -90.100006, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1454.743530, -938.781494, 14.868643, 0.000000, -90.100006, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1454.743530, -948.411437, 14.868643, 0.000000, -90.100006, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(1829, 1463.334472, -939.849609, 15.449419, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(2332, 1464.199218, -939.531738, 15.408843, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(2332, 1462.479370, -939.531738, 15.408843, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(1550, 1464.871337, -939.433776, 15.340068, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(1550, 1461.841308, -939.313659, 15.340068, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(1550, 1461.400878, -939.313659, 15.340068, 0.000000, 13.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(1550, 1461.633300, -939.592285, 15.268084, 0.000000, 13.000000, 81.799987, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1458.850830, -941.270935, 16.884983, 0.000000, 0.000000, 136.299957, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1467.684570, -941.588439, 16.884983, 0.000000, 0.000000, -137.699996, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(2332, 1462.479370, -939.531738, 16.338851, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(2332, 1464.169311, -939.531738, 16.338851, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(2332, 1463.328735, -939.531738, 16.398851, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19377, 1463.331909, -940.981933, 20.500568, -52.299983, -90.100006, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19913, 1489.835449, -945.055053, 20.368907, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19913, 1437.194091, -945.055053, 20.368907, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);
	bankainterior = CreateDynamicObject(19913, 1458.054443, -945.055053, 23.538908, 0.000000, 0.000000, 0.000000, -1, -1, -1, 200.00, 200.00);

	//Banka interior blueberry -2076.4248,-11.0324,549.4359
	CreateDynamicObjectEx(6959, 2020.52002, 1167.83997, 538.46997,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(14394, 2014.67004, 1156.05005, 539.23999,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(14394, 2017.87000, 1156.05005, 539.23999,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19379, 2011.30005, 1162.39001, 539.98999,   0.00000, 90.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19379, 2020.89001, 1162.39001, 539.98999,   0.00000, 90.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19379, 2011.30005, 1172.88000, 539.98999,   0.00000, 90.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19379, 2020.89001, 1172.88000, 539.98999,   0.00000, 90.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2023.45996, 1157.18994, 541.83002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2024.97998, 1158.70996, 541.83002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2024.97998, 1161.92004, 541.83002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2024.97998, 1165.12000, 541.83002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2024.97998, 1168.31995, 541.83002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2024.97998, 1171.53003, 541.83002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2024.97998, 1174.72998, 541.83002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2023.45996, 1176.26001, 541.83002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2009.06995, 1157.18994, 541.83002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2007.53003, 1158.70996, 541.83002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2007.53003, 1161.91003, 541.83002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2007.53003, 1165.10999, 541.83002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2007.53003, 1168.31006, 541.83002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2007.53003, 1171.51001, 541.83002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2007.53003, 1174.69995, 541.83002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2020.29004, 1176.26001, 541.83002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2017.12000, 1176.26001, 541.83002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2013.93005, 1176.26001, 541.83002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2010.72998, 1176.26001, 541.83002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2007.52002, 1176.26001, 541.83002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19362, 2023.47998, 1157.18005, 538.34003,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19362, 2009.08997, 1157.18005, 538.34003,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19362, 2010.59998, 1156.81006, 538.00000,   35.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19362, 2021.93994, 1156.81006, 538.00000,   35.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19377, 2007.54004, 1152.40002, 538.33002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19377, 2024.97998, 1152.34998, 538.33002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19362, 2023.45203, 1157.18005, 541.83002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19362, 2009.08997, 1157.18005, 541.83002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19377, 2010.59998, 1150.18005, 538.33002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19377, 2021.70996, 1150.16504, 538.33002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(1569, 2015.40002, 1150.18994, 538.44000,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19362, 2016.10999, 1150.17004, 542.69000,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19377, 2021.41040, 1152.55408, 538.33002,   0.00000, 0.00000, 120.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19377, 2010.99915, 1152.52258, 538.33002,   0.00000, 0.00000, 60.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2773, 2014.74854, 1152.60986, 538.91998,   0.00000, 0.00000, 20.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2773, 2013.69128, 1154.13354, 538.91998,   0.00000, 0.00000, 50.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2773, 2012.01001, 1154.76001, 538.91998,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2773, 2010.33997, 1154.09998, 538.91998,   0.00000, 0.00000, -45.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2773, 2008.71997, 1153.40002, 538.91998,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2773, 2018.66260, 1154.15588, 538.91998,   0.00000, 0.00000, 130.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2773, 2020.33997, 1154.77002, 538.91998,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2773, 2021.95996, 1154.07996, 538.91998,   0.00000, 0.00000, 45.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2773, 2023.62000, 1153.42004, 538.91998,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateObject(19378, 2020.14001, 1153.32996, 538.35999,   0.00000, 90.00000, 90.00000); // Neces da bagujes ovo vise! :D
	CreateObject(19378, 2010.53003, 1153.32996, 538.35999,   0.00000, 90.00000, 90.00000); // Neces da bagujes ovo vise! :D
	CreateDynamicObjectEx(2605, 2022.28003, 1166.90002, 540.46997,   0.00000, 0.00000, 180.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2774, 2024.07996, 1167.28003, 540.60999,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2774, 2020.44995, 1167.28003, 540.60999,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2605, 2018.64001, 1166.90002, 540.46997,   0.00000, 0.00000, 180.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2774, 2016.81006, 1167.28003, 540.60999,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2605, 2015.00000, 1166.90002, 540.46997,   0.00000, 0.00000, 180.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2774, 2013.17004, 1167.28003, 540.60999,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19388, 2011.14001, 1166.56897, 541.83002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19388, 2008.78003, 1166.56995, 541.83002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(1569, 2011.93005, 1166.50000, 540.08002,   0.00000, 0.00000, 100.00000, 450.0, 450.0);
	CreateDynamicObjectEx(1569, 2007.96997, 1166.50000, 540.08002,   0.00000, 0.00000, 80.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19466, 2015.10999, 1167.06006, 542.50000,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19466, 2018.65002, 1167.06006, 542.50000,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19466, 2022.34998, 1167.06006, 542.50000,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(1671, 2014.97998, 1167.97998, 540.52002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(1671, 2018.62000, 1167.97998, 540.52002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(1671, 2022.27002, 1167.97998, 540.52002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19388, 2012.44995, 1169.19995, 541.83002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2012.44495, 1171.84998, 541.83002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19388, 2012.44995, 1175.04004, 541.83002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(1569, 2012.42810, 1169.97156, 540.08002,   0.00000, 0.00000, -90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(1569, 2012.37000, 1174.25000, 540.08002,   0.00000, 0.00000, 10.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2014.10999, 1171.17004, 541.83002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2017.31006, 1171.17004, 541.83002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2020.50000, 1171.17004, 541.83002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(19358, 2023.69995, 1171.17004, 541.83002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2332, 2024.47998, 1175.75000, 540.53003,   0.00000, 0.00000, -90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2332, 2024.47998, 1174.90002, 540.53003,   0.00000, 0.00000, -90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2332, 2024.47998, 1174.06006, 540.53003,   0.00000, 0.00000, -90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(1829, 2024.17004, 1173.25000, 540.53003,   0.00000, 0.00000, -90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(1829, 2024.17004, 1172.48999, 540.53003,   0.00000, 0.00000, -90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2332, 2024.47998, 1171.68005, 540.53003,   0.00000, 0.00000, -90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2332, 2024.47998, 1174.90002, 541.45001,   0.00000, 0.00000, -90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2332, 2024.47998, 1174.06006, 541.45001,   0.00000, 0.00000, -90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2332, 2024.47998, 1173.25000, 541.45001,   0.00000, 0.00000, -90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(1299, 2013.84998, 1171.91003, 540.53003,   0.00000, 0.00000, 29.87000, 450.0, 450.0);
	CreateDynamicObjectEx(6959, 2020.52002, 1167.83997, 543.60999,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(640, 2008.03003, 1161.89001, 540.77002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(640, 2024.50000, 1161.89001, 540.77002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(1215, 2017.22998, 1150.42004, 538.45001,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(1215, 2015.05005, 1150.42004, 538.45001,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(640, 2008.01001, 1172.18994, 540.77002,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(640, 2018.80005, 1170.67004, 540.77002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(640, 2019.98132, 1152.30481, 539.15002,   0.00000, 0.00000, 120.00000, 450.0, 450.0);
	CreateDynamicObjectEx(640, 2012.45862, 1152.20068, 539.15002,   0.00000, 0.00000, 60.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2921, 2016.43689, 1150.15747, 541.63300,   0.00000, 0.00000, 309.59454, 450.0, 450.0);
	CreateDynamicObjectEx(2921, 2024.89001, 1164.53003, 542.59998,   0.00000, 0.00000, 22.80000, 450.0, 450.0);
	CreateDynamicObjectEx(2921, 2007.53003, 1164.53003, 542.59998,   0.00000, 0.00000, 226.42000, 450.0, 450.0);
	CreateDynamicObjectEx(2921, 2010.03003, 1166.60999, 542.59998,   0.00000, 0.00000, 289.01001, 450.0, 450.0);
	CreateDynamicObjectEx(2921, 2012.43994, 1175.64001, 542.75000,   0.00000, 0.00000, 206.03999, 450.0, 450.0);
	CreateDynamicObjectEx(2921, 2012.47998, 1170.47998, 542.59998,   0.00000, 0.00000, 200.89999, 450.0, 450.0);
	CreateDynamicObjectEx(1214, 2011.01135, 1154.70471, 538.25000,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(1214, 2017.34436, 1151.66382, 538.25000,   0.00000, 0.00000, 0.00000, 450.0, 450.0);
	CreateDynamicObjectEx(18643, 2016.07336, 1171.02039, 540.20001,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(18643, 2016.07336, 1171.02039, 540.40002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(18643, 2016.07336, 1171.02039, 540.59998,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(18643, 2016.07336, 1171.02039, 540.79999,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(18643, 2016.07336, 1171.02039, 541.00000,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(18643, 2016.07336, 1171.02039, 541.20001,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(18643, 2016.07336, 1171.02039, 541.40002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(18643, 2016.07336, 1171.02039, 541.59998,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(18643, 2016.07336, 1171.02039, 541.79999,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(18643, 2016.07336, 1171.02039, 542.00000,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(18643, 2016.07336, 1171.02039, 542.20001,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(18643, 2016.07336, 1171.02039, 542.40002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(18643, 2016.07336, 1171.02039, 542.59998,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(18643, 2016.07336, 1171.02039, 542.79999,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(18643, 2016.07336, 1171.02039, 543.00000,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(18643, 2016.07336, 1171.02039, 543.20001,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(18643, 2016.07336, 1171.02039, 543.40002,   0.00000, 0.00000, 90.00000, 450.0, 450.0);
	CreateDynamicObjectEx(2773, 2017.59802, 1152.64880, 538.91998,   0.00000, 0.00000, 160.00000, 450.0, 450.0);
	CreateDynamicObjectEx(1214, 2015.12720, 1151.65686, 538.25000,   0.00000, 0.00000, 0.00000, 450.0, 450.0);

	//BLUEBERRY SPAWN
	CreateDynamicObject(970, 1212.05286, 296.63489, 19.09140,   0.00000, 0.00000, 65.88010);
	CreateDynamicObject(970, 1217.91418, 309.95261, 19.09140,   0.00000, 0.00000, 65.88010);
	CreateDynamicObject(970, 1216.00134, 305.57571, 19.09140,   0.00000, 0.00000, 66.30019);
	CreateDynamicObject(970, 1214.02417, 301.08420, 19.09140,   0.00000, 0.00000, 65.88010);
	CreateDynamicObject(3515, 1224.20398, 301.08405, 18.05951,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1221.39429, 299.14969, 17.92752,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(3515, 1224.50964, 297.35416, 18.24923,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(9833, 1222.96497, 299.22198, 19.57476,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(823, 1223.29211, 299.54254, 18.47867,   0.00000, 0.00000, 0.00000);

	//spawn
	CreateDynamicObject(3606, 49.33983, 1167.21826, 20.92616,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(9833, 69.75032, 1168.11023, 19.79668,   0.00000, 0.00000, -61.32002);
	CreateDynamicObject(3515, 67.81496, 1167.64917, 17.86500,   0.00000, 10.00000, 0.00000);
	CreateDynamicObject(3515, 71.52015, 1169.95740, 17.92318,   0.00000, 10.00000, -120.23988);
	CreateDynamicObject(3515, 71.87247, 1165.53674, 17.90554,   0.00000, 10.00000, -240.23990);
	CreateDynamicObject(752, 69.07423, 1170.67542, 16.15025,   0.00000, 0.00000, -4.67997);
	CreateDynamicObject(752, 68.55630, 1164.44360, 16.18355,   0.00000, 0.00000, 128.94000);
	CreateDynamicObject(752, 74.30337, 1167.64587, 16.14378,   0.00000, 0.00000, -98.04000);
	CreateDynamicObject(752, 70.86147, 1167.05872, 16.15729,   0.00000, 0.00000, -98.04000);
	CreateDynamicObject(752, 73.06599, 1170.98401, 16.17215,   0.00000, 0.00000, -48.18002);
	CreateDynamicObject(752, 65.91444, 1168.06140, 16.11500,   -3.12000, -0.54000, 87.41998);
	CreateDynamicObject(752, 72.40533, 1163.71130, 16.12645,   0.00000, 0.00000, 217.19968);
	CreateDynamicObject(647, 66.48709, 1169.54236, 17.65143,   0.00000, 0.00000, 296.51993);
	CreateDynamicObject(647, 68.64204, 1171.24841, 17.65143,   0.00000, 0.00000, 260.88028);
	CreateDynamicObject(647, 71.28468, 1172.34241, 17.65143,   0.00000, 0.00000, 282.90012);
	CreateDynamicObject(647, 72.89613, 1171.60583, 17.65143,   0.00000, 0.00000, 226.86038);
	CreateDynamicObject(647, 74.23652, 1169.84436, 17.65143,   0.00000, 0.00000, 189.54045);
	CreateDynamicObject(647, 74.47728, 1167.77429, 17.65143,   0.00000, 0.00000, 155.28053);
	CreateDynamicObject(647, 73.59247, 1164.94348, 17.65143,   0.00000, 0.00000, 147.06064);
	CreateDynamicObject(647, 72.26947, 1163.29419, 17.65143,   0.00000, 0.00000, 103.74065);
	CreateDynamicObject(647, 70.15812, 1163.48950, 17.65143,   0.00000, 0.00000, 72.06056);
	CreateDynamicObject(647, 68.30157, 1164.11829, 17.65143,   0.00000, 0.00000, 33.96058);
	CreateDynamicObject(647, 66.69427, 1165.98889, 17.65143,   0.00000, 0.00000, 33.96058);
	CreateDynamicObject(647, 65.51111, 1167.50562, 17.65143,   0.00000, 0.00000, -14.45938);
	CreateDynamicObject(1280, 63.55050, 1167.43030, 18.02940,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(1280, 70.08370, 1161.12415, 18.02940,   0.00000, 0.00000, 90.00000);
	CreateDynamicObject(1280, 70.30580, 1174.07910, 18.02940,   0.00000, 0.00000, -90.00000);
	CreateDynamicObject(1280, 65.56010, 1172.26904, 18.02940,   0.00000, 0.00000, -46.08000);
	CreateDynamicObject(1280, 75.40460, 1172.08154, 18.02940,   0.00000, 0.00000, -138.30000);
	CreateDynamicObject(1280, 76.99160, 1167.77710, 18.02940,   0.00000, 0.00000, -179.75980);
	CreateDynamicObject(1280, 74.66880, 1163.10400, 18.02940,   0.00000, 0.00000, -222.65981);
	CreateDynamicObject(1280, 65.91624, 1163.42090, 18.02942,   0.00000, 0.00000, 43.55999);
	CreateDynamicObject(640, 54.86832, 1161.39624, 18.31332,   0.00000, 0.00000, 0.00000);
	CreateDynamicObject(640, 54.85326, 1173.07117, 18.31332,   0.00000, 0.00000, 0.00000);
	new spawnmapa;
	spawnmapa = CreateDynamicObject(18762, 41.580093, 1180.614257, 18.634046, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 44.536167, 1180.674316, 18.138551, 0.000000, -89.700042, 1.299998, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 47.537883, 1180.744018, 18.612894, 0.000000, -179.699874, 1.299998, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 50.524543, 1180.809448, 18.107173, 0.000000, -89.700042, 1.299998, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 53.516262, 1180.879150, 18.581560, 0.000000, -179.699874, 1.299998, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 56.512901, 1180.945434, 18.075811, 0.000000, -89.700042, 1.299998, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 59.514648, 1181.014648, 18.550123, 0.000000, -179.699874, 1.299998, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 62.501216, 1181.079589, 18.044462, 0.000000, -89.700042, 1.299998, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 65.493011, 1181.150146, 18.518802, 0.000000, -179.699874, 1.299998, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 68.479545, 1181.216308, 18.013170, 0.000000, -89.700042, 1.299998, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 71.461410, 1181.285766, 18.487520, 0.000000, -179.699874, 1.299998, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 74.447906, 1181.351440, 17.981901, 0.000000, -89.700042, 1.299998, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 77.429794, 1181.421020, 18.456251, 0.000000, -179.699874, 1.299998, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(19447, 53.057800, 1180.839477, 19.141155, -0.199999, 0.000000, -88.899963, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 5631, "apartmentalpha", "ws_railing1", 0x00000000);
	spawnmapa = CreateDynamicObject(19447, 46.648998, 1180.715332, 19.163534, -0.199999, 0.000000, -88.899963, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 5631, "apartmentalpha", "ws_railing1", 0x00000000);
	spawnmapa = CreateDynamicObject(19447, 72.274169, 1181.208007, 19.074052, -0.199999, 0.000000, -88.899963, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 5631, "apartmentalpha", "ws_railing1", 0x00000000);
	spawnmapa = CreateDynamicObject(19447, 62.655994, 1181.022827, 19.107639, -0.199999, 0.000000, -88.899963, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 5631, "apartmentalpha", "ws_railing1", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 41.464107, 1177.660644, 18.123470, -89.600006, 2.799999, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 41.312164, 1174.695434, 18.634046, 0.000000, 0.000000, -2.900000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 41.172958, 1171.708251, 18.081920, -89.600006, 2.799999, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 41.020088, 1168.732910, 18.634046, 0.000000, 0.000000, -2.900000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 40.881393, 1165.746093, 18.040313, -89.600006, 2.799999, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 40.727478, 1162.759521, 18.634046, 0.000000, 0.000000, -2.900000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 40.589759, 1159.783813, 17.998699, -89.600006, 2.799999, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 40.516490, 1158.594482, 18.634046, 0.000000, 0.000000, -2.900000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 40.346488, 1154.810546, 17.963998, -89.600006, 2.799999, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 40.310108, 1153.571533, 18.634046, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 103.486251, 1153.571533, 17.834732, 0.000000, 90.399963, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 106.470108, 1153.571533, 18.634046, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 100.490135, 1153.571533, 18.634046, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 97.506370, 1153.571533, 17.876478, 0.000000, 90.399963, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 94.510131, 1153.571533, 18.634046, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 91.516517, 1153.571533, 17.918291, 0.000000, 90.399963, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 88.530143, 1153.571533, 18.634046, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 85.556663, 1153.571533, 17.959892, 0.000000, 90.399963, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 82.560165, 1153.571533, 18.634046, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 79.576812, 1153.571533, 18.001640, 0.000000, 90.399963, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 76.580230, 1153.571533, 18.634046, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 73.596954, 1153.571533, 18.043390, 0.000000, 90.399963, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 70.610237, 1153.571533, 18.634046, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 67.647094, 1153.571533, 18.084924, 0.000000, 90.399963, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 64.660247, 1153.571533, 18.634046, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 61.707241, 1153.571533, 18.126407, 0.000000, 90.399963, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 58.720230, 1153.571533, 18.634046, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 55.737239, 1153.571533, 18.148082, 0.000000, 90.399963, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 52.770233, 1153.571533, 18.634046, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 49.777183, 1153.571533, 18.159700, 0.000000, 90.399963, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 46.790210, 1153.571533, 18.634046, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 43.816638, 1153.571533, 18.101303, 0.000000, 90.399963, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 38.836761, 1153.571533, 18.136066, 0.000000, 90.399963, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 111.502220, 1182.194458, 18.597745, 0.000000, -179.699874, 1.299998, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 108.518600, 1182.125244, 17.803503, 0.000000, -89.700042, 1.299998, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 105.523231, 1182.059204, 18.509063, 0.000000, -179.699874, 1.299998, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 102.530174, 1181.990112, 17.834873, 0.000000, -89.700042, 1.299998, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 99.534355, 1181.925170, 18.460462, 0.000000, -179.699874, 1.299998, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 111.038742, 1179.389038, 17.783266, 0.000000, -89.700042, 79.000015, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 110.468612, 1176.453613, 18.558502, 0.000000, 0.099944, 79.000015, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 109.897743, 1173.519409, 17.814573, 0.000000, -89.700042, 79.000015, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 109.329460, 1170.593139, 18.558916, 0.000000, 0.099944, 79.000015, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 108.762458, 1167.678710, 17.845720, 0.000000, -89.700042, 79.000015, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 108.194198, 1164.753051, 18.529285, 0.000000, 0.099944, 79.000015, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 107.704170, 1161.815551, 17.876913, 0.000000, -89.700042, 80.400001, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 106.812698, 1156.404052, 17.905578, 0.000000, -89.700042, 80.700035, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 107.241035, 1159.135375, 18.529232, 0.000000, 0.099944, 80.399993, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(19447, 103.945030, 1182.012817, 19.103420, -0.199999, 0.000000, -88.899963, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 5631, "apartmentalpha", "ws_railing1", 0x00000000);
	spawnmapa = CreateDynamicObject(19447, 107.164115, 1182.078491, 19.092212, -0.199999, 0.000000, -88.899963, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 5631, "apartmentalpha", "ws_railing1", 0x00000000);
	spawnmapa = CreateDynamicObject(19447, 110.629409, 1177.025390, 19.076023, -0.199999, 0.000000, 169.500000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 5631, "apartmentalpha", "ws_railing1", 0x00000000);
	spawnmapa = CreateDynamicObject(19447, 108.878143, 1167.577148, 19.042467, -0.199999, 0.000000, 169.500000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 5631, "apartmentalpha", "ws_railing1", 0x00000000);
	spawnmapa = CreateDynamicObject(19447, 107.123191, 1158.107666, 19.008838, -0.199999, 0.000000, 169.500000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 5631, "apartmentalpha", "ws_railing1", 0x00000000);
	spawnmapa = CreateDynamicObject(19447, 101.230735, 1153.485595, 19.049325, 0.300000, 0.000000, 89.899948, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 5631, "apartmentalpha", "ws_railing1", 0x00000000);
	spawnmapa = CreateDynamicObject(19447, 91.600898, 1153.501953, 19.099742, 0.300000, 0.000000, 89.899948, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 5631, "apartmentalpha", "ws_railing1", 0x00000000);
	spawnmapa = CreateDynamicObject(19447, 82.001068, 1153.518920, 19.150003, 0.300000, 0.000000, 89.899948, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 5631, "apartmentalpha", "ws_railing1", 0x00000000);
	spawnmapa = CreateDynamicObject(19447, 71.351203, 1153.542358, 19.205837, 0.300000, 0.000000, 89.899948, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 5631, "apartmentalpha", "ws_railing1", 0x00000000);
	spawnmapa = CreateDynamicObject(19447, 61.751361, 1153.559204, 19.256103, 0.300000, 0.000000, 89.899948, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 5631, "apartmentalpha", "ws_railing1", 0x00000000);
	spawnmapa = CreateDynamicObject(19447, 52.151489, 1153.575927, 19.306388, 0.300000, 0.000000, 89.899948, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 5631, "apartmentalpha", "ws_railing1", 0x00000000);
	spawnmapa = CreateDynamicObject(19447, 44.681591, 1153.588623, 19.345506, 0.300000, 0.000000, 89.899948, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 5631, "apartmentalpha", "ws_railing1", 0x00000000);
	spawnmapa = CreateDynamicObject(19447, 40.570350, 1158.809082, 19.263238, 0.300000, 0.000000, -2.800039, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 5631, "apartmentalpha", "ws_railing1", 0x00000000);
	spawnmapa = CreateDynamicObject(19447, 41.425685, 1176.300170, 19.354881, 0.300000, 0.000000, -2.800039, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 5631, "apartmentalpha", "ws_railing1", 0x00000000);
	spawnmapa = CreateDynamicObject(19447, 40.962081, 1166.820434, 19.305189, 0.300000, 0.000000, -2.800039, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 5631, "apartmentalpha", "ws_railing1", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 111.203697, 1176.303344, 15.188511, 0.000000, 0.099944, 79.000015, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 110.064567, 1170.442993, 15.198922, 0.000000, 0.099944, 79.000015, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 108.935012, 1164.632690, 15.209247, 0.000000, 0.099944, 79.000015, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 107.856964, 1159.086914, 15.219099, 0.000000, 0.099944, 79.000015, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 106.470108, 1152.600585, 15.094045, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 100.490135, 1152.571899, 15.104046, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 94.510169, 1152.571899, 15.104046, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	spawnmapa = CreateDynamicObject(18762, 88.570167, 1152.571899, 15.104046, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	SetDynamicObjectMaterial(spawnmapa, 0, 13691, "bevcunto2_lahills", "adeta", 0x00000000);
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	spawnmapa = CreateDynamicObject(640, 74.542282, 1180.220092, 18.334058, 0.000000, 0.000000, 91.100021, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(640, 68.403640, 1180.100708, 18.334058, 0.000000, 0.000000, 91.100021, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(640, 62.424728, 1179.986938, 18.334058, 0.000000, 0.000000, 91.100021, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(640, 56.555778, 1179.874755, 18.334058, 0.000000, 0.000000, 91.100021, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(640, 50.586887, 1179.760131, 18.334058, 0.000000, 0.000000, 91.100021, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(640, 44.567996, 1179.644653, 18.334058, 0.000000, 0.000000, 91.100021, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 41.779483, 1182.279663, 15.486169, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 47.739486, 1182.279663, 15.766179, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 53.649471, 1182.279663, 15.766179, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 59.759460, 1182.279663, 15.766179, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 65.659469, 1182.279663, 15.766179, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 71.609451, 1182.549926, 15.766179, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 77.539451, 1182.549926, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(14468, 43.046478, 1182.579101, 18.364862, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(14468, 46.616458, 1182.579101, 18.364862, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(14468, 50.686458, 1182.579101, 18.364862, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(14468, 54.676448, 1182.579101, 18.364862, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(14468, 58.476451, 1182.579101, 18.364862, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(14468, 62.456439, 1182.579101, 18.364862, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(14468, 66.046440, 1182.579101, 18.364862, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(14468, 75.486442, 1182.579101, 18.364862, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(14468, 72.266441, 1182.579101, 18.364862, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(14468, 68.926414, 1182.579101, 18.364862, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 99.689445, 1182.910278, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 105.699409, 1182.970336, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 111.739410, 1183.030395, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(14468, 100.916465, 1183.359863, 18.364862, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(14468, 103.986465, 1183.489990, 18.364862, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(14468, 110.096435, 1183.359863, 18.364862, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(14468, 106.766410, 1183.359863, 18.364862, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 76.779457, 1152.679321, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 70.819458, 1152.679321, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 64.779495, 1152.679321, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 58.949508, 1152.679321, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 53.039512, 1152.679321, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 46.999519, 1152.679321, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 40.549533, 1152.679321, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 39.859539, 1158.601928, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 40.009532, 1162.691650, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 40.419517, 1168.771362, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 40.669494, 1174.741821, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 82.749450, 1152.679321, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 88.759445, 1152.679321, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 94.709480, 1152.679321, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 100.699516, 1152.679321, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 106.649497, 1152.679321, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 108.339469, 1159.020019, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 109.289466, 1164.580200, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 110.219482, 1170.450439, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(641, 111.379486, 1176.350585, 15.386176, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 97.565223, 1156.045654, 17.639320, 0.000000, 0.000000, 90.099998, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(8530, 101.224830, 1185.526611, 17.771379, 0.000000, 0.000000, 90.100028, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 108.507690, 1180.504760, 17.639320, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 107.777671, 1176.073852, 17.639320, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 106.997718, 1171.774047, 17.639320, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 106.247764, 1167.424194, 17.639320, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 105.457778, 1163.153564, 17.639320, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 104.727790, 1158.953369, 17.639320, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 103.957748, 1154.602783, 17.639320, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 93.345252, 1156.038574, 17.639320, 0.000000, 0.000000, 90.099998, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 88.965240, 1156.031127, 17.639320, 0.000000, 0.000000, 90.099998, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 84.625236, 1156.023071, 17.639320, 0.000000, 0.000000, 90.099998, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 80.235267, 1156.016357, 17.639320, 0.000000, 0.000000, 90.099998, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 75.855293, 1156.008544, 17.639320, 0.000000, 0.000000, 90.099998, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(1215, 78.540916, 1181.429321, 18.193336, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(1215, 98.530944, 1181.899780, 18.193336, 0.000000, 0.000000, 0.000000, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 41.502063, 1186.510009, 18.019323, 0.000000, 0.399999, 90.099998, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 44.872043, 1186.515136, 18.019323, 0.000000, 1.400000, 90.099998, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 48.212005, 1186.520263, 17.929321, 0.000000, 1.099999, 90.099998, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 51.671985, 1186.526000, 17.919321, 0.000000, 1.199999, 90.099998, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 55.311981, 1186.532104, 17.899320, 0.000000, 1.200000, 90.099998, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 58.871967, 1186.537719, 17.869319, 0.000000, 0.899999, 90.099998, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 62.421936, 1186.540649, 17.839342, 0.000000, 0.699999, 90.099998, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 66.001922, 1186.544799, 17.819356, 0.000000, 1.099999, 90.099998, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 69.721931, 1186.556762, 17.799308, 0.000000, 0.899999, 90.099998, -1, -1, -1, 300.00, 300.00); 
	spawnmapa = CreateDynamicObject(19425, 73.491912, 1186.562255, 17.739322, 0.000000, 1.400000, 90.099998, -1, -1, -1, 300.00, 300.00); 

	print("Ucitane mape");

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//================================== TD ========================================
	
	//STATS TD
	StatsTextdrawPublic[0] = TextDrawCreate(315.000000, 0.000000, "_");
	TextDrawFont(StatsTextdrawPublic[0], 1);
	TextDrawLetterSize(StatsTextdrawPublic[0], 0.600000, 69.700004);
	TextDrawTextSize(StatsTextdrawPublic[0], 278.500000, 720.000000);
	TextDrawSetOutline(StatsTextdrawPublic[0], 1);
	TextDrawSetShadow(StatsTextdrawPublic[0], 0);
	TextDrawAlignment(StatsTextdrawPublic[0], 2);
	TextDrawColor(StatsTextdrawPublic[0], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[0], 255);
	TextDrawBoxColor(StatsTextdrawPublic[0], 78);
	TextDrawUseBox(StatsTextdrawPublic[0], 1);
	TextDrawSetProportional(StatsTextdrawPublic[0], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[0], 0);

	StatsTextdrawPublic[1] = TextDrawCreate(321.000000, 111.000000, "_");
	TextDrawFont(StatsTextdrawPublic[1], 1);
	TextDrawLetterSize(StatsTextdrawPublic[1], 0.600000, 25.449985);
	TextDrawTextSize(StatsTextdrawPublic[1], 298.500000, 375.500000);
	TextDrawSetOutline(StatsTextdrawPublic[1], 1);
	TextDrawSetShadow(StatsTextdrawPublic[1], 0);
	TextDrawAlignment(StatsTextdrawPublic[1], 2);
	TextDrawColor(StatsTextdrawPublic[1], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[1], 255);
	TextDrawBoxColor(StatsTextdrawPublic[1], 135);
	TextDrawUseBox(StatsTextdrawPublic[1], 1);
	TextDrawSetProportional(StatsTextdrawPublic[1], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[1], 0);

	StatsTextdrawPublic[2] = TextDrawCreate(186.000000, 121.000000, "_");
	TextDrawFont(StatsTextdrawPublic[2], 1);
	TextDrawLetterSize(StatsTextdrawPublic[2], 0.600000, 20.199970);
	TextDrawTextSize(StatsTextdrawPublic[2], 298.500000, 87.000000);
	TextDrawSetOutline(StatsTextdrawPublic[2], 1);
	TextDrawSetShadow(StatsTextdrawPublic[2], 0);
	TextDrawAlignment(StatsTextdrawPublic[2], 2);
	TextDrawColor(StatsTextdrawPublic[2], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[2], 255);
	TextDrawBoxColor(StatsTextdrawPublic[2], 255);
	TextDrawUseBox(StatsTextdrawPublic[2], 1);
	TextDrawSetProportional(StatsTextdrawPublic[2], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[2], 0);

	StatsTextdrawPublic[3] = TextDrawCreate(186.000000, 314.000000, "_");
	TextDrawFont(StatsTextdrawPublic[3], 1);
	TextDrawLetterSize(StatsTextdrawPublic[3], 0.600000, 1.799921);
	TextDrawTextSize(StatsTextdrawPublic[3], 296.500000, 87.500000);
	TextDrawSetOutline(StatsTextdrawPublic[3], 1);
	TextDrawSetShadow(StatsTextdrawPublic[3], 0);
	TextDrawAlignment(StatsTextdrawPublic[3], 2);
	TextDrawColor(StatsTextdrawPublic[3], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[3], 255);
	TextDrawBoxColor(StatsTextdrawPublic[3], 255);
	TextDrawUseBox(StatsTextdrawPublic[3], 1);
	TextDrawSetProportional(StatsTextdrawPublic[3], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[3], 0);

	StatsTextdrawPublic[4] = TextDrawCreate(132.000000, 111.000000, "_");
	TextDrawFont(StatsTextdrawPublic[4], 1);
	TextDrawLetterSize(StatsTextdrawPublic[4], 0.600000, 25.449935);
	TextDrawTextSize(StatsTextdrawPublic[4], 298.500000, -1.000000);
	TextDrawSetOutline(StatsTextdrawPublic[4], 1);
	TextDrawSetShadow(StatsTextdrawPublic[4], 0);
	TextDrawAlignment(StatsTextdrawPublic[4], 2);
	TextDrawColor(StatsTextdrawPublic[4], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[4], 255);
	TextDrawBoxColor(StatsTextdrawPublic[4], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[4], 1);
	TextDrawSetProportional(StatsTextdrawPublic[4], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[4], 0);

	StatsTextdrawPublic[5] = TextDrawCreate(246.000000, 145.000000, "_");
	TextDrawFont(StatsTextdrawPublic[5], 1);
	TextDrawLetterSize(StatsTextdrawPublic[5], 0.600000, 4.299934);
	TextDrawTextSize(StatsTextdrawPublic[5], 298.500000, -1.000000);
	TextDrawSetOutline(StatsTextdrawPublic[5], 1);
	TextDrawSetShadow(StatsTextdrawPublic[5], 0);
	TextDrawAlignment(StatsTextdrawPublic[5], 2);
	TextDrawColor(StatsTextdrawPublic[5], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[5], 255);
	TextDrawBoxColor(StatsTextdrawPublic[5], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[5], 1);
	TextDrawSetProportional(StatsTextdrawPublic[5], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[5], 0);

	StatsTextdrawPublic[6] = TextDrawCreate(365.000000, 115.000000, "_");
	TextDrawFont(StatsTextdrawPublic[6], 1);
	TextDrawLetterSize(StatsTextdrawPublic[6], 0.600000, 1.749964);
	TextDrawTextSize(StatsTextdrawPublic[6], 298.500000, 184.000000);
	TextDrawSetOutline(StatsTextdrawPublic[6], 1);
	TextDrawSetShadow(StatsTextdrawPublic[6], 0);
	TextDrawAlignment(StatsTextdrawPublic[6], 2);
	TextDrawColor(StatsTextdrawPublic[6], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[6], 255);
	TextDrawBoxColor(StatsTextdrawPublic[6], 255);
	TextDrawUseBox(StatsTextdrawPublic[6], 1);
	TextDrawSetProportional(StatsTextdrawPublic[6], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[6], 0);

	StatsTextdrawPublic[7] = TextDrawCreate(269.000000, 136.000000, "FINANSIJE");
	TextDrawFont(StatsTextdrawPublic[7], 1);
	TextDrawLetterSize(StatsTextdrawPublic[7], 0.208333, 1.200000);
	TextDrawTextSize(StatsTextdrawPublic[7], 400.000000, 128.000000);
	TextDrawSetOutline(StatsTextdrawPublic[7], 1);
	TextDrawSetShadow(StatsTextdrawPublic[7], 0);
	TextDrawAlignment(StatsTextdrawPublic[7], 1);
	TextDrawColor(StatsTextdrawPublic[7], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[7], 255);
	TextDrawBoxColor(StatsTextdrawPublic[7], 50);
	TextDrawUseBox(StatsTextdrawPublic[7], 0);
	TextDrawSetProportional(StatsTextdrawPublic[7], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[7], 0);

	StatsTextdrawPublic[8] = TextDrawCreate(287.000000, 185.000000, "_");
	TextDrawFont(StatsTextdrawPublic[8], 1);
	TextDrawLetterSize(StatsTextdrawPublic[8], 0.583333, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[8], 298.500000, -84.500000);
	TextDrawSetOutline(StatsTextdrawPublic[8], 1);
	TextDrawSetShadow(StatsTextdrawPublic[8], 0);
	TextDrawAlignment(StatsTextdrawPublic[8], 2);
	TextDrawColor(StatsTextdrawPublic[8], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[8], 255);
	TextDrawBoxColor(StatsTextdrawPublic[8], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[8], 1);
	TextDrawSetProportional(StatsTextdrawPublic[8], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[8], 0);

	StatsTextdrawPublic[9] = TextDrawCreate(328.000000, 145.000000, "_");
	TextDrawFont(StatsTextdrawPublic[9], 1);
	TextDrawLetterSize(StatsTextdrawPublic[9], 0.600000, 4.299934);
	TextDrawTextSize(StatsTextdrawPublic[9], 298.500000, -1.000000);
	TextDrawSetOutline(StatsTextdrawPublic[9], 1);
	TextDrawSetShadow(StatsTextdrawPublic[9], 0);
	TextDrawAlignment(StatsTextdrawPublic[9], 2);
	TextDrawColor(StatsTextdrawPublic[9], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[9], 255);
	TextDrawBoxColor(StatsTextdrawPublic[9], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[9], 1);
	TextDrawSetProportional(StatsTextdrawPublic[9], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[9], 0);

	StatsTextdrawPublic[10] = TextDrawCreate(256.000000, 143.000000, "_");
	TextDrawFont(StatsTextdrawPublic[10], 1);
	TextDrawLetterSize(StatsTextdrawPublic[10], 0.600000, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[10], 298.500000, -25.000000);
	TextDrawSetOutline(StatsTextdrawPublic[10], 1);
	TextDrawSetShadow(StatsTextdrawPublic[10], 0);
	TextDrawAlignment(StatsTextdrawPublic[10], 2);
	TextDrawColor(StatsTextdrawPublic[10], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[10], 255);
	TextDrawBoxColor(StatsTextdrawPublic[10], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[10], 1);
	TextDrawSetProportional(StatsTextdrawPublic[10], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[10], 0);

	StatsTextdrawPublic[11] = TextDrawCreate(318.000000, 143.000000, "_");
	TextDrawFont(StatsTextdrawPublic[11], 1);
	TextDrawLetterSize(StatsTextdrawPublic[11], 0.600000, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[11], 298.500000, -25.000000);
	TextDrawSetOutline(StatsTextdrawPublic[11], 1);
	TextDrawSetShadow(StatsTextdrawPublic[11], 0);
	TextDrawAlignment(StatsTextdrawPublic[11], 2);
	TextDrawColor(StatsTextdrawPublic[11], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[11], 255);
	TextDrawBoxColor(StatsTextdrawPublic[11], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[11], 1);
	TextDrawSetProportional(StatsTextdrawPublic[11], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[11], 0);

	StatsTextdrawPublic[12] = TextDrawCreate(259.000000, 198.000000, "POSAO I PLATA");
	TextDrawFont(StatsTextdrawPublic[12], 1);
	TextDrawLetterSize(StatsTextdrawPublic[12], 0.208333, 1.200000);
	TextDrawTextSize(StatsTextdrawPublic[12], 400.000000, 128.000000);
	TextDrawSetOutline(StatsTextdrawPublic[12], 1);
	TextDrawSetShadow(StatsTextdrawPublic[12], 0);
	TextDrawAlignment(StatsTextdrawPublic[12], 1);
	TextDrawColor(StatsTextdrawPublic[12], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[12], 255);
	TextDrawBoxColor(StatsTextdrawPublic[12], 50);
	TextDrawUseBox(StatsTextdrawPublic[12], 0);
	TextDrawSetProportional(StatsTextdrawPublic[12], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[12], 0);

	StatsTextdrawPublic[13] = TextDrawCreate(251.000000, 205.000000, "_");
	TextDrawFont(StatsTextdrawPublic[13], 1);
	TextDrawLetterSize(StatsTextdrawPublic[13], 0.600000, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[13], 298.500000, -14.500000);
	TextDrawSetOutline(StatsTextdrawPublic[13], 1);
	TextDrawSetShadow(StatsTextdrawPublic[13], 0);
	TextDrawAlignment(StatsTextdrawPublic[13], 2);
	TextDrawColor(StatsTextdrawPublic[13], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[13], 255);
	TextDrawBoxColor(StatsTextdrawPublic[13], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[13], 1);
	TextDrawSetProportional(StatsTextdrawPublic[13], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[13], 0);

	StatsTextdrawPublic[14] = TextDrawCreate(246.000000, 206.000000, "_");
	TextDrawFont(StatsTextdrawPublic[14], 1);
	TextDrawLetterSize(StatsTextdrawPublic[14], 0.600000, 3.099936);
	TextDrawTextSize(StatsTextdrawPublic[14], 298.500000, -1.000000);
	TextDrawSetOutline(StatsTextdrawPublic[14], 1);
	TextDrawSetShadow(StatsTextdrawPublic[14], 0);
	TextDrawAlignment(StatsTextdrawPublic[14], 2);
	TextDrawColor(StatsTextdrawPublic[14], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[14], 255);
	TextDrawBoxColor(StatsTextdrawPublic[14], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[14], 1);
	TextDrawSetProportional(StatsTextdrawPublic[14], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[14], 0);

	StatsTextdrawPublic[15] = TextDrawCreate(286.000000, 236.000000, "_");
	TextDrawFont(StatsTextdrawPublic[15], 1);
	TextDrawLetterSize(StatsTextdrawPublic[15], 0.600000, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[15], 298.500000, -84.500000);
	TextDrawSetOutline(StatsTextdrawPublic[15], 1);
	TextDrawSetShadow(StatsTextdrawPublic[15], 0);
	TextDrawAlignment(StatsTextdrawPublic[15], 2);
	TextDrawColor(StatsTextdrawPublic[15], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[15], 255);
	TextDrawBoxColor(StatsTextdrawPublic[15], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[15], 1);
	TextDrawSetProportional(StatsTextdrawPublic[15], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[15], 0);

	StatsTextdrawPublic[16] = TextDrawCreate(327.000000, 206.000000, "_");
	TextDrawFont(StatsTextdrawPublic[16], 1);
	TextDrawLetterSize(StatsTextdrawPublic[16], 0.600000, 3.149935);
	TextDrawTextSize(StatsTextdrawPublic[16], 298.500000, -1.000000);
	TextDrawSetOutline(StatsTextdrawPublic[16], 1);
	TextDrawSetShadow(StatsTextdrawPublic[16], 0);
	TextDrawAlignment(StatsTextdrawPublic[16], 2);
	TextDrawColor(StatsTextdrawPublic[16], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[16], 255);
	TextDrawBoxColor(StatsTextdrawPublic[16], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[16], 1);
	TextDrawSetProportional(StatsTextdrawPublic[16], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[16], 0);

	StatsTextdrawPublic[17] = TextDrawCreate(251.000000, 205.000000, "_");
	TextDrawFont(StatsTextdrawPublic[17], 1);
	TextDrawLetterSize(StatsTextdrawPublic[17], 0.591665, -0.100059);
	TextDrawTextSize(StatsTextdrawPublic[17], 298.500000, -14.500000);
	TextDrawSetOutline(StatsTextdrawPublic[17], 1);
	TextDrawSetShadow(StatsTextdrawPublic[17], 0);
	TextDrawAlignment(StatsTextdrawPublic[17], 2);
	TextDrawColor(StatsTextdrawPublic[17], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[17], 255);
	TextDrawBoxColor(StatsTextdrawPublic[17], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[17], 1);
	TextDrawSetProportional(StatsTextdrawPublic[17], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[17], 0);

	StatsTextdrawPublic[18] = TextDrawCreate(322.000000, 205.000000, "_");
	TextDrawFont(StatsTextdrawPublic[18], 1);
	TextDrawLetterSize(StatsTextdrawPublic[18], 0.600000, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[18], 298.500000, -14.500000);
	TextDrawSetOutline(StatsTextdrawPublic[18], 1);
	TextDrawSetShadow(StatsTextdrawPublic[18], 0);
	TextDrawAlignment(StatsTextdrawPublic[18], 2);
	TextDrawColor(StatsTextdrawPublic[18], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[18], 255);
	TextDrawBoxColor(StatsTextdrawPublic[18], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[18], 1);
	TextDrawSetProportional(StatsTextdrawPublic[18], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[18], 0);

	StatsTextdrawPublic[19] = TextDrawCreate(246.000000, 257.000000, "_");
	TextDrawFont(StatsTextdrawPublic[19], 1);
	TextDrawLetterSize(StatsTextdrawPublic[19], 0.600000, 4.299934);
	TextDrawTextSize(StatsTextdrawPublic[19], 298.500000, -1.000000);
	TextDrawSetOutline(StatsTextdrawPublic[19], 1);
	TextDrawSetShadow(StatsTextdrawPublic[19], 0);
	TextDrawAlignment(StatsTextdrawPublic[19], 2);
	TextDrawColor(StatsTextdrawPublic[19], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[19], 255);
	TextDrawBoxColor(StatsTextdrawPublic[19], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[19], 1);
	TextDrawSetProportional(StatsTextdrawPublic[19], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[19], 0);

	StatsTextdrawPublic[20] = TextDrawCreate(265.000000, 248.000000, "VLASNISTVO");
	TextDrawFont(StatsTextdrawPublic[20], 1);
	TextDrawLetterSize(StatsTextdrawPublic[20], 0.208333, 1.200000);
	TextDrawTextSize(StatsTextdrawPublic[20], 400.000000, 128.000000);
	TextDrawSetOutline(StatsTextdrawPublic[20], 1);
	TextDrawSetShadow(StatsTextdrawPublic[20], 0);
	TextDrawAlignment(StatsTextdrawPublic[20], 1);
	TextDrawColor(StatsTextdrawPublic[20], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[20], 255);
	TextDrawBoxColor(StatsTextdrawPublic[20], 50);
	TextDrawUseBox(StatsTextdrawPublic[20], 0);
	TextDrawSetProportional(StatsTextdrawPublic[20], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[20], 0);

	StatsTextdrawPublic[21] = TextDrawCreate(287.000000, 297.000000, "_");
	TextDrawFont(StatsTextdrawPublic[21], 1);
	TextDrawLetterSize(StatsTextdrawPublic[21], 0.583333, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[21], 298.500000, -84.500000);
	TextDrawSetOutline(StatsTextdrawPublic[21], 1);
	TextDrawSetShadow(StatsTextdrawPublic[21], 0);
	TextDrawAlignment(StatsTextdrawPublic[21], 2);
	TextDrawColor(StatsTextdrawPublic[21], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[21], 255);
	TextDrawBoxColor(StatsTextdrawPublic[21], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[21], 1);
	TextDrawSetProportional(StatsTextdrawPublic[21], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[21], 0);

	StatsTextdrawPublic[22] = TextDrawCreate(328.000000, 257.000000, "_");
	TextDrawFont(StatsTextdrawPublic[22], 1);
	TextDrawLetterSize(StatsTextdrawPublic[22], 0.600000, 4.299934);
	TextDrawTextSize(StatsTextdrawPublic[22], 298.500000, -1.000000);
	TextDrawSetOutline(StatsTextdrawPublic[22], 1);
	TextDrawSetShadow(StatsTextdrawPublic[22], 0);
	TextDrawAlignment(StatsTextdrawPublic[22], 2);
	TextDrawColor(StatsTextdrawPublic[22], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[22], 255);
	TextDrawBoxColor(StatsTextdrawPublic[22], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[22], 1);
	TextDrawSetProportional(StatsTextdrawPublic[22], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[22], 0);

	StatsTextdrawPublic[23] = TextDrawCreate(254.000000, 255.000000, "_");
	TextDrawFont(StatsTextdrawPublic[23], 1);
	TextDrawLetterSize(StatsTextdrawPublic[23], 0.600000, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[23], 298.500000, -20.500000);
	TextDrawSetOutline(StatsTextdrawPublic[23], 1);
	TextDrawSetShadow(StatsTextdrawPublic[23], 0);
	TextDrawAlignment(StatsTextdrawPublic[23], 2);
	TextDrawColor(StatsTextdrawPublic[23], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[23], 255);
	TextDrawBoxColor(StatsTextdrawPublic[23], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[23], 1);
	TextDrawSetProportional(StatsTextdrawPublic[23], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[23], 0);

	StatsTextdrawPublic[24] = TextDrawCreate(320.000000, 255.000000, "_");
	TextDrawFont(StatsTextdrawPublic[24], 1);
	TextDrawLetterSize(StatsTextdrawPublic[24], 0.600000, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[24], 298.500000, -20.500000);
	TextDrawSetOutline(StatsTextdrawPublic[24], 1);
	TextDrawSetShadow(StatsTextdrawPublic[24], 0);
	TextDrawAlignment(StatsTextdrawPublic[24], 2);
	TextDrawColor(StatsTextdrawPublic[24], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[24], 255);
	TextDrawBoxColor(StatsTextdrawPublic[24], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[24], 1);
	TextDrawSetProportional(StatsTextdrawPublic[24], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[24], 0);

	StatsTextdrawPublic[25] = TextDrawCreate(186.000000, 332.000000, "_");
	TextDrawFont(StatsTextdrawPublic[25], 1);
	TextDrawLetterSize(StatsTextdrawPublic[25], 0.583333, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[25], 298.500000, -92.500000);
	TextDrawSetOutline(StatsTextdrawPublic[25], 1);
	TextDrawSetShadow(StatsTextdrawPublic[25], 0);
	TextDrawAlignment(StatsTextdrawPublic[25], 2);
	TextDrawColor(StatsTextdrawPublic[25], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[25], 255);
	TextDrawBoxColor(StatsTextdrawPublic[25], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[25], 1);
	TextDrawSetProportional(StatsTextdrawPublic[25], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[25], 0);

	StatsTextdrawPublic[26] = TextDrawCreate(186.000000, 305.000000, "_");
	TextDrawFont(StatsTextdrawPublic[26], 1);
	TextDrawLetterSize(StatsTextdrawPublic[26], 0.583333, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[26], 296.000000, -92.000000);
	TextDrawSetOutline(StatsTextdrawPublic[26], 1);
	TextDrawSetShadow(StatsTextdrawPublic[26], 0);
	TextDrawAlignment(StatsTextdrawPublic[26], 2);
	TextDrawColor(StatsTextdrawPublic[26], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[26], 255);
	TextDrawBoxColor(StatsTextdrawPublic[26], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[26], 1);
	TextDrawSetProportional(StatsTextdrawPublic[26], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[26], 0);

	StatsTextdrawPublic[27] = TextDrawCreate(345.000000, 145.000000, "_");
	TextDrawFont(StatsTextdrawPublic[27], 1);
	TextDrawLetterSize(StatsTextdrawPublic[27], 0.600000, 4.299934);
	TextDrawTextSize(StatsTextdrawPublic[27], 298.500000, -1.000000);
	TextDrawSetOutline(StatsTextdrawPublic[27], 1);
	TextDrawSetShadow(StatsTextdrawPublic[27], 0);
	TextDrawAlignment(StatsTextdrawPublic[27], 2);
	TextDrawColor(StatsTextdrawPublic[27], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[27], 255);
	TextDrawBoxColor(StatsTextdrawPublic[27], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[27], 1);
	TextDrawSetProportional(StatsTextdrawPublic[27], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[27], 0);

	StatsTextdrawPublic[28] = TextDrawCreate(368.000000, 136.000000, "ORGANIZACIJA");
	TextDrawFont(StatsTextdrawPublic[28], 1);
	TextDrawLetterSize(StatsTextdrawPublic[28], 0.208333, 1.200000);
	TextDrawTextSize(StatsTextdrawPublic[28], 400.000000, 128.000000);
	TextDrawSetOutline(StatsTextdrawPublic[28], 1);
	TextDrawSetShadow(StatsTextdrawPublic[28], 0);
	TextDrawAlignment(StatsTextdrawPublic[28], 1);
	TextDrawColor(StatsTextdrawPublic[28], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[28], 255);
	TextDrawBoxColor(StatsTextdrawPublic[28], 50);
	TextDrawUseBox(StatsTextdrawPublic[28], 0);
	TextDrawSetProportional(StatsTextdrawPublic[28], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[28], 0);

	StatsTextdrawPublic[29] = TextDrawCreate(394.000000, 185.000000, "_");
	TextDrawFont(StatsTextdrawPublic[29], 1);
	TextDrawLetterSize(StatsTextdrawPublic[29], 0.583333, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[29], 298.500000, -99.500000);
	TextDrawSetOutline(StatsTextdrawPublic[29], 1);
	TextDrawSetShadow(StatsTextdrawPublic[29], 0);
	TextDrawAlignment(StatsTextdrawPublic[29], 2);
	TextDrawColor(StatsTextdrawPublic[29], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[29], 255);
	TextDrawBoxColor(StatsTextdrawPublic[29], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[29], 1);
	TextDrawSetProportional(StatsTextdrawPublic[29], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[29], 0);

	StatsTextdrawPublic[30] = TextDrawCreate(355.000000, 143.000000, "_");
	TextDrawFont(StatsTextdrawPublic[30], 1);
	TextDrawLetterSize(StatsTextdrawPublic[30], 0.600000, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[30], 298.500000, -24.000000);
	TextDrawSetOutline(StatsTextdrawPublic[30], 1);
	TextDrawSetShadow(StatsTextdrawPublic[30], 0);
	TextDrawAlignment(StatsTextdrawPublic[30], 2);
	TextDrawColor(StatsTextdrawPublic[30], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[30], 255);
	TextDrawBoxColor(StatsTextdrawPublic[30], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[30], 1);
	TextDrawSetProportional(StatsTextdrawPublic[30], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[30], 0);

	StatsTextdrawPublic[31] = TextDrawCreate(442.000000, 145.000000, "_");
	TextDrawFont(StatsTextdrawPublic[31], 1);
	TextDrawLetterSize(StatsTextdrawPublic[31], 0.600000, 4.299934);
	TextDrawTextSize(StatsTextdrawPublic[31], 298.500000, -1.000000);
	TextDrawSetOutline(StatsTextdrawPublic[31], 1);
	TextDrawSetShadow(StatsTextdrawPublic[31], 0);
	TextDrawAlignment(StatsTextdrawPublic[31], 2);
	TextDrawColor(StatsTextdrawPublic[31], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[31], 255);
	TextDrawBoxColor(StatsTextdrawPublic[31], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[31], 1);
	TextDrawSetProportional(StatsTextdrawPublic[31], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[31], 0);

	StatsTextdrawPublic[32] = TextDrawCreate(433.000000, 143.000000, "_");
	TextDrawFont(StatsTextdrawPublic[32], 1);
	TextDrawLetterSize(StatsTextdrawPublic[32], 0.600000, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[32], 298.500000, -22.500000);
	TextDrawSetOutline(StatsTextdrawPublic[32], 1);
	TextDrawSetShadow(StatsTextdrawPublic[32], 0);
	TextDrawAlignment(StatsTextdrawPublic[32], 2);
	TextDrawColor(StatsTextdrawPublic[32], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[32], 255);
	TextDrawBoxColor(StatsTextdrawPublic[32], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[32], 1);
	TextDrawSetProportional(StatsTextdrawPublic[32], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[32], 0);

	StatsTextdrawPublic[33] = TextDrawCreate(287.000000, 314.000000, "_");
	TextDrawFont(StatsTextdrawPublic[33], 1);
	TextDrawLetterSize(StatsTextdrawPublic[33], 0.600000, 1.799921);
	TextDrawTextSize(StatsTextdrawPublic[33], 296.500000, 80.500000);
	TextDrawSetOutline(StatsTextdrawPublic[33], 1);
	TextDrawSetShadow(StatsTextdrawPublic[33], 0);
	TextDrawAlignment(StatsTextdrawPublic[33], 2);
	TextDrawColor(StatsTextdrawPublic[33], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[33], 255);
	TextDrawBoxColor(StatsTextdrawPublic[33], 255);
	TextDrawUseBox(StatsTextdrawPublic[33], 1);
	TextDrawSetProportional(StatsTextdrawPublic[33], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[33], 0);

	StatsTextdrawPublic[34] = TextDrawCreate(457.000000, 314.000000, "_");
	TextDrawFont(StatsTextdrawPublic[34], 1);
	TextDrawLetterSize(StatsTextdrawPublic[34], 0.600000, 1.799921);
	TextDrawTextSize(StatsTextdrawPublic[34], 296.500000, 80.500000);
	TextDrawSetOutline(StatsTextdrawPublic[34], 1);
	TextDrawSetShadow(StatsTextdrawPublic[34], 0);
	TextDrawAlignment(StatsTextdrawPublic[34], 2);
	TextDrawColor(StatsTextdrawPublic[34], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[34], 255);
	TextDrawBoxColor(StatsTextdrawPublic[34], 255);
	TextDrawUseBox(StatsTextdrawPublic[34], 1);
	TextDrawSetProportional(StatsTextdrawPublic[34], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[34], 0);

	StatsTextdrawPublic[35] = TextDrawCreate(372.000000, 314.000000, "_");
	TextDrawFont(StatsTextdrawPublic[35], 1);
	TextDrawLetterSize(StatsTextdrawPublic[35], 0.600000, 1.799921);
	TextDrawTextSize(StatsTextdrawPublic[35], 296.500000, 80.500000);
	TextDrawSetOutline(StatsTextdrawPublic[35], 1);
	TextDrawSetShadow(StatsTextdrawPublic[35], 0);
	TextDrawAlignment(StatsTextdrawPublic[35], 2);
	TextDrawColor(StatsTextdrawPublic[35], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[35], 255);
	TextDrawBoxColor(StatsTextdrawPublic[35], 255);
	TextDrawUseBox(StatsTextdrawPublic[35], 1);
	TextDrawSetProportional(StatsTextdrawPublic[35], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[35], 0);

	StatsTextdrawPublic[36] = TextDrawCreate(287.000000, 332.000000, "_");
	TextDrawFont(StatsTextdrawPublic[36], 1);
	TextDrawLetterSize(StatsTextdrawPublic[36], 0.583333, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[36], 298.500000, -85.500000);
	TextDrawSetOutline(StatsTextdrawPublic[36], 1);
	TextDrawSetShadow(StatsTextdrawPublic[36], 0);
	TextDrawAlignment(StatsTextdrawPublic[36], 2);
	TextDrawColor(StatsTextdrawPublic[36], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[36], 255);
	TextDrawBoxColor(StatsTextdrawPublic[36], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[36], 1);
	TextDrawSetProportional(StatsTextdrawPublic[36], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[36], 0);

	StatsTextdrawPublic[37] = TextDrawCreate(372.000000, 332.000000, "_");
	TextDrawFont(StatsTextdrawPublic[37], 1);
	TextDrawLetterSize(StatsTextdrawPublic[37], 0.583333, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[37], 298.500000, -85.500000);
	TextDrawSetOutline(StatsTextdrawPublic[37], 1);
	TextDrawSetShadow(StatsTextdrawPublic[37], 0);
	TextDrawAlignment(StatsTextdrawPublic[37], 2);
	TextDrawColor(StatsTextdrawPublic[37], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[37], 255);
	TextDrawBoxColor(StatsTextdrawPublic[37], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[37], 1);
	TextDrawSetProportional(StatsTextdrawPublic[37], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[37], 0);

	StatsTextdrawPublic[38] = TextDrawCreate(457.000000, 332.000000, "_");
	TextDrawFont(StatsTextdrawPublic[38], 1);
	TextDrawLetterSize(StatsTextdrawPublic[38], 0.583333, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[38], 298.500000, -85.500000);
	TextDrawSetOutline(StatsTextdrawPublic[38], 1);
	TextDrawSetShadow(StatsTextdrawPublic[38], 0);
	TextDrawAlignment(StatsTextdrawPublic[38], 2);
	TextDrawColor(StatsTextdrawPublic[38], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[38], 255);
	TextDrawBoxColor(StatsTextdrawPublic[38], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[38], 1);
	TextDrawSetProportional(StatsTextdrawPublic[38], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[38], 0);

	StatsTextdrawPublic[39] = TextDrawCreate(249.000000, 316.000000, "HUD:radar_race");
	TextDrawFont(StatsTextdrawPublic[39], 4);
	TextDrawLetterSize(StatsTextdrawPublic[39], 0.600000, 2.000000);
	TextDrawTextSize(StatsTextdrawPublic[39], 11.000000, 11.000000);
	TextDrawSetOutline(StatsTextdrawPublic[39], 1);
	TextDrawSetShadow(StatsTextdrawPublic[39], 0);
	TextDrawAlignment(StatsTextdrawPublic[39], 1);
	TextDrawColor(StatsTextdrawPublic[39], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[39], 255);
	TextDrawBoxColor(StatsTextdrawPublic[39], 50);
	TextDrawUseBox(StatsTextdrawPublic[39], 1);
	TextDrawSetProportional(StatsTextdrawPublic[39], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[39], 0);

	StatsTextdrawPublic[40] = TextDrawCreate(334.000000, 316.000000, "HUD:radar_runway");
	TextDrawFont(StatsTextdrawPublic[40], 4);
	TextDrawLetterSize(StatsTextdrawPublic[40], 0.600000, 2.000000);
	TextDrawTextSize(StatsTextdrawPublic[40], 11.000000, 11.000000);
	TextDrawSetOutline(StatsTextdrawPublic[40], 1);
	TextDrawSetShadow(StatsTextdrawPublic[40], 0);
	TextDrawAlignment(StatsTextdrawPublic[40], 1);
	TextDrawColor(StatsTextdrawPublic[40], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[40], 255);
	TextDrawBoxColor(StatsTextdrawPublic[40], 50);
	TextDrawUseBox(StatsTextdrawPublic[40], 1);
	TextDrawSetProportional(StatsTextdrawPublic[40], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[40], 0);

	StatsTextdrawPublic[41] = TextDrawCreate(419.000000, 316.000000, "HUD:radar_cash");
	TextDrawFont(StatsTextdrawPublic[41], 4);
	TextDrawLetterSize(StatsTextdrawPublic[41], 0.600000, 2.000000);
	TextDrawTextSize(StatsTextdrawPublic[41], 11.000000, 11.000000);
	TextDrawSetOutline(StatsTextdrawPublic[41], 1);
	TextDrawSetShadow(StatsTextdrawPublic[41], 0);
	TextDrawAlignment(StatsTextdrawPublic[41], 1);
	TextDrawColor(StatsTextdrawPublic[41], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[41], 255);
	TextDrawBoxColor(StatsTextdrawPublic[41], 50);
	TextDrawUseBox(StatsTextdrawPublic[41], 1);
	TextDrawSetProportional(StatsTextdrawPublic[41], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[41], 0);

	StatsTextdrawPublic[42] = TextDrawCreate(345.000000, 206.000000, "_");
	TextDrawFont(StatsTextdrawPublic[42], 1);
	TextDrawLetterSize(StatsTextdrawPublic[42], 0.600000, 3.149935);
	TextDrawTextSize(StatsTextdrawPublic[42], 298.500000, -1.000000);
	TextDrawSetOutline(StatsTextdrawPublic[42], 1);
	TextDrawSetShadow(StatsTextdrawPublic[42], 0);
	TextDrawAlignment(StatsTextdrawPublic[42], 2);
	TextDrawColor(StatsTextdrawPublic[42], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[42], 255);
	TextDrawBoxColor(StatsTextdrawPublic[42], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[42], 1);
	TextDrawSetProportional(StatsTextdrawPublic[42], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[42], 0);

	StatsTextdrawPublic[43] = TextDrawCreate(394.000000, 236.000000, "_");
	TextDrawFont(StatsTextdrawPublic[43], 1);
	TextDrawLetterSize(StatsTextdrawPublic[43], 0.583333, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[43], 298.500000, -99.500000);
	TextDrawSetOutline(StatsTextdrawPublic[43], 1);
	TextDrawSetShadow(StatsTextdrawPublic[43], 0);
	TextDrawAlignment(StatsTextdrawPublic[43], 2);
	TextDrawColor(StatsTextdrawPublic[43], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[43], 255);
	TextDrawBoxColor(StatsTextdrawPublic[43], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[43], 1);
	TextDrawSetProportional(StatsTextdrawPublic[43], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[43], 0);

	StatsTextdrawPublic[44] = TextDrawCreate(442.000000, 206.000000, "_");
	TextDrawFont(StatsTextdrawPublic[44], 1);
	TextDrawLetterSize(StatsTextdrawPublic[44], 0.600000, 3.149935);
	TextDrawTextSize(StatsTextdrawPublic[44], 298.500000, -1.000000);
	TextDrawSetOutline(StatsTextdrawPublic[44], 1);
	TextDrawSetShadow(StatsTextdrawPublic[44], 0);
	TextDrawAlignment(StatsTextdrawPublic[44], 2);
	TextDrawColor(StatsTextdrawPublic[44], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[44], 255);
	TextDrawBoxColor(StatsTextdrawPublic[44], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[44], 1);
	TextDrawSetProportional(StatsTextdrawPublic[44], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[44], 0);

	StatsTextdrawPublic[45] = TextDrawCreate(355.000000, 205.000000, "_");
	TextDrawFont(StatsTextdrawPublic[45], 1);
	TextDrawLetterSize(StatsTextdrawPublic[45], 0.600000, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[45], 298.500000, -24.000000);
	TextDrawSetOutline(StatsTextdrawPublic[45], 1);
	TextDrawSetShadow(StatsTextdrawPublic[45], 0);
	TextDrawAlignment(StatsTextdrawPublic[45], 2);
	TextDrawColor(StatsTextdrawPublic[45], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[45], 255);
	TextDrawBoxColor(StatsTextdrawPublic[45], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[45], 1);
	TextDrawSetProportional(StatsTextdrawPublic[45], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[45], 0);

	StatsTextdrawPublic[46] = TextDrawCreate(367.000000, 198.000000, "RANK/POZICIJA");
	TextDrawFont(StatsTextdrawPublic[46], 1);
	TextDrawLetterSize(StatsTextdrawPublic[46], 0.208333, 1.200000);
	TextDrawTextSize(StatsTextdrawPublic[46], 400.000000, 128.000000);
	TextDrawSetOutline(StatsTextdrawPublic[46], 1);
	TextDrawSetShadow(StatsTextdrawPublic[46], 0);
	TextDrawAlignment(StatsTextdrawPublic[46], 1);
	TextDrawColor(StatsTextdrawPublic[46], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[46], 255);
	TextDrawBoxColor(StatsTextdrawPublic[46], 50);
	TextDrawUseBox(StatsTextdrawPublic[46], 0);
	TextDrawSetProportional(StatsTextdrawPublic[46], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[46], 0);

	StatsTextdrawPublic[47] = TextDrawCreate(433.000000, 205.000000, "_");
	TextDrawFont(StatsTextdrawPublic[47], 1);
	TextDrawLetterSize(StatsTextdrawPublic[47], 0.600000, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[47], 298.500000, -22.500000);
	TextDrawSetOutline(StatsTextdrawPublic[47], 1);
	TextDrawSetShadow(StatsTextdrawPublic[47], 0);
	TextDrawAlignment(StatsTextdrawPublic[47], 2);
	TextDrawColor(StatsTextdrawPublic[47], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[47], 255);
	TextDrawBoxColor(StatsTextdrawPublic[47], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[47], 1);
	TextDrawSetProportional(StatsTextdrawPublic[47], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[47], 0);

	StatsTextdrawPublic[48] = TextDrawCreate(345.000000, 257.000000, "_");
	TextDrawFont(StatsTextdrawPublic[48], 1);
	TextDrawLetterSize(StatsTextdrawPublic[48], 0.600000, 4.299934);
	TextDrawTextSize(StatsTextdrawPublic[48], 298.500000, -1.000000);
	TextDrawSetOutline(StatsTextdrawPublic[48], 1);
	TextDrawSetShadow(StatsTextdrawPublic[48], 0);
	TextDrawAlignment(StatsTextdrawPublic[48], 2);
	TextDrawColor(StatsTextdrawPublic[48], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[48], 255);
	TextDrawBoxColor(StatsTextdrawPublic[48], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[48], 1);
	TextDrawSetProportional(StatsTextdrawPublic[48], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[48], 0);

	StatsTextdrawPublic[49] = TextDrawCreate(394.000000, 297.000000, "_");
	TextDrawFont(StatsTextdrawPublic[49], 1);
	TextDrawLetterSize(StatsTextdrawPublic[49], 0.583333, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[49], 298.500000, -99.500000);
	TextDrawSetOutline(StatsTextdrawPublic[49], 1);
	TextDrawSetShadow(StatsTextdrawPublic[49], 0);
	TextDrawAlignment(StatsTextdrawPublic[49], 2);
	TextDrawColor(StatsTextdrawPublic[49], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[49], 255);
	TextDrawBoxColor(StatsTextdrawPublic[49], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[49], 1);
	TextDrawSetProportional(StatsTextdrawPublic[49], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[49], 0);

	StatsTextdrawPublic[50] = TextDrawCreate(442.000000, 257.000000, "_");
	TextDrawFont(StatsTextdrawPublic[50], 1);
	TextDrawLetterSize(StatsTextdrawPublic[50], 0.600000, 4.299934);
	TextDrawTextSize(StatsTextdrawPublic[50], 298.500000, -1.000000);
	TextDrawSetOutline(StatsTextdrawPublic[50], 1);
	TextDrawSetShadow(StatsTextdrawPublic[50], 0);
	TextDrawAlignment(StatsTextdrawPublic[50], 2);
	TextDrawColor(StatsTextdrawPublic[50], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[50], 255);
	TextDrawBoxColor(StatsTextdrawPublic[50], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[50], 1);
	TextDrawSetProportional(StatsTextdrawPublic[50], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[50], 0);

	StatsTextdrawPublic[51] = TextDrawCreate(379.000000, 248.000000, "TELEFON");
	TextDrawFont(StatsTextdrawPublic[51], 1);
	TextDrawLetterSize(StatsTextdrawPublic[51], 0.208333, 1.200000);
	TextDrawTextSize(StatsTextdrawPublic[51], 400.000000, 128.000000);
	TextDrawSetOutline(StatsTextdrawPublic[51], 1);
	TextDrawSetShadow(StatsTextdrawPublic[51], 0);
	TextDrawAlignment(StatsTextdrawPublic[51], 1);
	TextDrawColor(StatsTextdrawPublic[51], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[51], 255);
	TextDrawBoxColor(StatsTextdrawPublic[51], 50);
	TextDrawUseBox(StatsTextdrawPublic[51], 0);
	TextDrawSetProportional(StatsTextdrawPublic[51], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[51], 0);

	StatsTextdrawPublic[52] = TextDrawCreate(360.000000, 255.000000, "_");
	TextDrawFont(StatsTextdrawPublic[52], 1);
	TextDrawLetterSize(StatsTextdrawPublic[52], 0.600000, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[52], 298.500000, -34.500000);
	TextDrawSetOutline(StatsTextdrawPublic[52], 1);
	TextDrawSetShadow(StatsTextdrawPublic[52], 0);
	TextDrawAlignment(StatsTextdrawPublic[52], 2);
	TextDrawColor(StatsTextdrawPublic[52], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[52], 255);
	TextDrawBoxColor(StatsTextdrawPublic[52], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[52], 1);
	TextDrawSetProportional(StatsTextdrawPublic[52], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[52], 0);

	StatsTextdrawPublic[53] = TextDrawCreate(427.000000, 255.000000, "_");
	TextDrawFont(StatsTextdrawPublic[53], 1);
	TextDrawLetterSize(StatsTextdrawPublic[53], 0.600000, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[53], 298.500000, -34.500000);
	TextDrawSetOutline(StatsTextdrawPublic[53], 1);
	TextDrawSetShadow(StatsTextdrawPublic[53], 0);
	TextDrawAlignment(StatsTextdrawPublic[53], 2);
	TextDrawColor(StatsTextdrawPublic[53], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[53], 255);
	TextDrawBoxColor(StatsTextdrawPublic[53], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[53], 1);
	TextDrawSetProportional(StatsTextdrawPublic[53], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[53], 0);

	StatsTextdrawPublic[54] = TextDrawCreate(459.000000, 145.000000, "_");
	TextDrawFont(StatsTextdrawPublic[54], 1);
	TextDrawLetterSize(StatsTextdrawPublic[54], 0.600000, 16.699928);
	TextDrawTextSize(StatsTextdrawPublic[54], 298.500000, -1.000000);
	TextDrawSetOutline(StatsTextdrawPublic[54], 1);
	TextDrawSetShadow(StatsTextdrawPublic[54], 0);
	TextDrawAlignment(StatsTextdrawPublic[54], 2);
	TextDrawColor(StatsTextdrawPublic[54], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[54], 255);
	TextDrawBoxColor(StatsTextdrawPublic[54], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[54], 1);
	TextDrawSetProportional(StatsTextdrawPublic[54], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[54], 0);

	StatsTextdrawPublic[55] = TextDrawCreate(466.000000, 136.000000, "VOZILA");
	TextDrawFont(StatsTextdrawPublic[55], 1);
	TextDrawLetterSize(StatsTextdrawPublic[55], 0.208333, 1.200000);
	TextDrawTextSize(StatsTextdrawPublic[55], 400.000000, 128.000000);
	TextDrawSetOutline(StatsTextdrawPublic[55], 1);
	TextDrawSetShadow(StatsTextdrawPublic[55], 0);
	TextDrawAlignment(StatsTextdrawPublic[55], 1);
	TextDrawColor(StatsTextdrawPublic[55], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[55], 255);
	TextDrawBoxColor(StatsTextdrawPublic[55], 50);
	TextDrawUseBox(StatsTextdrawPublic[55], 0);
	TextDrawSetProportional(StatsTextdrawPublic[55], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[55], 0);

	StatsTextdrawPublic[56] = TextDrawCreate(501.000000, 145.000000, "_");
	TextDrawFont(StatsTextdrawPublic[56], 1);
	TextDrawLetterSize(StatsTextdrawPublic[56], 0.600000, 16.699928);
	TextDrawTextSize(StatsTextdrawPublic[56], 298.500000, -1.000000);
	TextDrawSetOutline(StatsTextdrawPublic[56], 1);
	TextDrawSetShadow(StatsTextdrawPublic[56], 0);
	TextDrawAlignment(StatsTextdrawPublic[56], 2);
	TextDrawColor(StatsTextdrawPublic[56], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[56], 255);
	TextDrawBoxColor(StatsTextdrawPublic[56], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[56], 1);
	TextDrawSetProportional(StatsTextdrawPublic[56], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[56], 0);

	StatsTextdrawPublic[57] = TextDrawCreate(480.000000, 297.000000, "_");
	TextDrawFont(StatsTextdrawPublic[57], 1);
	TextDrawLetterSize(StatsTextdrawPublic[57], 0.583333, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[57], 298.500000, -44.500000);
	TextDrawSetOutline(StatsTextdrawPublic[57], 1);
	TextDrawSetShadow(StatsTextdrawPublic[57], 0);
	TextDrawAlignment(StatsTextdrawPublic[57], 2);
	TextDrawColor(StatsTextdrawPublic[57], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[57], 255);
	TextDrawBoxColor(StatsTextdrawPublic[57], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[57], 1);
	TextDrawSetProportional(StatsTextdrawPublic[57], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[57], 0);

	StatsTextdrawPublic[58] = TextDrawCreate(462.000000, 143.000000, "_");
	TextDrawFont(StatsTextdrawPublic[58], 1);
	TextDrawLetterSize(StatsTextdrawPublic[58], 0.600000, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[58], 298.500000, -10.000000);
	TextDrawSetOutline(StatsTextdrawPublic[58], 1);
	TextDrawSetShadow(StatsTextdrawPublic[58], 0);
	TextDrawAlignment(StatsTextdrawPublic[58], 2);
	TextDrawColor(StatsTextdrawPublic[58], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[58], 255);
	TextDrawBoxColor(StatsTextdrawPublic[58], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[58], 1);
	TextDrawSetProportional(StatsTextdrawPublic[58], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[58], 0);

	StatsTextdrawPublic[59] = TextDrawCreate(498.000000, 143.000000, "_");
	TextDrawFont(StatsTextdrawPublic[59], 1);
	TextDrawLetterSize(StatsTextdrawPublic[59], 0.600000, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[59], 298.500000, -10.000000);
	TextDrawSetOutline(StatsTextdrawPublic[59], 1);
	TextDrawSetShadow(StatsTextdrawPublic[59], 0);
	TextDrawAlignment(StatsTextdrawPublic[59], 2);
	TextDrawColor(StatsTextdrawPublic[59], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[59], 255);
	TextDrawBoxColor(StatsTextdrawPublic[59], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[59], 1);
	TextDrawSetProportional(StatsTextdrawPublic[59], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[59], 0);

	StatsTextdrawPublic[60] = TextDrawCreate(365.000000, 133.000000, "_");
	TextDrawFont(StatsTextdrawPublic[60], 1);
	TextDrawLetterSize(StatsTextdrawPublic[60], 0.583333, -0.150058);
	TextDrawTextSize(StatsTextdrawPublic[60], 298.500000, -189.500000);
	TextDrawSetOutline(StatsTextdrawPublic[60], 1);
	TextDrawSetShadow(StatsTextdrawPublic[60], 0);
	TextDrawAlignment(StatsTextdrawPublic[60], 2);
	TextDrawColor(StatsTextdrawPublic[60], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[60], 255);
	TextDrawBoxColor(StatsTextdrawPublic[60], 1097458175);
	TextDrawUseBox(StatsTextdrawPublic[60], 1);
	TextDrawSetProportional(StatsTextdrawPublic[60], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[60], 0);

	StatsTextdrawPublic[61] = TextDrawCreate(499.000000, 117.000000, "X");
	TextDrawFont(StatsTextdrawPublic[61], 2);
	TextDrawLetterSize(StatsTextdrawPublic[61], 0.208333, 1.149999);
	TextDrawTextSize(StatsTextdrawPublic[61], 16.500000, 9.500000);
	TextDrawSetOutline(StatsTextdrawPublic[61], 1);
	TextDrawSetShadow(StatsTextdrawPublic[61], 0);
	TextDrawAlignment(StatsTextdrawPublic[61], 2);
	TextDrawColor(StatsTextdrawPublic[61], -1);
	TextDrawBackgroundColor(StatsTextdrawPublic[61], 255);
	TextDrawBoxColor(StatsTextdrawPublic[61], -1962934017);
	TextDrawUseBox(StatsTextdrawPublic[61], 1);
	TextDrawSetProportional(StatsTextdrawPublic[61], 1);
	TextDrawSetSelectable(StatsTextdrawPublic[61], 1);




	Textdraw0 = TextDrawCreate(782.666809, 434.981536, "usebox");
	TextDrawLetterSize(Textdraw0, 0.000000, 4.109671);
	TextDrawTextSize(Textdraw0, -40.333324, 0.000000);
	TextDrawAlignment(Textdraw0, 1);
	TextDrawColor(Textdraw0, 0);
	TextDrawUseBox(Textdraw0, true);
	TextDrawBoxColor(Textdraw0, 255);
	TextDrawSetShadow(Textdraw0, 0);
	TextDrawSetOutline(Textdraw0, 0);
	TextDrawFont(Textdraw0, 0);

	Textdraw1 = TextDrawCreate(3.000034, 435.140808, "v1.0");
	TextDrawLetterSize(Textdraw1, 0.210333, 1.205924);
	TextDrawAlignment(Textdraw1, 1);
	TextDrawColor(Textdraw1, -1);
	TextDrawUseBox(Textdraw1, true);
	TextDrawBoxColor(Textdraw1, 0);
	TextDrawSetShadow(Textdraw1, 0);
	TextDrawSetOutline(Textdraw1, 1);
	TextDrawBackgroundColor(Textdraw1, 51);
	TextDrawFont(Textdraw1, 2);
	TextDrawSetProportional(Textdraw1, 1);

	Textdraw2 = TextDrawCreate(21.333360, 424.355590, ".");
	TextDrawLetterSize(Textdraw2, 0.658330, 2.773926);
	TextDrawAlignment(Textdraw2, 1);
	TextDrawColor(Textdraw2, 428189439);
	TextDrawUseBox(Textdraw2, true);
	TextDrawBoxColor(Textdraw2, 0);
	TextDrawSetShadow(Textdraw2, 0);
	TextDrawSetOutline(Textdraw2, -7);
	TextDrawBackgroundColor(Textdraw2, 51);
	TextDrawFont(Textdraw2, 1);
	TextDrawSetProportional(Textdraw2, 1);

	Textdraw3 = TextDrawCreate(25.333364, 423.111175, ".");
	TextDrawLetterSize(Textdraw3, 0.499332, 2.147556);
	TextDrawAlignment(Textdraw3, 1);
	TextDrawColor(Textdraw3, 428189439);
	TextDrawSetShadow(Textdraw3, 0);
	TextDrawSetOutline(Textdraw3, 1);
	TextDrawBackgroundColor(Textdraw3, 51);
	TextDrawFont(Textdraw3, 1);
	TextDrawSetProportional(Textdraw3, 1);

	Textdraw4 = TextDrawCreate(28.000038, 431.822265, ".");
	TextDrawLetterSize(Textdraw4, 0.383332, 1.579259);
	TextDrawAlignment(Textdraw4, 1);
	TextDrawColor(Textdraw4, 428189439);
	TextDrawSetShadow(Textdraw4, 0);
	TextDrawSetOutline(Textdraw4, 1);
	TextDrawBackgroundColor(Textdraw4, 51);
	TextDrawFont(Textdraw4, 1);
	TextDrawSetProportional(Textdraw4, 1);

	Textdraw5 = TextDrawCreate(624.333679, 433.481231, "00:00");
	TextDrawLetterSize(Textdraw5, 0.111666, 0.828445);
	TextDrawAlignment(Textdraw5, 2);
	TextDrawColor(Textdraw5, -1);
	TextDrawSetShadow(Textdraw5, 0);
	TextDrawSetOutline(Textdraw5, 1);
	TextDrawBackgroundColor(Textdraw5, 51);
	TextDrawFont(Textdraw5, 2);
	TextDrawSetProportional(Textdraw5, 1);

	Textdraw6 = TextDrawCreate(624.000183, 440.118591, "00/00/0000");
	TextDrawLetterSize(Textdraw6, 0.098999, 0.745481);
	TextDrawAlignment(Textdraw6, 2);
	TextDrawColor(Textdraw6, -1);
	TextDrawSetShadow(Textdraw6, 0);
	TextDrawSetOutline(Textdraw6, 1);
	TextDrawBackgroundColor(Textdraw6, 51);
	TextDrawFont(Textdraw6, 2);
	TextDrawSetProportional(Textdraw6, 1);

	Textdraw7 = TextDrawCreate(601.999877, 429.748138, "/");
	TextDrawLetterSize(Textdraw7, 0.555666, 2.014812);
	TextDrawAlignment(Textdraw7, 1);
	TextDrawColor(Textdraw7, 428189439);
	TextDrawSetShadow(Textdraw7, 0);
	TextDrawSetOutline(Textdraw7, 0);
	TextDrawBackgroundColor(Textdraw7, 51);
	TextDrawFont(Textdraw7, 1);
	TextDrawSetProportional(Textdraw7, 1);

	Textdraw8 = TextDrawCreate(563.000122, 434.725952, "Online: 43");
	TextDrawLetterSize(Textdraw8, 0.158997, 1.205927);
	TextDrawAlignment(Textdraw8, 1);
	TextDrawColor(Textdraw8, -1);
	TextDrawSetShadow(Textdraw8, 0);
	TextDrawSetOutline(Textdraw8, 1);
	TextDrawBackgroundColor(Textdraw8, 51);
	TextDrawFont(Textdraw8, 2);
	TextDrawSetProportional(Textdraw8, 1);

	Textdraw9 = TextDrawCreate(197.999893, 435.555603, "Radnom help poruka koja se prikazuje igracima!");
	TextDrawLetterSize(Textdraw9, 0.177999, 1.156147);
	TextDrawAlignment(Textdraw9, 2);
	TextDrawColor(Textdraw9, -1);
	TextDrawSetShadow(Textdraw9, 0);
	TextDrawSetOutline(Textdraw9, 1);
	TextDrawBackgroundColor(Textdraw9, 51);
	TextDrawFont(Textdraw9, 2);
	TextDrawSetProportional(Textdraw9, 1);

	Textdraw10 = TextDrawCreate(552.000244, 429.333374, "/");
	TextDrawLetterSize(Textdraw10, 0.533666, 2.242960);
	TextDrawAlignment(Textdraw10, 1);
	TextDrawColor(Textdraw10, 428189439);
	TextDrawSetShadow(Textdraw10, 0);
	TextDrawSetOutline(Textdraw10, 0);
	TextDrawBackgroundColor(Textdraw10, 51);
	TextDrawFont(Textdraw10, 1);
	TextDrawSetProportional(Textdraw10, 1);

	Textdraw11 = TextDrawCreate(509.333526, 434.311096, "Rekord: 99");
	TextDrawLetterSize(Textdraw11, 0.160666, 1.272297);
	TextDrawAlignment(Textdraw11, 1);
	TextDrawColor(Textdraw11, -1);
	TextDrawSetShadow(Textdraw11, 0);
	TextDrawSetOutline(Textdraw11, 1);
	TextDrawBackgroundColor(Textdraw11, 51);
	TextDrawFont(Textdraw11, 2);
	TextDrawSetProportional(Textdraw11, 1);

	Textdraw12 = TextDrawCreate(495.666778, 429.748168, "/");
	TextDrawLetterSize(Textdraw12, 0.488332, 2.064590);
	TextDrawAlignment(Textdraw12, 1);
	TextDrawColor(Textdraw12, 428189439);
	TextDrawSetShadow(Textdraw12, 0);
	TextDrawSetOutline(Textdraw12, 0);
	TextDrawBackgroundColor(Textdraw12, 51);
	TextDrawFont(Textdraw12, 1);
	TextDrawSetProportional(Textdraw12, 1);

	Textdraw13 = TextDrawCreate(565.999877, 331.851837, "ld_pool:ball");
	TextDrawLetterSize(Textdraw13, 0.000000, 0.000000);
	TextDrawTextSize(Textdraw13, 16.333297, 19.496297);
	TextDrawAlignment(Textdraw13, 1);
	TextDrawColor(Textdraw13, 255);
	TextDrawSetShadow(Textdraw13, 0);
	TextDrawSetOutline(Textdraw13, 0);
	TextDrawBackgroundColor(Textdraw13, 255);
	TextDrawFont(Textdraw13, 4);

	Textdraw14 = TextDrawCreate(566.000122, 355.496368, "ld_pool:ball");
	TextDrawLetterSize(Textdraw14, 0.000000, 0.000000);
	TextDrawTextSize(Textdraw14, 16.333374, 18.666681);
	TextDrawAlignment(Textdraw14, 1);
	TextDrawColor(Textdraw14, 255);
	TextDrawSetShadow(Textdraw14, 0);
	TextDrawSetOutline(Textdraw14, 0);
	TextDrawFont(Textdraw14, 4);

	Textdraw15 = TextDrawCreate(566.333374, 378.311126, "ld_pool:ball");
	TextDrawLetterSize(Textdraw15, 0.000000, 0.000000);
	TextDrawTextSize(Textdraw15, 16.666645, 19.496284);
	TextDrawAlignment(Textdraw15, 1);
	TextDrawColor(Textdraw15, 255);
	TextDrawSetShadow(Textdraw15, 0);
	TextDrawSetOutline(Textdraw15, 0);
	TextDrawFont(Textdraw15, 4);

	Textdraw16 = TextDrawCreate(556.000000, 326.044555, "_");
	TextDrawLetterSize(Textdraw16, 0.000000, 9.033334);
	TextDrawTextSize(Textdraw16, 39.333312, 37.333312);
	TextDrawAlignment(Textdraw16, 1);
	TextDrawColor(Textdraw16, -1);
	TextDrawUseBox(Textdraw16, true);
	TextDrawBoxColor(Textdraw16, 0);
	TextDrawSetShadow(Textdraw16, 0);
	TextDrawSetOutline(Textdraw16, 0);
	TextDrawFont(Textdraw16, 5);
	TextDrawBackgroundColor(Textdraw16, 0x00000000);
	TextDrawSetPreviewModel(Textdraw16, 19847);
	TextDrawSetPreviewRot(Textdraw16, -90.000000, 0.000000, 20.000000, 2.000000);

	Textdraw17 = TextDrawCreate(556.666809, 346.785339, "_");
	TextDrawLetterSize(Textdraw17, 0.166666, -0.589778);
	TextDrawTextSize(Textdraw17, 35.666667, 36.918529);
	TextDrawAlignment(Textdraw17, 1);
	TextDrawColor(Textdraw17, -1);
	TextDrawUseBox(Textdraw17, true);
	TextDrawBoxColor(Textdraw17, 0);
	TextDrawSetShadow(Textdraw17, 0);
	TextDrawSetOutline(Textdraw17, 0);
	TextDrawFont(Textdraw17, 5);
	TextDrawBackgroundColor(Textdraw17, 0x00000000);
	TextDrawSetPreviewModel(Textdraw17, 1484);
	TextDrawSetPreviewRot(Textdraw17, 0.000000, 0.000000, 0.000000, 2.000000);

	Textdraw18 = TextDrawCreate(558.666687, 365.866821, "_");
	TextDrawLetterSize(Textdraw18, 0.000000, 3.200000);
	TextDrawTextSize(Textdraw18, 33.000003, 40.651824);
	TextDrawAlignment(Textdraw18, 1);
	TextDrawColor(Textdraw18, -1);
	TextDrawUseBox(Textdraw18, true);
	TextDrawBoxColor(Textdraw18, 0);
	TextDrawSetShadow(Textdraw18, 0);
	TextDrawSetOutline(Textdraw18, 0);
	TextDrawFont(Textdraw18, 5);
	TextDrawBackgroundColor(Textdraw18, 0x00000000);
	TextDrawSetPreviewModel(Textdraw18, 1212);
	TextDrawSetPreviewRot(Textdraw18, -50.000000, 20.000000, 0.000000, 2.000000);

	Textdraw19 = TextDrawCreate(608.999938, 337.499969, "usebox");
	TextDrawLetterSize(Textdraw19, 0.000000, 0.973865);
	TextDrawTextSize(Textdraw19, 576.666564, 0.000000);
	TextDrawAlignment(Textdraw19, 1);
	TextDrawColor(Textdraw19, 0);
	TextDrawUseBox(Textdraw19, true);
	TextDrawBoxColor(Textdraw19, 255);
	TextDrawSetShadow(Textdraw19, 0);
	TextDrawSetOutline(Textdraw19, 0);
	TextDrawFont(Textdraw19, 0);

	Textdraw20 = TextDrawCreate(609.333312, 360.314788, "usebox");
	TextDrawLetterSize(Textdraw20, 0.000000, 0.927779);
	TextDrawTextSize(Textdraw20, 577.666687, 0.000000);
	TextDrawAlignment(Textdraw20, 1);
	TextDrawColor(Textdraw20, 0);
	TextDrawUseBox(Textdraw20, true);
	TextDrawBoxColor(Textdraw20, 255);
	TextDrawSetShadow(Textdraw20, 0);
	TextDrawSetOutline(Textdraw20, 0);
	TextDrawFont(Textdraw20, 0);

	Textdraw21 = TextDrawCreate(609.666625, 383.959289, "usebox");
	TextDrawLetterSize(Textdraw21, 0.000000, 0.894442);
	TextDrawTextSize(Textdraw21, 578.999938, 0.000000);
	TextDrawAlignment(Textdraw21, 1);
	TextDrawColor(Textdraw21, 0);
	TextDrawUseBox(Textdraw21, true);
	TextDrawBoxColor(Textdraw21, 255);
	TextDrawSetShadow(Textdraw21, 0);
	TextDrawSetOutline(Textdraw21, 0);
	TextDrawFont(Textdraw21, 0);

	Textdraw22 = TextDrawCreate(591.666748, 329.362915, "glad");
	TextDrawLetterSize(Textdraw22, 0.100997, 0.662518);
	TextDrawAlignment(Textdraw22, 2);
	TextDrawColor(Textdraw22, -1);
	TextDrawSetShadow(Textdraw22, 0);
	TextDrawSetOutline(Textdraw22, 1);
	TextDrawBackgroundColor(Textdraw22, 51);
	TextDrawFont(Textdraw22, 2);
	TextDrawSetProportional(Textdraw22, 1);

	Textdraw23 = TextDrawCreate(587.000122, 352.177764, "zedj");
	TextDrawLetterSize(Textdraw23, 0.101000, 0.658370);
	TextDrawAlignment(Textdraw23, 1);
	TextDrawColor(Textdraw23, -1);
	TextDrawSetShadow(Textdraw23, 0);
	TextDrawSetOutline(Textdraw23, 1);
	TextDrawBackgroundColor(Textdraw23, 51);
	TextDrawFont(Textdraw23, 2);
	TextDrawSetProportional(Textdraw23, 1);

	Textdraw24 = TextDrawCreate(587.000122, 375.822296, "plata");
	TextDrawLetterSize(Textdraw24, 0.101666, 0.662518);
	TextDrawAlignment(Textdraw24, 1);
	TextDrawColor(Textdraw24, -1);
	TextDrawSetShadow(Textdraw24, 0);
	TextDrawSetOutline(Textdraw24, 1);
	TextDrawBackgroundColor(Textdraw24, 51);
	TextDrawFont(Textdraw24, 2);
	TextDrawSetProportional(Textdraw24, 1);

	Textdraw25 = TextDrawCreate(398.666748, 434.725952, "www.pc-rp.com");
	TextDrawLetterSize(Textdraw25, 0.206999, 1.205924);
	TextDrawAlignment(Textdraw25, 1);
	TextDrawColor(Textdraw25, -1);
	TextDrawSetShadow(Textdraw25, 0);
	TextDrawSetOutline(Textdraw25, 1);
	TextDrawBackgroundColor(Textdraw25, 51);
	TextDrawFont(Textdraw25, 2);
	TextDrawSetProportional(Textdraw25, 1);

	Textdraw26 = TextDrawCreate(390.333374, 421.037048, ".");
	TextDrawLetterSize(Textdraw26, 0.734999, 3.371258);
	TextDrawAlignment(Textdraw26, 1);
	TextDrawColor(Textdraw26, 428189439);
	TextDrawSetShadow(Textdraw26, 0);
	TextDrawSetOutline(Textdraw26, 0);
	TextDrawBackgroundColor(Textdraw26, 51);
	TextDrawFont(Textdraw26, 1);
	TextDrawSetProportional(Textdraw26, 1);

	Textdraw27 = TextDrawCreate(466.333343, 421.451843, ".");
	TextDrawLetterSize(Textdraw27, 0.716332, 3.246814);
	TextDrawAlignment(Textdraw27, 1);
	TextDrawColor(Textdraw27, 428189439);
	TextDrawUseBox(Textdraw27, true);
	TextDrawBoxColor(Textdraw27, 0);
	TextDrawSetShadow(Textdraw27, 0);
	TextDrawSetOutline(Textdraw27, 0);
	TextDrawBackgroundColor(Textdraw27, 51);
	TextDrawFont(Textdraw27, 1);
	TextDrawSetProportional(Textdraw27, 1);

	Textdraw28 = TextDrawCreate(387.999969, 427.259368, ".");
	TextDrawLetterSize(Textdraw28, 0.449665, 1.678814);
	TextDrawAlignment(Textdraw28, 1);
	TextDrawColor(Textdraw28, 428189439);
	TextDrawSetShadow(Textdraw28, 0);
	TextDrawSetOutline(Textdraw28, 1);
	TextDrawBackgroundColor(Textdraw28, 51);
	TextDrawFont(Textdraw28, 1);
	TextDrawSetProportional(Textdraw28, 1);

	Textdraw29 = TextDrawCreate(471.666656, 426.844543, ".");
	TextDrawLetterSize(Textdraw29, 0.449999, 1.703703);
	TextDrawAlignment(Textdraw29, 1);
	TextDrawColor(Textdraw29, 428189439);
	TextDrawSetShadow(Textdraw29, 0);
	TextDrawSetOutline(Textdraw29, 1);
	TextDrawBackgroundColor(Textdraw29, 51);
	TextDrawFont(Textdraw29, 1);
	TextDrawSetProportional(Textdraw29, 1);

	Textdraw30 = TextDrawCreate(386.333435, 433.896301, ".");
	TextDrawLetterSize(Textdraw30, 0.339666, 1.380149);
	TextDrawAlignment(Textdraw30, 1);
	TextDrawColor(Textdraw30, 428189439);
	TextDrawSetShadow(Textdraw30, 0);
	TextDrawSetOutline(Textdraw30, 1);
	TextDrawBackgroundColor(Textdraw30, 51);
	TextDrawFont(Textdraw30, 1);
	TextDrawSetProportional(Textdraw30, 1);

	Textdraw31 = TextDrawCreate(473.999938, 433.481475, ".");
	TextDrawLetterSize(Textdraw31, 0.364665, 1.450667);
	TextDrawAlignment(Textdraw31, 1);
	TextDrawColor(Textdraw31, 428189439);
	TextDrawSetShadow(Textdraw31, 0);
	TextDrawSetOutline(Textdraw31, 1);
	TextDrawBackgroundColor(Textdraw31, 51);
	TextDrawFont(Textdraw31, 1);
	TextDrawSetProportional(Textdraw31, 1);

	Textdraw32 = TextDrawCreate(366.999938, 433.066711, "/");
	TextDrawLetterSize(Textdraw32, 0.400999, 1.006814);
	TextDrawAlignment(Textdraw32, 1);
	TextDrawColor(Textdraw32, 428189439);
	TextDrawSetShadow(Textdraw32, 0);
	TextDrawSetOutline(Textdraw32, 1);
	TextDrawBackgroundColor(Textdraw32, 51);
	TextDrawFont(Textdraw32, 1);
	TextDrawSetProportional(Textdraw32, 1);

	Textdraw33 = TextDrawCreate(37.666671, 432.651885, "/");
	TextDrawLetterSize(Textdraw33, 0.400999, 1.006814);
	TextDrawAlignment(Textdraw33, 1);
	TextDrawColor(Textdraw33, 428189439);
	TextDrawSetShadow(Textdraw33, 0);
	TextDrawSetOutline(Textdraw33, 1);
	TextDrawBackgroundColor(Textdraw33, 51);
	TextDrawFont(Textdraw33, 1);
	TextDrawSetProportional(Textdraw33, 1);

	Textdraw34 = TextDrawCreate(357.333312, 439.288818, "/");
	TextDrawLetterSize(Textdraw34, 0.403999, 0.998516);
	TextDrawAlignment(Textdraw34, 1);
	TextDrawColor(Textdraw34, 428189439);
	TextDrawSetShadow(Textdraw34, 0);
	TextDrawSetOutline(Textdraw34, 1);
	TextDrawBackgroundColor(Textdraw34, 51);
	TextDrawFont(Textdraw34, 1);
	TextDrawSetProportional(Textdraw34, 1);

	Textdraw35 = TextDrawCreate(533.666687, 89.855552, "usebox");
	TextDrawLetterSize(Textdraw35, 0.000000, 8.117899);
	TextDrawTextSize(Textdraw35, 616.666625, 0.000000);
	TextDrawAlignment(Textdraw35, 1);
	TextDrawColor(Textdraw35, 0);
	TextDrawUseBox(Textdraw35, true);
	TextDrawBoxColor(Textdraw35, 255);
	TextDrawSetShadow(Textdraw35, 0);
	TextDrawSetOutline(Textdraw35, 0);
	TextDrawFont(Textdraw35, 0);

	Textdraw36 = TextDrawCreate(574.000000, 89.185195, "info");
	TextDrawLetterSize(Textdraw36, 0.216000, 1.010962);
	TextDrawAlignment(Textdraw36, 2);
	TextDrawColor(Textdraw36, -1);
	TextDrawSetShadow(Textdraw36, 0);
	TextDrawSetOutline(Textdraw36, 1);
	TextDrawBackgroundColor(Textdraw36, 51);
	TextDrawFont(Textdraw36, 2);
	TextDrawSetProportional(Textdraw36, 1);

	Textdraw37 = TextDrawCreate(532.333374, 99.970375, "LD_SPAC:white");
	TextDrawLetterSize(Textdraw37, 0.000000, 0.000000);
	TextDrawTextSize(Textdraw37, 85.666641, 0.829630);
	TextDrawAlignment(Textdraw37, 1);
	TextDrawColor(Textdraw37, 428189439);
	TextDrawSetShadow(Textdraw37, 0);
	TextDrawSetOutline(Textdraw37, 0);
	TextDrawFont(Textdraw37, 4);

	Textdraw38 = TextDrawCreate(552.666564, 92.503669, "_");
	TextDrawLetterSize(Textdraw38, 0.000000, -3.899997);
	TextDrawTextSize(Textdraw38, 36.666709, 40.651847);
	TextDrawAlignment(Textdraw38, 1);
	TextDrawColor(Textdraw38, -1);
	TextDrawUseBox(Textdraw38, true);
	TextDrawBoxColor(Textdraw38, 0);
	TextDrawSetShadow(Textdraw38, 0);
	TextDrawSetOutline(Textdraw38, 0);
	TextDrawFont(Textdraw38, 5);
	TextDrawBackgroundColor(Textdraw38, 0x00000000);
	TextDrawSetPreviewModel(Textdraw38, 1212);
	TextDrawSetPreviewRot(Textdraw38, -45.000000, 20.000000, 0.000000, 3.000000);

	Textdraw39 = TextDrawCreate(556.666503, 114.488853, "_");
	TextDrawLetterSize(Textdraw39, 0.026000, 0.671998);
	TextDrawTextSize(Textdraw39, 29.000036, 31.940746);
	TextDrawAlignment(Textdraw39, 1);
	TextDrawColor(Textdraw39, -1);
	TextDrawUseBox(Textdraw39, true);
	TextDrawBoxColor(Textdraw39, 0);
	TextDrawSetShadow(Textdraw39, 0);
	TextDrawSetOutline(Textdraw39, 0);
	TextDrawFont(Textdraw39, 5);
	TextDrawBackgroundColor(Textdraw39, 0x00000000);
	TextDrawSetPreviewModel(Textdraw39, 19941);
	TextDrawSetPreviewRot(Textdraw39, -45.000000, 20.000000, 0.000000, 2.000000);

	Textdraw40 = TextDrawCreate(559.666442, 138.548187, "_");
	TextDrawLetterSize(Textdraw40, 0.009332, -0.008294);
	TextDrawTextSize(Textdraw40, 24.000005, 20.325935);
	TextDrawAlignment(Textdraw40, 1);
	TextDrawColor(Textdraw40, -1);
	TextDrawUseBox(Textdraw40, true);
	TextDrawBoxColor(Textdraw40, 0);
	TextDrawSetShadow(Textdraw40, 0);
	TextDrawSetOutline(Textdraw40, 0);
	TextDrawFont(Textdraw40, 5);
	TextDrawBackgroundColor(Textdraw40, 0x00000000);
	TextDrawSetPreviewModel(Textdraw40, 1274);
	TextDrawSetPreviewRot(Textdraw40, 0.000000, 0.000000, 0.000000, 2.000000);

	Textdraw41 = TextDrawCreate(637.000000, 2.074074, "LD_SPAC:white");
	TextDrawLetterSize(Textdraw41, 0.000000, 0.000000);
	TextDrawTextSize(Textdraw41, -78.666694, 12.029628);
	TextDrawAlignment(Textdraw41, 1);
	TextDrawColor(Textdraw41, 255);
	TextDrawSetShadow(Textdraw41, 0);
	TextDrawSetOutline(Textdraw41, 0);
	TextDrawFont(Textdraw41, 4);

	Textdraw42 = TextDrawCreate(597.999633, 1.244444, "perfectcrime");
	TextDrawLetterSize(Textdraw42, 0.210333, 1.218369);
	TextDrawAlignment(Textdraw42, 2);
	TextDrawColor(Textdraw42, -1);
	TextDrawSetShadow(Textdraw42, 0);
	TextDrawSetOutline(Textdraw42, 1);
	TextDrawBackgroundColor(Textdraw42, 51);
	TextDrawFont(Textdraw42, 2);
	TextDrawSetProportional(Textdraw42, 1);

	Textdraw43 = TextDrawCreate(637.000061, 13.688886, "LD_SPAC:white");
	TextDrawLetterSize(Textdraw43, 0.000000, 0.000000);
	TextDrawTextSize(Textdraw43, -78.666687, 1.659260);
	TextDrawAlignment(Textdraw43, 1);
	TextDrawColor(Textdraw43, 428189439);
	TextDrawSetShadow(Textdraw43, 0);
	TextDrawSetOutline(Textdraw43, 0);
	TextDrawFont(Textdraw43, 4);

	//aerodrom
	CreateObject(3971, -1866.26245, 56.14790, 156.73181,   0.00000, 0.00000, 0.00000);
	CreateObject(3969, -1873.47156, 65.91236, 155.11084,   0.00000, 0.00000, 0.00000);
	CreateObject(1572, -1870.22290, 58.76033, 154.75195,   0.00000, 0.00000, -134.16008);
	CreateObject(19457, -1875.32153, 64.71449, 154.08667,   0.00000, 90.00000, 90.00000);
	CreateObject(19457, -1887.53186, 67.46746, 154.09888,   0.00000, 90.00000, -9.48000);
	CreateObject(19457, -1879.62891, 63.37642, 154.09961,   0.00000, 90.00000, 38.81999);
	TutActor[0] = CreateActor(21, -1871.38672, 64.18094, 155.18677,-90.0);
	ApplyActorAnimation(TutActor[0], "OTB","wtchrace_loop",4.1, true, false, false, false, 0);
	TutActor[1] = CreateActor(46, -1877.35913, 60.14860, 155.18677, 0.00000);
	ApplyActorAnimation(TutActor[1], "OTB","wtchrace_loop",4.1, true, false, false, false, 0);
	TutActor[2] = CreateActor(98, -1882.15540, 66.68291, 155.18677, -90.00000);
	ApplyActorAnimation(TutActor[2], "OTB","wtchrace_loop",4.1, true, false, false, false, 0);
	TutActor[3] = CreateActor(101, -1888.53394, 66.41813, 155.18677, -90.00000);
	ApplyActorAnimation(TutActor[3], "GANGS","prtial_gngtlkA",4.1, true, false, false, false, 0);
	TutActor[4] = CreateActor(147, -1887.59399, 67.02242, 155.18677, -212.94001);
	ApplyActorAnimation(TutActor[4], "GANGS","prtial_gngtlkA",4.1, true, false, false, false, 0);
	TutActor[5] = CreateActor(180, -1887.47998, 65.58641, 155.18677, -326.51996);
	ApplyActorAnimation(TutActor[5], "GANGS","prtial_gngtlkB",4.1, true, false, false, false, 0);
	TutActor[6] = CreateActor(29, -1873.55627, 65.32191, 155.18677, 180.00000);
	ApplyActorAnimation(TutActor[6], "OTB","wtchrace_loop",4.1, true, false, false, false, 0);

	print("Ucitani TD-ovi");
//==============================================================================
	for(new vehicleid = 0; vehicleid < MAX_VEHICLES; vehicleid++)
	{
	    VehInfo[vehicleid][vEngine] = 0;
		VehInfo[vehicleid][vLights] = 0;
		VehInfo[vehicleid][vAlarm] = 0;
		VehInfo[vehicleid][vDoor] = 0;
		VehInfo[vehicleid][vBonnet] = 0;
		VehInfo[vehicleid][vObj] = 0;
		VehInfo[vehicleid][vFuel] = 60;
		SetVehicleParamsEx(vehicleid, VehInfo[vehicleid][vEngine], VehInfo[vehicleid][vLights], VehInfo[vehicleid][vAlarm], VehInfo[vehicleid][vDoor], VehInfo[vehicleid][vBonnet], VehInfo[vehicleid][vBonnet], VehInfo[vehicleid][vObj]);
	}
	print("Ucitan sistem za vozila");
	RespawnVozila();
	return 1;
}

public OnGameModeExit()
{
	for(new i = 0; i < MAX_ASKLIST; i++)
	{
		new nfile[128];
	    format(nfile, sizeof(nfile), ASKLISTPATH, i);
     	if(fexist(nfile))
     	{
		    SaveAsk(i);
		}
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		new nfile[128];
	    format(nfile, sizeof(nfile), PATH, i);
     	if(fexist(nfile))
     	{
		    SavePlayer(i);
		}
	}
	for(new i = 0; i < MAX_HOUSES; i++)
	{
		new nfile[128];
	    format(nfile, sizeof(nfile), HOUSEPATH, i);
     	if(fexist(nfile))
     	{
		    SaveHouse(i);
		}
	}
	for(new i = 0; i < MAX_FIRME; i++)
	{
		new nfile[128];
	    format(nfile, sizeof(nfile), FIRMAPATH, i);
     	if(fexist(nfile))
     	{
		    SaveFirma(i);
		}
	}
	for(new i = 0; i < MAX_ORGS; i++)
	{
		new nfile[128];
	    format(nfile, sizeof(nfile), ORGPATH, i);
     	if(fexist(nfile))
     	{
		    SaveOrg(i);
		}
	}
	for(new i = 0; i < MAX_OSPORTS; i++)
	{
		new nfile[128];
	    format(nfile, sizeof(nfile), OSPORTPATH, i);
     	if(fexist(nfile))
     	{
		    SaveOSPort(i);
		}
	}
	for(new i = 0; i < MAX_FCPORTS; i++)
	{
		new nfile[128];
	    format(nfile, sizeof(nfile), FCPORTPATH, i);
     	if(fexist(nfile))
     	{
		    SaveFCPort(i);
		}
	}
	for(new i = 0; i < MAX_BBPORTS; i++)
	{
		new nfile[128];
	    format(nfile, sizeof(nfile), BBPORTPATH, i);
     	if(fexist(nfile))
     	{
		    SaveBBPort(i);
		}
	}
	for(new i = 0; i < MAX_JBPORTS; i++)
	{
		new nfile[128];
	    format(nfile, sizeof(nfile), JBPORTPATH, i);
     	if(fexist(nfile))
     	{
		    SaveJBPort(i);
		}
	}
	for(new i = 0; i < MAX_ORGPORTS; i++)
	{
		new nfile[128];
	    format(nfile, sizeof(nfile), ORGPORTPATH, i);
     	if(fexist(nfile))
     	{
		    SaveORGPort(i);
		}
	}
	for(new i = 0; i < MAX_GPS; i++)
	{
		new nfile[128];
	    format(nfile, sizeof(nfile), GPSPATH, i);
     	if(fexist(nfile))
     	{
		    SaveGPS(i);
		}
	}
	for(new i = 0; i < MAX_PROMOTERS; i++)
	{
		new nfile[128];
	    format(nfile, sizeof(nfile), PROMPATH, i);
     	if(fexist(nfile))
     	{
		    SavePromoter(i);
		}
	}
	for(new i = 0; i < MAX_VOZILA; i++)
	{
		new nfile[128];
	    format(nfile, sizeof(nfile), VEHPATH, i);
     	if(fexist(nfile))
     	{
			SaveVozilo(i);
		}
	}
	return 1;
}

public OnPlayerRequestClass(playerid, classid)
{
	ppostokens[playerid] = 5;
	if(PlayerInfo[playerid][pJailTime] > 0)
	{
		if(PlayerInfo[playerid][pJailPlace] == 0) { SetSpawnInfo(playerid, 0, PlayerInfo[playerid][pSkin], 269.1466, 89.6520, 1001.0641, 270, 0, 0, 0, 0, 0, 0);SetPlayerInterior(playerid, 6); }
		else if(PlayerInfo[playerid][pJailPlace] == 1) { SetSpawnInfo(playerid, 0, PlayerInfo[playerid][pSkin], 223.5584, 114.6579, 999.0126, 270, 0, 0, 0, 0, 0, 0);SetPlayerInterior(playerid, 10); }
		else SetSpawnInfo(playerid, 0, PlayerInfo[playerid][pSkin], 196.3977, 1898.5800, 17.6473, 0, 0, 0, 0, 0, 0, 0); SetPlayerInterior(playerid, 0);
		pJailTimer[playerid] = SetTimerEx("JailTimer", 1000, true, "i", playerid);
		pUJailu[playerid] = 1;
		SpawnPlayer(playerid);
		return 1;
	}
	if(PlayerInfo[playerid][pGrad] == 1)
	{
		SetSpawnInfo(playerid, 0, PlayerInfo[playerid][pSkin], 55.8133,1167.2178,18.6641, 270, 0, 0, 0, 0, 0, 0);
	}
	else
	{
		SetSpawnInfo(playerid, 0, PlayerInfo[playerid][pSkin], 1226.9680,311.4328,19.7578,180.0, 0, 0, 0, 0, 0, 0);
	}
	return 1;
}

public OnPlayerConnect(playerid)
{
	pOprema[playerid] = 0;
	pPancir[playerid] = 0;
	pDuty[playerid] = 0;
	pTazer[playerid] = 0;
	pTazed[playerid] = 0;
	KillTimer(pTazTimer[playerid]);
	pCuffed[playerid] = 0;
	KillTimer(pCuffTimer[playerid]);
	pDragging[playerid] = -1;
	pDragged[playerid] = -1;
	KillTimer(pDragTimer[playerid]);
	KillTimer(pTrackTimer[playerid]);
	pTracking[playerid] = -1;

	KillTimer(pFlyingTimer[playerid]);

	pUJailu[playerid] = 0;
	KillTimer(pJailTimer[playerid]);

	pWaypoint[playerid][0] = 0;
	pWaypoint[playerid][1] = 0;
	pWaypoint[playerid][2] = 0;

	//PLAYER MARKERI
	SetPlayerMapIcon(playerid, 0, 55.8133,1167.2178,18.6641, 38, -1, MAPICON_GLOBAL); //SPAWN FC
	SetPlayerMapIcon(playerid, 1, 1226.9680,311.4328,19.7578, 38, -1, MAPICON_GLOBAL); //SPAWN BB
	SetPlayerMapIcon(playerid, 2, -215.0918,1148.4674,19.7556, 61, -1, MAPICON_LOCAL); //OPSTINA FC
	SetPlayerMapIcon(playerid, 3, 1373.8088,405.1312,19.9555, 61, -1, MAPICON_LOCAL); //OPSTINA BB
	SetPlayerMapIcon(playerid, 4, -176.3848,1114.3026,19.8095, 52, -1, MAPICON_LOCAL); //BANKA FC
	SetPlayerMapIcon(playerid, 5, 1311.0319,329.7282,19.9141, 52, -1, MAPICON_LOCAL); //BANKA BB
	SetPlayerMapIcon(playerid, 6, -313.3308,1177.3732,19.7570, 56, -1, MAPICON_LOCAL); //ZLATARA FC
	SetPlayerMapIcon(playerid, 7, 1223.6421,246.9161,19.5469, 56, -1, MAPICON_LOCAL); //ZLATARA BB
	SetPlayerMapIcon(playerid, 8, -305.583709, 1053.319335, 22.347612, 22, -1, MAPICON_LOCAL); //BOLNICA FC

	pNosiSmece[playerid] = false;
	pAluminijum[playerid] = 0;
	pPlastika[playerid] = 0;
	pKamionet[playerid] = 0; 

	pWantedLevel[playerid] = 0;
	format(pWantedReason[playerid], 64, "");

	otvaraGate[playerid] = -1;

	radi[playerid] = 0;
	pJobProgress[playerid] = 0;

	pvoz[playerid] = -1;

	pCall[playerid] = -1;
	pPozivalac[playerid] = -1;

	PlayerInfo[playerid][pAsklist] = 0;
	KillTimer(logintimer[playerid]);
	KillTimer(pDeathTimer[playerid]);
	pDeathSecs[playerid] = 0;
	pSpec[playerid] = -1;
	gledalicnu[playerid] = 0;

	pAskTimer[playerid] = 0;
	pAskAnswer[playerid] = "";
	pDobioOdgovor[playerid] = 0;
	pOdgovara[playerid] = 0;

	pRepTimer[playerid] = 0;

	ClearChat(playerid);
	pPizza[playerid] = 0;
	pPojas[playerid] = 0;


	//STATS TD
	StatsTextdrawPlayer[playerid][0] = CreatePlayerTextDraw(playerid, 107.000000, 109.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][0], 5);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][0], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][0], 154.500000, 192.500000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][0], 0);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][0], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][0], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][0], 0);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][0], 255);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][0], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][0], 0);
	PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][0], 0);
	PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][0], -10.000000, 0.000000, 14.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, StatsTextdrawPlayer[playerid][0], 1, 1);

	StatsTextdrawPlayer[playerid][1] = CreatePlayerTextDraw(playerid, 251.000000, 149.000000, "NOVAC: $1000000000");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][1], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][1], 0.162497, 0.949998);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][1], 400.000000, 128.000000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][1], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][1], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][1], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][1], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][1], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][1], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][1], 0);

	StatsTextdrawPlayer[playerid][2] = CreatePlayerTextDraw(playerid, 251.000000, 160.000000, "BANKA: $1000000000");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][2], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][2], 0.158333, 0.899999);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][2], 400.000000, 128.000000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][2], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][2], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][2], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][2], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][2], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][2], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][2], 0);

	StatsTextdrawPlayer[playerid][3] = CreatePlayerTextDraw(playerid, 251.000000, 171.000000, "ZLATO: 100g");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][3], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][3], 0.162497, 0.850000);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][3], 400.000000, 128.000000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][3], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][3], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][3], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][3], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][3], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][3], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][3], 0);

	StatsTextdrawPlayer[playerid][4] = CreatePlayerTextDraw(playerid, 251.000000, 211.000000, "POSAO: LOGISTICAR");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][4], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][4], 0.162497, 0.899999);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][4], 400.000000, 128.000000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][4], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][4], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][4], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][4], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][4], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][4], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][4], 0);

	StatsTextdrawPlayer[playerid][5] = CreatePlayerTextDraw(playerid, 251.000000, 221.000000, "PLATA: $100000");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][5], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][5], 0.166666, 0.850000);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][5], 400.000000, 128.000000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][5], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][5], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][5], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][5], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][5], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][5], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][5], 0);

	StatsTextdrawPlayer[playerid][6] = CreatePlayerTextDraw(playerid, 251.000000, 262.000000, "KUCA: 9999");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][6], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][6], 0.158333, 0.899999);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][6], 400.000000, 128.000000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][6], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][6], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][6], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][6], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][6], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][6], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][6], 0);

	StatsTextdrawPlayer[playerid][7] = CreatePlayerTextDraw(playerid, 251.000000, 272.000000, "FIRMA: NEMA");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][7], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][7], 0.158333, 0.899999);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][7], 400.000000, 128.000000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][7], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][7], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][7], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][7], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][7], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][7], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][7], 0);

	StatsTextdrawPlayer[playerid][8] = CreatePlayerTextDraw(playerid, 251.000000, 282.000000, "IMANJE: NEMA");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][8], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][8], 0.158333, 0.899999);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][8], 400.000000, 128.000000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][8], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][8], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][8], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][8], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][8], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][8], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][8], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][8], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][8], 0);

	StatsTextdrawPlayer[playerid][9] = CreatePlayerTextDraw(playerid, 186.000000, 316.000000, "ID IGRACA: 123456");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][9], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][9], 0.208333, 1.200000);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][9], 400.000000, 128.000000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][9], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][9], 2);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][9], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][9], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][9], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][9], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][9], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][9], 0);

	StatsTextdrawPlayer[playerid][10] = CreatePlayerTextDraw(playerid, 351.000000, 149.000000, "CLAN: NISTE CLAN");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][10], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][10], 0.162497, 0.949998);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][10], 453.500000, 244.500000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][10], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][10], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][10], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][10], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][10], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][10], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][10], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][10], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][10], 0);

	StatsTextdrawPlayer[playerid][11] = CreatePlayerTextDraw(playerid, 351.000000, 159.000000, "LIDER: NISTE LIDER");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][11], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][11], 0.162497, 0.949998);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][11], 453.500000, 244.500000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][11], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][11], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][11], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][11], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][11], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][11], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][11], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][11], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][11], 0);

	StatsTextdrawPlayer[playerid][12] = CreatePlayerTextDraw(playerid, 351.000000, 169.000000, "RANK: NIJEDAN");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][12], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][12], 0.162497, 0.949998);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][12], 453.500000, 244.500000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][12], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][12], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][12], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][12], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][12], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][12], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][12], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][12], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][12], 0);

	StatsTextdrawPlayer[playerid][13] = CreatePlayerTextDraw(playerid, 291.000000, 316.000000, "Glad: 100%");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][13], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][13], 0.208333, 1.200000);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][13], 400.000000, 128.000000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][13], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][13], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][13], 2);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][13], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][13], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][13], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][13], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][13], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][13], 0);

	StatsTextdrawPlayer[playerid][14] = CreatePlayerTextDraw(playerid, 376.000000, 316.000000, "Zedj: 100%");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][14], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][14], 0.208333, 1.200000);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][14], 400.000000, 128.000000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][14], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][14], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][14], 2);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][14], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][14], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][14], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][14], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][14], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][14], 0);

	StatsTextdrawPlayer[playerid][15] = CreatePlayerTextDraw(playerid, 462.000000, 316.000000, "Do plate: 60min");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][15], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][15], 0.208333, 1.200000);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][15], 400.000000, 128.000000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][15], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][15], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][15], 2);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][15], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][15], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][15], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][15], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][15], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][15], 0);

	StatsTextdrawPlayer[playerid][16] = CreatePlayerTextDraw(playerid, 351.000000, 210.000000, "POZICIJA: HEAD ADMIN");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][16], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][16], 0.162497, 0.949998);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][16], 453.500000, 244.500000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][16], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][16], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][16], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][16], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][16], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][16], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][16], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][16], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][16], 0);

	StatsTextdrawPlayer[playerid][17] = CreatePlayerTextDraw(playerid, 351.000000, 220.000000, "TRAJANJE: NEOGRANICENO");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][17], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][17], 0.162497, 0.949998);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][17], 453.500000, 244.500000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][17], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][17], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][17], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][17], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][17], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][17], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][17], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][17], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][17], 0);

	StatsTextdrawPlayer[playerid][18] = CreatePlayerTextDraw(playerid, 351.000000, 261.000000, "MODEL: SAMSUNG GALAXY S24");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][18], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][18], 0.162497, 0.949998);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][18], 453.500000, 244.500000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][18], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][18], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][18], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][18], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][18], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][18], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][18], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][18], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][18], 0);

	StatsTextdrawPlayer[playerid][19] = CreatePlayerTextDraw(playerid, 351.000000, 271.000000, "BROJ TELEFONA: 404521");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][19], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][19], 0.162497, 0.949998);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][19], 453.500000, 244.500000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][19], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][19], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][19], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][19], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][19], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][19], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][19], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][19], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][19], 0);

	StatsTextdrawPlayer[playerid][20] = CreatePlayerTextDraw(playerid, 351.000000, 281.000000, "KREDIT: 500");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][20], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][20], 0.162497, 0.949998);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][20], 453.500000, 244.500000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][20], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][20], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][20], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][20], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][20], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][20], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][20], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][20], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][20], 0);

	StatsTextdrawPlayer[playerid][21] = CreatePlayerTextDraw(playerid, 468.000000, 149.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][21], 5);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][21], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][21], 24.000000, 26.000000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][21], 0);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][21], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][21], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][21], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][21], 125);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][21], 255);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][21], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][21], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][21], 0);
	PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][21], 411);
	PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][21], -10.000000, 0.000000, -20.000000, 0.800000);
	PlayerTextDrawSetPreviewVehCol(playerid, StatsTextdrawPlayer[playerid][21], 1, 1);

	StatsTextdrawPlayer[playerid][22] = CreatePlayerTextDraw(playerid, 468.000000, 265.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][22], 5);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][22], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][22], 24.000000, 26.000000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][22], 0);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][22], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][22], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][22], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][22], 125);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][22], 255);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][22], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][22], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][22], 0);
	PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][22], 411);
	PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][22], -10.000000, 0.000000, -20.000000, 0.800000);
	PlayerTextDrawSetPreviewVehCol(playerid, StatsTextdrawPlayer[playerid][22], 1, 1);

	StatsTextdrawPlayer[playerid][23] = CreatePlayerTextDraw(playerid, 468.000000, 236.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][23], 5);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][23], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][23], 24.000000, 26.000000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][23], 0);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][23], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][23], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][23], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][23], 125);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][23], 255);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][23], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][23], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][23], 0);
	PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][23], 411);
	PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][23], -10.000000, 0.000000, -20.000000, 0.800000);
	PlayerTextDrawSetPreviewVehCol(playerid, StatsTextdrawPlayer[playerid][23], 1, 1);

	StatsTextdrawPlayer[playerid][24] = CreatePlayerTextDraw(playerid, 468.000000, 178.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][24], 5);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][24], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][24], 24.000000, 26.000000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][24], 0);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][24], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][24], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][24], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][24], 125);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][24], 255);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][24], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][24], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][24], 0);
	PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][24], 411);
	PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][24], -10.000000, 0.000000, -20.000000, 0.800000);
	PlayerTextDrawSetPreviewVehCol(playerid, StatsTextdrawPlayer[playerid][24], 1, 1);

	StatsTextdrawPlayer[playerid][25] = CreatePlayerTextDraw(playerid, 468.000000, 207.000000, "Preview_Model");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][25], 5);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][25], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][25], 24.000000, 26.000000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][25], 0);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][25], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][25], 1);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][25], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][25], 125);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][25], 255);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][25], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][25], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][25], 0);
	PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][25], 411);
	PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][25], -10.000000, 0.000000, -20.000000, 0.800000);
	PlayerTextDrawSetPreviewVehCol(playerid, StatsTextdrawPlayer[playerid][25], 1, 1);

	StatsTextdrawPlayer[playerid][26] = CreatePlayerTextDraw(playerid, 480.000000, 169.000000, "infernus");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][26], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][26], 0.104165, 0.699998);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][26], 453.500000, 244.500000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][26], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][26], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][26], 2);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][26], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][26], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][26], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][26], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][26], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][26], 0);

	StatsTextdrawPlayer[playerid][27] = CreatePlayerTextDraw(playerid, 480.000000, 198.000000, "infernus");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][27], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][27], 0.104165, 0.699998);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][27], 453.500000, 244.500000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][27], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][27], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][27], 2);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][27], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][27], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][27], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][27], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][27], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][27], 0);

	StatsTextdrawPlayer[playerid][28] = CreatePlayerTextDraw(playerid, 480.000000, 227.000000, "infernus");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][28], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][28], 0.104165, 0.699998);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][28], 453.500000, 244.500000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][28], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][28], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][28], 2);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][28], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][28], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][28], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][28], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][28], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][28], 0);

	StatsTextdrawPlayer[playerid][29] = CreatePlayerTextDraw(playerid, 480.000000, 256.000000, "infernus");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][29], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][29], 0.104165, 0.699998);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][29], 453.500000, 244.500000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][29], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][29], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][29], 2);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][29], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][29], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][29], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][29], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][29], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][29], 0);

	StatsTextdrawPlayer[playerid][30] = CreatePlayerTextDraw(playerid, 480.000000, 285.000000, "infernus");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][30], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][30], 0.104165, 0.699998);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][30], 453.500000, 244.500000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][30], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][30], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][30], 2);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][30], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][30], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][30], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][30], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][30], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][30], 0);

	StatsTextdrawPlayer[playerid][31] = CreatePlayerTextDraw(playerid, 365.000000, 115.000000, "NIKOLA TASIC");
	PlayerTextDrawFont(playerid, StatsTextdrawPlayer[playerid][31], 1);
	PlayerTextDrawLetterSize(playerid, StatsTextdrawPlayer[playerid][31], 0.337498, 1.599998);
	PlayerTextDrawTextSize(playerid, StatsTextdrawPlayer[playerid][31], 400.000000, 128.000000);
	PlayerTextDrawSetOutline(playerid, StatsTextdrawPlayer[playerid][31], 1);
	PlayerTextDrawSetShadow(playerid, StatsTextdrawPlayer[playerid][31], 0);
	PlayerTextDrawAlignment(playerid, StatsTextdrawPlayer[playerid][31], 2);
	PlayerTextDrawColor(playerid, StatsTextdrawPlayer[playerid][31], -1);
	PlayerTextDrawBackgroundColor(playerid, StatsTextdrawPlayer[playerid][31], 255);
	PlayerTextDrawBoxColor(playerid, StatsTextdrawPlayer[playerid][31], 50);
	PlayerTextDrawUseBox(playerid, StatsTextdrawPlayer[playerid][31], 0);
	PlayerTextDrawSetProportional(playerid, StatsTextdrawPlayer[playerid][31], 1);
	PlayerTextDrawSetSelectable(playerid, StatsTextdrawPlayer[playerid][31], 0);

	//BRZINOMER
	BrzinomerTD[playerid][0] = CreatePlayerTextDraw(playerid, 517.846374, 356.302001, "box");
	PlayerTextDrawLetterSize(playerid, BrzinomerTD[playerid][0], 0.000000, 7.358664);
	PlayerTextDrawTextSize(playerid, BrzinomerTD[playerid][0], 635.619628, 0.000000);
	PlayerTextDrawAlignment(playerid, BrzinomerTD[playerid][0], 1);
	PlayerTextDrawColor(playerid, BrzinomerTD[playerid][0], -1);
	PlayerTextDrawUseBox(playerid, BrzinomerTD[playerid][0], 1);
	PlayerTextDrawBoxColor(playerid, BrzinomerTD[playerid][0], 572662527);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][0], 0);
	PlayerTextDrawSetOutline(playerid, BrzinomerTD[playerid][0], 0);
	PlayerTextDrawBackgroundColor(playerid, BrzinomerTD[playerid][0], 255);
	PlayerTextDrawFont(playerid, BrzinomerTD[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, BrzinomerTD[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][0], 0);

	BrzinomerTD[playerid][1] = CreatePlayerTextDraw(playerid, 519.047058, 357.841156, "box");
	PlayerTextDrawLetterSize(playerid, BrzinomerTD[playerid][1], 0.000000, 7.032330);
	PlayerTextDrawTextSize(playerid, BrzinomerTD[playerid][1], 634.619628, 0.000000);
	PlayerTextDrawAlignment(playerid, BrzinomerTD[playerid][1], 1);
	PlayerTextDrawColor(playerid, BrzinomerTD[playerid][1], -1);
	PlayerTextDrawUseBox(playerid, BrzinomerTD[playerid][1], 1);
	PlayerTextDrawBoxColor(playerid, BrzinomerTD[playerid][1], 286331391);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][1], 0);
	PlayerTextDrawSetOutline(playerid, BrzinomerTD[playerid][1], 0);
	PlayerTextDrawBackgroundColor(playerid, BrzinomerTD[playerid][1], 255);
	PlayerTextDrawFont(playerid, BrzinomerTD[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, BrzinomerTD[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][1], 0);

	BrzinomerTD[playerid][2] = CreatePlayerTextDraw(playerid, 522.400024, 353.827819, "ld_beat:chit");
	PlayerTextDrawLetterSize(playerid, BrzinomerTD[playerid][2], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, BrzinomerTD[playerid][2], 43.000000, 52.000000);
	PlayerTextDrawAlignment(playerid, BrzinomerTD[playerid][2], 1);
	PlayerTextDrawColor(playerid, BrzinomerTD[playerid][2], 572662527);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][2], 0);
	PlayerTextDrawSetOutline(playerid, BrzinomerTD[playerid][2], 0);
	PlayerTextDrawBackgroundColor(playerid, BrzinomerTD[playerid][2], 255);
	PlayerTextDrawFont(playerid, BrzinomerTD[playerid][2], 4);
	PlayerTextDrawSetProportional(playerid, BrzinomerTD[playerid][2], 0);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][2], 0);

	BrzinomerTD[playerid][3] = CreatePlayerTextDraw(playerid, 565.844665, 360.494445, "ld_beat:chit");
	PlayerTextDrawLetterSize(playerid, BrzinomerTD[playerid][3], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, BrzinomerTD[playerid][3], 17.000000, 20.000000);
	PlayerTextDrawAlignment(playerid, BrzinomerTD[playerid][3], 1);
	PlayerTextDrawColor(playerid, BrzinomerTD[playerid][3], 572662527);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][3], 0);
	PlayerTextDrawSetOutline(playerid, BrzinomerTD[playerid][3], 0);
	PlayerTextDrawBackgroundColor(playerid, BrzinomerTD[playerid][3], 255);
	PlayerTextDrawFont(playerid, BrzinomerTD[playerid][3], 4);
	PlayerTextDrawSetProportional(playerid, BrzinomerTD[playerid][3], 0);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][3], 0);

	BrzinomerTD[playerid][4] = CreatePlayerTextDraw(playerid, 565.811523, 378.979400, "ld_beat:chit");
	PlayerTextDrawLetterSize(playerid, BrzinomerTD[playerid][4], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, BrzinomerTD[playerid][4], 17.000000, 20.000000);
	PlayerTextDrawAlignment(playerid, BrzinomerTD[playerid][4], 1);
	PlayerTextDrawColor(playerid, BrzinomerTD[playerid][4], 572662527);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][4], 0);
	PlayerTextDrawSetOutline(playerid, BrzinomerTD[playerid][4], 0);
	PlayerTextDrawBackgroundColor(playerid, BrzinomerTD[playerid][4], 255);
	PlayerTextDrawFont(playerid, BrzinomerTD[playerid][4], 4);
	PlayerTextDrawSetProportional(playerid, BrzinomerTD[playerid][4], 0);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][4], 0);

	BrzinomerTD[playerid][5] = CreatePlayerTextDraw(playerid, 566.144836, 397.372100, "ld_beat:chit");
	PlayerTextDrawLetterSize(playerid, BrzinomerTD[playerid][5], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, BrzinomerTD[playerid][5], 17.000000, 20.000000);
	PlayerTextDrawAlignment(playerid, BrzinomerTD[playerid][5], 1);
	PlayerTextDrawColor(playerid, BrzinomerTD[playerid][5], 572662527);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][5], 0);
	PlayerTextDrawSetOutline(playerid, BrzinomerTD[playerid][5], 0);
	PlayerTextDrawBackgroundColor(playerid, BrzinomerTD[playerid][5], 255);
	PlayerTextDrawFont(playerid, BrzinomerTD[playerid][5], 4);
	PlayerTextDrawSetProportional(playerid, BrzinomerTD[playerid][5], 0);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][5], 0);

	BrzinomerTD[playerid][6] = CreatePlayerTextDraw(playerid, 570.295166, 365.322174, "");
	PlayerTextDrawLetterSize(playerid, BrzinomerTD[playerid][6], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, BrzinomerTD[playerid][6], 8.000000, 10.000000);
	PlayerTextDrawAlignment(playerid, BrzinomerTD[playerid][6], 1);
	PlayerTextDrawColor(playerid, BrzinomerTD[playerid][6], -1);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][6], 0);
	PlayerTextDrawSetOutline(playerid, BrzinomerTD[playerid][6], 0);
	PlayerTextDrawBackgroundColor(playerid, BrzinomerTD[playerid][6], 0);
	PlayerTextDrawFont(playerid, BrzinomerTD[playerid][6], 5);
	PlayerTextDrawSetProportional(playerid, BrzinomerTD[playerid][6], 0);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][6], 0);
	PlayerTextDrawSetPreviewModel(playerid, BrzinomerTD[playerid][6], 1080);
	PlayerTextDrawSetPreviewRot(playerid, BrzinomerTD[playerid][6], 0.000000, 0.000000, 90.000000, 1.000000);

	BrzinomerTD[playerid][7] = CreatePlayerTextDraw(playerid, 569.262329, 383.274017, "");
	PlayerTextDrawLetterSize(playerid, BrzinomerTD[playerid][7], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, BrzinomerTD[playerid][7], 10.000000, 11.000000);
	PlayerTextDrawAlignment(playerid, BrzinomerTD[playerid][7], 1);
	PlayerTextDrawColor(playerid, BrzinomerTD[playerid][7], -1);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][7], 0);
	PlayerTextDrawSetOutline(playerid, BrzinomerTD[playerid][7], 0);
	PlayerTextDrawBackgroundColor(playerid, BrzinomerTD[playerid][7], 0);
	PlayerTextDrawFont(playerid, BrzinomerTD[playerid][7], 5);
	PlayerTextDrawSetProportional(playerid, BrzinomerTD[playerid][7], 0);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][7], 0);
	PlayerTextDrawSetPreviewModel(playerid, BrzinomerTD[playerid][7], 19917);
	PlayerTextDrawSetPreviewRot(playerid, BrzinomerTD[playerid][7], 0.000000, 0.000000, 0.000000, 1.000000);

	BrzinomerTD[playerid][8] = CreatePlayerTextDraw(playerid, 569.428833, 401.625946, "");
	PlayerTextDrawLetterSize(playerid, BrzinomerTD[playerid][8], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, BrzinomerTD[playerid][8], 10.000000, 11.000000);
	PlayerTextDrawAlignment(playerid, BrzinomerTD[playerid][8], 1);
	PlayerTextDrawColor(playerid, BrzinomerTD[playerid][8], -1);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][8], 0);
	PlayerTextDrawSetOutline(playerid, BrzinomerTD[playerid][8], 0);
	PlayerTextDrawBackgroundColor(playerid, BrzinomerTD[playerid][8], 0);
	PlayerTextDrawFont(playerid, BrzinomerTD[playerid][8], 5);
	PlayerTextDrawSetProportional(playerid, BrzinomerTD[playerid][8], 0);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][8], 0);
	PlayerTextDrawSetPreviewModel(playerid, BrzinomerTD[playerid][8], 1650);
	PlayerTextDrawSetPreviewRot(playerid, BrzinomerTD[playerid][8], 0.000000, 0.000000, 0.000000, 1.000000);

	BrzinomerTD[playerid][9] = CreatePlayerTextDraw(playerid, 583.794555, 366.607452, "0_km/h");
	PlayerTextDrawLetterSize(playerid, BrzinomerTD[playerid][9], 0.110999, 0.716444);
	PlayerTextDrawAlignment(playerid, BrzinomerTD[playerid][9], 1);
	PlayerTextDrawColor(playerid, BrzinomerTD[playerid][9], -1);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][9], 0);
	PlayerTextDrawSetOutline(playerid, BrzinomerTD[playerid][9], 0);
	PlayerTextDrawBackgroundColor(playerid, BrzinomerTD[playerid][9], 255);
	PlayerTextDrawFont(playerid, BrzinomerTD[playerid][9], 2);
	PlayerTextDrawSetProportional(playerid, BrzinomerTD[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][9], 0);

	BrzinomerTD[playerid][10] = CreatePlayerTextDraw(playerid, 583.961181, 385.633392, " ");
	PlayerTextDrawLetterSize(playerid, BrzinomerTD[playerid][10], 0.110999, 0.716444);
	PlayerTextDrawAlignment(playerid, BrzinomerTD[playerid][10], 1);
	PlayerTextDrawColor(playerid, BrzinomerTD[playerid][10], -1);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][10], 0);
	PlayerTextDrawSetOutline(playerid, BrzinomerTD[playerid][10], 0);
	PlayerTextDrawBackgroundColor(playerid, BrzinomerTD[playerid][10], 255);
	PlayerTextDrawFont(playerid, BrzinomerTD[playerid][10], 2);
	PlayerTextDrawSetProportional(playerid, BrzinomerTD[playerid][10], 1);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][10], 0);

	BrzinomerTD[playerid][11] = CreatePlayerTextDraw(playerid, 584.661071, 404.255676, " ");
	PlayerTextDrawLetterSize(playerid, BrzinomerTD[playerid][11], 0.110999, 0.716444);
	PlayerTextDrawAlignment(playerid, BrzinomerTD[playerid][11], 1);
	PlayerTextDrawColor(playerid, BrzinomerTD[playerid][11], -1);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][11], 0);
	PlayerTextDrawSetOutline(playerid, BrzinomerTD[playerid][11], 0);
	PlayerTextDrawBackgroundColor(playerid, BrzinomerTD[playerid][11], 255);
	PlayerTextDrawFont(playerid, BrzinomerTD[playerid][11], 2);
	PlayerTextDrawSetProportional(playerid, BrzinomerTD[playerid][11], 1);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][11], 0);

	BrzinomerTD[playerid][12] = CreatePlayerTextDraw(playerid, 544.165954, 408.089080, " ");
	PlayerTextDrawLetterSize(playerid, BrzinomerTD[playerid][12], 0.092330, 0.621037);
	PlayerTextDrawAlignment(playerid, BrzinomerTD[playerid][12], 2);
	PlayerTextDrawColor(playerid, BrzinomerTD[playerid][12], -1);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][12], 0);
	PlayerTextDrawSetOutline(playerid, BrzinomerTD[playerid][12], 0);
	PlayerTextDrawBackgroundColor(playerid, BrzinomerTD[playerid][12], 255);
	PlayerTextDrawFont(playerid, BrzinomerTD[playerid][12], 2);
	PlayerTextDrawSetProportional(playerid, BrzinomerTD[playerid][12], 1);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][12], 0);

	BrzinomerTD[playerid][13] = CreatePlayerTextDraw(playerid, 529.100341, 361.359375, "");
	PlayerTextDrawLetterSize(playerid, BrzinomerTD[playerid][13], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, BrzinomerTD[playerid][13], 26.000000, 34.000000);
	PlayerTextDrawAlignment(playerid, BrzinomerTD[playerid][13], 1);
	PlayerTextDrawColor(playerid, BrzinomerTD[playerid][13], -1);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][13], 0);
	PlayerTextDrawSetOutline(playerid, BrzinomerTD[playerid][13], 0);
	PlayerTextDrawBackgroundColor(playerid, BrzinomerTD[playerid][13], 0);
	PlayerTextDrawFont(playerid, BrzinomerTD[playerid][13], 5);
	PlayerTextDrawSetProportional(playerid, BrzinomerTD[playerid][13], 0);
	PlayerTextDrawSetShadow(playerid, BrzinomerTD[playerid][13], 0);
	PlayerTextDrawSetPreviewModel(playerid, BrzinomerTD[playerid][13], 400);
	PlayerTextDrawSetPreviewRot(playerid, BrzinomerTD[playerid][13], -25.000000, 0.000000, 35.000000, 1.000000);
	PlayerTextDrawSetPreviewVehCol(playerid, BrzinomerTD[playerid][13], 1, 2);
	// DEATH TD
	DeathTD[playerid] = CreatePlayerTextDraw(playerid, 992.333374, -34.588886, "usebox");
	PlayerTextDrawLetterSize(playerid, DeathTD[playerid], 0.000000, 80.981666);
	PlayerTextDrawTextSize(playerid, DeathTD[playerid], -36.666667, 0.000000);
	PlayerTextDrawAlignment(playerid, DeathTD[playerid], 1);
	PlayerTextDrawColor(playerid, DeathTD[playerid], -16776961);
	PlayerTextDrawUseBox(playerid, DeathTD[playerid], true);
	PlayerTextDrawBoxColor(playerid, DeathTD[playerid], -16777097);
	PlayerTextDrawSetShadow(playerid, DeathTD[playerid], 0);
	PlayerTextDrawSetOutline(playerid, DeathTD[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, DeathTD[playerid], -16776961);
	PlayerTextDrawFont(playerid, DeathTD[playerid], 0);

	StatsTD0[playerid] = CreatePlayerTextDraw(playerid, 641.666687, 1.500000, "usebox");
	PlayerTextDrawLetterSize(playerid, StatsTD0[playerid], 0.000000, 49.415019);
	PlayerTextDrawTextSize(playerid, StatsTD0[playerid], -2.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, StatsTD0[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD0[playerid], 0);
	PlayerTextDrawUseBox(playerid, StatsTD0[playerid], true);
	PlayerTextDrawBoxColor(playerid, StatsTD0[playerid], 170);
	PlayerTextDrawSetShadow(playerid, StatsTD0[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD0[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD0[playerid], 0);

	StatsTD1[playerid] = CreatePlayerTextDraw(playerid, 228.666671, 150.162963, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD1[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD1[playerid], 172.666671, 146.014831);
	PlayerTextDrawAlignment(playerid, StatsTD1[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD1[playerid], -1852730881);
	PlayerTextDrawSetShadow(playerid, StatsTD1[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD1[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD1[playerid], 4);

	StatsTD2[playerid] = CreatePlayerTextDraw(playerid, 209.666641, 170.903701, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD2[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD2[playerid], 211.000076, 104.948150);
	PlayerTextDrawAlignment(playerid, StatsTD2[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD2[playerid], -1852730881);
	PlayerTextDrawSetShadow(playerid, StatsTD2[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD2[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD2[playerid], 4);

	StatsTD3[playerid] = CreatePlayerTextDraw(playerid, 201.000030, 139.792633, "LD_BEAT:chit");
	PlayerTextDrawLetterSize(playerid, StatsTD3[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD3[playerid], 50.666633, 58.488876);
	PlayerTextDrawAlignment(playerid, StatsTD3[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD3[playerid], -1852730881);
	PlayerTextDrawSetShadow(playerid, StatsTD3[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD3[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD3[playerid], 4);

	StatsTD4[playerid] = CreatePlayerTextDraw(playerid, 379.333312, 139.792602, "LD_BEAT:chit");
	PlayerTextDrawLetterSize(playerid, StatsTD4[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD4[playerid], 49.666633, 58.903686);
	PlayerTextDrawAlignment(playerid, StatsTD4[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD4[playerid], -1852730881);
	PlayerTextDrawSetShadow(playerid, StatsTD4[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD4[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD4[playerid], 4);

	StatsTD5[playerid] = CreatePlayerTextDraw(playerid, 201.666717, 250.962936, "LD_BEAT:chit");
	PlayerTextDrawLetterSize(playerid, StatsTD5[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD5[playerid], 46.333293, 54.755531);
	PlayerTextDrawAlignment(playerid, StatsTD5[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD5[playerid], -1852730881);
	PlayerTextDrawSetShadow(playerid, StatsTD5[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD5[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD5[playerid], 4);

	StatsTD6[playerid] = CreatePlayerTextDraw(playerid, 379.666717, 248.474075, "LD_BEAT:chit");
	PlayerTextDrawLetterSize(playerid, StatsTD6[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD6[playerid], 49.333312, 57.659255);
	PlayerTextDrawAlignment(playerid, StatsTD6[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD6[playerid], -1852730881);
	PlayerTextDrawSetShadow(playerid, StatsTD6[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD6[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD6[playerid], 4);

	StatsTD7[playerid] = CreatePlayerTextDraw(playerid, 221.666702, 165.511138, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD7[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD7[playerid], 40.666660, 68.029640);
	PlayerTextDrawAlignment(playerid, StatsTD7[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD7[playerid], -1061109505);
	PlayerTextDrawSetShadow(playerid, StatsTD7[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD7[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD7[playerid], 4);

	StatsTD8[playerid] = CreatePlayerTextDraw(playerid, 183.333389, 165.925903, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD8[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD8[playerid], 116.999992, 109.925933);
	PlayerTextDrawAlignment(playerid, StatsTD8[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD8[playerid], -1);
	PlayerTextDrawUseBox(playerid, StatsTD8[playerid], true);
	PlayerTextDrawBoxColor(playerid, StatsTD8[playerid], 0x00000000);
	PlayerTextDrawSetShadow(playerid, StatsTD8[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD8[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD8[playerid], 5);
	PlayerTextDrawSetPreviewModel(playerid, StatsTD8[playerid], PlayerInfo[playerid][pSkin]);

	StatsTD9[playerid] = CreatePlayerTextDraw(playerid, 219.999984, 231.881439, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD9[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD9[playerid], 47.000015, 58.074081);
	PlayerTextDrawAlignment(playerid, StatsTD9[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD9[playerid], -1852730881);
	PlayerTextDrawSetShadow(playerid, StatsTD9[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD9[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD9[playerid], 4);

	StatsTD10[playerid] = CreatePlayerTextDraw(playerid, 265.999938, 166.340759, "Ime i Prezime");
	PlayerTextDrawLetterSize(playerid, StatsTD10[playerid], 0.170665, 0.803555);
	PlayerTextDrawAlignment(playerid, StatsTD10[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD10[playerid], -1378294017);
	PlayerTextDrawSetShadow(playerid, StatsTD10[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD10[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, StatsTD10[playerid], 51);
	PlayerTextDrawFont(playerid, StatsTD10[playerid], 1);
	PlayerTextDrawSetProportional(playerid, StatsTD10[playerid], 1);

	StatsTD11[playerid] = CreatePlayerTextDraw(playerid, 265.999969, 172.977798, "Nikola Tasic");
	PlayerTextDrawLetterSize(playerid, StatsTD11[playerid], 0.267998, 1.143702);
	PlayerTextDrawAlignment(playerid, StatsTD11[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD11[playerid], -1);
	PlayerTextDrawSetShadow(playerid, StatsTD11[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD11[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, StatsTD11[playerid], 51);
	PlayerTextDrawFont(playerid, StatsTD11[playerid], 1);
	PlayerTextDrawSetProportional(playerid, StatsTD11[playerid], 1);

	StatsTD12[playerid] = CreatePlayerTextDraw(playerid, 266.333312, 188.740722, "Broj Licne Karte");
	PlayerTextDrawLetterSize(playerid, StatsTD12[playerid], 0.171998, 0.803556);
	PlayerTextDrawAlignment(playerid, StatsTD12[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD12[playerid], -1378294017);
	PlayerTextDrawSetShadow(playerid, StatsTD12[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD12[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, StatsTD12[playerid], 51);
	PlayerTextDrawFont(playerid, StatsTD12[playerid], 1);
	PlayerTextDrawSetProportional(playerid, StatsTD12[playerid], 1);

	StatsTD13[playerid] = CreatePlayerTextDraw(playerid, 266.333282, 195.377777, "09445378");
	PlayerTextDrawLetterSize(playerid, StatsTD13[playerid], 0.244332, 1.226665);
	PlayerTextDrawAlignment(playerid, StatsTD13[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD13[playerid], -1);
	PlayerTextDrawSetShadow(playerid, StatsTD13[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD13[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, StatsTD13[playerid], 51);
	PlayerTextDrawFont(playerid, StatsTD13[playerid], 1);
	PlayerTextDrawSetProportional(playerid, StatsTD13[playerid], 1);

	StatsTD14[playerid] = CreatePlayerTextDraw(playerid, 267.000000, 211.555541, "Pol");
	PlayerTextDrawLetterSize(playerid, StatsTD14[playerid], 0.170332, 0.803555);
	PlayerTextDrawAlignment(playerid, StatsTD14[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD14[playerid], -1378294017);
	PlayerTextDrawSetShadow(playerid, StatsTD14[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD14[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, StatsTD14[playerid], 51);
	PlayerTextDrawFont(playerid, StatsTD14[playerid], 1);
	PlayerTextDrawSetProportional(playerid, StatsTD14[playerid], 1);

	StatsTD15[playerid] = CreatePlayerTextDraw(playerid, 266.333374, 217.777816, "Musko");
	PlayerTextDrawLetterSize(playerid, StatsTD15[playerid], 0.269333, 1.247406);
	PlayerTextDrawAlignment(playerid, StatsTD15[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD15[playerid], -1);
	PlayerTextDrawSetShadow(playerid, StatsTD15[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD15[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, StatsTD15[playerid], 51);
	PlayerTextDrawFont(playerid, StatsTD15[playerid], 1);
	PlayerTextDrawSetProportional(playerid, StatsTD15[playerid], 1);

	StatsTD16[playerid] = CreatePlayerTextDraw(playerid, 347.333282, 166.340713, "Drzavljanstvo");
	PlayerTextDrawLetterSize(playerid, StatsTD16[playerid], 0.170999, 0.803555);
	PlayerTextDrawAlignment(playerid, StatsTD16[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD16[playerid], -1378294017);
	PlayerTextDrawSetShadow(playerid, StatsTD16[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD16[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, StatsTD16[playerid], 51);
	PlayerTextDrawFont(playerid, StatsTD16[playerid], 1);
	PlayerTextDrawSetProportional(playerid, StatsTD16[playerid], 1);

	StatsTD17[playerid] = CreatePlayerTextDraw(playerid, 346.333312, 172.977767, "Fort Carson");
	PlayerTextDrawLetterSize(playerid, StatsTD17[playerid], 0.266333, 1.093924);
	PlayerTextDrawAlignment(playerid, StatsTD17[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD17[playerid], -1);
	PlayerTextDrawSetShadow(playerid, StatsTD17[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD17[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, StatsTD17[playerid], 51);
	PlayerTextDrawFont(playerid, StatsTD17[playerid], 1);
	PlayerTextDrawSetProportional(playerid, StatsTD17[playerid], 1);

	StatsTD18[playerid] = CreatePlayerTextDraw(playerid, 347.333312, 188.325912, "Datum Izdavanja");
	PlayerTextDrawLetterSize(playerid, StatsTD18[playerid], 0.170331, 0.803555);
	PlayerTextDrawAlignment(playerid, StatsTD18[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD18[playerid], -1378294017);
	PlayerTextDrawSetShadow(playerid, StatsTD18[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD18[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, StatsTD18[playerid], 51);
	PlayerTextDrawFont(playerid, StatsTD18[playerid], 1);
	PlayerTextDrawSetProportional(playerid, StatsTD18[playerid], 1);

	StatsTD19[playerid] = CreatePlayerTextDraw(playerid, 346.666717, 194.963012, "24.03.2024.");
	PlayerTextDrawLetterSize(playerid, StatsTD19[playerid], 0.270000, 1.255702);
	PlayerTextDrawAlignment(playerid, StatsTD19[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD19[playerid], -1);
	PlayerTextDrawSetShadow(playerid, StatsTD19[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD19[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, StatsTD19[playerid], 51);
	PlayerTextDrawFont(playerid, StatsTD19[playerid], 1);
	PlayerTextDrawSetProportional(playerid, StatsTD19[playerid], 1);

	StatsTD20[playerid] = CreatePlayerTextDraw(playerid, 209.666656, 254.281417, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD20[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD20[playerid], 210.999984, 20.740722);
	PlayerTextDrawAlignment(playerid, StatsTD20[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD20[playerid], -1);
	PlayerTextDrawSetShadow(playerid, StatsTD20[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD20[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD20[playerid], 4);

	StatsTD21[playerid] = CreatePlayerTextDraw(playerid, 259.999969, 263.407379, "DFGIKFGHI-FGHIGHFJIFGI-DFGDFGDFGH-FSDHJDGFJ-DFGHDFGH");
	PlayerTextDrawLetterSize(playerid, StatsTD21[playerid], 0.126999, 1.077332);
	PlayerTextDrawAlignment(playerid, StatsTD21[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD21[playerid], -1061109505);
	PlayerTextDrawSetShadow(playerid, StatsTD21[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD21[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, StatsTD21[playerid], 51);
	PlayerTextDrawFont(playerid, StatsTD21[playerid], 2);
	PlayerTextDrawSetProportional(playerid, StatsTD21[playerid], 1);

	StatsTD22[playerid] = CreatePlayerTextDraw(playerid, 212.333267, 247.229644, "LD_DRV:golfly");
	PlayerTextDrawLetterSize(playerid, StatsTD22[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD22[playerid], 33.999988, 36.503715);
	PlayerTextDrawAlignment(playerid, StatsTD22[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD22[playerid], -1);
	PlayerTextDrawSetShadow(playerid, StatsTD22[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD22[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD22[playerid], 4);

	StatsTD23[playerid] = CreatePlayerTextDraw(playerid, 360.666748, 216.118515, "LD_SHTR:ufo");
	PlayerTextDrawLetterSize(playerid, StatsTD23[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD23[playerid], 25.000001, 31.940740);
	PlayerTextDrawAlignment(playerid, StatsTD23[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD23[playerid], -1);
	PlayerTextDrawSetShadow(playerid, StatsTD23[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD23[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD23[playerid], 4);

	StatsTD24[playerid] = CreatePlayerTextDraw(playerid, 178.333358, 361.718872, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD24[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD24[playerid], 273.000000, 72.177764);
	PlayerTextDrawAlignment(playerid, StatsTD24[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD24[playerid], -2139062017);
	PlayerTextDrawSetShadow(playerid, StatsTD24[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD24[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD24[playerid], 4);

	StatsTD25[playerid] = CreatePlayerTextDraw(playerid, 253.000000, 361.718505, "Igraceva Vozila");
	PlayerTextDrawLetterSize(playerid, StatsTD25[playerid], 0.311998, 1.529481);
	PlayerTextDrawAlignment(playerid, StatsTD25[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD25[playerid], -1);
	PlayerTextDrawSetShadow(playerid, StatsTD25[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD25[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, StatsTD25[playerid], 51);
	PlayerTextDrawFont(playerid, StatsTD25[playerid], 2);
	PlayerTextDrawSetProportional(playerid, StatsTD25[playerid], 1);

	StatsTD26[playerid] = CreatePlayerTextDraw(playerid, 188.666671, 378.311126, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD26[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD26[playerid], 40.666656, 42.311096);
	PlayerTextDrawAlignment(playerid, StatsTD26[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD26[playerid], -1061109505);
	PlayerTextDrawSetShadow(playerid, StatsTD26[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD26[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD26[playerid], 4);

	StatsTD27[playerid] = CreatePlayerTextDraw(playerid, 396.666778, 378.725952, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD27[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD27[playerid], 44.000000, 43.555572);
	PlayerTextDrawAlignment(playerid, StatsTD27[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD27[playerid], -1061109505);
	PlayerTextDrawSetShadow(playerid, StatsTD27[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD27[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD27[playerid], 4);

	StatsTD28[playerid] = CreatePlayerTextDraw(playerid, 294.000183, 378.311126, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD28[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD28[playerid], 40.333328, 42.311096);
	PlayerTextDrawAlignment(playerid, StatsTD28[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD28[playerid], -1061109505);
	PlayerTextDrawSetShadow(playerid, StatsTD28[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD28[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD28[playerid], 4);

	StatsTD29[playerid] = CreatePlayerTextDraw(playerid, 241.333328, 378.311096, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD29[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD29[playerid], 40.666656, 42.311096);
	PlayerTextDrawAlignment(playerid, StatsTD29[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD29[playerid], -1061109505);
	PlayerTextDrawSetShadow(playerid, StatsTD29[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD29[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD29[playerid], 4);

	StatsTD30[playerid] = CreatePlayerTextDraw(playerid, 345.666717, 378.725952, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD30[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD30[playerid], 40.333343, 42.725921);
	PlayerTextDrawAlignment(playerid, StatsTD30[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD30[playerid], -1061109505);
	PlayerTextDrawSetShadow(playerid, StatsTD30[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD30[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD30[playerid], 4);

	StatsTD31[playerid] = CreatePlayerTextDraw(playerid, 184.000000, 372.088897, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD31[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD31[playerid], 52.000000, 55.170349);
	PlayerTextDrawAlignment(playerid, StatsTD31[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD31[playerid], -1);
	PlayerTextDrawUseBox(playerid, StatsTD31[playerid], true);
	PlayerTextDrawBoxColor(playerid, StatsTD31[playerid], 0x00000000);
	PlayerTextDrawSetShadow(playerid, StatsTD31[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD31[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD31[playerid], 5);
	PlayerTextDrawSetPreviewModel(playerid, StatsTD31[playerid], 411);

	StatsTD32[playerid] = CreatePlayerTextDraw(playerid, 237.666656, 372.088897, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD32[playerid], 0.000000, -0.033332);
	PlayerTextDrawTextSize(playerid, StatsTD32[playerid], 51.666679, 56.414825);
	PlayerTextDrawAlignment(playerid, StatsTD32[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD32[playerid], -1);
	PlayerTextDrawUseBox(playerid, StatsTD32[playerid], true);
	PlayerTextDrawBoxColor(playerid, StatsTD32[playerid], 0x00000000);
	PlayerTextDrawSetShadow(playerid, StatsTD32[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD32[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD32[playerid], 5);
	PlayerTextDrawSetPreviewModel(playerid, StatsTD32[playerid], 411);

	StatsTD33[playerid] = CreatePlayerTextDraw(playerid, 290.000000, 372.088897, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD33[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD33[playerid], 49.666687, 54.755554);
	PlayerTextDrawAlignment(playerid, StatsTD33[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD33[playerid], -1);
	PlayerTextDrawUseBox(playerid, StatsTD33[playerid], true);
	PlayerTextDrawBoxColor(playerid, StatsTD33[playerid], 0x00000000);
	PlayerTextDrawSetShadow(playerid, StatsTD33[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD33[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD33[playerid], 5);
	PlayerTextDrawSetPreviewModel(playerid, StatsTD33[playerid], 411);

	StatsTD34[playerid] = CreatePlayerTextDraw(playerid, 338.666656, 373.333312, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD34[playerid], 0.000000, -0.033332);
	PlayerTextDrawTextSize(playerid, StatsTD34[playerid], 49.333343, 53.096313);
	PlayerTextDrawAlignment(playerid, StatsTD34[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD34[playerid], -1);
	PlayerTextDrawUseBox(playerid, StatsTD34[playerid], true);
	PlayerTextDrawBoxColor(playerid, StatsTD34[playerid], 0x00000000);
	PlayerTextDrawSetShadow(playerid, StatsTD34[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD34[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD34[playerid], 5);
	PlayerTextDrawSetPreviewModel(playerid, StatsTD34[playerid], 411);

	StatsTD35[playerid] = CreatePlayerTextDraw(playerid, 389.999908, 373.333312, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD35[playerid], 0.000000, -0.033332);
	PlayerTextDrawTextSize(playerid, StatsTD35[playerid], 51.333343, 53.925933);
	PlayerTextDrawAlignment(playerid, StatsTD35[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD35[playerid], -1);
	PlayerTextDrawUseBox(playerid, StatsTD35[playerid], true);
	PlayerTextDrawBoxColor(playerid, StatsTD35[playerid], 0x00000000);
	PlayerTextDrawSetShadow(playerid, StatsTD35[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD35[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD35[playerid], 5);
	PlayerTextDrawSetPreviewModel(playerid, StatsTD35[playerid], 411);

	StatsTD36[playerid] = CreatePlayerTextDraw(playerid, 238.000030, 9.955554, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD36[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD36[playerid], 145.333328, 59.318523);
	PlayerTextDrawAlignment(playerid, StatsTD36[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD36[playerid], -2139062017);
	PlayerTextDrawSetShadow(playerid, StatsTD36[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD36[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD36[playerid], 4);

	StatsTD37[playerid] = CreatePlayerTextDraw(playerid, 254.666534, 55.585239, "Nepokretna Imovina");
	PlayerTextDrawLetterSize(playerid, StatsTD37[playerid], 0.236999, 1.313778);
	PlayerTextDrawAlignment(playerid, StatsTD37[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD37[playerid], -1);
	PlayerTextDrawSetShadow(playerid, StatsTD37[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD37[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, StatsTD37[playerid], 51);
	PlayerTextDrawFont(playerid, StatsTD37[playerid], 2);
	PlayerTextDrawSetProportional(playerid, StatsTD37[playerid], 1);

	StatsTD38[playerid] = CreatePlayerTextDraw(playerid, 244.666671, 17.007406, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD38[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD38[playerid], 33.666671, 36.503707);
	PlayerTextDrawAlignment(playerid, StatsTD38[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD38[playerid], -1061109505);
	PlayerTextDrawSetShadow(playerid, StatsTD38[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD38[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD38[playerid], 4);

	StatsTD39[playerid] = CreatePlayerTextDraw(playerid, 342.333404, 17.007406, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD39[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD39[playerid], 33.666671, 36.918518);
	PlayerTextDrawAlignment(playerid, StatsTD39[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD39[playerid], -1061109505);
	PlayerTextDrawSetShadow(playerid, StatsTD39[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD39[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD39[playerid], 4);

	StatsTD40[playerid] = CreatePlayerTextDraw(playerid, 293.333435, 17.007404, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD40[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD40[playerid], 33.666671, 36.918518);
	PlayerTextDrawAlignment(playerid, StatsTD40[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD40[playerid], -1061109505);
	PlayerTextDrawSetShadow(playerid, StatsTD40[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD40[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD40[playerid], 4);

	StatsTD41[playerid] = CreatePlayerTextDraw(playerid, 239.666671, 13.688888, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD41[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD41[playerid], 41.333324, 45.629627);
	PlayerTextDrawAlignment(playerid, StatsTD41[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD41[playerid], -1);
	PlayerTextDrawUseBox(playerid, StatsTD41[playerid], true);
	PlayerTextDrawBoxColor(playerid, StatsTD41[playerid], 0);
	PlayerTextDrawSetShadow(playerid, StatsTD41[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD41[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD41[playerid], 5);

	StatsTD42[playerid] = CreatePlayerTextDraw(playerid, 290.000000, 14.518518, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD42[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, StatsTD42[playerid], 39.666648, 42.725925);
	PlayerTextDrawAlignment(playerid, StatsTD42[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD42[playerid], -1);
	PlayerTextDrawUseBox(playerid, StatsTD42[playerid], true);
	PlayerTextDrawBoxColor(playerid, StatsTD42[playerid], 0);
	PlayerTextDrawSetShadow(playerid, StatsTD42[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD42[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD42[playerid], 5);

	StatsTD43[playerid] = CreatePlayerTextDraw(playerid, 289.999908, -46.459239, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, StatsTD43[playerid], 0.000000, -0.233333);
	PlayerTextDrawTextSize(playerid, StatsTD43[playerid], 137.666687, 164.681488);
	PlayerTextDrawAlignment(playerid, StatsTD43[playerid], 1);
	PlayerTextDrawColor(playerid, StatsTD43[playerid], -1);
	PlayerTextDrawUseBox(playerid, StatsTD43[playerid], true);
	PlayerTextDrawBoxColor(playerid, StatsTD43[playerid], 0);
	PlayerTextDrawSetShadow(playerid, StatsTD43[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD43[playerid], 0);
	PlayerTextDrawFont(playerid, StatsTD43[playerid], 5);

	StatsTD44[playerid] = CreatePlayerTextDraw(playerid, 260.666778, 9.955554, "Nema");
	PlayerTextDrawLetterSize(playerid, StatsTD44[playerid], 0.119332, 0.786962);
	PlayerTextDrawAlignment(playerid, StatsTD44[playerid], 2);
	PlayerTextDrawColor(playerid, StatsTD44[playerid], -1);
	PlayerTextDrawSetShadow(playerid, StatsTD44[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD44[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, StatsTD44[playerid], 51);
	PlayerTextDrawFont(playerid, StatsTD44[playerid], 1);
	PlayerTextDrawSetProportional(playerid, StatsTD44[playerid], 1);

	StatsTD45[playerid] = CreatePlayerTextDraw(playerid, 309.000030, 9.540722, "Nema");
	PlayerTextDrawLetterSize(playerid, StatsTD45[playerid], 0.127333, 0.766222);
	PlayerTextDrawAlignment(playerid, StatsTD45[playerid], 2);
	PlayerTextDrawColor(playerid, StatsTD45[playerid], -1);
	PlayerTextDrawSetShadow(playerid, StatsTD45[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD45[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, StatsTD45[playerid], 51);
	PlayerTextDrawFont(playerid, StatsTD45[playerid], 1);
	PlayerTextDrawSetProportional(playerid, StatsTD45[playerid], 1);

	StatsTD46[playerid] = CreatePlayerTextDraw(playerid, 358.666687, 9.540740, "Nema");
	PlayerTextDrawLetterSize(playerid, StatsTD46[playerid], 0.128998, 0.840888);
	PlayerTextDrawAlignment(playerid, StatsTD46[playerid], 2);
	PlayerTextDrawColor(playerid, StatsTD46[playerid], -1);
	PlayerTextDrawSetShadow(playerid, StatsTD46[playerid], 0);
	PlayerTextDrawSetOutline(playerid, StatsTD46[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, StatsTD46[playerid], 51);
	PlayerTextDrawFont(playerid, StatsTD46[playerid], 1);
	PlayerTextDrawSetProportional(playerid, StatsTD46[playerid], 1);



	IzborSelaTD0[playerid] = CreatePlayerTextDraw(playerid, 317.000183, 2.903674, "PerfectCrime");
	PlayerTextDrawLetterSize(playerid, IzborSelaTD0[playerid], 0.791333, 3.495703);
	PlayerTextDrawAlignment(playerid, IzborSelaTD0[playerid], 2);
	PlayerTextDrawColor(playerid, IzborSelaTD0[playerid], 255);
	PlayerTextDrawSetShadow(playerid, IzborSelaTD0[playerid], 0);
	PlayerTextDrawSetOutline(playerid, IzborSelaTD0[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, IzborSelaTD0[playerid], 51);
	PlayerTextDrawFont(playerid, IzborSelaTD0[playerid], 3);
	PlayerTextDrawSetProportional(playerid, IzborSelaTD0[playerid], 1);

	IzborSelaTD1[playerid] = CreatePlayerTextDraw(playerid, 316.666656, 0.829643, "PERFECTCRIME");
	PlayerTextDrawLetterSize(playerid, IzborSelaTD1[playerid], 0.779999, 3.429333);
	PlayerTextDrawAlignment(playerid, IzborSelaTD1[playerid], 2);
	PlayerTextDrawColor(playerid, IzborSelaTD1[playerid], -1);
	PlayerTextDrawSetShadow(playerid, IzborSelaTD1[playerid], 0);
	PlayerTextDrawSetOutline(playerid, IzborSelaTD1[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, IzborSelaTD1[playerid], 51);
	PlayerTextDrawFont(playerid, IzborSelaTD1[playerid], 3);
	PlayerTextDrawSetProportional(playerid, IzborSelaTD1[playerid], 1);

	IzborSelaTD2[playerid] = CreatePlayerTextDraw(playerid, 316.333343, 30.696298, "Izbor Grada");
	PlayerTextDrawLetterSize(playerid, IzborSelaTD2[playerid], 0.326333, 1.517037);
	PlayerTextDrawAlignment(playerid, IzborSelaTD2[playerid], 2);
	PlayerTextDrawColor(playerid, IzborSelaTD2[playerid], -1);
	PlayerTextDrawSetShadow(playerid, IzborSelaTD2[playerid], 0);
	PlayerTextDrawSetOutline(playerid, IzborSelaTD2[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, IzborSelaTD2[playerid], 51);
	PlayerTextDrawFont(playerid, IzborSelaTD2[playerid], 2);
	PlayerTextDrawSetProportional(playerid, IzborSelaTD2[playerid], 1);

	IzborSelaTD3[playerid] = CreatePlayerTextDraw(playerid, 194.000061, 346.785186, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, IzborSelaTD3[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, IzborSelaTD3[playerid], 252.999862, 107.022209);
	PlayerTextDrawAlignment(playerid, IzborSelaTD3[playerid], 1);
	PlayerTextDrawColor(playerid, IzborSelaTD3[playerid], 255);
	PlayerTextDrawSetShadow(playerid, IzborSelaTD3[playerid], 0);
	PlayerTextDrawSetOutline(playerid, IzborSelaTD3[playerid], 0);
	PlayerTextDrawFont(playerid, IzborSelaTD3[playerid], 4);

	IzborSelaTD4[playerid] = CreatePlayerTextDraw(playerid, 316.666625, 350.103759, "Fort Carson");
	PlayerTextDrawLetterSize(playerid, IzborSelaTD4[playerid], 0.321999, 2.301037);
	PlayerTextDrawAlignment(playerid, IzborSelaTD4[playerid], 2);
	PlayerTextDrawColor(playerid, IzborSelaTD4[playerid], -1);
	PlayerTextDrawSetShadow(playerid, IzborSelaTD4[playerid], 0);
	PlayerTextDrawSetOutline(playerid, IzborSelaTD4[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, IzborSelaTD4[playerid], 51);
	PlayerTextDrawFont(playerid, IzborSelaTD4[playerid], 2);
	PlayerTextDrawSetProportional(playerid, IzborSelaTD4[playerid], 1);

	IzborSelaTD5[playerid] = CreatePlayerTextDraw(playerid, 317.333343, 379.555603, "Broj stanovnika: ~g~1000");
	PlayerTextDrawLetterSize(playerid, IzborSelaTD5[playerid], 0.189666, 1.463111);
	PlayerTextDrawAlignment(playerid, IzborSelaTD5[playerid], 2);
	PlayerTextDrawColor(playerid, IzborSelaTD5[playerid], -1);
	PlayerTextDrawSetShadow(playerid, IzborSelaTD5[playerid], 0);
	PlayerTextDrawSetOutline(playerid, IzborSelaTD5[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, IzborSelaTD5[playerid], 51);
	PlayerTextDrawFont(playerid, IzborSelaTD5[playerid], 2);
	PlayerTextDrawSetProportional(playerid, IzborSelaTD5[playerid], 1);

	IzborSelaTD6[playerid] = CreatePlayerTextDraw(playerid, 316.000061, 391.170288, "Drzavljanstvo: ~b~Las Venturas");
	PlayerTextDrawLetterSize(playerid, IzborSelaTD6[playerid], 0.191333, 1.492148);
	PlayerTextDrawAlignment(playerid, IzborSelaTD6[playerid], 2);
	PlayerTextDrawColor(playerid, IzborSelaTD6[playerid], -1);
	PlayerTextDrawSetShadow(playerid, IzborSelaTD6[playerid], 0);
	PlayerTextDrawSetOutline(playerid, IzborSelaTD6[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, IzborSelaTD6[playerid], 51);
	PlayerTextDrawFont(playerid, IzborSelaTD6[playerid], 2);
	PlayerTextDrawSetProportional(playerid, IzborSelaTD6[playerid], 1);

	IzborSelaTD8[playerid] = CreatePlayerTextDraw(playerid, 207.333389, 384.533203, "<");
	PlayerTextDrawLetterSize(playerid, IzborSelaTD8[playerid], 0.507999, 3.035260);
	PlayerTextDrawAlignment(playerid, IzborSelaTD8[playerid], 1);
	PlayerTextDrawColor(playerid, IzborSelaTD8[playerid], 0xFFFFFFFF);
	PlayerTextDrawSetShadow(playerid, IzborSelaTD8[playerid], 0);
	PlayerTextDrawSetOutline(playerid, IzborSelaTD8[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, IzborSelaTD8[playerid], 51);
	PlayerTextDrawFont(playerid, IzborSelaTD8[playerid], 3);
	PlayerTextDrawSetProportional(playerid, IzborSelaTD8[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, IzborSelaTD8[playerid], true);

	IzborSelaTD7[playerid] = CreatePlayerTextDraw(playerid, 316.666687, 417.718536, "Izaberi");
	PlayerTextDrawLetterSize(playerid, IzborSelaTD7[playerid], 0.377999, 2.242963);
	PlayerTextDrawAlignment(playerid, IzborSelaTD7[playerid], 2);
	PlayerTextDrawColor(playerid, IzborSelaTD7[playerid], 0xFFFFFFFF);
	PlayerTextDrawUseBox(playerid, IzborSelaTD7[playerid], true);
	PlayerTextDrawBoxColor(playerid, IzborSelaTD7[playerid], 0);
	PlayerTextDrawSetShadow(playerid, IzborSelaTD7[playerid], 0);
	PlayerTextDrawSetOutline(playerid, IzborSelaTD7[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, IzborSelaTD7[playerid], 51);
	PlayerTextDrawFont(playerid, IzborSelaTD7[playerid], 2);
	PlayerTextDrawSetProportional(playerid, IzborSelaTD7[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, IzborSelaTD7[playerid], true);

	IzborSelaTD9[playerid] = CreatePlayerTextDraw(playerid, 421.666503, 385.362915, ">");
	PlayerTextDrawLetterSize(playerid, IzborSelaTD9[playerid], 0.500333, 3.068448);
	PlayerTextDrawAlignment(playerid, IzborSelaTD9[playerid], 1);
	PlayerTextDrawColor(playerid, IzborSelaTD9[playerid], 0xFFFFFFFF);
	PlayerTextDrawSetShadow(playerid, IzborSelaTD9[playerid], 0);
	PlayerTextDrawSetOutline(playerid, IzborSelaTD9[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, IzborSelaTD9[playerid], 51);
	PlayerTextDrawFont(playerid, IzborSelaTD9[playerid], 3);
	PlayerTextDrawSetProportional(playerid, IzborSelaTD9[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, IzborSelaTD9[playerid], true);

	LoadingTextdraw[playerid][0] = CreatePlayerTextDraw(playerid, 89.000000, -31.000000, "loadsc1:loadsc1");
	PlayerTextDrawFont(playerid, LoadingTextdraw[playerid][0], 4);
	PlayerTextDrawLetterSize(playerid, LoadingTextdraw[playerid][0], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, LoadingTextdraw[playerid][0], 641.500000, 488.500000);
	PlayerTextDrawSetOutline(playerid, LoadingTextdraw[playerid][0], 1);
	PlayerTextDrawSetShadow(playerid, LoadingTextdraw[playerid][0], 0);
	PlayerTextDrawAlignment(playerid, LoadingTextdraw[playerid][0], 1);
	PlayerTextDrawColor(playerid, LoadingTextdraw[playerid][0], -1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTextdraw[playerid][0], 255);
	PlayerTextDrawBoxColor(playerid, LoadingTextdraw[playerid][0], 50);
	PlayerTextDrawUseBox(playerid, LoadingTextdraw[playerid][0], 1);
	PlayerTextDrawSetProportional(playerid, LoadingTextdraw[playerid][0], 1);
	PlayerTextDrawSetSelectable(playerid, LoadingTextdraw[playerid][0], 0);

	LoadingTextdraw[playerid][1] = CreatePlayerTextDraw(playerid, -321.000000, -31.000000, "loadsc11:loadsc11");
	PlayerTextDrawFont(playerid, LoadingTextdraw[playerid][1], 4);
	PlayerTextDrawLetterSize(playerid, LoadingTextdraw[playerid][1], 0.600000, 2.000000);
	PlayerTextDrawTextSize(playerid, LoadingTextdraw[playerid][1], 641.500000, 488.500000);
	PlayerTextDrawSetOutline(playerid, LoadingTextdraw[playerid][1], 1);
	PlayerTextDrawSetShadow(playerid, LoadingTextdraw[playerid][1], 0);
	PlayerTextDrawAlignment(playerid, LoadingTextdraw[playerid][1], 1);
	PlayerTextDrawColor(playerid, LoadingTextdraw[playerid][1], -1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTextdraw[playerid][1], 255);
	PlayerTextDrawBoxColor(playerid, LoadingTextdraw[playerid][1], 50);
	PlayerTextDrawUseBox(playerid, LoadingTextdraw[playerid][1], 1);
	PlayerTextDrawSetProportional(playerid, LoadingTextdraw[playerid][1], 1);
	PlayerTextDrawSetSelectable(playerid, LoadingTextdraw[playerid][1], 0);

	LoadingTextdraw[playerid][2] = CreatePlayerTextDraw(playerid, 321.000000, 0.000000, "_");
	PlayerTextDrawFont(playerid, LoadingTextdraw[playerid][2], 1);
	PlayerTextDrawLetterSize(playerid, LoadingTextdraw[playerid][2], 0.600000, 50.899982);
	PlayerTextDrawTextSize(playerid, LoadingTextdraw[playerid][2], 298.500000, 3.000000);
	PlayerTextDrawSetOutline(playerid, LoadingTextdraw[playerid][2], 1);
	PlayerTextDrawSetShadow(playerid, LoadingTextdraw[playerid][2], 0);
	PlayerTextDrawAlignment(playerid, LoadingTextdraw[playerid][2], 2);
	PlayerTextDrawColor(playerid, LoadingTextdraw[playerid][2], -1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTextdraw[playerid][2], 255);
	PlayerTextDrawBoxColor(playerid, LoadingTextdraw[playerid][2], 255);
	PlayerTextDrawUseBox(playerid, LoadingTextdraw[playerid][2], 1);
	PlayerTextDrawSetProportional(playerid, LoadingTextdraw[playerid][2], 1);
	PlayerTextDrawSetSelectable(playerid, LoadingTextdraw[playerid][2], 0);

	LoadingTextdraw[playerid][3] = CreatePlayerTextDraw(playerid, 2.000000, 0.000000, "_");
	PlayerTextDrawFont(playerid, LoadingTextdraw[playerid][3], 1);
	PlayerTextDrawLetterSize(playerid, LoadingTextdraw[playerid][3], 0.600000, 50.899982);
	PlayerTextDrawTextSize(playerid, LoadingTextdraw[playerid][3], 298.500000, 3.000000);
	PlayerTextDrawSetOutline(playerid, LoadingTextdraw[playerid][3], 1);
	PlayerTextDrawSetShadow(playerid, LoadingTextdraw[playerid][3], 0);
	PlayerTextDrawAlignment(playerid, LoadingTextdraw[playerid][3], 2);
	PlayerTextDrawColor(playerid, LoadingTextdraw[playerid][3], -1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTextdraw[playerid][3], 255);
	PlayerTextDrawBoxColor(playerid, LoadingTextdraw[playerid][3], 255);
	PlayerTextDrawUseBox(playerid, LoadingTextdraw[playerid][3], 1);
	PlayerTextDrawSetProportional(playerid, LoadingTextdraw[playerid][3], 1);
	PlayerTextDrawSetSelectable(playerid, LoadingTextdraw[playerid][3], 0);

	LoadingTextdraw[playerid][4] = CreatePlayerTextDraw(playerid, 637.000000, 0.000000, "_");
	PlayerTextDrawFont(playerid, LoadingTextdraw[playerid][4], 1);
	PlayerTextDrawLetterSize(playerid, LoadingTextdraw[playerid][4], 0.600000, 50.899982);
	PlayerTextDrawTextSize(playerid, LoadingTextdraw[playerid][4], 298.500000, 3.000000);
	PlayerTextDrawSetOutline(playerid, LoadingTextdraw[playerid][4], 1);
	PlayerTextDrawSetShadow(playerid, LoadingTextdraw[playerid][4], 0);
	PlayerTextDrawAlignment(playerid, LoadingTextdraw[playerid][4], 2);
	PlayerTextDrawColor(playerid, LoadingTextdraw[playerid][4], -1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTextdraw[playerid][4], 255);
	PlayerTextDrawBoxColor(playerid, LoadingTextdraw[playerid][4], 255);
	PlayerTextDrawUseBox(playerid, LoadingTextdraw[playerid][4], 1);
	PlayerTextDrawSetProportional(playerid, LoadingTextdraw[playerid][4], 1);
	PlayerTextDrawSetSelectable(playerid, LoadingTextdraw[playerid][4], 0);

	LoadingTextdraw[playerid][5] = CreatePlayerTextDraw(playerid, 322.000000, 413.000000, "_");
	PlayerTextDrawFont(playerid, LoadingTextdraw[playerid][5], 1);
	PlayerTextDrawLetterSize(playerid, LoadingTextdraw[playerid][5], 0.600000, 5.249980);
	PlayerTextDrawTextSize(playerid, LoadingTextdraw[playerid][5], 298.500000, 683.500000);
	PlayerTextDrawSetOutline(playerid, LoadingTextdraw[playerid][5], 1);
	PlayerTextDrawSetShadow(playerid, LoadingTextdraw[playerid][5], 0);
	PlayerTextDrawAlignment(playerid, LoadingTextdraw[playerid][5], 2);
	PlayerTextDrawColor(playerid, LoadingTextdraw[playerid][5], -1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTextdraw[playerid][5], 255);
	PlayerTextDrawBoxColor(playerid, LoadingTextdraw[playerid][5], 255);
	PlayerTextDrawUseBox(playerid, LoadingTextdraw[playerid][5], 1);
	PlayerTextDrawSetProportional(playerid, LoadingTextdraw[playerid][5], 1);
	PlayerTextDrawSetSelectable(playerid, LoadingTextdraw[playerid][5], 0);

	LoadingTextdraw[playerid][6] = CreatePlayerTextDraw(playerid, 322.000000, 1.000000, "_");
	PlayerTextDrawFont(playerid, LoadingTextdraw[playerid][6], 1);
	PlayerTextDrawLetterSize(playerid, LoadingTextdraw[playerid][6], 0.600000, 0.449980);
	PlayerTextDrawTextSize(playerid, LoadingTextdraw[playerid][6], 298.500000, 682.000000);
	PlayerTextDrawSetOutline(playerid, LoadingTextdraw[playerid][6], 1);
	PlayerTextDrawSetShadow(playerid, LoadingTextdraw[playerid][6], 0);
	PlayerTextDrawAlignment(playerid, LoadingTextdraw[playerid][6], 2);
	PlayerTextDrawColor(playerid, LoadingTextdraw[playerid][6], -1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTextdraw[playerid][6], 255);
	PlayerTextDrawBoxColor(playerid, LoadingTextdraw[playerid][6], 255);
	PlayerTextDrawUseBox(playerid, LoadingTextdraw[playerid][6], 1);
	PlayerTextDrawSetProportional(playerid, LoadingTextdraw[playerid][6], 1);
	PlayerTextDrawSetSelectable(playerid, LoadingTextdraw[playerid][6], 0);

	LoadingTextdraw[playerid][7] = CreatePlayerTextDraw(playerid, 322.000000, 2.000000, "_");
	PlayerTextDrawFont(playerid, LoadingTextdraw[playerid][7], 1);
	PlayerTextDrawLetterSize(playerid, LoadingTextdraw[playerid][7], 0.600000, 2.499978);
	PlayerTextDrawTextSize(playerid, LoadingTextdraw[playerid][7], 298.500000, 136.000000);
	PlayerTextDrawSetOutline(playerid, LoadingTextdraw[playerid][7], 1);
	PlayerTextDrawSetShadow(playerid, LoadingTextdraw[playerid][7], 0);
	PlayerTextDrawAlignment(playerid, LoadingTextdraw[playerid][7], 2);
	PlayerTextDrawColor(playerid, LoadingTextdraw[playerid][7], -1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTextdraw[playerid][7], 255);
	PlayerTextDrawBoxColor(playerid, LoadingTextdraw[playerid][7], 255);
	PlayerTextDrawUseBox(playerid, LoadingTextdraw[playerid][7], 1);
	PlayerTextDrawSetProportional(playerid, LoadingTextdraw[playerid][7], 1);
	PlayerTextDrawSetSelectable(playerid, LoadingTextdraw[playerid][7], 0);

	LoadingTextdraw[playerid][8] = CreatePlayerTextDraw(playerid, 322.000000, 4.000000, "PerfectCrime");
	PlayerTextDrawFont(playerid, LoadingTextdraw[playerid][8], 3);
	PlayerTextDrawLetterSize(playerid, LoadingTextdraw[playerid][8], 0.470833, 2.149999);
	PlayerTextDrawTextSize(playerid, LoadingTextdraw[playerid][8], 400.000000, 11.000000);
	PlayerTextDrawSetOutline(playerid, LoadingTextdraw[playerid][8], 1);
	PlayerTextDrawSetShadow(playerid, LoadingTextdraw[playerid][8], 0);
	PlayerTextDrawAlignment(playerid, LoadingTextdraw[playerid][8], 2);
	PlayerTextDrawColor(playerid, LoadingTextdraw[playerid][8], -1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTextdraw[playerid][8], 255);
	PlayerTextDrawBoxColor(playerid, LoadingTextdraw[playerid][8], 50);
	PlayerTextDrawUseBox(playerid, LoadingTextdraw[playerid][8], 0);
	PlayerTextDrawSetProportional(playerid, LoadingTextdraw[playerid][8], 1);
	PlayerTextDrawSetSelectable(playerid, LoadingTextdraw[playerid][8], 0);

	LoadingTextdraw[playerid][9] = CreatePlayerTextDraw(playerid, 5.000000, 419.000000, "Ucitavanje...");
	PlayerTextDrawFont(playerid, LoadingTextdraw[playerid][9], 3);
	PlayerTextDrawLetterSize(playerid, LoadingTextdraw[playerid][9], 0.258333, 1.100000);
	PlayerTextDrawTextSize(playerid, LoadingTextdraw[playerid][9], 400.000000, 11.000000);
	PlayerTextDrawSetOutline(playerid, LoadingTextdraw[playerid][9], 1);
	PlayerTextDrawSetShadow(playerid, LoadingTextdraw[playerid][9], 0);
	PlayerTextDrawAlignment(playerid, LoadingTextdraw[playerid][9], 1);
	PlayerTextDrawColor(playerid, LoadingTextdraw[playerid][9], -1094795521);
	PlayerTextDrawBackgroundColor(playerid, LoadingTextdraw[playerid][9], 255);
	PlayerTextDrawBoxColor(playerid, LoadingTextdraw[playerid][9], 50);
	PlayerTextDrawUseBox(playerid, LoadingTextdraw[playerid][9], 0);
	PlayerTextDrawSetProportional(playerid, LoadingTextdraw[playerid][9], 1);
	PlayerTextDrawSetSelectable(playerid, LoadingTextdraw[playerid][9], 0);

	LoadingTextdraw[playerid][10] = CreatePlayerTextDraw(playerid, 7.000000, 400.000000, "v0.0.5");
	PlayerTextDrawFont(playerid, LoadingTextdraw[playerid][10], 3);
	PlayerTextDrawLetterSize(playerid, LoadingTextdraw[playerid][10], 0.262500, 1.100000);
	PlayerTextDrawTextSize(playerid, LoadingTextdraw[playerid][10], 400.000000, 11.000000);
	PlayerTextDrawSetOutline(playerid, LoadingTextdraw[playerid][10], 1);
	PlayerTextDrawSetShadow(playerid, LoadingTextdraw[playerid][10], 0);
	PlayerTextDrawAlignment(playerid, LoadingTextdraw[playerid][10], 1);
	PlayerTextDrawColor(playerid, LoadingTextdraw[playerid][10], -1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTextdraw[playerid][10], 255);
	PlayerTextDrawBoxColor(playerid, LoadingTextdraw[playerid][10], 50);
	PlayerTextDrawUseBox(playerid, LoadingTextdraw[playerid][10], 0);
	PlayerTextDrawSetProportional(playerid, LoadingTextdraw[playerid][10], 1);
	PlayerTextDrawSetSelectable(playerid, LoadingTextdraw[playerid][10], 0);

	LoadingTextdraw[playerid][11] = CreatePlayerTextDraw(playerid, 631.000000, 399.000000, "BY TAZGEE");
	PlayerTextDrawFont(playerid, LoadingTextdraw[playerid][11], 3);
	PlayerTextDrawLetterSize(playerid, LoadingTextdraw[playerid][11], 0.262500, 1.100000);
	PlayerTextDrawTextSize(playerid, LoadingTextdraw[playerid][11], 400.000000, 11.000000);
	PlayerTextDrawSetOutline(playerid, LoadingTextdraw[playerid][11], 1);
	PlayerTextDrawSetShadow(playerid, LoadingTextdraw[playerid][11], 0);
	PlayerTextDrawAlignment(playerid, LoadingTextdraw[playerid][11], 3);
	PlayerTextDrawColor(playerid, LoadingTextdraw[playerid][11], -1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTextdraw[playerid][11], 255);
	PlayerTextDrawBoxColor(playerid, LoadingTextdraw[playerid][11], 50);
	PlayerTextDrawUseBox(playerid, LoadingTextdraw[playerid][11], 0);
	PlayerTextDrawSetProportional(playerid, LoadingTextdraw[playerid][11], 1);
	PlayerTextDrawSetSelectable(playerid, LoadingTextdraw[playerid][11], 0);

	LoadingTextdraw[playerid][12] = CreatePlayerTextDraw(playerid, 322.000000, 414.000000, "TIP: UKOLIKO ZELITE DA SE ZAPOSLITE, IDITE DO BIROA ZA ZAPOSLJAVANJE");
	PlayerTextDrawFont(playerid, LoadingTextdraw[playerid][12], 3);
	PlayerTextDrawLetterSize(playerid, LoadingTextdraw[playerid][12], 0.308333, 1.450000);
	PlayerTextDrawTextSize(playerid, LoadingTextdraw[playerid][12], 400.000000, 486.000000);
	PlayerTextDrawSetOutline(playerid, LoadingTextdraw[playerid][12], 1);
	PlayerTextDrawSetShadow(playerid, LoadingTextdraw[playerid][12], 0);
	PlayerTextDrawAlignment(playerid, LoadingTextdraw[playerid][12], 2);
	PlayerTextDrawColor(playerid, LoadingTextdraw[playerid][12], -1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTextdraw[playerid][12], 255);
	PlayerTextDrawBoxColor(playerid, LoadingTextdraw[playerid][12], 50);
	PlayerTextDrawUseBox(playerid, LoadingTextdraw[playerid][12], 0);
	PlayerTextDrawSetProportional(playerid, LoadingTextdraw[playerid][12], 1);
	PlayerTextDrawSetSelectable(playerid, LoadingTextdraw[playerid][12], 0);

	/*LoadingTD0[playerid] = CreatePlayerTextDraw(playerid, 632.000000, 12.285182, "usebox");
	PlayerTextDrawLetterSize(playerid, LoadingTD0[playerid], 0.000000, 42.870162);
	PlayerTextDrawTextSize(playerid, LoadingTD0[playerid], 7.333333, 0.000000);
	PlayerTextDrawAlignment(playerid, LoadingTD0[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD0[playerid], 0);
	PlayerTextDrawUseBox(playerid, LoadingTD0[playerid], true);
	PlayerTextDrawBoxColor(playerid, LoadingTD0[playerid], 102);
	PlayerTextDrawSetShadow(playerid, LoadingTD0[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD0[playerid], 0);
	PlayerTextDrawFont(playerid, LoadingTD0[playerid], 0);

	LoadingTD1[playerid] = CreatePlayerTextDraw(playerid, 632.666625, 408.433349, "usebox");
	PlayerTextDrawLetterSize(playerid, LoadingTD1[playerid], 0.000000, 3.508846);
	PlayerTextDrawTextSize(playerid, LoadingTD1[playerid], 7.666666, 0.000000);
	PlayerTextDrawAlignment(playerid, LoadingTD1[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD1[playerid], 0);
	PlayerTextDrawUseBox(playerid, LoadingTD1[playerid], true);
	PlayerTextDrawBoxColor(playerid, LoadingTD1[playerid], 102);
	PlayerTextDrawSetShadow(playerid, LoadingTD1[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD1[playerid], 0);
	PlayerTextDrawFont(playerid, LoadingTD1[playerid], 0);

	LoadingTD2[playerid] = CreatePlayerTextDraw(playerid, 12.333333, 408.592498, "Ucitavanje...");
	PlayerTextDrawLetterSize(playerid, LoadingTD2[playerid], 0.178664, 1.164443);
	PlayerTextDrawAlignment(playerid, LoadingTD2[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD2[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD2[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD2[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTD2[playerid], 51);
	PlayerTextDrawFont(playerid, LoadingTD2[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LoadingTD2[playerid], 1);

	LoadingTD3[playerid] = CreatePlayerTextDraw(playerid, 30.666671, 38.992591, "samaps:gtasamapbit1");
	PlayerTextDrawLetterSize(playerid, LoadingTD3[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, LoadingTD3[playerid], 164.666656, 166.755569);
	PlayerTextDrawAlignment(playerid, LoadingTD3[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD3[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD3[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD3[playerid], 0);
	PlayerTextDrawFont(playerid, LoadingTD3[playerid], 4);

	LoadingTD4[playerid] = CreatePlayerTextDraw(playerid, 195.333267, 38.992595, "samaps:gtasamapbit2");
	PlayerTextDrawLetterSize(playerid, LoadingTD4[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, LoadingTD4[playerid], 165.666671, 166.755538);
	PlayerTextDrawAlignment(playerid, LoadingTD4[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD4[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD4[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD4[playerid], 0);
	PlayerTextDrawFont(playerid, LoadingTD4[playerid], 4);

	LoadingTD5[playerid] = CreatePlayerTextDraw(playerid, 30.666660, 205.748153, "samaps:gtasamapbit3");
	PlayerTextDrawLetterSize(playerid, LoadingTD5[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, LoadingTD5[playerid], 164.666702, 167.585189);
	PlayerTextDrawAlignment(playerid, LoadingTD5[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD5[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD5[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD5[playerid], 0);
	PlayerTextDrawFont(playerid, LoadingTD5[playerid], 4);

	LoadingTD6[playerid] = CreatePlayerTextDraw(playerid, 194.666671, 204.918518, "samaps:gtasamapbit4");
	PlayerTextDrawLetterSize(playerid, LoadingTD6[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, LoadingTD6[playerid], 166.333343, 168.000000);
	PlayerTextDrawAlignment(playerid, LoadingTD6[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD6[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD6[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD6[playerid], 0);
	PlayerTextDrawFont(playerid, LoadingTD6[playerid], 4);

	LoadingTD7[playerid] = CreatePlayerTextDraw(playerid, 371.000000, 30.951854, "usebox");
	PlayerTextDrawLetterSize(playerid, LoadingTD7[playerid], 0.000000, 38.922012);
	PlayerTextDrawTextSize(playerid, LoadingTD7[playerid], 20.333332, 0.000000);
	PlayerTextDrawAlignment(playerid, LoadingTD7[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD7[playerid], 0);
	PlayerTextDrawUseBox(playerid, LoadingTD7[playerid], true);
	PlayerTextDrawBoxColor(playerid, LoadingTD7[playerid], 102);
	PlayerTextDrawSetShadow(playerid, LoadingTD7[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD7[playerid], 0);
	PlayerTextDrawFont(playerid, LoadingTD7[playerid], 0);

	LoadingTD8[playerid] = CreatePlayerTextDraw(playerid, 619.333312, 31.366668, "usebox");
	PlayerTextDrawLetterSize(playerid, LoadingTD8[playerid], 0.000000, 38.860286);
	PlayerTextDrawTextSize(playerid, LoadingTD8[playerid], 378.666656, 0.000000);
	PlayerTextDrawAlignment(playerid, LoadingTD8[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD8[playerid], 0);
	PlayerTextDrawUseBox(playerid, LoadingTD8[playerid], true);
	PlayerTextDrawBoxColor(playerid, LoadingTD8[playerid], 102);
	PlayerTextDrawSetShadow(playerid, LoadingTD8[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD8[playerid], 0);
	PlayerTextDrawFont(playerid, LoadingTD8[playerid], 0);

	LoadingTD9[playerid] = CreatePlayerTextDraw(playerid, 447.333251, 35.259262, "PerfectCrime");
	PlayerTextDrawLetterSize(playerid, LoadingTD9[playerid], 0.328999, 2.209778);
	PlayerTextDrawAlignment(playerid, LoadingTD9[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD9[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD9[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD9[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTD9[playerid], 51);
	PlayerTextDrawFont(playerid, LoadingTD9[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LoadingTD9[playerid], 1);

	LoadingTD10[playerid] = CreatePlayerTextDraw(playerid, 399.666503, 59.733333, "Dobrodsli na nas server! Molimo vas da sacekate");
	PlayerTextDrawLetterSize(playerid, LoadingTD10[playerid], 0.167666, 1.135406);
	PlayerTextDrawAlignment(playerid, LoadingTD10[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD10[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD10[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD10[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTD10[playerid], 51);
	PlayerTextDrawFont(playerid, LoadingTD10[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LoadingTD10[playerid], 1);

	LoadingTD11[playerid] = CreatePlayerTextDraw(playerid, 433.999969, 70.103736, "neko vreme dok se server ucita! Hvala!");
	PlayerTextDrawLetterSize(playerid, LoadingTD11[playerid], 0.137998, 1.151999);
	PlayerTextDrawAlignment(playerid, LoadingTD11[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD11[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD11[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD11[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTD11[playerid], 51);
	PlayerTextDrawFont(playerid, LoadingTD11[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LoadingTD11[playerid], 1);

	LoadingTD12[playerid] = CreatePlayerTextDraw(playerid, 496.999969, 365.037231, "www.perfectcrime.com");
	PlayerTextDrawLetterSize(playerid, LoadingTD12[playerid], 0.249000, 1.376000);
	PlayerTextDrawAlignment(playerid, LoadingTD12[playerid], 2);
	PlayerTextDrawColor(playerid, LoadingTD12[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD12[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD12[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTD12[playerid], 51);
	PlayerTextDrawFont(playerid, LoadingTD12[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LoadingTD12[playerid], 1);

	LoadingTD13[playerid] = CreatePlayerTextDraw(playerid, 592.999328, 32.355548, "v1.0");
	PlayerTextDrawLetterSize(playerid, LoadingTD13[playerid], 0.248666, 1.073185);
	PlayerTextDrawAlignment(playerid, LoadingTD13[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD13[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD13[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD13[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTD13[playerid], 51);
	PlayerTextDrawFont(playerid, LoadingTD13[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LoadingTD13[playerid], 1);

	LoadingTD14[playerid] = CreatePlayerTextDraw(playerid, 391.666595, 115.318527, "Skripter: TazGee");
	PlayerTextDrawLetterSize(playerid, LoadingTD14[playerid], 0.174999, 1.176889);
	PlayerTextDrawAlignment(playerid, LoadingTD14[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD14[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD14[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD14[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTD14[playerid], 51);
	PlayerTextDrawFont(playerid, LoadingTD14[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LoadingTD14[playerid], 1);

	LoadingTD15[playerid] = CreatePlayerTextDraw(playerid, 391.666687, 126.103691, "Vlasnik: TazGee");
	PlayerTextDrawLetterSize(playerid, LoadingTD15[playerid], 0.177999, 1.160297);
	PlayerTextDrawAlignment(playerid, LoadingTD15[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD15[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD15[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD15[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTD15[playerid], 51);
	PlayerTextDrawFont(playerid, LoadingTD15[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LoadingTD15[playerid], 1);

	LoadingTD16[playerid] = CreatePlayerTextDraw(playerid, 391.999938, 137.303680, "Vlasnik: /");
	PlayerTextDrawLetterSize(playerid, LoadingTD16[playerid], 0.177999, 1.110518);
	PlayerTextDrawAlignment(playerid, LoadingTD16[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD16[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD16[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD16[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTD16[playerid], 51);
	PlayerTextDrawFont(playerid, LoadingTD16[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LoadingTD16[playerid], 1);

	LoadingTD17[playerid] = CreatePlayerTextDraw(playerid, 392.333374, 148.088851, "Suvlasnici: /");
	PlayerTextDrawLetterSize(playerid, LoadingTD17[playerid], 0.184333, 1.031704);
	PlayerTextDrawAlignment(playerid, LoadingTD17[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD17[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD17[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD17[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTD17[playerid], 51);
	PlayerTextDrawFont(playerid, LoadingTD17[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LoadingTD17[playerid], 1);

	LoadingTD18[playerid] = CreatePlayerTextDraw(playerid, 392.333282, 157.629623, "Generalni Direktor: /");
	PlayerTextDrawLetterSize(playerid, LoadingTD18[playerid], 0.184333, 1.098073);
	PlayerTextDrawAlignment(playerid, LoadingTD18[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD18[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD18[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD18[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTD18[playerid], 51);
	PlayerTextDrawFont(playerid, LoadingTD18[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LoadingTD18[playerid], 1);

	LoadingTD19[playerid] = CreatePlayerTextDraw(playerid, 392.333251, 167.585128, "Direktor: /");
	PlayerTextDrawLetterSize(playerid, LoadingTD19[playerid], 0.174333, 1.069037);
	PlayerTextDrawAlignment(playerid, LoadingTD19[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD19[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD19[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD19[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTD19[playerid], 51);
	PlayerTextDrawFont(playerid, LoadingTD19[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LoadingTD19[playerid], 1);


	new ltdstr[128];
	format(ltdstr, 128, "Rekord igraca: %d", rekord);

	LoadingTD20[playerid] = CreatePlayerTextDraw(playerid, 613.333007, 115.733322, ltdstr);
	PlayerTextDrawLetterSize(playerid, LoadingTD20[playerid], 0.174666, 1.201777);
	PlayerTextDrawAlignment(playerid, LoadingTD20[playerid], 3);
	PlayerTextDrawColor(playerid, LoadingTD20[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD20[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD20[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTD20[playerid], 51);
	PlayerTextDrawFont(playerid, LoadingTD20[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LoadingTD20[playerid], 1);

	format(ltdstr, 128, "Prijavljeni korisnici: %d", (fcr+bbr));
	LoadingTD21[playerid] = CreatePlayerTextDraw(playerid, 613.333312, 125.688896, ltdstr);
	PlayerTextDrawLetterSize(playerid, LoadingTD21[playerid], 0.158999, 1.239112);
	PlayerTextDrawAlignment(playerid, LoadingTD21[playerid], 3);
	PlayerTextDrawColor(playerid, LoadingTD21[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD21[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD21[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTD21[playerid], 51);
	PlayerTextDrawFont(playerid, LoadingTD21[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LoadingTD21[playerid], 1);

	format(ltdstr, 128, "Trenutan broj igraca: %d", BrojIgraca());
	LoadingTD22[playerid] = CreatePlayerTextDraw(playerid, 613.333496, 136.888854, ltdstr);
	PlayerTextDrawLetterSize(playerid, LoadingTD22[playerid], 0.162666, 1.168592);
	PlayerTextDrawAlignment(playerid, LoadingTD22[playerid], 3);
	PlayerTextDrawColor(playerid, LoadingTD22[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD22[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD22[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTD22[playerid], 51);
	PlayerTextDrawFont(playerid, LoadingTD22[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LoadingTD22[playerid], 1);

	LoadingTD23[playerid] = CreatePlayerTextDraw(playerid, 613.666748, 347.455841, "usebox");
	PlayerTextDrawLetterSize(playerid, LoadingTD23[playerid], 0.000000, 1.346708);
	PlayerTextDrawTextSize(playerid, LoadingTD23[playerid], 384.666687, 0.000000);
	PlayerTextDrawAlignment(playerid, LoadingTD23[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD23[playerid], 0);
	PlayerTextDrawUseBox(playerid, LoadingTD23[playerid], true);
	PlayerTextDrawBoxColor(playerid, LoadingTD23[playerid], 102);
	PlayerTextDrawSetShadow(playerid, LoadingTD23[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD23[playerid], 0);
	PlayerTextDrawFont(playerid, LoadingTD23[playerid], 0);

	LoadingTD24[playerid] = CreatePlayerTextDraw(playerid, 483.666595, 334.755523, "quick tip");
	PlayerTextDrawLetterSize(playerid, LoadingTD24[playerid], 0.148999, 0.915555);
	PlayerTextDrawAlignment(playerid, LoadingTD24[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD24[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD24[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD24[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTD24[playerid], 51);
	PlayerTextDrawFont(playerid, LoadingTD24[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LoadingTD24[playerid], 1);

	new rnd = random(sizeof(NasumicnePoruke));
	format(ltdstr, 128, "%s", NasumicnePoruke[rnd]);
	LoadingTD25[playerid] = CreatePlayerTextDraw(playerid, 499.333465, 348.614776, ltdstr);
	PlayerTextDrawLetterSize(playerid, LoadingTD25[playerid], 0.110000, 0.935408);
	PlayerTextDrawAlignment(playerid, LoadingTD25[playerid], 2);
	PlayerTextDrawColor(playerid, LoadingTD25[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD25[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD25[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, LoadingTD25[playerid], 51);
	PlayerTextDrawFont(playerid, LoadingTD25[playerid], 2);
	PlayerTextDrawSetProportional(playerid, LoadingTD25[playerid], 1);

	LoadingTD26[playerid] = CreatePlayerTextDraw(playerid, 628.333374, 425.440734, "usebox");
	PlayerTextDrawLetterSize(playerid, LoadingTD26[playerid], 0.000000, 1.204322);
	PlayerTextDrawTextSize(playerid, LoadingTD26[playerid], 11.000000, 0.000000);
	PlayerTextDrawAlignment(playerid, LoadingTD26[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD26[playerid], 0);
	PlayerTextDrawUseBox(playerid, LoadingTD26[playerid], true);
	PlayerTextDrawBoxColor(playerid, LoadingTD26[playerid], 102);
	PlayerTextDrawSetShadow(playerid, LoadingTD26[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD26[playerid], 0);
	PlayerTextDrawFont(playerid, LoadingTD26[playerid], 0);

	LoadingTD27[playerid] = CreatePlayerTextDraw(playerid, 14.666666, 427.674072, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, LoadingTD27[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, LoadingTD27[playerid], 113.666664, 7.051849);
	PlayerTextDrawAlignment(playerid, LoadingTD27[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD27[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD27[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD27[playerid], 0);
	PlayerTextDrawFont(playerid, LoadingTD27[playerid], 4);*/

	/*LoadingTD28[playerid] = CreatePlayerTextDraw(playerid, 14.333333, 427.674072, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, LoadingTD28[playerid], 0.022333, -0.555851);
	PlayerTextDrawTextSize(playerid, LoadingTD28[playerid], 608.000061, 7.466683);
	PlayerTextDrawAlignment(playerid, LoadingTD28[playerid], 1);
	PlayerTextDrawColor(playerid, LoadingTD28[playerid], -1);
	PlayerTextDrawSetShadow(playerid, LoadingTD28[playerid], 0);
	PlayerTextDrawSetOutline(playerid, LoadingTD28[playerid], 0);
	PlayerTextDrawFont(playerid, LoadingTD28[playerid], 4);*/

	//BLACK SCREEN TD
	BlackScreenTD[playerid] = CreatePlayerTextDraw(playerid, 322.000000, -2.000000, "_");
	PlayerTextDrawFont(playerid, BlackScreenTD[playerid], 1);
	PlayerTextDrawLetterSize(playerid, BlackScreenTD[playerid], 0.600000, 52.500000);
	PlayerTextDrawTextSize(playerid, BlackScreenTD[playerid], 222.000000, 695.500000);
	PlayerTextDrawSetOutline(playerid, BlackScreenTD[playerid], 1);
	PlayerTextDrawSetShadow(playerid, BlackScreenTD[playerid], 0);
	PlayerTextDrawAlignment(playerid, BlackScreenTD[playerid], 2);
	PlayerTextDrawColor(playerid, BlackScreenTD[playerid], -1);
	PlayerTextDrawBackgroundColor(playerid, BlackScreenTD[playerid], 255);
	PlayerTextDrawBoxColor(playerid, BlackScreenTD[playerid], 255);
	PlayerTextDrawUseBox(playerid, BlackScreenTD[playerid], 1);
	PlayerTextDrawSetProportional(playerid, BlackScreenTD[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, BlackScreenTD[playerid], 0);

    new ime[128];
	GetPlayerName(playerid, ime, 128);

	for(new i = 0; i < MAX_PROMOTERS; i++)
	{
	 	if(!strcmp(PromoterInfo[i][promName], ime))
	 	{
	 	    PromoterInfo[i][promNeaktivnost] = 0;
	 	    SavePromoter(i);
	 	    break;
	 	}
	}

	pKatalog[playerid] = 0;

	chorg[playerid] = 0;

	editagate[playerid] = 0;
	editagateid[playerid] = 0;
	gatefaza[playerid] = 0;
	editing[playerid] = 0;

	pozvanuorg[playerid] = 0;

	pADuty[playerid] = 0;
	pUniforma[playerid] = 0;
	
	

	for(new i = 0; i < MAX_ADMINS; i++)
	{
	    if(!strcmp(AdminInfo[i][aName], ime))
	    {
	        AdminInfo[i][aNeaktivnost] = 0;
	        SaveAdmin(i);
	        break;
	    }
	}

	for(new i = 0; i < MAX_HELPERS; i++)
	{
	    if(!strcmp(HelperInfo[i][hlName], ime))
	    {
	        HelperInfo[i][hlNeaktivnost] = 0;
	        SaveHelper(i);
	        break;
	    }
	}

	SetTimerEx("CarUpdate", 200, true, "i", playerid);

	editaorg[playerid] = -1;

	SalonTD[playerid] = CreatePlayerTextDraw(playerid, 221.666656, 341.807464, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, SalonTD[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, SalonTD[playerid], 199.999969, 107.851867);
	PlayerTextDrawAlignment(playerid, SalonTD[playerid], 1);
	PlayerTextDrawColor(playerid, SalonTD[playerid], 255);
	PlayerTextDrawSetShadow(playerid, SalonTD[playerid], 0);
	PlayerTextDrawSetOutline(playerid, SalonTD[playerid], 0);
	PlayerTextDrawFont(playerid, SalonTD[playerid], 4);

	SalonTD1[playerid] = CreatePlayerTextDraw(playerid, 377.666656, 341.392578, "LD_POOL:ball");
	PlayerTextDrawLetterSize(playerid, SalonTD1[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, SalonTD1[playerid], 89.999977, 117.392601);
	PlayerTextDrawAlignment(playerid, SalonTD1[playerid], 1);
	PlayerTextDrawColor(playerid, SalonTD1[playerid], 255);
	PlayerTextDrawSetShadow(playerid, SalonTD1[playerid], 0);
	PlayerTextDrawSetOutline(playerid, SalonTD1[playerid], 0);
	PlayerTextDrawFont(playerid, SalonTD1[playerid], 4);

	SalonTD2[playerid] = CreatePlayerTextDraw(playerid, 173.000030, 340.977752, "LD_POOL:ball");
	PlayerTextDrawLetterSize(playerid, SalonTD2[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, SalonTD2[playerid], 92.666664, 114.074081);
	PlayerTextDrawAlignment(playerid, SalonTD2[playerid], 1);
	PlayerTextDrawColor(playerid, SalonTD2[playerid], 255);
	PlayerTextDrawSetShadow(playerid, SalonTD2[playerid], 0);
	PlayerTextDrawSetOutline(playerid, SalonTD2[playerid], 0);
	PlayerTextDrawFont(playerid, SalonTD2[playerid], 4);

	SalonTD3[playerid] = CreatePlayerTextDraw(playerid, 320.666625, 344.296295, "Infernus");
	PlayerTextDrawLetterSize(playerid, SalonTD3[playerid], 0.314000, 1.504592);
	PlayerTextDrawAlignment(playerid, SalonTD3[playerid], 2);
	PlayerTextDrawColor(playerid, SalonTD3[playerid], -1);
	PlayerTextDrawUseBox(playerid, SalonTD3[playerid], true);
	PlayerTextDrawBoxColor(playerid, SalonTD3[playerid], 0);
	PlayerTextDrawSetShadow(playerid, SalonTD3[playerid], 0);
	PlayerTextDrawSetOutline(playerid, SalonTD3[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, SalonTD3[playerid], 51);
	PlayerTextDrawFont(playerid, SalonTD3[playerid], 2);
	PlayerTextDrawSetProportional(playerid, SalonTD3[playerid], 1);

	SalonTD4[playerid] = CreatePlayerTextDraw(playerid, 234.666610, 366.696228, "Cena: ~b~$1000000");
	PlayerTextDrawLetterSize(playerid, SalonTD4[playerid], 0.248999, 1.201777);
	PlayerTextDrawAlignment(playerid, SalonTD4[playerid], 1);
	PlayerTextDrawColor(playerid, SalonTD4[playerid], -1);
	PlayerTextDrawSetShadow(playerid, SalonTD4[playerid], 0);
	PlayerTextDrawSetOutline(playerid, SalonTD4[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, SalonTD4[playerid], 51);
	PlayerTextDrawFont(playerid, SalonTD4[playerid], 2);
	PlayerTextDrawSetProportional(playerid, SalonTD4[playerid], 1);

	SalonTD5[playerid] = CreatePlayerTextDraw(playerid, 234.666656, 377.896240, "Kategorija: B (automobil)");
	PlayerTextDrawLetterSize(playerid, SalonTD5[playerid], 0.239333, 1.226668);
	PlayerTextDrawAlignment(playerid, SalonTD5[playerid], 1);
	PlayerTextDrawColor(playerid, SalonTD5[playerid], -1);
	PlayerTextDrawSetShadow(playerid, SalonTD5[playerid], 0);
	PlayerTextDrawSetOutline(playerid, SalonTD5[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, SalonTD5[playerid], 51);
	PlayerTextDrawFont(playerid, SalonTD5[playerid], 2);
	PlayerTextDrawSetProportional(playerid, SalonTD5[playerid], 1);

	SalonTD6[playerid] = CreatePlayerTextDraw(playerid, 235.000015, 389.925872, "Preostalo: 10 na stanju");
	PlayerTextDrawLetterSize(playerid, SalonTD6[playerid], 0.236999, 1.205927);
	PlayerTextDrawAlignment(playerid, SalonTD6[playerid], 1);
	PlayerTextDrawColor(playerid, SalonTD6[playerid], -1);
	PlayerTextDrawSetShadow(playerid, SalonTD6[playerid], 0);
	PlayerTextDrawSetOutline(playerid, SalonTD6[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, SalonTD6[playerid], 51);
	PlayerTextDrawFont(playerid, SalonTD6[playerid], 2);
	PlayerTextDrawSetProportional(playerid, SalonTD6[playerid], 1);

	SalonTD9[playerid] = CreatePlayerTextDraw(playerid, 203.666595, 384.948150, "<");
	PlayerTextDrawLetterSize(playerid, SalonTD9[playerid], 0.537666, 2.583111);
	PlayerTextDrawAlignment(playerid, SalonTD9[playerid], 1);
	PlayerTextDrawColor(playerid, SalonTD9[playerid], -1);
	PlayerTextDrawSetShadow(playerid, SalonTD9[playerid], 0);
	PlayerTextDrawSetOutline(playerid, SalonTD9[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, SalonTD9[playerid], 51);
	PlayerTextDrawFont(playerid, SalonTD9[playerid], 2);
	PlayerTextDrawSetProportional(playerid, SalonTD9[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, SalonTD9[playerid], true);

	SalonTD7[playerid] = CreatePlayerTextDraw(playerid, 294.000030, 421.037109, "kupi");
	PlayerTextDrawLetterSize(playerid, SalonTD7[playerid], 0.537666, 2.583111);
	PlayerTextDrawAlignment(playerid, SalonTD7[playerid], 1);
	PlayerTextDrawColor(playerid, SalonTD7[playerid], -1);
	PlayerTextDrawSetShadow(playerid, SalonTD7[playerid], 0);
	PlayerTextDrawSetOutline(playerid, SalonTD7[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, SalonTD7[playerid], 51);
	PlayerTextDrawFont(playerid, SalonTD7[playerid], 2);
	PlayerTextDrawSetProportional(playerid, SalonTD7[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, SalonTD7[playerid], true);

	SalonTD8[playerid] = CreatePlayerTextDraw(playerid, 431.000000, 384.533386, ">");
	PlayerTextDrawLetterSize(playerid, SalonTD8[playerid], 0.537666, 2.583111);
	PlayerTextDrawAlignment(playerid, SalonTD8[playerid], 1);
	PlayerTextDrawColor(playerid, SalonTD8[playerid], -1);
	PlayerTextDrawSetShadow(playerid, SalonTD8[playerid], 0);
	PlayerTextDrawSetOutline(playerid, SalonTD8[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, SalonTD8[playerid], 51);
	PlayerTextDrawFont(playerid, SalonTD8[playerid], 2);
	PlayerTextDrawSetProportional(playerid, SalonTD8[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, SalonTD8[playerid], true);



	REGTDPRVI[playerid] = CreatePlayerTextDraw(playerid, 0.000000, 0.000000, "LD_SPAC:white");
	PlayerTextDrawTextSize(playerid, REGTDPRVI[playerid], 640.000000, 448.000000);
	PlayerTextDrawAlignment(playerid,REGTDPRVI[playerid], 1);
	PlayerTextDrawColor(playerid,REGTDPRVI[playerid], 428189439);
	PlayerTextDrawSetShadow(playerid,REGTDPRVI[playerid], 0);
	PlayerTextDrawSetOutline(playerid,REGTDPRVI[playerid], 0);
	PlayerTextDrawFont(playerid,REGTDPRVI[playerid], 4);

	REGTD0[playerid] = CreatePlayerTextDraw(playerid, 318.000091, 0.414822, "PerfectCrime");
	PlayerTextDrawLetterSize(playerid, REGTD0[playerid], 0.723330, 3.379554);
	PlayerTextDrawAlignment(playerid, REGTD0[playerid], 2);
	PlayerTextDrawColor(playerid, REGTD0[playerid], 255);
	PlayerTextDrawUseBox(playerid, REGTD0[playerid], true);
	PlayerTextDrawBoxColor(playerid, REGTD0[playerid], 0);
	PlayerTextDrawSetShadow(playerid, REGTD0[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD0[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, REGTD0[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD0[playerid], 3);
	PlayerTextDrawSetProportional(playerid, REGTD0[playerid], 1);

	REGTD1[playerid] = CreatePlayerTextDraw(playerid, 373.000030, 28.207403, "RolePlay");
	PlayerTextDrawLetterSize(playerid, REGTD1[playerid], 0.314666, 1.164443);
	PlayerTextDrawAlignment(playerid, REGTD1[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD1[playerid], -1);
	PlayerTextDrawUseBox(playerid, REGTD1[playerid], true);
	PlayerTextDrawBoxColor(playerid, REGTD1[playerid], 0);
	PlayerTextDrawSetShadow(playerid, REGTD1[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD1[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD1[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD1[playerid], 0);
	PlayerTextDrawSetProportional(playerid, REGTD1[playerid], 1);

	REGTD2[playerid] = CreatePlayerTextDraw(playerid, 319.000030, 3.733330, "PerfectCrime");
	PlayerTextDrawLetterSize(playerid, REGTD2[playerid], 0.711332, 3.002077);
	PlayerTextDrawAlignment(playerid, REGTD2[playerid], 2);
	PlayerTextDrawColor(playerid, REGTD2[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD2[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD2[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, REGTD2[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD2[playerid], 3);
	PlayerTextDrawSetProportional(playerid, REGTD2[playerid], 1);

	REGTD3[playerid] = CreatePlayerTextDraw(playerid, 317.333404, 46.459255, "- Dobar dan, dobrodosli na nas server!");
	PlayerTextDrawLetterSize(playerid, REGTD3[playerid], 0.156332, 1.010962);
	PlayerTextDrawAlignment(playerid, REGTD3[playerid], 2);
	PlayerTextDrawColor(playerid, REGTD3[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD3[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD3[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD3[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD3[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD3[playerid], 1);

	REGTD4[playerid] = CreatePlayerTextDraw(playerid, 315.333404, 56.000007, "- Nalog sa vasim imenom ne postoji, pa ste zbog toga preusmereni na registraciju.");
	PlayerTextDrawLetterSize(playerid, REGTD4[playerid], 0.136997, 0.998516);
	PlayerTextDrawAlignment(playerid, REGTD4[playerid], 2);
	PlayerTextDrawColor(playerid, REGTD4[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD4[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD4[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD4[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD4[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD4[playerid], 1);

	REGTD5[playerid] = CreatePlayerTextDraw(playerid, 314.333312, 65.540748, "- Molimo vas da unesete ispravne podatke kako bi obavili uspesnu registraciju!");
	PlayerTextDrawLetterSize(playerid, REGTD5[playerid], 0.128333, 1.027554);
	PlayerTextDrawAlignment(playerid, REGTD5[playerid], 2);
	PlayerTextDrawColor(playerid, REGTD5[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD5[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD5[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD5[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD5[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD5[playerid], 1);

	REGTD6[playerid] = CreatePlayerTextDraw(playerid, 315.000000, 74.666664, "- Hvala vam sto ste odabrali nas server, zelimo vam ugodnu igru!");
	PlayerTextDrawLetterSize(playerid, REGTD6[playerid], 0.127664, 1.019258);
	PlayerTextDrawAlignment(playerid, REGTD6[playerid], 2);
	PlayerTextDrawColor(playerid, REGTD6[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD6[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD6[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD6[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD6[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD6[playerid], 1);

	REGTD7[playerid] = CreatePlayerTextDraw(playerid, 596.333312, -19.081462, "ld_pool:ball");
	PlayerTextDrawLetterSize(playerid, REGTD7[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, REGTD7[playerid], 55.000015, 62.637020);
	PlayerTextDrawAlignment(playerid, REGTD7[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD7[playerid], 255);
	PlayerTextDrawSetShadow(playerid, REGTD7[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD7[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, REGTD7[playerid], -1);
	PlayerTextDrawFont(playerid, REGTD7[playerid], 4);

	REGTD8[playerid] = CreatePlayerTextDraw(playerid, -12.666666, -20.740755, "ld_pool:ball");
	PlayerTextDrawLetterSize(playerid, REGTD8[playerid], 0.000000, 0.000000);
	PlayerTextDrawTextSize(playerid, REGTD8[playerid], 53.000019, 63.881458);
	PlayerTextDrawAlignment(playerid, REGTD8[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD8[playerid], 255);
	PlayerTextDrawSetShadow(playerid, REGTD8[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD8[playerid], 0);
	PlayerTextDrawFont(playerid, REGTD8[playerid], 4);

	REGTD9[playerid] = CreatePlayerTextDraw(playerid, 2.333307, 6.222225, "PC:RP");
	PlayerTextDrawLetterSize(playerid, REGTD9[playerid], 0.294999, 1.670518);
	PlayerTextDrawAlignment(playerid, REGTD9[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD9[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD9[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD9[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD9[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD9[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD9[playerid], 1);

	REGTD10[playerid] = CreatePlayerTextDraw(playerid, 600.000000, 6.637038, "v1.0.0");
	PlayerTextDrawLetterSize(playerid, REGTD10[playerid], 0.313998, 1.666368);
	PlayerTextDrawAlignment(playerid, REGTD10[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD10[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD10[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD10[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD10[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD10[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD10[playerid], 1);

	REGTD11[playerid] = CreatePlayerTextDraw(playerid, 380.666748, 116.818572, "usebox");
	PlayerTextDrawLetterSize(playerid, REGTD11[playerid], 0.000000, 30.471813);
	PlayerTextDrawTextSize(playerid, REGTD11[playerid], 255.999832, 0.000000);
	PlayerTextDrawAlignment(playerid, REGTD11[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD11[playerid], 0);
	PlayerTextDrawUseBox(playerid, REGTD11[playerid], true);
	PlayerTextDrawBoxColor(playerid, REGTD11[playerid], 102);
	PlayerTextDrawSetShadow(playerid, REGTD11[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD11[playerid], 0);
	PlayerTextDrawFont(playerid, REGTD11[playerid], 0);

	REGTD12[playerid] = CreatePlayerTextDraw(playerid, 6.999855, 261.748229, "_");
	PlayerTextDrawLetterSize(playerid, REGTD12[playerid], -0.007333, -0.074666);
	PlayerTextDrawTextSize(playerid, REGTD12[playerid], 166.999984, 180.029602);
	PlayerTextDrawAlignment(playerid, REGTD12[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD12[playerid], -1);
	PlayerTextDrawUseBox(playerid, REGTD12[playerid], true);
	PlayerTextDrawBoxColor(playerid, REGTD12[playerid], 0x00000000);
	PlayerTextDrawSetShadow(playerid, REGTD12[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD12[playerid], 0);
	PlayerTextDrawFont(playerid, REGTD12[playerid], 5);
	PlayerTextDrawSetPreviewModel(playerid, REGTD12[playerid], 269);
	PlayerTextDrawSetPreviewRot(playerid, REGTD12[playerid], 0.0, 0.0, 30.0, 1.0);
	PlayerTextDrawBackgroundColor(playerid, REGTD12[playerid], 0x00000000);


	REGTD13[playerid] = CreatePlayerTextDraw(playerid, -12.333365, 260.503753, "_");
	PlayerTextDrawLetterSize(playerid, REGTD13[playerid], 0.023664, 0.124444);
	PlayerTextDrawTextSize(playerid, REGTD13[playerid], 164.000015, 186.666671);
	PlayerTextDrawAlignment(playerid, REGTD13[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD13[playerid], -1);
	PlayerTextDrawUseBox(playerid, REGTD13[playerid], true);
	PlayerTextDrawBoxColor(playerid, REGTD13[playerid], 0x00000000);
	PlayerTextDrawSetShadow(playerid, REGTD13[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD13[playerid], 0);
	PlayerTextDrawFont(playerid, REGTD13[playerid], 5);
	PlayerTextDrawSetPreviewModel(playerid, REGTD13[playerid], 270);
	PlayerTextDrawSetPreviewRot(playerid, REGTD13[playerid], 0.0, 0.0, 15.0, 1.0);
	PlayerTextDrawBackgroundColor(playerid, REGTD13[playerid], 0x00000000);

	REGTD14[playerid] = CreatePlayerTextDraw(playerid, -43.666698, 262.992614, "_");
	PlayerTextDrawLetterSize(playerid, REGTD14[playerid], -0.016333, -0.232296);
	PlayerTextDrawTextSize(playerid, REGTD14[playerid], 158.666641, 185.007415);
	PlayerTextDrawAlignment(playerid, REGTD14[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD14[playerid],-1);
	PlayerTextDrawUseBox(playerid, REGTD14[playerid], true);
	PlayerTextDrawBoxColor(playerid, REGTD14[playerid], 0x00000000);
	PlayerTextDrawSetShadow(playerid, REGTD14[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD14[playerid], 0);
	PlayerTextDrawFont(playerid, REGTD14[playerid], 5);
	PlayerTextDrawSetPreviewModel(playerid, REGTD14[playerid], 271);
	PlayerTextDrawSetPreviewRot(playerid, REGTD14[playerid], 0.0, 0.0, 5.0, 1.0);
	PlayerTextDrawBackgroundColor(playerid, REGTD14[playerid], 0x00000000);

	REGTD15[playerid] = CreatePlayerTextDraw(playerid, 462.666778, 252.622192, "_");
	PlayerTextDrawLetterSize(playerid, REGTD15[playerid], 0.098999, 0.294517);
	PlayerTextDrawTextSize(playerid, REGTD15[playerid], 159.666625, 186.251846);
	PlayerTextDrawAlignment(playerid, REGTD15[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD15[playerid], -1);
	PlayerTextDrawUseBox(playerid, REGTD15[playerid], true);
	PlayerTextDrawBoxColor(playerid, REGTD15[playerid], 0x00000000);
	PlayerTextDrawSetShadow(playerid, REGTD15[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD15[playerid], 0);
	PlayerTextDrawFont(playerid, REGTD15[playerid], 5);
	PlayerTextDrawSetPreviewModel(playerid, REGTD15[playerid], 102);
	PlayerTextDrawSetPreviewRot(playerid, REGTD15[playerid], 0.0, 0.0, -30.0, 1.0);
	PlayerTextDrawBackgroundColor(playerid, REGTD15[playerid], 0x00000000);

	REGTD16[playerid] = CreatePlayerTextDraw(playerid, 490.333404, 254.696304, "_");
	PlayerTextDrawLetterSize(playerid, REGTD16[playerid], -0.019331, -0.132740);
	PlayerTextDrawTextSize(playerid, REGTD16[playerid], 160.666687, 185.837036);
	PlayerTextDrawAlignment(playerid, REGTD16[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD16[playerid], -1);
	PlayerTextDrawUseBox(playerid, REGTD16[playerid], true);
	PlayerTextDrawBoxColor(playerid, REGTD16[playerid], 0x00000000);
	PlayerTextDrawSetShadow(playerid, REGTD16[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD16[playerid], 0);
	PlayerTextDrawFont(playerid, REGTD16[playerid], 5);
	PlayerTextDrawSetPreviewModel(playerid, REGTD16[playerid], 103);
	PlayerTextDrawSetPreviewRot(playerid, REGTD16[playerid], 0.0, 0.0, -15.0, 1.0);
	PlayerTextDrawBackgroundColor(playerid, REGTD16[playerid], 0x00000000);

	REGTD17[playerid] = CreatePlayerTextDraw(playerid, 521.666564, 250.133285, "_");
	PlayerTextDrawLetterSize(playerid, REGTD17[playerid], -0.066333, -0.186664);
	PlayerTextDrawTextSize(playerid, REGTD17[playerid], 171.333343, 197.866668);
	PlayerTextDrawAlignment(playerid, REGTD17[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD17[playerid], -1);
	PlayerTextDrawUseBox(playerid, REGTD17[playerid], true);
	PlayerTextDrawBoxColor(playerid, REGTD17[playerid], 0x00000000);
	PlayerTextDrawSetShadow(playerid, REGTD17[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD17[playerid], 0);
	PlayerTextDrawFont(playerid, REGTD17[playerid], 5);
	PlayerTextDrawSetPreviewModel(playerid, REGTD17[playerid], 104);
	PlayerTextDrawSetPreviewRot(playerid, REGTD17[playerid], 0.0, 0.0, -5.0, 1.0);
	PlayerTextDrawBackgroundColor(playerid, REGTD17[playerid], 0x00000000);

	REGTD18[playerid] = CreatePlayerTextDraw(playerid, 249.000076, 116.818511, "usebox");
	PlayerTextDrawLetterSize(playerid, REGTD18[playerid], 0.000000, 30.425722);
	PlayerTextDrawTextSize(playerid, REGTD18[playerid], 124.333320, 0.000000);
	PlayerTextDrawAlignment(playerid, REGTD18[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD18[playerid], 0);
	PlayerTextDrawUseBox(playerid, REGTD18[playerid], true);
	PlayerTextDrawBoxColor(playerid, REGTD18[playerid], 102);
	PlayerTextDrawSetShadow(playerid, REGTD18[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD18[playerid], 0);
	PlayerTextDrawFont(playerid, REGTD18[playerid], 0);

	REGTD19[playerid] = CreatePlayerTextDraw(playerid, 510.666870, 116.818511, "usebox");
	PlayerTextDrawLetterSize(playerid, REGTD19[playerid], 0.000000, 30.425724);
	PlayerTextDrawTextSize(playerid, REGTD19[playerid], 386.333557, 0.000000);
	PlayerTextDrawAlignment(playerid, REGTD19[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD19[playerid], 0);
	PlayerTextDrawUseBox(playerid, REGTD19[playerid], true);
	PlayerTextDrawBoxColor(playerid, REGTD19[playerid], 102);
	PlayerTextDrawSetShadow(playerid, REGTD19[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD19[playerid], 0);
	PlayerTextDrawFont(playerid, REGTD19[playerid], 0);

	REGTD20[playerid] = CreatePlayerTextDraw(playerid, 309.333251, 100.385215, "- Molimo vas da sada izaberete koji tip igraca zelite da vas RP karakter bude:");
	PlayerTextDrawLetterSize(playerid, REGTD20[playerid], 0.121333, 1.052443);
	PlayerTextDrawAlignment(playerid, REGTD20[playerid], 2);
	PlayerTextDrawColor(playerid, REGTD20[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD20[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD20[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD20[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD20[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD20[playerid], 1);

	REGTD21[playerid] = CreatePlayerTextDraw(playerid, 315.000030, 395.318450, "- Tip kasnije mozete menjati, ali ce vas kostati $100.000 ili 20 nagradnih poena!");
	PlayerTextDrawLetterSize(playerid, REGTD21[playerid], 0.120333, 1.147850);
	PlayerTextDrawAlignment(playerid, REGTD21[playerid], 2);
	PlayerTextDrawColor(playerid, REGTD21[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD21[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD21[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD21[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD21[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD21[playerid], 1);

	REGTD22[playerid] = CreatePlayerTextDraw(playerid, 148.000030, 120.296241, "farmer");
	PlayerTextDrawLetterSize(playerid, REGTD22[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, REGTD22[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD22[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD22[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD22[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD22[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD22[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD22[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, REGTD22[playerid], true);

	REGTD23[playerid] = CreatePlayerTextDraw(playerid, 264.666687, 120.296310, "gradjanin");
	PlayerTextDrawLetterSize(playerid, REGTD23[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, REGTD23[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD23[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD23[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD23[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD23[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD23[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD23[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, REGTD23[playerid], true);

	REGTD24[playerid] = CreatePlayerTextDraw(playerid, 399.666595, 120.296279, "biznismen");
	PlayerTextDrawLetterSize(playerid, REGTD24[playerid], 0.449999, 1.600000);
	PlayerTextDrawAlignment(playerid, REGTD24[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD24[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD24[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD24[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD24[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD24[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD24[playerid], 1);
	PlayerTextDrawSetSelectable(playerid, REGTD24[playerid], true);

	REGTD25[playerid] = CreatePlayerTextDraw(playerid, 124.000030, 138.548156, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, REGTD25[playerid], 0.086000, 0.414814);
	PlayerTextDrawTextSize(playerid, REGTD25[playerid], 120.000000, 142.281448);
	PlayerTextDrawAlignment(playerid, REGTD25[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD25[playerid], -1);
	PlayerTextDrawUseBox(playerid, REGTD25[playerid], true);
	PlayerTextDrawBoxColor(playerid, REGTD25[playerid], 0x00000000);
	PlayerTextDrawSetShadow(playerid, REGTD25[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD25[playerid], 0);
	PlayerTextDrawFont(playerid, REGTD25[playerid], 5);
	PlayerTextDrawSetPreviewModel(playerid, REGTD25[playerid], 161);
	PlayerTextDrawSetPreviewRot(playerid, REGTD25[playerid], 0.0, 0.0, 0.0, 1.0);
	PlayerTextDrawBackgroundColor(playerid, REGTD25[playerid], 0x00000000);

	REGTD26[playerid] = CreatePlayerTextDraw(playerid, 254.000015, 136.888854, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, REGTD26[playerid], 0.241333, -0.012444);
	PlayerTextDrawTextSize(playerid, REGTD26[playerid], 116.333328, 143.525909);
	PlayerTextDrawAlignment(playerid, REGTD26[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD26[playerid], -1);
	PlayerTextDrawUseBox(playerid, REGTD26[playerid], true);
	PlayerTextDrawBoxColor(playerid, REGTD26[playerid], 0x00000000);
	PlayerTextDrawSetShadow(playerid, REGTD26[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD26[playerid], 0);
	PlayerTextDrawFont(playerid, REGTD26[playerid], 5);
	PlayerTextDrawSetPreviewModel(playerid, REGTD26[playerid], 170);
	PlayerTextDrawSetPreviewRot(playerid, REGTD26[playerid], 0.0, 0.0, 0.0, 1.0);
	PlayerTextDrawBackgroundColor(playerid, REGTD26[playerid], 0x00000000);

	REGTD27[playerid] = CreatePlayerTextDraw(playerid, 379.333465, 136.888900, "LD_SPAC:white");
	PlayerTextDrawLetterSize(playerid, REGTD27[playerid], 0.118000, 0.560000);
	PlayerTextDrawTextSize(playerid, REGTD27[playerid], 135.000015, 149.333389);
	PlayerTextDrawAlignment(playerid, REGTD27[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD27[playerid], -1);
	PlayerTextDrawUseBox(playerid, REGTD27[playerid], true);
	PlayerTextDrawBoxColor(playerid, REGTD27[playerid], 0x00000000);
	PlayerTextDrawSetShadow(playerid, REGTD27[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD27[playerid], 0);
	PlayerTextDrawFont(playerid, REGTD27[playerid], 5);
	PlayerTextDrawSetPreviewModel(playerid, REGTD27[playerid], 147);
	PlayerTextDrawSetPreviewRot(playerid, REGTD27[playerid], 0.0, 0.0, 0.0, 1.0);
	PlayerTextDrawBackgroundColor(playerid, REGTD27[playerid], 0x00000000);

	REGTD28[playerid] = CreatePlayerTextDraw(playerid, 127.666694, 382.044555, "Penzija: 30grs, $30.000                    HP: 70");
	PlayerTextDrawLetterSize(playerid, REGTD28[playerid], 0.122666, 1.019259);
	PlayerTextDrawAlignment(playerid, REGTD28[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD28[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD28[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD28[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD28[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD28[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD28[playerid], 1);

	REGTD29[playerid] = CreatePlayerTextDraw(playerid, 258.666717, 381.214874, "Penzija: 40grs, $40.000                    HP: 55");
	PlayerTextDrawLetterSize(playerid, REGTD29[playerid], 0.123666, 1.019259);
	PlayerTextDrawAlignment(playerid, REGTD29[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD29[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD29[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD29[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD29[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD29[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD29[playerid], 1);

	REGTD30[playerid] = CreatePlayerTextDraw(playerid, 390.333404, 381.629760, "Penzija: 30grs, $35.000                    HP: 65");
	PlayerTextDrawLetterSize(playerid, REGTD30[playerid], 0.121999, 1.015110);
	PlayerTextDrawAlignment(playerid, REGTD30[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD30[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD30[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD30[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD30[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD30[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD30[playerid], 1);

	REGTD31[playerid] = CreatePlayerTextDraw(playerid, 130.000000, 287.466674, "-20% cene imanja, sadnica i semena");
	PlayerTextDrawLetterSize(playerid, REGTD31[playerid], 0.128333, 0.948740);
	PlayerTextDrawAlignment(playerid, REGTD31[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD31[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD31[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD31[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD31[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD31[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD31[playerid], 1);

	REGTD32[playerid] = CreatePlayerTextDraw(playerid, 130.000015, 297.007354, "-20% cene traktora i radnih masina");
	PlayerTextDrawLetterSize(playerid, REGTD32[playerid], 0.129333, 1.002666);
	PlayerTextDrawAlignment(playerid, REGTD32[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD32[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD32[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD32[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD32[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD32[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD32[playerid], 1);

	REGTD33[playerid] = CreatePlayerTextDraw(playerid, 128.666671, 307.377746, "+10% tokom prodaje voca i useva");
	PlayerTextDrawLetterSize(playerid, REGTD33[playerid], 0.134333, 0.919703);
	PlayerTextDrawAlignment(playerid, REGTD33[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD33[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD33[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD33[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD33[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD33[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD33[playerid], 1);

	REGTD34[playerid] = CreatePlayerTextDraw(playerid, 261.666778, 286.636962, "-10% cene kuca i stanova");
	PlayerTextDrawLetterSize(playerid, REGTD34[playerid], 0.127999, 1.010963);
	PlayerTextDrawAlignment(playerid, REGTD34[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD34[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD34[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD34[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD34[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD34[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD34[playerid], 1);

	REGTD35[playerid] = CreatePlayerTextDraw(playerid, 261.666687, 296.592590, "-10% cene salonskih vozila");
	PlayerTextDrawLetterSize(playerid, REGTD35[playerid], 0.124333, 1.019259);
	PlayerTextDrawAlignment(playerid, REGTD35[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD35[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD35[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD35[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD35[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD35[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD35[playerid], 1);

	REGTD36[playerid] = CreatePlayerTextDraw(playerid, 259.666687, 306.548187, "+10% na zaradu na svim poslovima");
	PlayerTextDrawLetterSize(playerid, REGTD36[playerid], 0.126999, 0.998518);
	PlayerTextDrawAlignment(playerid, REGTD36[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD36[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD36[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD36[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD36[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD36[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD36[playerid], 1);

	REGTD37[playerid] = CreatePlayerTextDraw(playerid, 392.333404, 286.637115, "-20% cene firmi i biznisa");
	PlayerTextDrawLetterSize(playerid, REGTD37[playerid], 0.126333, 1.006815);
	PlayerTextDrawAlignment(playerid, REGTD37[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD37[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD37[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD37[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD37[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD37[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD37[playerid], 1);

	REGTD38[playerid] = CreatePlayerTextDraw(playerid, 392.333343, 296.177734, "-10% na zaradu na svim poslovima");
	PlayerTextDrawLetterSize(playerid, REGTD38[playerid], 0.125666, 1.035851);
	PlayerTextDrawAlignment(playerid, REGTD38[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD38[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD38[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD38[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD38[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD38[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD38[playerid], 1);

	REGTD39[playerid] = CreatePlayerTextDraw(playerid, 391.999908, 305.718414, "+20% za prodaju produkata");
	PlayerTextDrawLetterSize(playerid, REGTD39[playerid], 0.124999, 1.056592);
	PlayerTextDrawAlignment(playerid, REGTD39[playerid], 1);
	PlayerTextDrawColor(playerid, REGTD39[playerid], -1);
	PlayerTextDrawSetShadow(playerid, REGTD39[playerid], 0);
	PlayerTextDrawSetOutline(playerid, REGTD39[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, REGTD39[playerid], 51);
	PlayerTextDrawFont(playerid, REGTD39[playerid], 2);
	PlayerTextDrawSetProportional(playerid, REGTD39[playerid], 1);


	Textdrawp0[playerid] = CreatePlayerTextDraw(playerid, 593.999694, 335.170288, "90%");
	PlayerTextDrawLetterSize(playerid, Textdrawp0[playerid], 0.160666, 1.164445);
	PlayerTextDrawAlignment(playerid, Textdrawp0[playerid], 2);
	PlayerTextDrawColor(playerid, Textdrawp0[playerid], -1);
	PlayerTextDrawSetShadow(playerid, Textdrawp0[playerid], 0);
	PlayerTextDrawSetOutline(playerid, Textdrawp0[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, Textdrawp0[playerid], 51);
	PlayerTextDrawFont(playerid, Textdrawp0[playerid], 2);
	PlayerTextDrawSetProportional(playerid, Textdrawp0[playerid], 1);

	Textdrawp1[playerid] = CreatePlayerTextDraw(playerid, 594.666748, 357.985351, "100%");
	PlayerTextDrawLetterSize(playerid, Textdrawp1[playerid], 0.159666, 1.239109);
	PlayerTextDrawAlignment(playerid, Textdrawp1[playerid], 2);
	PlayerTextDrawColor(playerid, Textdrawp1[playerid], -1);
	PlayerTextDrawSetShadow(playerid, Textdrawp1[playerid], 0);
	PlayerTextDrawSetOutline(playerid, Textdrawp1[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, Textdrawp1[playerid], 51);
	PlayerTextDrawFont(playerid, Textdrawp1[playerid], 2);
	PlayerTextDrawSetProportional(playerid, Textdrawp1[playerid], 1);

	Textdrawp2[playerid] = CreatePlayerTextDraw(playerid, 594.666625, 382.044372, "60 min");
	PlayerTextDrawLetterSize(playerid, Textdrawp2[playerid], 0.160666, 1.156149);
	PlayerTextDrawAlignment(playerid, Textdrawp2[playerid], 2);
	PlayerTextDrawColor(playerid, Textdrawp2[playerid], -1);
	PlayerTextDrawSetShadow(playerid, Textdrawp2[playerid], 0);
	PlayerTextDrawSetOutline(playerid, Textdrawp2[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, Textdrawp2[playerid], 51);
	PlayerTextDrawFont(playerid, Textdrawp2[playerid], 2);
	PlayerTextDrawSetProportional(playerid, Textdrawp2[playerid], 1);

	Textdrawp3[playerid] = CreatePlayerTextDraw(playerid, 578.666748, 108.266647, "$4356434");
	PlayerTextDrawLetterSize(playerid, Textdrawp3[playerid], 0.130998, 0.882368);
	PlayerTextDrawAlignment(playerid, Textdrawp3[playerid], 1);
	PlayerTextDrawColor(playerid, Textdrawp3[playerid], -1);
	PlayerTextDrawSetShadow(playerid, Textdrawp3[playerid], 0);
	PlayerTextDrawSetOutline(playerid, Textdrawp3[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, Textdrawp3[playerid], 51);
	PlayerTextDrawFont(playerid, Textdrawp3[playerid], 2);
	PlayerTextDrawSetProportional(playerid, Textdrawp3[playerid], 1);

	Textdrawp4[playerid] = CreatePlayerTextDraw(playerid, 579.666809, 126.103698, "545 g");
	PlayerTextDrawLetterSize(playerid, Textdrawp4[playerid], 0.134999, 0.890666);
	PlayerTextDrawAlignment(playerid, Textdrawp4[playerid], 1);
	PlayerTextDrawColor(playerid, Textdrawp4[playerid], -1);
	PlayerTextDrawSetShadow(playerid, Textdrawp4[playerid], 0);
	PlayerTextDrawSetOutline(playerid, Textdrawp4[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, Textdrawp4[playerid], 51);
	PlayerTextDrawFont(playerid, Textdrawp4[playerid], 2);
	PlayerTextDrawSetProportional(playerid, Textdrawp4[playerid], 1);

	Textdrawp5[playerid] = CreatePlayerTextDraw(playerid, 578.333251, 143.940734, "$43564");
	PlayerTextDrawLetterSize(playerid, Textdrawp5[playerid], 0.138666, 0.886518);
	PlayerTextDrawAlignment(playerid, Textdrawp5[playerid], 1);
	PlayerTextDrawColor(playerid, Textdrawp5[playerid], -1);
	PlayerTextDrawSetShadow(playerid, Textdrawp5[playerid], 0);
	PlayerTextDrawSetOutline(playerid, Textdrawp5[playerid], 1);
	PlayerTextDrawBackgroundColor(playerid, Textdrawp5[playerid], 51);
	PlayerTextDrawFont(playerid, Textdrawp5[playerid], 2);
	PlayerTextDrawSetProportional(playerid, Textdrawp5[playerid], 1);

	Textdrawp6[playerid] = CreatePlayerTextDraw(playerid, 497.000000, 79.644439, "_");
	PlayerTextDrawLetterSize(playerid, Textdrawp6[playerid], 0.132666, 1.008000);
	PlayerTextDrawTextSize(playerid, Textdrawp6[playerid], 102.000045, 105.777847);
	PlayerTextDrawAlignment(playerid, Textdrawp6[playerid], 1);
	PlayerTextDrawColor(playerid, Textdrawp6[playerid], -1);
	PlayerTextDrawSetShadow(playerid, Textdrawp6[playerid], 0);
	PlayerTextDrawSetOutline(playerid, Textdrawp6[playerid], 0);
	PlayerTextDrawBackgroundColor(playerid, Textdrawp6[playerid], 0x00000000);
	PlayerTextDrawFont(playerid, Textdrawp6[playerid], 5);
	PlayerTextDrawSetPreviewModel(playerid, Textdrawp6[playerid], 0);
	PlayerTextDrawSetPreviewRot(playerid, Textdrawp6[playerid], 0.000000, 0.000000, 0.000000, 2.000000);


//============================= REMOVE =========================================

	//PRISON
	RemoveBuildingForPlayer(playerid, 3279, 233.4297, 1934.8438, 16.8203, 0.25);

	//TEHNICKI BB
	RemoveBuildingForPlayer(playerid, 1449, 1412.8047, 450.0000, 19.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, 1413.4141, 451.1172, 19.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 1348, 1399.7344, 459.7422, 19.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1482, 1401.9063, 461.3594, 20.5781, 0.25);

	//BB POSTA
	RemoveBuildingForPlayer(playerid, 1294, 1248.1484, 257.5000, 23.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 1204.4297, 325.0000, 23.0078, 0.25);

	//BB SHERIFF
	RemoveBuildingForPlayer(playerid, 2174, 225.4922, 107.6406, 1002.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 225.2578, 108.1250, 1002.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 1998, 224.7656, 110.1016, 1002.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 2356, 225.6563, 110.0781, 1002.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 227.8516, 108.1172, 1002.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 2008, 227.6016, 115.2109, 1002.2266, 0.25);
	RemoveBuildingForPlayer(playerid, 2174, 228.0391, 107.6406, 1002.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 228.2891, 114.6328, 1002.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 2174, 230.5078, 107.6406, 1002.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 230.2813, 108.1172, 1002.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 1806, 230.4297, 110.6016, 1002.1953, 0.25);
	RemoveBuildingForPlayer(playerid, 1998, 230.2891, 111.1563, 1002.2266, 0.25);

	//FC Zlatara
	RemoveBuildingForPlayer(playerid, 3372, -331.3906, 1170.8594, 20.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 3372, -298.0234, 1170.8672, 21.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 16739, -297.1016, 1152.9688, 27.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, -343.8594, 1159.1719, 19.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, -309.8359, 1158.8359, 17.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, -343.8594, 1169.7344, 19.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, -343.8594, 1164.4453, 19.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 3304, -298.0234, 1170.8672, 21.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3303, -331.3906, 1170.8594, 20.7734, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, -343.8594, 1175.0078, 19.9297, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, -343.8594, 1180.3281, 19.9297, 0.25);

	//Blueberry autoskola
	RemoveBuildingForPlayer(playerid, 13080, 1220.0000, 162.6875, 22.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 13485, 1304.3047, 330.1563, 23.7031, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 1207.8828, 156.4297, 26.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1688, 1208.8750, 159.1875, 26.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1689, 1221.4844, 148.0313, 26.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 13078, 1220.0000, 162.6875, 22.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 1689, 1219.4844, 175.8438, 26.3984, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, 1207.8594, 177.5234, 19.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, 1201.8438, 179.5703, 19.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 1688, 1229.1953, 164.8906, 26.2500, 0.25);
	RemoveBuildingForPlayer(playerid, 1687, 1228.2109, 162.1328, 26.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 1243.0938, 174.6328, 19.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 13441, 1338.0625, 198.7344, 30.0234, 0.25);

	//RUDAR
	RemoveBuildingForPlayer(playerid, 16071, 674.7734, 854.5156, -39.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 3214, 687.6250, 847.1094, -35.3828, 0.25);
	RemoveBuildingForPlayer(playerid, 16072, 640.3125, 874.7891, -35.3359, 0.25);

	//BB SHERIFF
	RemoveBuildingForPlayer(playerid, 13366, 1360.8750, 199.9609, 19.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 1690, 1361.1328, 184.7188, 23.8438, 0.25);
	RemoveBuildingForPlayer(playerid, 617, 1379.1641, 194.6719, 17.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 1688, 1352.4766, 187.8281, 24.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 13441, 1338.0625, 198.7344, 30.0234, 0.25);
	RemoveBuildingForPlayer(playerid, 13363, 1360.8750, 199.9609, 19.3203, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 1386.7031, 197.6641, 23.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 1376.7188, 199.3203, 18.8203, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, 1353.1016, 201.7578, 19.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 1440, 1369.2500, 200.9141, 19.0469, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, 1353.5781, 204.2266, 19.2656, 0.25);

	//FC ILEGALNA ORG4
	RemoveBuildingForPlayer(playerid, 11654, -681.8750, 965.8906, 11.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 11492, -681.8750, 965.8906, 11.1250, 0.25);

	//Admin baza
	RemoveBuildingForPlayer(playerid, 966, -2436.8516, 495.4531, 28.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 967, -2438.7266, 495.0078, 29.1016, 0.25);
	RemoveBuildingForPlayer(playerid, 968, -2436.8125, 495.4688, 29.6797, 0.25);

	//blueberry spawn
	RemoveBuildingForPlayer(playerid, 1294, 1209.9766, 294.0547, 23.0078, 0.25);

	//podzemlje
	RemoveBuildingForPlayer(playerid, 3372, -38.0469, 1045.8516, 21.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 3304, -38.0469, 1045.8516, 21.6719, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -51.6875, 1042.5938, 18.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, -55.5078, 1035.3828, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 652, -51.1484, 1052.1094, 18.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 16735, -49.2422, 1137.7031, 28.7813, 0.25);

	//mapfix + restoran + novinari
	RemoveBuildingForPlayer(playerid, 16506, -144.0547, 1227.3047, 18.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 16618, -117.7656, 1079.4609, 22.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, -169.9766, 1027.1953, 19.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, -75.6953, 1071.1641, 19.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, -75.6953, 1076.4453, 19.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, -160.2656, 1122.5391, 19.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, -149.8516, 1133.7656, 19.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 16740, -152.3203, 1144.0703, 30.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, -149.8203, 1164.1094, 19.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, -162.0938, 1175.1406, 19.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 16781, -144.0547, 1227.3047, 18.8984, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, -155.6953, 1234.4219, 19.4766, 0.25);
	RemoveBuildingForPlayer(playerid, 16386, -117.7656, 1079.4609, 22.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, -123.8125, 1079.3984, 19.5000, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, -111.7422, 1087.5000, 19.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, -75.6953, 1081.7188, 19.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, -86.8438, 1088.4141, 19.4844, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, -90.7891, 1093.6953, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, -90.6016, 1128.2188, 19.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 16735, -49.2422, 1137.7031, 28.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, -88.8594, 1165.3828, 19.4609, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, -44.3047, 1179.2734, 19.2422, 0.25);

	//benzinska pumpa
	RemoveBuildingForPlayer(playerid, 16478, 55.5625, 1220.6797, 17.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 49.1406, 1193.6406, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 16477, 55.5625, 1220.6797, 17.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, 49.1406, 1202.8828, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 45.0547, 1231.8281, 18.4531, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 66.7969, 1207.1563, 18.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 72.0859, 1206.8828, 18.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 73.0938, 1228.0391, 19.0781, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 77.3594, 1206.8828, 18.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 16479, 86.2422, 1214.0391, 17.7422, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 78.2578, 1226.8516, 19.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 83.2813, 1225.2656, 19.8203, 0.25);


	//apartmani
	RemoveBuildingForPlayer(playerid, 16740, -152.3203, 1144.0703, 30.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 16739, -297.1016, 1152.9688, 27.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, -225.7344, 1208.8125, 17.3672, 0.25);

	

	//auto salon
	RemoveBuildingForPlayer(playerid, 691, 75.7500, 1067.0469, 11.5234, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 92.4141, 1099.5313, 12.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 79.3359, 1099.9453, 11.9219, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 75.0547, 1077.6875, 14.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 75.8516, 1041.6797, 13.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 75.9922, 1036.3828, 13.8516, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 74.6484, 1082.9453, 14.1250, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 82.2344, 1028.6719, 13.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 78.3125, 1032.2031, 13.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 85.9844, 1024.9297, 13.8359, 0.25);
	RemoveBuildingForPlayer(playerid, 16000, 110.8125, 1023.9922, 12.6484, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 130.3828, 1029.3516, 13.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 134.8984, 1032.1250, 13.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 137.1328, 1036.2422, 13.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 3221, 94.9688, 1067.2031, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 3221, 108.9688, 1067.2031, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 3221, 96.8750, 1057.2188, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 3221, 98.6484, 1047.6563, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 3221, 91.3750, 1085.6719, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 3221, 105.3750, 1085.6719, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 3221, 100.1406, 1076.7891, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 3221, 107.1406, 1076.7891, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 3221, 112.3750, 1085.6719, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 3221, 115.9688, 1067.2031, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 3221, 110.8750, 1057.2188, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 3221, 112.6484, 1047.6563, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 3221, 121.1406, 1076.7891, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 3221, 128.1406, 1076.7891, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 3221, 122.9688, 1067.2031, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 3221, 124.8750, 1057.2188, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 3221, 119.6484, 1047.6563, 12.6641, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 139.7734, 1052.9609, 13.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 141.6797, 1071.9844, 13.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 141.0391, 1066.7500, 13.7969, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 97.1172, 1107.4141, 13.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 97.2578, 1102.1172, 13.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 16001, 110.6172, 1109.5156, 12.7266, 0.25);
	RemoveBuildingForPlayer(playerid, 16002, 172.8047, 1088.6250, 18.1094, 0.25);
	RemoveBuildingForPlayer(playerid, 16003, 150.2344, 1105.5313, 14.6328, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 98.8359, 1115.2734, 13.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 96.7031, 1112.6719, 13.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 104.1250, 1115.0000, 13.8906, 0.25);
	RemoveBuildingForPlayer(playerid, 1413, 109.3984, 1115.0000, 13.8906, 0.25);

	//tehnicki
	RemoveBuildingForPlayer(playerid, 1447, -83.4766, 1108.3750, 20.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1447, -78.2344, 1108.3750, 20.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 16740, -152.3203, 1144.0703, 30.3047, 0.25);

	//kamiondzija
	RemoveBuildingForPlayer(playerid, 11431, -827.6172, 1442.4531, 14.6094, 0.25);
	RemoveBuildingForPlayer(playerid, 11478, -814.3125, 1458.8828, 23.7891, 0.25);
	RemoveBuildingForPlayer(playerid, 3243, -817.7656, 1450.3203, 12.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 3243, -804.0703, 1450.2109, 12.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 3243, -812.7813, 1424.3047, 12.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 3243, -797.9766, 1424.2813, 12.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 3243, -789.4922, 1449.8359, 12.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 3243, -784.7109, 1424.3438, 12.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 3243, -777.0859, 1449.6484, 12.9531, 0.25);
	RemoveBuildingForPlayer(playerid, 3243, -771.9844, 1424.1328, 12.9531, 0.25);

	//AUTOSKOLA
	RemoveBuildingForPlayer(playerid, 16146, -97.2344, 1373.2031, 12.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, -104.2109, 1376.5156, 10.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, -102.0391, 1364.3516, 10.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, -105.1406, 1366.4766, 10.4688, 0.25);
	RemoveBuildingForPlayer(playerid, 16778, -79.9375, 1385.5938, 9.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1493, -89.8984, 1377.4219, 9.4609, 0.25);

	//VIP BAZA
	RemoveBuildingForPlayer(playerid, 1280, 1074.9609, -1783.0781, 13.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1065.3125, -1783.0781, 13.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1084.6094, -1783.0781, 13.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 1290, 1080.8438, -1777.4922, 18.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 1280, 1094.2656, -1783.0781, 13.0000, 0.25);
	RemoveBuildingForPlayer(playerid, 647, 1107.6250, -1779.8359, 13.9766, 0.25);

//
	RemoveBuildingForPlayer(playerid, 691, 1208.6484, -2000.0703, 67.3906, 0.25);
	RemoveBuildingForPlayer(playerid, 691, 1205.2734, -1987.8203, 63.7891, 0.25);

	//spawn
	RemoveBuildingForPlayer(playerid, 16672, 86.9063, 1182.6641, 21.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 16735, -49.2422, 1137.7031, 28.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 59.0391, 1181.6797, 16.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 652, 71.1797, 1182.1719, 16.2656, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, 76.9297, 1187.2969, 17.9922, 0.25);
	RemoveBuildingForPlayer(playerid, 16673, 86.9063, 1182.6641, 21.5391, 0.25);

	//POSTA
	RemoveBuildingForPlayer(playerid, 16618, -117.7656, 1079.4609, 22.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, -169.9766, 1027.1953, 19.4453, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, -146.8438, 1093.6953, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 16740, -152.3203, 1144.0703, 30.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 16386, -117.7656, 1079.4609, 22.2188, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, -123.8125, 1079.3984, 19.5000, 0.25);

	//CENTAR
	RemoveBuildingForPlayer(playerid, 16412, -215.2344, 1119.1953, 18.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 16413, -174.2109, 1120.4531, 24.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 16443, -161.1719, 1179.5313, 22.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 16447, -219.3750, 1176.6563, 22.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -228.3828, 1111.8750, 18.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 1352, -201.0469, 1108.8984, 18.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 774, -245.7500, 1111.2813, 17.9453, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, -207.0625, 1102.9375, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, -235.5703, 1102.9375, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, -166.7500, 1107.9688, 18.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 16006, -215.2344, 1119.1953, 18.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -225.3125, 1127.2109, 18.8047, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, -199.6719, 1123.5547, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, -232.7578, 1129.7578, 19.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 1468, -227.4844, 1129.7578, 19.9375, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, -186.4609, 1123.3984, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 16070, -174.2109, 1120.4531, 24.4063, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, -160.2656, 1122.5391, 19.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1692, -161.7656, 1115.8516, 27.2969, 0.25);
	RemoveBuildingForPlayer(playerid, 16760, -178.2031, 1122.3203, 28.8594, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, -186.4609, 1138.4609, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1447, -154.8281, 1137.1406, 20.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1447, -160.0703, 1137.1406, 20.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, -149.8516, 1133.7656, 19.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, -162.1953, 1136.2266, 18.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, -199.6719, 1141.6875, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -232.8125, 1139.4063, 18.8125, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, -164.1719, 1144.0625, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 16740, -152.3203, 1144.0703, 30.3047, 0.25);
	RemoveBuildingForPlayer(playerid, 16739, -297.1016, 1152.9688, 27.0078, 0.25);
	RemoveBuildingForPlayer(playerid, 700, -239.8594, 1148.9609, 19.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, -229.4375, 1156.6250, 17.3672, 0.25);
	RemoveBuildingForPlayer(playerid, 16060, -192.0469, 1147.3906, 17.6953, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, -186.4609, 1158.4219, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, -199.6719, 1158.9219, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, -161.9297, 1162.0781, 18.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, -164.1719, 1153.3125, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, -170.1719, 1169.0547, 19.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, -218.0313, 1164.9219, 19.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, -149.8203, 1164.1094, 19.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, -186.4609, 1173.5625, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1345, -162.0938, 1175.1406, 19.5391, 0.25);
	RemoveBuildingForPlayer(playerid, 769, -232.3594, 1174.4766, 18.5781, 0.25);
	RemoveBuildingForPlayer(playerid, 16064, -161.1719, 1179.5313, 22.4922, 0.25);
	RemoveBuildingForPlayer(playerid, 16065, -219.3750, 1176.6563, 22.1641, 0.25);
	RemoveBuildingForPlayer(playerid, 1692, -174.2422, 1177.8984, 22.7813, 0.25);
	RemoveBuildingForPlayer(playerid, 3286, -230.2031, 1185.7734, 23.3516, 0.25);
	RemoveBuildingForPlayer(playerid, 1352, -184.9766, 1188.0156, 18.7109, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, -159.8594, 1187.8281, 18.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, -160.7734, 1193.6406, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, -133.3594, 1137.5938, 18.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, -136.6328, 1144.0625, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, -136.6328, 1153.3125, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 700, -126.1719, 1159.0703, 19.0156, 0.25);
	RemoveBuildingForPlayer(playerid, 669, -127.0000, 1173.4219, 18.6797, 0.25);
	RemoveBuildingForPlayer(playerid, 1308, -132.0703, 1187.4609, 18.7344, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, -120.4922, 1183.3516, 23.2031, 0.25);
	RemoveBuildingForPlayer(playerid, 1294, -133.2266, 1193.6406, 23.2031, 0.25);

	//PILOT
	RemoveBuildingForPlayer(playerid, 8127, 1278.2969, 1361.4531, 13.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 8252, 1278.0234, 1324.2500, 13.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 8311, 1277.2578, 1206.9219, 12.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 8312, 1277.2578, 1206.9219, 12.8281, 0.25);
	RemoveBuildingForPlayer(playerid, 8253, 1278.0234, 1324.2500, 13.7500, 0.25);
	RemoveBuildingForPlayer(playerid, 8251, 1278.2969, 1361.4531, 13.7500, 0.25);
	
//==============================================================================
	
	SetTimer("TDUpdate", 1500, true);
	SetTimerEx("ClearChat", 300, false, "i", playerid);
	renta[playerid] = -1;

	if(fexist(UserPath(playerid)))
	{
	    INI_ParseFile(UserPath(playerid), "LoadUser_%s", .bExtra=true, .extra=playerid);
	    new reason[128];
	    format(reason, sizeof(reason), "Razlog: {FFFFFF}%s", PlayerInfo[playerid][pBanRazlog]);
	    if(PlayerInfo[playerid][pBan] == 0)
	    {
			LoadingProgressBar[playerid][0] = CreatePlayerProgressBar(playerid, 5.000000, 430.000000, 632.500000, 10.000000, -764862721, 500.000000, 0);
			SetPlayerProgressBarValue(playerid, LoadingProgressBar[playerid][0], 0.0001); 
			ShowPlayerProgressBar(playerid, LoadingProgressBar[playerid][0]);
			pBarTimer[playerid] = SetTimerEx("UpdateLoadingBar", 200, true, "u", playerid);
			pBarValue[playerid] = 0;
			PrikaziLoadingTD(playerid);
			ClearChat(playerid);
		    PlayerInfo[playerid][pNeededRep]=((PlayerInfo[playerid][pLevel]*2+6)*100);
		    //ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "{FFFFFF}Login", str, "Prijavi se", "Odustani");
	    }
	    else
	    {
	        SetTimerEx("BanMessage", 3000, false, "i", playerid);
	    }
	}
	else
 	{
 		new namestring = strfind(GetNameEx(playerid), "_", true);
    	if(namestring == -1)
		{
			SendClientMessage(playerid, COLOR_RED, "[Nick]: {FFFFFF}Ime vam mora biti u formatu: Ime_Prezime");
			SetTimerEx("KickPlayer", 500, false, "i", playerid);
		}
		else
		{
			SakrijLoadingTD(playerid);
			TutorijalProgres[playerid] = 0;
 			UvodProgres[playerid] = 0;
        	ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "{1985A6}Register", "{FFFFFF}Unesite vasu lozinku.\nLozinka mora bit minimalno {1985A6}8 {FFFFFF}karaktera dugacka!", "Registruj se", "Odustani");
        	PlayerTextDrawShow(playerid, REGTDPRVI[playerid]);
        	PlayerTextDrawShow(playerid, REGTD0[playerid]);
        	PlayerTextDrawShow(playerid, REGTD1[playerid]);
        	PlayerTextDrawShow(playerid, REGTD2[playerid]);
        	PlayerTextDrawShow(playerid, REGTD3[playerid]);
        	PlayerTextDrawShow(playerid, REGTD4[playerid]);
        	PlayerTextDrawShow(playerid, REGTD5[playerid]);
        	PlayerTextDrawShow(playerid, REGTD6[playerid]);
        	PlayerTextDrawShow(playerid, REGTD7[playerid]);
        	PlayerTextDrawShow(playerid, REGTD8[playerid]);
        	PlayerTextDrawShow(playerid, REGTD9[playerid]);
        	PlayerTextDrawShow(playerid, REGTD10[playerid]);
        	PlayerTextDrawShow(playerid, REGTD12[playerid]);
        	PlayerTextDrawShow(playerid, REGTD13[playerid]);
        	PlayerTextDrawShow(playerid, REGTD14[playerid]);
        	PlayerTextDrawShow(playerid, REGTD15[playerid]);
        	PlayerTextDrawShow(playerid, REGTD16[playerid]);
        	PlayerTextDrawShow(playerid, REGTD17[playerid]);
		}
 	}
 	TogglePlayerSpectating(playerid, true);
	SetPlayerCameraPos(playerid, 1744.5845, 1446.5759, 41.3498);
	SetPlayerCameraLookAt(playerid, 1743.5801, 1446.5543, 41.0797);
	return 1;
}

public OnPlayerDisconnect(playerid, reason)
{

	if(PlayerInfo[playerid][pAsklist] != 0) { new str[64]; format(str, 64, ASKLISTPATH, PlayerInfo[playerid][pAsklist]); fremove(str); }
	new string[128], pName[MAX_PLAYER_NAME], ip[32], razlog[32];
	GetPlayerIp(playerid, ip, 32);
	GetPlayerName(playerid, pName, sizeof(pName));
	if(reason == 0) { format(razlog, 32, "Crash"); }
	else if(reason == 1) { format(razlog, 32, "Quit"); }
	else if(reason == 2) { format(razlog, 32, "Kick/Ban"); }
	else { format(razlog, 32, "Nepoznato"); }
	format(string, 128, "Igrac {A10202}%s {FFFFFF}se diskonektovao! Razlog: {A10202}%s, {FFFFFF}IP: {A10202}%s", pName, razlog, ip);
	DisconnectPoruka(string);
	if(sneg[playerid] == 1) DestroyPlayerObject(playerid, snegobj[playerid]);
	new rentid;
	rentid = renta[playerid];
	rented[rentid] = 0;
	SetVehicleToRespawn(rentid);
	KillTimer(logintimer[playerid]);
	pUniforma[playerid] = 0;
	pEditujeVozilo[playerid] = 0;
	if(PlayerInfo[playerid][pPosao] == 1)
	{
		pJobProgress[playerid] = 0;
		taz_DisablePlayerCheckpoint(playerid);
	}
	radi[playerid] = 0;
	pJobProgress[playerid] = 0;
	vrstaposla[playerid] = 0;
	pozvanuorg[playerid] = 0;
	DestroyPlayerProgressBar(playerid, LoadingProgressBar[playerid][0]);
	pBarValue[playerid] = 0;
	KillTimer(pBarTimer[playerid]);
	if(pvoz[playerid] != -1)
	{
		new i = pvoz[playerid];
		pJobProgress[playerid] = 0;
		taz_DisablePlayerCheckpoint(playerid);
		TogglePlayerControllable(playerid, 1);
		radi[playerid] = 0;
		DestroyVehicle(i);
		VoziloInfo[i][vID] = 0;
		VoziloInfo[i][vOwnable] = 0;
		VoziloInfo[i][vCena] = 0;
		VoziloInfo[i][vAutoskola] = 0;
		VoziloInfo[i][vPosaoID] = 0;
		VoziloInfo[i][vOrgID] = 0;
		VoziloInfo[i][vRent] = 0;
		VoziloInfo[i][vAdmin] = 0;
		VoziloInfo[i][vVip] = 0;
		VoziloInfo[i][vPromoter] = 0;
		VoziloInfo[i][vBoja] = 0;
		VoziloInfo[i][vBoja2] = 0;
		VoziloInfo[i][vDozvola] = 0;
		VoziloInfo[i][vID] = 0;
		VoziloInfo[i][vX] = 0;
		VoziloInfo[i][vY] = 0;
		VoziloInfo[i][vZ] = 0;
		new vfile[64];
		format(vfile, 64, VEHPATH, i);
		fremove(vfile);
		nenapravljenovozilo[i] = AddStaticVehicle(411, -3122.87036, 1042.63818, 1.69223, 0.0, 1, 1);
		pvoz[playerid] = -1;
	}
	if(ulogovan[playerid] == 1) {SavePlayer(playerid);}
	DestroyVehicle(pSalonVozilo[playerid]);
	ulogovan[playerid] = 0;
	return 1;
}
public OnPlayerEditObject(playerid, playerobject, objectid, response, Float:fX, Float:fY, Float:fZ, Float:fRotX, Float:fRotY, Float:fRotZ)
{
	if(editing[playerid] == 101)
 	{
 	    if(response == EDIT_RESPONSE_FINAL)
	 	{
        	if(creates_container[ playerid ] != 0)
			{
            	KontejnerInfo[ creates_container[ playerid ] ][ koX ] = fX;
            	KontejnerInfo[ creates_container[ playerid ] ][ koY ] = fY;
            	KontejnerInfo[ creates_container[ playerid ] ][ koZ ] = fZ;
            	KontejnerInfo[ creates_container[ playerid ] ][ koRotX ] = fRotX;
            	KontejnerInfo[ creates_container[ playerid ] ][ koRotY ] = fRotY;
            	KontejnerInfo[ creates_container[ playerid ] ][ koRotZ ] = fRotZ;
            	DestroyObject(k_object[ creates_container[ playerid ] ]);
            	k_object[ creates_container[ playerid ] ] = CreateObject(3035, fX,fY,fZ, fRotX,fRotY,fRotZ, 300.0);
            	kLabel[ creates_container[ playerid ] ] = Create3DTextLabel("{1985A6}[ {FFFFFF}KONTEJNER {1985A6}]\n{FFFFFF}/kontejner\n/skupisirovine", 0x008080FF, fX,fY,fZ, 10.0, 0, 0);
            	save_container(creates_container[ playerid ]);
            	SendClientMessage(playerid, -1, "{0070D0}[ KONTEJNER FINISH ]: {FFFFFF}Zavrsili ste kreiranje kontejnera.");
            	editing[playerid] = 0;
        	}
    	}
    	if(response == EDIT_RESPONSE_CANCEL)
	 	{
    		KontejnerInfo[ creates_container[ playerid ] ][ koX ] = fX;
	     	KontejnerInfo[ creates_container[ playerid ] ][ koY ] = fY;
	     	KontejnerInfo[ creates_container[ playerid ] ][ koZ ] = fZ;
	     	KontejnerInfo[ creates_container[ playerid ] ][ koRotX ] = fRotX;
	     	KontejnerInfo[ creates_container[ playerid ] ][ koRotY ] = fRotY;
	     	KontejnerInfo[ creates_container[ playerid ] ][ koRotZ ] = fRotZ;
	     	DestroyObject(k_object[ creates_container[ playerid ] ]);
	     	k_object[ creates_container[ playerid ] ] = CreateObject(3035, fX,fY,fZ, fRotX,fRotY,fRotZ, 300.0);
	      	kLabel[ creates_container[ playerid ] ] = Create3DTextLabel("{0070D0}(( KONTEJNER ))\n|| - {FFFFFF}/kontejner {0070D0}- ||", 0x008080FF, fX,fY,fZ, 10.0, 0, 0);
	      	save_container(creates_container[ playerid ]);
	      	SendClientMessage(playerid, -1, "{0070D0}[ KONTEJNER FINISH ]: {FFFFFF}Zavrsili ste kreiranje kontejnera.");
	      	editing[playerid] = 0;
   		}
 	}
	if(editing[playerid] == 1)
	{
	    if(gatefaza[playerid] == 1)
	    {
	        if(response == EDIT_RESPONSE_FINAL)
	        {
	            if(editagate[playerid] != 0)
	            {
	                new i = editagate[playerid];
	                GateInfo[i][gX] = fX;
	                GateInfo[i][gY] = fY;
	                GateInfo[i][gZ] = fZ;
	                GateInfo[i][gRX] = fRotX;
	                GateInfo[i][gRY] = fRotY;
	                GateInfo[i][gRZ] = fRotZ;
                    GateInfo[i][gObjID] = editagateid[playerid];
                    SaveGate(i);
                    SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Uspesno ste sacuvali poziiju zatvorenog gate!");
                    editing[playerid] = 0;
                    gatefaza[playerid] = 0;
                    SPD(playerid, DIALOG_GATEPERM, DIALOG_STYLE_LIST, "{1985A6}Permisije", "{FFFFFF}1 - {1985A6}Svi igraci\n{FFFFFF}2 - {1985A6}Samo Promoteri\n{FFFFFF}3 - {1985A6}Samo VIP\n{FFFFFF}4 - {1985A6}Organizacija\n{FFFFFF}5 - {1985A6}Helper\n{FFFFFF}6 - {1985A6}Admin\n{FFFFFF}7 - {1985A6}Naplatna Rampa", "Potvrdi", "");
					return 1;
				}
	        }
	        if(response == EDIT_RESPONSE_CANCEL)
	        {
	            if(editagate[playerid] != 0)
	            {
	                new i = editagate[playerid];
	                GateInfo[i][gX] = fX;
	                GateInfo[i][gY] = fY;
	                GateInfo[i][gZ] = fZ;
	                GateInfo[i][gRX] = fRotX;
	                GateInfo[i][gRY] = fRotY;
	                GateInfo[i][gRZ] = fRotZ;
                    GateInfo[i][gObjID] = editagateid[playerid];
                    SaveGate(i);
                    SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Uspesno ste sacuvali poziiju zatvorenog gate!");
                    editing[playerid] = 0;
                    gatefaza[playerid] = 0;
                    SPD(playerid, DIALOG_GATEPERM, DIALOG_STYLE_LIST, "{1985A6}Permisije", "{FFFFFF}1 - {1985A6}Svi igraci\n{FFFFFF}2 - {1985A6}Samo Promoteri\n{FFFFFF}3 - {1985A6}Samo VIP\n{FFFFFF}4 - {1985A6}Organizacija\n{FFFFFF}5 - {1985A6}Helper\n{FFFFFF}6 - {1985A6}Admin\n{FFFFFF}7 - {1985A6}Naplatna Rampa", "Potvrdi", "");
                    return 1;
				}
	        }
	    }
	}
	if(editing[playerid] == 2)
	{
	    if(gatefaza[playerid] == 2)
	    {
	        if(response == EDIT_RESPONSE_FINAL)
	        {
	            if(editagate[playerid] != 0)
	            {
	                new i = editagate[playerid], gfile[64];
	                format(gfile, sizeof(gfile), GATEPATH, i);
	                GateInfo[i][gOX] = fX;
	                GateInfo[i][gOY] = fY;
	                GateInfo[i][gOZ] = fZ;
	                GateInfo[i][gORX] = fRotX;
	                GateInfo[i][gORY] = fRotY;
	                GateInfo[i][gORZ] = fRotZ;
                    DestroyObject(gateObj[i]);
                    SaveGate(i);
                    INI_ParseFile(gfile, "LoadGates", .bExtra = true, .extra = i);
                    gate[i] = CreateDynamicObject(GateInfo[i][gObjID], GateInfo[i][gX], GateInfo[i][gY], GateInfo[i][gZ], GateInfo[i][gRX], GateInfo[i][gRY], GateInfo[i][gRZ]);
                    SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Uspesno ste napravili gate!");
                    editing[playerid] = 0;
                    gatefaza[playerid] = 0;
                    editagate[playerid] = 0;
                    editagateid[playerid] = 0;
                    return 1;
	            }
	        }
	        if(response == EDIT_RESPONSE_CANCEL)
	        {
	            if(editagate[playerid] != 0)
	            {
	                new i = editagate[playerid], gfile[64];
	                format(gfile, sizeof(gfile), GATEPATH, i);
	                GateInfo[i][gOX] = fX;
	                GateInfo[i][gOY] = fY;
	                GateInfo[i][gOZ] = fZ;
	                GateInfo[i][gORX] = fRotX;
	                GateInfo[i][gORY] = fRotY;
	                GateInfo[i][gORZ] = fRotZ;
                    DestroyObject(gateObj[i]);
                    SaveGate(i);
                    INI_ParseFile(gfile, "LoadGates", .bExtra = true, .extra = i);
                    gate[i] = CreateDynamicObject(GateInfo[i][gObjID], GateInfo[i][gX], GateInfo[i][gY], GateInfo[i][gZ], GateInfo[i][gRX], GateInfo[i][gRY], GateInfo[i][gRZ]);
                    SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Uspesno ste napravili gate!");
                    editing[playerid] = 0;
                    gatefaza[playerid] = 0;
                    editagate[playerid] = 0;
                    editagateid[playerid] = 0;
                    return 1;
             	}
	        }
	    }
	}
	return 1;
}

public OnPlayerSpawn(playerid)
{
	ShowPlayerMarkers(0);
	PlayerInfo[playerid][pNeededRep]=((PlayerInfo[playerid][pLevel]*2+6)*100);
	SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
	SetCameraBehindPlayer(playerid);
	new RandomPoruka = random(sizeof(NasumicnePoruke));
	TextDrawSetString(Textdraw9, NasumicnePoruke[RandomPoruka]);
	pretrezujeKontejner[playerid] = 0;
	if(PlayerInfo[playerid][pOrg] != 0)
	{
		if(PlayerInfo[playerid][pRank] == 1)
		{
			SetPlayerSkin(playerid, OrgInfo[PlayerInfo[playerid][pOrg]][orgRank1Skin]);
		}
		else if(PlayerInfo[playerid][pRank] == 2)
		{
			SetPlayerSkin(playerid, OrgInfo[PlayerInfo[playerid][pOrg]][orgRank2Skin]);
		}
		else if(PlayerInfo[playerid][pRank] == 3)
		{
			SetPlayerSkin(playerid, OrgInfo[PlayerInfo[playerid][pOrg]][orgRank3Skin]);
		}
		else if(PlayerInfo[playerid][pRank] == 4)
		{
			SetPlayerSkin(playerid, OrgInfo[PlayerInfo[playerid][pOrg]][orgRank4Skin]);
		}
		else if(PlayerInfo[playerid][pRank] == 5)
		{
			SetPlayerSkin(playerid, OrgInfo[PlayerInfo[playerid][pOrg]][orgRank5Skin]);
		}
		else if(PlayerInfo[playerid][pRank] == 6)
		{
			SetPlayerSkin(playerid, OrgInfo[PlayerInfo[playerid][pOrg]][orgRank6Skin]);
		}
		else if(PlayerInfo[playerid][pRank] == 7)
		{
			SetPlayerSkin(playerid, OrgInfo[PlayerInfo[playerid][pOrg]][orgRank7Skin]);
		}
		if(PlayerInfo[playerid][pLeader] != 0)
		{
			SetPlayerSkin(playerid, OrgInfo[PlayerInfo[playerid][pOrg]][orgLeaderSkin]);
		}
	}
	TogglePlayerControllable(playerid, 1);
	pUniforma[playerid] = 0;
	GetPlayerPos(playerid, oldX[playerid], oldY[playerid], oldZ[playerid]);
	GetPlayerPos(playerid, newX[playerid], newY[playerid], newZ[playerid]);
	ppostokens[playerid] = 5;
	PrikaziTD(playerid);

	new ver[64];
	format(ver, 64, "%s", VERZIJA_SKRIPTE);
	if(strcmp(PlayerInfo[playerid][pVerzija], ver))
	{
		new updateinfo[2048], str[128];
		PlayerInfo[playerid][pVerzija] = ver;
		format(ver, 64, "{DAA520}Update - %s", VERZIJA_SKRIPTE);
		format(str, 128, "{FFFFFF}Novi {DAA520}update {FFFFFF}je na serveru!\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}- Datum: {FFFFFF}05.02.2025. {DAA520}Vreme: {FFFFFF}04:20\n\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}- {FFFFFF}Novi alpha update donosi bugfix-eve i nove sisteme\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}- {FFFFFF}Popravljen bug unosenja pogresne komande ili id-a\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}- {FFFFFF}Dodati pickupi na izlaze iz interiora\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}- {FFFFFF}Izmenjene warning i jos neke boje na dijalozima\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}- {FFFFFF}Dodata prodavnica tehnike u kojoj mozete kupiti mobilne\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}  {FFFFFF}telefone, sim kartice, laptopove, itd\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}- {FFFFFF}Dodata smrt igraca {DAA520}(povredjivanje, komande za bolnicu)\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}- {FFFFFF}Komanda {DAA520}/changename {FFFFFF}dovedena u funkciju\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}- {FFFFFF}Dodati {DAA520}/g i /t {FFFFFF}chatovi sa rankovima\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}- {FFFFFF}Dodata {DAA520}/gethere {FFFFFF}komanda\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}- Loading Screen {FFFFFF}doveden u funkciju\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}- {FFFFFF}Podaci na {DAA520}Loading Screen-u {FFFFFF}sinhronizovani\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}- {FFFFFF}Dodato cuvanje tuniranja vozila\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}- {FFFFFF}Dodata asklista: {DAA520}/askq, /asklist, /odgovor {FFFFFF}komande\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}- {FFFFFF}Dodat report sistem: {DAA520}/report {FFFFFF}komanda\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}- {FFFFFF}Na komandi {DAA520}/goto {FFFFFF}ispravljene koordinate portovanja\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}- {FFFFFF}Dadat {DAA520}/radio {FFFFFF}koji daje listu radio stanica\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}- {FFFFFF}Dodata komanda {DAA520}/cc {FFFFFF}za ciscenje chat-a\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}- {FFFFFF}Fixani bug gde se ne cuvaju skinovi igraca\n\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}- {FFFFFF}To bi bilo sve za ovaj alpha update, uzivajte u igri! :D\n");
		strcat(updateinfo, str);
		format(str, 128, "{DAA520}- {FFFFFF}Za vise informacija posetite nasu stranicu: {DAA520}www.pc-rp.com\n");
		strcat(updateinfo, str);
		ShowPlayerDialog(playerid, DIALOG_UPDATE, DIALOG_STYLE_MSGBOX, ver, updateinfo, "Potvrdi", "");
		SavePlayer(playerid);
	}
	PlayerTextDrawSetPreviewModel(playerid, Textdrawp6[playerid], GetPlayerSkin(playerid));
	PlayerTextDrawShow(playerid, Textdrawp6[playerid]);
	SetTimerEx("UpdateTDSkin", 3000, false, "u", playerid);
	return 1;
}

CMD:ticket(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pOrg] != 1 && PlayerInfo[playerid][pOrg] != 2) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	if(pDuty[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na duznosti!");
	new id, razlog[64], name[MAX_PLAYER_NAME], pName2[MAX_PLAYER_NAME], str[180], Float:X, Float:Y, Float:Z;
	if(sscanf(params, "us[64]", id, razlog)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/ticket [id] [razlog]");
	if(id == playerid) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete sebi!");
	if(ulogovan[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ovaj igrac nije ulogovan!");
	GetPlayerPos(id, X,Y,Z);
	if(!IsPlayerInRangeOfPoint(playerid, 10.0, X,Y,Z)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste blizu ovog igraca!");
	PlayerInfo[id][pTickets]++;
	if(PlayerInfo[id][pTickets] >= 5)
	{
		if(IsPlayerInAnyVehicle(playerid)) { RemovePlayerFromVehicle(playerid); }
		PlayerInfo[id][pBL] = 0;
		SCM(id, COLOR_RED, "Nakupili ste 5 kazni, oduzeta vam je dozvola za voznju!");
	}
	else
	{
		SCM(id, COLOR_RED, "Policajac vam je napisao kaznu, ukoliko nakupite 5 kazni gubite dozvolu za voznju!");
	}
	SavePlayer(id);
	GetPlayerName(playerid, name, sizeof(name));
	GetPlayerName(id, pName2, sizeof(pName2));
	format(str, sizeof(str), "{CF80A9}* %s pise kaznu gradjaninu/ki.", name);
	SendMes(20.0, playerid, COLOR_RED, str);
	SCM(playerid, -1, "{DAA520}[Hapsenje]: {FFFFFF}Uspesno ste napisali kaznu igracu.");
	format(str, 180, "%s {BF0000}je dobio ticket za saobracaj, razlog: {FFFFFF}%s", pName2, razlog);
	SCMTA(-1, str);
	return 1;
}
CMD:uhapsi(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pOrg] != 1 && PlayerInfo[playerid][pOrg] != 2) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	if(pDuty[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na duznosti!");
	new id;
	if(sscanf(params, "u", id)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/uhapsi [id]");
	if(!IsPlayerInRangeOfPoint(playerid, 4.0, -220.9871,987.7327,19.6181) && !IsPlayerInRangeOfPoint(playerid, 4.0, 1357.2274,190.7570,19.5500)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na mestu za hapsenje!");
	if(id == playerid) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete sebe!");
	if(pWantedLevel[id] <= 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije trazen!");
	if(pCuffed[id] <= 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije vezan lisicama!");
	if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(id)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije u istom vozilu u kom ste vi!");
	if(IsPlayerInRangeOfPoint(playerid, 4.0, -220.9871,987.7327,19.6181))
	{
		ZatvoriUJail(id, 0, pWantedLevel[id] * 300);
	}
	else
	{
		ZatvoriUJail(id, 1, pWantedLevel[id] * 300);
	}
	pWantedLevel[id] = 0;
	KillTimer(pWantedTimer[id]);
	PlayerInfo[playerid][pUhapsio]++;
	SavePlayer(playerid);
	SavePlayer(id);
	new str[128], name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	format(str, sizeof(str), "{CF80A9}* %s hapsi osumnjicenog.", name);
	SendMes(20.0, playerid, COLOR_RED, str);
	SCM(playerid, -1, "{DAA520}[Hapsenje]: {FFFFFF}Uspesno ste uhapsili osumnjicenog gradjanina/ku, dobili ste $2000 kao nagradu.");
	KillTimer(pCuffTimer[id]);
	taz_GivePlayerMoney(playerid, 2000);
	return 1;
}

//-220.9871,987.7327,19.6181, 10.0
//1357.2274,190.7570,19.5500, 10.0

CMD:track(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pOrg] != 1 && PlayerInfo[playerid][pOrg] != 2) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	if(pDuty[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na duznosti!");
	new id;
	if(sscanf(params, "u", id)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/track [id]");
	if(id == playerid) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete sebe!");
	if(pWantedLevel[id] <= 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije trazen!");
	if(pTracking[playerid] != -1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Vec nekoga trackujete! /trackoff");
	pTrackTimer[playerid] = SetTimerEx("Tracking", 100, true, "ii", id, playerid);
	pTracking[playerid] = id;
	new str[128], name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	format(str, sizeof(str), "{CF80A9}* %s je ukljucio uredjaj za pracenje osumnjicenih.", name);
	SendMes(20.0, playerid, COLOR_RED, str);
	return 1;
}
CMD:trackoff(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pOrg] != 1 && PlayerInfo[playerid][pOrg] != 2) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	if(pDuty[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na duznosti!");
	if(pTracking[playerid] == -1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne trackujete nikoga!");
	KillTimer(pTrackTimer[playerid]);
	pTracking[playerid] = -1;
	new str[128], name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	format(str, sizeof(str), "{CF80A9}* %s je iskljucio uredjaj za pracenje osumnjicenih.", name);
	SendMes(20.0, playerid, COLOR_RED, str);
	return 1;
}
CMD:drag(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pOrg] != 1 && PlayerInfo[playerid][pOrg] != 2 && PlayerInfo[playerid][pOrg] != 3) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	if(pDuty[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na duznosti!");
	new id, Float:X, Float:Y, Float:Z;
	if(sscanf(params, "u", id)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/drag [id]");
	if(id == playerid) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete sebe!");
	GetPlayerPos(id, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 4.0, X, Y, Z)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste u blizini tog igraca!");
	if(pDragging[playerid] != -1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Vec vucete nekoga! /pusti");
	if(pDragged[id] != -1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Neko vec vuce tog igraca!");
	if((PlayerInfo[playerid][pOrg] == 1 || PlayerInfo[playerid][pOrg] == 2) && pCuffed[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije vezan lisicama!");
	if(PlayerInfo[playerid][pOrg] == 3 && pDeathTimer[id] <= 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije povredjen!");
	pDragTimer[id] = SetTimerEx("Vucenje", 300, true, "ii", id, playerid);
	pDragging[playerid] = id;
	pDragged[id] = playerid;
	new str[128], name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	format(str, sizeof(str), "{CF80A9}* %s vuce gradjanina/ku.", name);
	SendMes(20.0, playerid, COLOR_RED, str);
	return 1;
}
CMD:pusti(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pOrg] != 1 && PlayerInfo[playerid][pOrg] != 2 && PlayerInfo[playerid][pOrg] != 3) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	if(pDuty[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na duznosti!");
	if(pDragging[playerid] == -1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne vucete nikoga!");
	pDragged[pDragging[playerid]] = -1;
	KillTimer(pDragTimer[pDragging[playerid]]);
	pDragging[playerid] = -1;
	new str[128], name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	format(str, sizeof(str), "{CF80A9}* %s je pustio gradjanina/ku.", name);
	SendMes(20.0, playerid, COLOR_RED, str);
	return 1;
}
CMD:ubaci(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pOrg] != 1 && PlayerInfo[playerid][pOrg] != 2 && PlayerInfo[playerid][pOrg] != 3) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	if(pDuty[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na duznosti!");
	new id, sediste, Float:X, Float:Y, Float:Z;
	if(sscanf(params, "ui", id, sediste)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/ubaci [id] [sediste]");
	if(id == playerid) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete sebe!");
	GetPlayerPos(id, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 4.0, X, Y, Z)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste u blizini tog igraca!");
	if(PlayerInfo[playerid][pOrg] == 1 || PlayerInfo[playerid][pOrg] == 2)
	{
		if(pCuffed[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nema stavljene lisice!");
		if(VoziloInfo[GetPlayerVehicleID(playerid)][vOrgID] != 1 && VoziloInfo[GetPlayerVehicleID(playerid)][vOrgID] != 2) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste u policijskom vozilu!");
		if(sediste < 1 || sediste > 3) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Neispravno sediste (mora biti broj od 1 do 3)!");
		PutPlayerInVehicle(id, GetPlayerVehicleID(playerid), sediste);
		SCM(playerid, -1, "Uspesno ste ubacili gradjanina/ku u vase vozilo.");
		new str[128], name[MAX_PLAYER_NAME];
		GetPlayerName(playerid, name, sizeof(name));
		format(str, sizeof(str), "{CF80A9}* %s ubacuje gradjanina/ku u vozilo.", name);
		SendMes(20.0, playerid, COLOR_RED, str);
	}
	else
	{
		if(pDeathSecs[id] <= 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije povredjen!");
		if(VoziloInfo[GetPlayerVehicleID(playerid)][vOrgID] != 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste u bolnickom vozilu!");
		if(sediste < 1 || sediste > 3) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Neispravno sediste (mora biti broj od 1 do 3)!");
		PutPlayerInVehicle(playerid, GetPlayerVehicleID(playerid), sediste);
		SCM(playerid, -1, "Uspesno ste ubacili gradjanina/ku u vase vozilo.");
		new str[128], name[MAX_PLAYER_NAME];
		GetPlayerName(playerid, name, sizeof(name));
		format(str, sizeof(str), "{CF80A9}* %s ubacuje gradjanina/ku u vozilo.", name);
		SendMes(20.0, playerid, COLOR_RED, str);
	}
	return 1;
}
CMD:izbaci(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pOrg] != 1 && PlayerInfo[playerid][pOrg] != 2 && PlayerInfo[playerid][pOrg] != 3) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	if(pDuty[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na duznosti!");
	new id;
	if(sscanf(params, "u", id)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/izbaci [id]");
	if(id == playerid) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete sebe!");
	if(GetPlayerVehicleID(playerid) != GetPlayerVehicleID(id)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste u istom vozilu!");
	SCM(playerid, -1, "Uspesno ste izbacili gradjanina/ku iz vaseg vozila.");
	new str[128], name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	format(str, sizeof(str), "{CF80A9}* %s izbacuje gradjanina/ku iz vozila.", name);
	SendMes(20.0, playerid, COLOR_RED, str);
	return 1;
}
CMD:cuff(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pOrg] != 1 && PlayerInfo[playerid][pOrg] != 2) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	if(pDuty[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na duznosti!");
	new id, Float:X, Float:Y, Float:Z;
	if(sscanf(params, "u", id)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/cuff [id]");
	if(id == playerid) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete sebi!");
	GetPlayerPos(id, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, X, Y, Z)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste u blizini tog igraca!");
	if(pCuffed[id] != 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac vec ima stavljene lisice!");
	if(pTazed[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije osamucen tazerom!");
	TogglePlayerControllable(id, 0);
	pCuffed[id] = 1;
	ClearAnimations(id);
	SetPlayerSpecialAction(id, SPECIAL_ACTION_NONE);
	SetPlayerSpecialAction(id, SPECIAL_ACTION_CUFFED);
	GameTextForPlayer(id, "~r~Policajac vam je stavio lisice\nOslobodicete se lisica za ~w~5 minuta", 6000, 3);
	pCuffTimer[id] = SetTimerEx("OslobodiSe", 300000, false, "i", playerid);
	new str[128], name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	format(str, sizeof(str), "{CF80A9}* %s stavlja lisice gradjaninu.", name);
	SendMes(20.0, playerid, COLOR_RED, str);
	SCM(playerid, -1, "Uspesno ste vezali gradjanina/ku.");
	return 1;
}
CMD:uncuff(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pOrg] != 1 && PlayerInfo[playerid][pOrg] != 2) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	if(pDuty[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na duznosti!");
	new id, Float:X, Float:Y, Float:Z;
	if(sscanf(params, "u", id)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/uncuff [id]");
	if(id == playerid) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete sebi!");
	GetPlayerPos(id, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, X, Y, Z)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste u blizini tog igraca!");
	if(pCuffed[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nema stavljene lisice!");
	TogglePlayerControllable(id, 1);
	pCuffed[id] = 0;
	ClearAnimations(id);
	SetPlayerSpecialAction(id, SPECIAL_ACTION_NONE);
	GameTextForPlayer(id, "~g~Policajac vam je skinuo lisice", 3000, 3);
	new str[128], name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	format(str, sizeof(str), "{CF80A9}* %s skida lisice gradjaninu.", name);
	SendMes(20.0, playerid, COLOR_RED, str);
	SCM(playerid, -1, "Uspesno ste odvezali gradjanina/ku.");
	KillTimer(pCuffTimer[playerid]);
	return 1;
}
CMD:tazer(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(pDuty[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na duznosti!");
	if(PlayerInfo[playerid][pOrg] != 1 && PlayerInfo[playerid][pOrg] != 2) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	if(pTazer[playerid] == 0)
	{
		new str[128], name[MAX_PLAYER_NAME];
		GetPlayerName(playerid, name, sizeof(name));
		format(str, sizeof(str), "{CF80A9}* %s vadi tazer.", name);
		SendMes(20.0, playerid, COLOR_RED, str);
		taz_GivePlayerWeapon(playerid, 23, 1);
		pTazer[playerid] = 1;
	}
	else
	{
		new str[128], name[MAX_PLAYER_NAME];
		GetPlayerName(playerid, name, sizeof(name));
		format(str, sizeof(str), "{CF80A9}* %s vraca tazer.", name);
		SendMes(20.0, playerid, COLOR_RED, str);
		SetPlayerAmmo(playerid, WEAPON_SILENCED, 0);
		pTazer[playerid] = 0;
	}
	return 1;
}

CMD:proveripojas(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pOrg] != 1 && PlayerInfo[playerid][pOrg] != 2) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	if(pDuty[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na duznosti!");
	new id, Float:X, Float:Y, Float:Z;
	if(sscanf(params, "u", id)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/proveripojas [id]");
	if(id == playerid) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete sebi!");
	GetPlayerPos(id, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 4.0, X, Y, Z)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste blizu ovog igraca!");
	if(pPojas[id] == 0) SCM(playerid, -1, "Igrac nije vezao pojas!");
	else SCM(playerid, -1, "Igrac je vezao pojas!");
	new str[128], name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	format(str, sizeof(str), "{CF80A9}* %s proverava pojas igracu.", name);
	SendMes(20.0, playerid, COLOR_RED, str);
	return 1;
}

CMD:osumnjiceni(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pOrg] != 1 && PlayerInfo[playerid][pOrg] != 2) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	if(pDuty[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na duznosti!");
	new string[2000], str[128], pName[MAX_PLAYER_NAME], br=0;
	for(new i = 1; i < MAX_PLAYERS; i++)
	{
		if(pWantedLevel[i] > 0)
		{
			GetPlayerName(i, pName, sizeof(pName));
			format(str, sizeof(str), "{DAA520}[{FFFFFF}%d{DAA520}] {FFFFFF}%s {DAA520}%dWL\n", i, pName, pWantedLevel[i]);
			strcat(string, str, sizeof(string));
			br++;
		}
	}
	if(br == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Trenutno nema osumnjicenih!");
	ShowPlayerDialog(playerid, DIALOG_OSUMNJICENI, DIALOG_STYLE_MSGBOX, "{DAA520}Lista osumnjicenih", string, "{DAA520}OK", "");
	return 1;
}

CMD:skiniwl(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pOrg] != 1 && PlayerInfo[playerid][pOrg] != 2) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	if(pDuty[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na duznosti!");
	new id, str[180], pName[MAX_PLAYER_NAME];
	if(sscanf(params, "i", id)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/skiniwl [id]");
	if(id == playerid) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete sebi!");
	if(ulogovan[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije ulogovan!"); 
	if(pWantedLevel[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije trazen!"); 
	GetPlayerName(playerid, pName, sizeof(pName));
	pWantedLevel[id] = 0;
	KillTimer(pWantedTimer[id]);
	format(str, 180, "{DAA520}[Wanted]: {FFFFFF}Policajac {DAA520}%s {FFFFFF}vam je skinuo wanted level, vise niste trazeni.", pName);
	SCM(id, -1, str);
	SCM(playerid, -1, "{DAA520}[Wanted]: {FFFFFF}Uspesno ste skinuli wanted level gradjaninu.");
	return 1;
}

CMD:osumnjici(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pOrg] != 1 && PlayerInfo[playerid][pOrg] != 2) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	if(pDuty[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na duznosti!");
	new id;
	if(sscanf(params, "i", id)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/osumnjici [id]");
	if(id == playerid) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete sebe!");
	if(ulogovan[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije ulogovan!"); 
	if(PlayerInfo[id][pOrg] == 1 || PlayerInfo[id][pOrg] == 2) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete policajca!");
	if(PlayerInfo[id][pAdmin] > 0 || PlayerInfo[id][pHelper] > 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete admina/helpera!");
	ShowPlayerDialog(playerid, DIALOG_OSUMNJICI, DIALOG_STYLE_TABLIST_HEADERS, "{DAA520}Osumnjici", "{FFFFFF}Prekrsaj\t{D9D218}Nivo Trazenosti\n{FFFFFF}Mokrenje na javnom mestu\t{D9D218}1\n{FFFFFF}Vozenje pod uticajem alkohola\t{D9D218}1\n{FFFFFF}Fizicki napad na gradjana/ku\t{D9D218}2\n{FFFFFF}Bezanje od saobracajca\t{D9D218}2\n{FFFFFF}Pretnje/vredjanje policije\t{D9D218}2\n{FFFFFF}Bezanje od rutinske kontrole\t{D9D218}3\n{FFFFFF}Napad na sluzbeno lice\t{D9D218}3\n{FFFFFF}Ometanje policije u radu\t{D9D218}3\n{FFFFFF}Dzeparenje\t{D9D218}3\n{FFFFFF}Pokusaj pljacke\t{D9D218}3\n{FFFFFF}Prvostepeno ubistvo\t{D9D218}4\n{FFFFFF}Ubistvo vozilom/iz vozila\t{D9D218}4\n{FFFFFF}Podmicivanje\t{D9D218}4\n{FFFFFF}Kidnapovanje\t{D9D218}4\n{FFFFFF}Oruzje bez dozvole\t{D9D218}4\n{FFFFFF}Posedovanje narkotika\t{D9D218}5\n{FFFFFF}Oruzana pljacka\t{D9D218}5\n{FFFFFF}Oruzani napad na sluzbena lica\t{D9D218}5\n{FFFFFF}Saucesnik (manji prekrsaju)\t{D9D218}2\n{FFFFFF}Saucesnik (pljacke i oruzani napadi)\t{D9D218}4\n{FFFFFF}Produzivanje WL (samo ako je igrac vec na putu do zatvora)\t{D9D218}1", "{DAA520}Izaberi", "{DAA520}Odustani");
	pSumnjicenje[playerid] = id;
	//Mokrenje na javnom mestu 			1
	//Vozenje pod dejsatvom alkohola 	1
	//Fizicki napad na gradjana/ku 		2
	//Bezanje od saobracajca 			2
	//Pretnje/vredjanje policije 		2
	//Bezanje od rutinske kontrole 		3
	//Napad na sluzbeno lice 			3
	//Ometanje policije u radu			3
	//Pokusaj pljacke					3
	//Prvostepeno ubistvo				4
	//Ubistvo vozilom/iz vozila			4
	//Podmicivanje						4
	//Kidnapovanje						4
	//Oruzje bez dozvole 				4
	//Posedovanje narkotika 			5
	//Oruzana pljacka 					5
	//Oruzani napad na sluzbena lica 	5
	return 1;
}

CMD:wlist(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pOrg] != 1 && PlayerInfo[playerid][pOrg] != 2) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	ShowPlayerDialog(playerid, DIALOG_WLIST, DIALOG_STYLE_TABLIST_HEADERS, "{DAA520}Wanted level lista", "{FFFFFF}Prekrsaj\t{D9D218}Nivo Trazenosti\n{FFFFFF}Mokrenje na javnom mestu\t{D9D218}1\n{FFFFFF}Vozenje pod uticajem alkohola\t{D9D218}1\n{FFFFFF}Fizicki napad na gradjana/ku\t{D9D218}2\n{FFFFFF}Bezanje od saobracajca\t{D9D218}2\n{FFFFFF}Pretnje/vredjanje policije\t{D9D218}2\n{FFFFFF}Bezanje od rutinske kontrole\t{D9D218}3\n{FFFFFF}Napad na sluzbeno lice\t{D9D218}3\n{FFFFFF}Ometanje policije u radu\t{D9D218}3\n{FFFFFF}Dzeparenje\t{D9D218}3\n{FFFFFF}Pokusaj pljacke\t{D9D218}3\n{FFFFFF}Prvostepeno ubistvo\t{D9D218}4\n{FFFFFF}Ubistvo vozilom/iz vozila\t{D9D218}4\n{FFFFFF}Podmicivanje\t{D9D218}4\n{FFFFFF}Kidnapovanje\t{D9D218}4\n{FFFFFF}Oruzje bez dozvole\t{D9D218}4\n{FFFFFF}Posedovanje narkotika\t{D9D218}5\n{FFFFFF}Oruzana pljacka\t{D9D218}5\n{FFFFFF}Oruzani napad na sluzbena lica\t{D9D218}5\n{FFFFFF}Saucesnik (manji prekrsaju)\t{D9D218}2\n{FFFFFF}Saucesnik (pljacke i oruzani napadi)\t{D9D218}4\n{FFFFFF}Produzivanje WL (samo ako je igrac vec na putu do zatvora)\t{D9D218}1", "{DAA520}OK", "");
	return 1;
}

CMD:oprema(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pOrg] != 1 && PlayerInfo[playerid][pOrg] != 2) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	if(pDuty[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na duznosti!");
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, 255.0708,77.1883,1003.6406) && !IsPlayerInRangeOfPoint(playerid, 2.0, 237.9564,72.9204,1005.0391)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na mestu za uzimanje/ostavljanje opreme!");
	ShowPlayerDialog(playerid, DIALOG_OPREMA, DIALOG_STYLE_TABLIST_HEADERS, "{DAA520}Izaberite opremu", "{FFFFFF}Tip opreme\t{C4A95C}Sadrzaj\t{67DB6B}Svrha\n{FFFFFF}Skidanje Opreme\t{C4A95C}Vracate Opremu\t{67DB6B}-\n{FFFFFF}Saobracajac\t{C4A95C}Pendrek, Colt 45, Tazer\t{67DB6B}Patroliranje\n{FFFFFF}Standardna Oprema\t{C4A95C}Pendrek, Colt 45, M4, Tazer\t{67DB6B}Hapsenje osumnjicenih\n{FFFFFF}Interventna Oprema\t{C4A95C}Pendrek, Deagle, M4, Tazer\t{67DB6B}Sprecavanje Pljacke\n{FFFFFF}Snajperska Oprema\t{C4A95C}Pendrek, Deagle, Sniper, Tazer\t{67DB6B}Sprecavanje Pljacke", "{DAA520}Izaberi", "{DAA520}Odustani");
	return 1;
}

CMD:megafon(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	new txt[128], str[256], name[64], rank[64];
	if((PlayerInfo[playerid][pOrg] != 1 && PlayerInfo[playerid][pOrg] != 2) || PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	if(pDuty[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na duznosti!");
	if(sscanf(params, "s[128]", txt)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/megafon [text]");
	GetPlayerName(playerid, name, sizeof(name));
	if(PlayerInfo[playerid][pRank] == 1) format(rank, 64, "%", OrgInfo[PlayerInfo[playerid][pOrg]][orgRank1]);
	else if(PlayerInfo[playerid][pRank] == 2) format(rank, 64, "%", OrgInfo[PlayerInfo[playerid][pOrg]][orgRank2]);
	else if(PlayerInfo[playerid][pRank] == 3) format(rank, 64, "%", OrgInfo[PlayerInfo[playerid][pOrg]][orgRank3]);
	else if(PlayerInfo[playerid][pRank] == 4) format(rank, 64, "%", OrgInfo[PlayerInfo[playerid][pOrg]][orgRank4]);
	else if(PlayerInfo[playerid][pRank] == 5) format(rank, 64, "%", OrgInfo[PlayerInfo[playerid][pOrg]][orgRank5]);
	else if(PlayerInfo[playerid][pRank] == 6) format(rank, 64, "%", OrgInfo[PlayerInfo[playerid][pOrg]][orgRank6]);
	else if(PlayerInfo[playerid][pRank] == 7) format(rank, 64, "%", OrgInfo[PlayerInfo[playerid][pOrg]][orgRank7]);
	if(PlayerInfo[playerid][pLeader] != 0) format(rank, 64, "%", OrgInfo[PlayerInfo[playerid][pOrg]][orgLeaderRankName]);
	format(str, sizeof(str), "{D1AE30}[{FFFFFF}MEGAFON{D1AE30}] %s %s{FFFFFF}: %s  {D1AE30}", rank, name, txt);
	SendMes(50.0, playerid, COLOR_RED, str);
	return 1;
}

CMD:obavestenje(playerid, params[])
{
	new str[200], text[128], rank[64], pName[MAX_PLAYER_NAME];
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if((PlayerInfo[playerid][pOrg] != 1 && PlayerInfo[playerid][pOrg] != 2) || PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	if(pDuty[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na duznosti!");
	if(sscanf(params, "s[128]", text)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/obavestenje [text]");
	GetPlayerName(playerid, pName, sizeof(pName));
	if(PlayerInfo[playerid][pRank] == 1) format(rank, 64, "%", OrgInfo[PlayerInfo[playerid][pOrg]][orgRank1]);
	else if(PlayerInfo[playerid][pRank] == 2) format(rank, 64, "%", OrgInfo[PlayerInfo[playerid][pOrg]][orgRank2]);
	else if(PlayerInfo[playerid][pRank] == 3) format(rank, 64, "%", OrgInfo[PlayerInfo[playerid][pOrg]][orgRank3]);
	else if(PlayerInfo[playerid][pRank] == 4) format(rank, 64, "%", OrgInfo[PlayerInfo[playerid][pOrg]][orgRank4]);
	else if(PlayerInfo[playerid][pRank] == 5) format(rank, 64, "%", OrgInfo[PlayerInfo[playerid][pOrg]][orgRank5]);
	else if(PlayerInfo[playerid][pRank] == 6) format(rank, 64, "%", OrgInfo[PlayerInfo[playerid][pOrg]][orgRank6]);
	else if(PlayerInfo[playerid][pRank] == 7) format(rank, 64, "%", OrgInfo[PlayerInfo[playerid][pOrg]][orgRank7]);
	if(PlayerInfo[playerid][pLeader] != 0) format(rank, 64, "%", OrgInfo[PlayerInfo[playerid][pOrg]][orgLeaderRankName]);
	SCMTA(-1, "\n{AD331A}==============================[OBAVESTENJE POLICIJE]==============================");
	format(str, 200, "{AD331A}[%s] {FFFFFF}%s: {AD331A}%s\n", rank, pName, text);
	SCMTA(-1, str);
	return 1;
}

CMD:pancir(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pOrg] != 1 && PlayerInfo[playerid][pOrg] != 2) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	if(pDuty[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na duznosti!");
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, 255.0708,77.1883,1003.6406) && !IsPlayerInRangeOfPoint(playerid, 2.0, 237.9564,72.9204,1005.0391)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na mestu za uzimanje/ostavljanje pancira!");
	new Float:arm;
	GetPlayerArmour(playerid, arm);
	if(arm == 0)
	{
		pPancir[playerid] = SetPlayerAttachedObject( playerid, 8, 19142,  1, 0.1,  0.05, 0.0,  0.0,   0.0,   0.0 );
		SetPlayerArmour(playerid, 100);
		SCM(playerid, -1, "{DAA520}[Server]: {FFFFFF}Postavili ste pancir na sebe.");
		new str[128], name[MAX_PLAYER_NAME];
		GetPlayerName(playerid, name, sizeof(name));
		format(str, sizeof(str), "{CF80A9}* %s uzima pancir iz ormarica", name);
		SendMes(20.0, playerid, COLOR_RED, str);
	}
	else
	{
		DestroyObject(pPancir[playerid]);
		SetPlayerArmour(playerid, 0);
		SCM(playerid, -1, "{DAA520}[Server]: {FFFFFF}Skinuli ste pancir sa sebe.");
		new str[128], name[MAX_PLAYER_NAME];
		GetPlayerName(playerid, name, sizeof(name));
		format(str, sizeof(str), "{CF80A9}* %s skida pancir i odlaze ga u ormaric", name);
		SendMes(20.0, playerid, COLOR_RED, str);
	}
	return 1;
}
CMD:duty(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pOrg] < 1 && PlayerInfo[playerid][pOrg] > 4) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	if((PlayerInfo[playerid][pOrg] == 1 || PlayerInfo[playerid][pOrg] == 2) && (!IsPlayerInRangeOfPoint(playerid, 2.0, 255.0708,77.1883,1003.6406) && !IsPlayerInRangeOfPoint(playerid, 2.0, 237.9564,72.9204,1005.0391))) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na mestu za uzimanje duznosti!");
	new str[180], name[MAX_PLAYER_NAME];
	if(pDuty[playerid] == 0) { pDuty[playerid] = 1; SCM(playerid, -1, "{DAA520}[Server]: {FFFFFF}Uspesno ste stupili na duznost!"); }
	else { pDuty[playerid] = 0; SCM(playerid, -1, "{DAA520}[Server]: {FFFFFF}Uspesno ste otisli sa duznosti."); }
	UpdateBubble(playerid);
	if(pDuty[playerid] == 1 && PlayerInfo[playerid][pOrg] == 4)
	{
		GetPlayerName(playerid, name, sizeof(name));
		format(str, 180, "{B3A570}Mehanicar {FFFFFF}%s {B3A570}je na duznosti, koristite /call 333 da bi pozvali mehanicare!", name);
		SCMTA(-1, str);
	}
	return 1;
}

CMD:ajail(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 2) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	new id, trajanje, razlog[64];
	if(sscanf(params, "iis[64]", id, trajanje, razlog)) return SendClientMessage(playerid, COLOR_RED, "[Usage]: {FFFFFF}/ajail [id] [trajanje u sekundama] [razlog]");
	if(PlayerInfo[playerid][pAdmin] < 6 && PlayerInfo[id][pAdmin] > 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Ne mozete admina!");
	if(trajanje > 3600) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Ne mozete na duze od sat vremena!");
	if(pUJailu[id] == 1) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Igrac je vec u zatvoru!");
	SCM(playerid, -1, "[AJAIL]: {FFFFFF}Uspesno ste zatvorili igraca u jail.");
	ZatvoriUJail(id, 2, trajanje);
	new str[180], pName[MAX_PLAYER_NAME], pName1[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(id, pName1, sizeof(pName1));
	format(str, 180, "Admin {FFFFFF}%s {AB0000}je zatvorio igraca {FFFFFF}%s{AB0000} na {FFFFFF}%d {AB0000}sekundi, razlog: {FFFFFF}%s", pName, pName1, trajanje, razlog);
	SCMTA(0xAB0000FF, str);
	format(str, 180, "{A13C0A}%s {FFFFFF}je zatvorio igraca {A13C0A}%s, {FFFFFF}razlog: %s! (/ajail)", pName, pName1, razlog);
	WarningPoruka(str);
	format(str, 180, "%s je zatvorio igraca %s! (/ajail)", pName, pName1);
	WarLog(str);
	return 1;
}

CMD:gotomark(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	SetPlayerPosFindZ(playerid, pWaypoint[playerid][0], pWaypoint[playerid][1], pWaypoint[playerid][2]);
	SCM(playerid, -1, "[Port]: {FFFFFF}Uspesno ste se teleportovali na marker.");
	new str[128], pName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 128, "{A13C0A}%s {FFFFFF}se teleportovao na marker!", pName);
	WarningPoruka(str);
	format(str, 128, "%s se teleportovao na marker!", pName);
	WarLog(str);
	return 1;
}

CMD:astats(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	new id;
	if(sscanf(params, "i", id)) return SendClientMessage(playerid, COLOR_RED, "[Usage]: {FFFFFF}/astats [id]");
	if(ulogovan[id] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Igrac sa ovim ID-em nije ulogovan!");

	new rank[64], pName[MAX_PLAYER_NAME];
	GetPlayerName(id, pName, sizeof(pName));
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][31], pName);
	
	if(PlayerInfo[id][pVozilo1] == 0) {format(rank, sizeof(rank), "Nemate");} else {format(rank, sizeof(rank), "%s, %d", ImenaVozila[GetVehicleModel(PlayerInfo[id][pVozilo1])-400], PlayerInfo[id][pVozilo1]);}
	if(PlayerInfo[id][pVozilo1] == 0) { PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][21], 1213); PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][21], -10.000000, 0.000000, -20.000000, 50.800000); } else { PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][21], -10.000000, 0.000000, -20.000000, 0.800000); PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][21], GetVehicleModel(PlayerInfo[id][pVozilo1])); }
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][26], rank);

	if(PlayerInfo[playerid][pVozilo2] == 0) {format(rank, sizeof(rank), "Nemate");} else {format(rank, sizeof(rank), "%s, %d", ImenaVozila[GetVehicleModel(PlayerInfo[id][pVozilo2])-400], PlayerInfo[id][pVozilo2]);}
	if(PlayerInfo[playerid][pVozilo2] == 0) { PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][24], 1213); PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][24], -10.000000, 0.000000, -20.000000, 50.800000); } else { PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][24], -10.000000, 0.000000, -20.000000, 0.800000); PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][24], GetVehicleModel(PlayerInfo[id][pVozilo2])); }
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][27], rank);

	if(PlayerInfo[playerid][pVozilo3] == 0) {format(rank, sizeof(rank), "Nemate");} else {format(rank, sizeof(rank), "%s, %d", ImenaVozila[GetVehicleModel(PlayerInfo[id][pVozilo3])-400], PlayerInfo[id][pVozilo3]);}
	if(PlayerInfo[playerid][pVozilo3] == 0) { PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][25], 1213); PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][25], -10.000000, 0.000000, -20.000000, 50.800000); } else { PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][25], -10.000000, 0.000000, -20.000000, 0.800000); PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][25], GetVehicleModel(PlayerInfo[id][pVozilo3])); }
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][28], rank);

	if(PlayerInfo[playerid][pVozilo4] == 0) {format(rank, sizeof(rank), "Nemate");} else {format(rank, sizeof(rank), "%s, %d", ImenaVozila[GetVehicleModel(PlayerInfo[id][pVozilo4])-400], PlayerInfo[id][pVozilo4]);}
	if(PlayerInfo[playerid][pVozilo4] == 0) { PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][23], 1213); PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][23], -10.000000, 0.000000, -20.000000, 50.800000); } else { PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][23], -10.000000, 0.000000, -20.000000, 0.800000); PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][23], GetVehicleModel(PlayerInfo[id][pVozilo4])); }
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][29], rank);

	if(PlayerInfo[playerid][pVozilo5] == 0) {format(rank, sizeof(rank), "Nemate");} else {format(rank, sizeof(rank), "%s, %d", ImenaVozila[GetVehicleModel(PlayerInfo[id][pVozilo5])-400], PlayerInfo[id][pVozilo5]);}
	if(PlayerInfo[playerid][pVozilo5] == 0) { PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][22], 1213); PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][22], -10.000000, 0.000000, -20.000000, 50.800000); } else { PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][22], -10.000000, 0.000000, -20.000000, 0.800000); PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][22], GetVehicleModel(PlayerInfo[id][pVozilo5])); }
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][30], rank);

	format(rank, sizeof(rank), "KREDIT: %d", PlayerInfo[id][pFonKredit]);
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][20], rank);

	if(PlayerInfo[id][pBrojTelefona] == 0) {format(rank, sizeof(rank), "Nemate");} else {format(rank, sizeof(rank), "BROJ TELEFONA: %d", PlayerInfo[id][pBrojTelefona]);}
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][19], rank);

	if(PlayerInfo[id][pTelefon] == 0) format(rank, 64, "Nemate");
	if(PlayerInfo[id][pTelefon] == 1) format(rank, 64, "TELEFON: Nokia 3310");
	if(PlayerInfo[id][pTelefon] == 2) format(rank, 64, "TELEFON: LG G3");
	if(PlayerInfo[id][pTelefon] == 3) format(rank, 64, "TELEFON: Samsung Galaxy S8");
	if(PlayerInfo[id][pTelefon] == 4) format(rank, 64, "TELEFON: Xiaomi Redmi 12");
	if(PlayerInfo[id][pTelefon] == 5) format(rank, 64, "TELEFON: Samsung Galaxy S24");
	if(PlayerInfo[id][pTelefon] == 6) format(rank, 64, "TELEFON: iPhone 16 Pro Max");
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][18], rank);

	if(PlayerInfo[id][pVip] == 0) format(rank, 64, "POZICIJA: Nijedan");
	if(PlayerInfo[id][pVip] == 1) format(rank, 64, "POZICIJA: Bronze Vip");
	if(PlayerInfo[id][pVip] == 2) format(rank, 64, "POZICIJA: Silver Vip");
	if(PlayerInfo[id][pVip] == 3) format(rank, 64, "POZICIJA: Gold Vip");
	if(PlayerInfo[id][pVip] == 4) format(rank, 64, "POZICIJA: Platinum Vip");
	if(PlayerInfo[id][pVip] == 5) format(rank, 64, "POZICIJA: Diamond Vip");
	if(PlayerInfo[id][pPromoter] == 1) format(rank, 64, "POZICIJA: Promoter");
	if(PlayerInfo[id][pAdmin] > 0 && PlayerInfo[id][pAdmin] < 5) format(rank, 64, "POZICIJA: Admin");
	if(PlayerInfo[id][pAdmin] == 5) format(rank, 64, "POZICIJA: Head Admin");
	if(PlayerInfo[id][pAdmin] == 6) format(rank, 64, "POZICIJA: Direktor");
	if(PlayerInfo[id][pAdmin] == 7) format(rank, 64, "POZICIJA: Generalni Direktor");
	if(PlayerInfo[id][pAdmin] == 8) format(rank, 64, "POZICIJA: Suvlasnik");
	if(PlayerInfo[id][pAdmin] == 9) format(rank, 64, "POZICIJA: Vlasnik");
	if(PlayerInfo[id][pAdmin] == 10) format(rank, 64, "POZICIJA: Predsednica");
	if(PlayerInfo[id][pAdmin] == 1337) format(rank, 64, "POZICIJA: Skripter");
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][16], rank);

	format(rank, 64, "Do plate: %dmin", PlayerInfo[id][pDoPlate]);
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][15], rank);

	format(rank, 64, "XP: %d/%d", PlayerInfo[id][pRespekti], PlayerInfo[playerid][pNeededRep]);
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][14], rank);

	format(rank, 64, "Level: %d", PlayerInfo[id][pLevel]);
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][13], rank);
	
	if(PlayerInfo[id][pLeader] == 0) {format(rank, sizeof(rank), "LIDER: Niste lider");} else {format(rank, sizeof(rank), "LIDER: %s", OrgInfo[PlayerInfo[id][pLeader]][orgIme]);}
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][11], rank);
	if(PlayerInfo[id][pOrg] == 0) {format(rank, sizeof(rank), "CLAN: Niste clan");} else {format(rank, sizeof(rank), "CLAN: %s", OrgInfo[PlayerInfo[id][pOrg]][orgIme]);}
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][10], rank);
	if(PlayerInfo[id][pOrg] == 0) {format(rank, sizeof(rank), "RANK: Niste clan");} else {format(rank, sizeof(rank), "RANK: %s", PlayerInfo[id][pRank]);}
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][12], rank);

	if(PlayerInfo[id][pKuca] == 9999) {format(rank, sizeof(rank), "KUCA: Nemate");} else {format(rank, sizeof(rank), "KUCA: %d", PlayerInfo[id][pKuca]);}
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][6], rank);
	if(PlayerInfo[id][pFirma] == 0) {format(rank, sizeof(rank), "FIRMA: Nemate");} else {format(rank, sizeof(rank), "FIRMA: %d", PlayerInfo[id][pFirma]);}
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][7], rank);
	if(PlayerInfo[id][pImanje] == 0) {format(rank, sizeof(rank), "IMANJE: Nemate");} else {format(rank, sizeof(rank), "IMANJE: %d", PlayerInfo[id][pImanje]);}
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][8], rank);

	format(rank, 64, "PLATA: $%d", PlayerInfo[id][pPlata]);
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][5], rank);

	if(PlayerInfo[id][pPosao] == 0) { format(rank, 64, "POSAO: Nezaposlen"); }
	else if(PlayerInfo[id][pPosao] == 1) { format(rank, 64, "POSAO: Postar"); }
	else if(PlayerInfo[id][pPosao] == 2) { format(rank, 64, "POSAO: Bus Vozac"); }
	else if(PlayerInfo[id][pPosao] == 3) { format(rank, 64, "POSAO: Masinovodja"); }
	else if(PlayerInfo[id][pPosao] == 4) { format(rank, 64, "POSAO: Kamiondzija"); }
	else if(PlayerInfo[id][pPosao] == 5) { format(rank, 64, "POSAO: Zapr. Komaraca"); }
	else if(PlayerInfo[id][pPosao] == 6) { format(rank, 64, "POSAO: Pilot"); }
	else if(PlayerInfo[id][pPosao] == 7) { format(rank, 64, "POSAO: Pizza Dostavljac"); }
	else if(PlayerInfo[id][pPosao] == 8) { format(rank, 64, "POSAO: Dost. Delova"); }
	else if(PlayerInfo[id][pPosao] == 9) { format(rank, 64, "POSAO: Cistac Ulica"); }
	else if(PlayerInfo[id][pPosao] == 10) { format(rank, 64, "POSAO: Prev. Novca"); }
	else if(PlayerInfo[id][pPosao] == 11) { format(rank, 64, "POSAO: Prev. Kamenja"); }
	else if(PlayerInfo[id][pPosao] == 12) { format(rank, 64, "POSAO: Logisticar"); }
	else if(PlayerInfo[id][pPosao] == 13) { format(rank, 64, "POSAO: Skup. Sirovina"); }
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][4], rank);

	format(rank, 64, "ZLATO: %dg", PlayerInfo[id][pZlato]);
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][3], rank);

	format(rank, 64, "BANKA: $%d", PlayerInfo[id][pBanka]);
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][2], rank);

	format(rank, 64, "NOVAC: $%d", GetPlayerMoney(id));
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][1], rank);

	PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][0], GetPlayerSkin(id));

	for(new i = 0; i < 62; i++)
	{
		TextDrawShowForPlayer(playerid, StatsTextdrawPublic[i]);
	}
	for(new i = 0; i < 32; i++)
	{
		PlayerTextDrawShow(playerid, StatsTextdrawPlayer[playerid][i]);
	}
	SelectTextDraw(playerid, 0xFF4040AA);
	return 1;
}

CMD:akucainfo(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	new id;
	if(sscanf(params, "i", id)) return SendClientMessage(playerid, COLOR_RED, "[Usage]: {FFFFFF}/akucainfo [id]");
	new str[512], tipk[64], h_file[128], owner[128];
	format(h_file, 128, HOUSEPATH, id);
	if(!fexist(h_file)) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Kuca sa ovim ID-em ne postoji!");
	if(HouseInfo[id][hTip] == 1) format(tipk, 64, "Stan");
	if(HouseInfo[id][hTip] == 2) format(tipk, 64, "Mala kuca");
	if(HouseInfo[id][hTip] == 3) format(tipk, 64, "Srednja kuca");
	if(HouseInfo[id][hTip] == 4) format(tipk, 64, "Velika kuca");
	if(HouseInfo[id][hTip] == 5) format(tipk, 64, "Vila");
	if(HouseInfo[id][hOwned] == 0) { format(owner, 128, "Niko"); }
	else { format(owner, 128, "%s", HouseInfo[id][hOwner]); }
	format(str, 512, "{DAA520}Vlasnik kuce: {FFFFFF}%s\n{DAA520}Tip kuce: {FFFFFF}%s\n{DAA520}Cena: {FFFFFF}$%d\n{DAA520}Level: {FFFFFF}%d\n{DAA520}Neaktivnost: {FFFFFF}%d", owner, tipk, HouseInfo[id][hCena], HouseInfo[id][hLevel], HouseInfo[id][hNeaktivnost]);
	ShowPlayerDialog(playerid, DIALOG_KUCAINFO, DIALOG_STYLE_MSGBOX, "{DAA520}Informacije o kuci", str, "{DAA520}Napusti", "");
	return 1;
}

CMD:afirmainfo(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	new id;
	if(sscanf(params, "i", id)) return SendClientMessage(playerid, COLOR_RED, "[Usage]: {FFFFFF}/afirmainfo [id]");
	new str[512], tipk[64], h_file[128], owner[128];
	format(h_file, 128, FIRMAPATH, id);
	if(!fexist(h_file)) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Firma sa ovim ID-em ne postoji!");
	if(FirmaInfo[id][fiTip] == 1) format(tipk, 64, "Market 24/7");
	if(FirmaInfo[id][fiTip] == 2) format(tipk, 64, "Picerija");
	if(FirmaInfo[id][fiTip] == 3) format(tipk, 64, "Restoran");
	if(FirmaInfo[id][fiTip] == 4) format(tipk, 64, "Prodavnica Tehnike");
	if(FirmaInfo[id][fiTip] == 5) format(tipk, 64, "Gun Shop");
	if(FirmaInfo[id][fiTip] == 6) format(tipk, 64, "Poljoprivredna Prodavnica");
	if(FirmaInfo[id][fiTip] == 7) format(tipk, 64, "Auto Skola");
	if(FirmaInfo[id][fiTip] == 8) format(tipk, 64, "Benzinska Pumpa");
	if(FirmaInfo[id][fiTip] == 9) format(tipk, 64, "Guns Shop");
	if(FirmaInfo[id][fiOwned] == 0) { format(owner, 128, "Niko"); }
	else { format(owner, 128, "%s", FirmaInfo[id][fiOwner]); }
	format(str, 512, "{DAA520}Vlasnik firme: {FFFFFF}%s\n{DAA520}Tip firme: {FFFFFF}%s\n{DAA520}Cena: {FFFFFF}$%d\n{DAA520}Level: {FFFFFF}%d\n{DAA520}Neaktivnost: {FFFFFF}%d\n{DAA520}Produkti: {FFFFFF}%d\n{DAA520}Kasa: {FFFFFF}%d", owner, tipk, FirmaInfo[id][fiCena], FirmaInfo[id][fiLevel], FirmaInfo[id][fiNeaktivnost], FirmaInfo[id][fiProdukti], FirmaInfo[id][fiKasa]);
	ShowPlayerDialog(playerid, DIALOG_FIRMAINFO, DIALOG_STYLE_MSGBOX, "{DAA520}Informacije o firmi", str, "{DAA520}Napusti", "");
	return 1;
}
CMD:kupi(playerid, params[], help)
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, 287.3644,-106.3382,1001.5156)) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste u gun shopu kod kase!");
	if(PlayerInfo[playerid][pGunL] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Nemate dozvolu za oruzje!");
	ShowPlayerDialog(playerid, DIALOG_GUNSHOP, DIALOG_STYLE_TABLIST_HEADERS, "{DAA520}Izaberite oruzje/opremu", "{FFFFFF}Naziv\tCena\tMunicija\n{A89932}Pancir\t{289E00}$500\t{B5B5B5}1\n{A89932}Noz\t{289E00}$500\t{B5B5B5}1\n{A89932}Granata\t{289E00}$2000\t{B5B5B5}1\n{A89932}Colt 45\t{289E00}$2100\t{B5B5B5}40\n{A89932}Micro UZI\t{289E00}$3200\t{B5B5B5}80\n{A89932}Desert Eagle\t{289E00}$5000\t{B5B5B5}40\n{A89932}M4\t{289E00}$5500\t{B5B5B5}60\n{A89932}Rifle\t{289E00}$6300\t{B5B5B5}25\n{A89932}Sniper Rifle\t{289E00}$12000\t{B5B5B5}40", "{DAA520}Izaberi", "{DAA520}Odustani");
	//Pancir 500 1
	//Noz 500 1
	//Granata 2000 1
	//Colt 45 2100 40
	//Micro UZI 3200 80
	//DESERT EAGLE 5000 40
	//M4 5500 60
	//Rifle 6300 25
	//Sniper Rifle 12000 40
	return 1;
}

CMD:asetwl(playerid, params[], help)
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	new id, level, reason[64];
	if(sscanf(params, "iis[64]", id, level, reason)) return SCM(playerid, COLOR_RED, "[USAGE] {FFFFFF}/asetwl [id] [level] [reason]");
	pWantedLevel[id] = level;
	pWantedTimer[playerid] = SetTimerEx("WantedPoruka", 2000, true, "u", playerid);
	return 1;
}

CMD:number(playerid, params[], help)
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new id;
	if(sscanf(params, "u", id)) return SCM(playerid, COLOR_RED, "[USAGE] {FFFFFF}/number [id]");
	if(PlayerInfo[id][pBrojTelefona] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Igrac nije kupio SIM karticu!");
	new str[180], pName[MAX_PLAYER_NAME];
	GetPlayerName(id, pName, sizeof(pName));
	format(str, 180, "{DAA520}Ime: {FFFFFF}%s, {DAA520}Broj telefona: {FFFFFF}%d", pName, PlayerInfo[id][pBrojTelefona]);
	SCM(playerid, -1, str);
	return 1;
}

CMD:kuca(playerid, params[], help)
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pKuca] == 9999) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Ne posedujete kucu!");
	ShowPlayerDialog(playerid, DIALOG_KUCA, DIALOG_STYLE_LIST, "{DAA520}Vasa kuca", "{FFFFFF}Informacije\nOtkljucaj/Zakljucaj\nProdaj drzavi\nProdaj igracu\nSef", "{DAA520}Izaberi", "{DAA520}Odustani");
	return 1;
}

CMD:firma(playerid, params[], help)
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pFirma] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Ne posedujete firmu!");
	ShowPlayerDialog(playerid, DIALOG_FIRMA, DIALOG_STYLE_LIST, "{DAA520}Vasa kuca", "{FFFFFF}Informacije\nProdaj drzavi\nProdaj igracu\nKasa\nDopuni zalihe", "{DAA520}Izaberi", "{DAA520}Odustani");
	return 1;
}

CMD:veh(playerid, params[], help)
{
	new i = NewID(5);
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(pvoz[playerid] != -1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Vec ste napravili vozilo ili radite posao!");
	new id, Float:X, Float:Y, Float:Z, Float:A;
	if(sscanf(params, "i", id)) return SCM(playerid, COLOR_RED, "[USAGE] {FFFFFF}/veh [id]");
	if(id < 400 || id > 609) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}ID mora biti izmedju 400 i 609!");
	DestroyVehicle(nenapravljenovozilo[i]);
	GetPlayerPos(playerid, X, Y, Z);
	GetPlayerFacingAngle(playerid, A);
	pvoz[playerid] = AddStaticVehicle(id, X, Y, Z+1, A, 1, 1);
	VoziloInfo[i][vID] = id;
	VoziloInfo[i][vOwnable] = 0;
	VoziloInfo[i][vCena] = 0;
	VoziloInfo[i][vAutoskola] = 0;
	VoziloInfo[i][vPosaoID] = 0;
	VoziloInfo[i][vOrgID] = 0;
	VoziloInfo[i][vRent] = 0;
	VoziloInfo[i][vAdmin] = 1;
	VoziloInfo[i][vHelper] = 0;
	VoziloInfo[i][vVip] = 0;
	VoziloInfo[i][vPromoter] = 0;
	VoziloInfo[i][vBoja] = 0;
	VoziloInfo[i][vBoja2] = 0;
	VoziloInfo[i][vDozvola] = 0;
	VoziloInfo[i][vX] = -13.2146;
	VoziloInfo[i][vY] = 1293.5237;
	VoziloInfo[i][vZ] = 19.4439;
	SaveVozilo(i);
	SetCameraBehindPlayer(playerid);
	SCM(playerid, -1, "{DAA520}[Server]: {FFFFFF}Uspesno ste napravili vozilo, kada ga napustite obrisace se!");
	PutPlayerInVehicle(playerid, pvoz[playerid], 0);
	return 1;
}

CMD:joinevent(playerid, params[], help)
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(eventPoceo) return SCM(playerid, COLOR_RED, "[Event]: {FFFFFF}Event je vec poceo, sacekajte sledeci!");
	if(brojIgracaUEventu >= MAX_EVENT_SLOTS) return SCM(playerid, COLOR_RED, "[Event]: {FFFFFF}Svi slotovi u eventu su vec popunjeni!");
	SCM(playerid, -1, "Uspesno ste se priljucili u event! Ako zelite da ga napustite, ukucajte /napustievent");
	pEvent[playerid] = true;
	listaIgracaUEventu[brojIgracaUEventu] = playerid;
	SetPlayerVirtualWorld(playerid, eventID);
	SetCameraBehindPlayer(playerid);
	PutPlayerInVehicle(playerid, eventVozila[eventID][brojIgracaUEventu], 0);
	brojIgracaUEventu++;
	return 1;
}

CMD:startevent(playerid, params[], help)
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	if(eventTraje) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Event vec traje!");
	if(gettime() < eventTime) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Morate sacekati 5 minuta od starta proslog eventa da bi startovali novi!");
	ShowPlayerDialog(playerid, DIALOG_EVENT, DIALOG_STYLE_LIST, "{DAA520}Izaberite event", "{FFFFFF}Los Santos Trka", "Izaberi", "Odustani");
	return 1;
}

CMD:stopevent(playerid, params[], help)
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	if(!eventTraje) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Nijedan event nije pokrenut!");
	EndEvent();
	new pName[MAX_PLAYER_NAME], str[256];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je zaustavio event!", pName);
	WarningPoruka(str);
	format(str, 256, "Admin %s je zaustavio event!", pName);
	WarLog(str);
	SCM(playerid, -1, "{DAA520}[Event]: {FFFFFF}Uspesno ste zaustavili event!");
	KillTimer(eventTimer);
	return 1;
}

CMD:sms(playerid, params[], help)
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(pCall[playerid] != -1) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Pricate sa nekim, prvo prekinite vezu!");
	if(PlayerInfo[playerid][pFonKredit] < 25) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Nemate dovoljno kredita, potrebno vam je 3 kredita za sms! (/call 123)");
	new broj, poruka[128], pID = -1;
	if(sscanf(params, "is", broj, poruka)) return SCM(playerid, COLOR_RED, "[USAGE] {FFFFFF}/sms [broj telefona] [poruka]");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(ulogovan[i] == 1)
	    {
	        if(PlayerInfo[i][pBrojTelefona] == broj)
			{
			    pID = i;
			    break;
			}
	    }
	}
	if(pID == -1) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Igrac sa tim brojem telefona nije povezan na server!");
	else if(pID == playerid) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Ne mozete slati sms samom sebi!");
	else
	{
		SCM(playerid, -1, "*Uspesno ste poslali sms poruku*");
	    new str[256], name[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, name, sizeof(name));

	    format(str, 256, "{A89E32}[SMS-%d] %s: {9E9E9E}%s", PlayerInfo[playerid][pBrojTelefona], name, poruka);
	    SCM(pID, -1, str);
	    format(str, 256, "{A89E32}[SMS] %s: {9E9E9E}%s", name, poruka);
	    SCM(playerid, -1, str);

		format(str, sizeof(str), "{CF80A9}* %s salje sms poruku.", name);
	    SendMes(20.0, playerid, COLOR_RED, str);

		GetPlayerName(pID, name, sizeof(name));
		format(str, sizeof(str), "{CF80A9}* %s je primio sms poruku.", name);
	    SendMes(20.0, pID, COLOR_RED, str);
	    pPozivalac[pID] = playerid;
	}
	return 1;
}

CMD:call(playerid, params[], help)
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(pCall[playerid] != -1) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Vec pricate sa nekim, prvo prekinite vezu!");
	new broj, pID = -1;
	if(sscanf(params, "i", broj)) return SCM(playerid, COLOR_RED, "[USAGE] {FFFFFF}/call [broj telefona]");
	if(PlayerInfo[playerid][pFonKredit] < 25 && broj != 123) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Nemate dovoljno kredita, potrebno vam je 25 kredita za poziv! (/call 123)");
	if(broj == 123)
	{
		new str[128];
		format(str, 128, "{DAA520}[Telefon]: {FFFFFF}Trenutno imate {DAA520}%d {FFFFFF}kredita.", PlayerInfo[playerid][pFonKredit]);
		return SCM(playerid, -1, str);
	}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(ulogovan[i] == 1)
	    {
	        if(PlayerInfo[i][pBrojTelefona] == broj)
			{
			    pID = i;
			    break;
			}
	    }
	}
	if(pID == -1) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Igrac sa tim brojem telefona nije povezan na server!");
	else if(pID == playerid) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Ne mozete pozvati samog sebe!");
	else if(pCall[pID] != -1) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Igrac vec razgovara sa nekim!");
	else
	{
		SCM(playerid, -1, "*Uspesno ste pozvali igraca, sacekajte da se javi*");
		ApplyAnimation(playerid, "PED", "PHONE_IN", 4.1, true, true, true, true, 1, 1);
		pCall[playerid] = pID;
	    pCallTimer[pID] = SetTimerEx("PrekiniPoziv", 30000, false, "i", playerid);
	    SCM(pID, -1, "Zvoni vam telefon, koristite {DAA520}/answer {FFFFFF}ukoliko zelite da se javite ili {DAA520}/h {FFFFFF}da odbijete poziv.");
	    new str[256], name[MAX_PLAYER_NAME];

	    GetPlayerName(playerid, name, sizeof(name));
		format(str, sizeof(str), "{CF80A9}* %s zapocinje telefonski poziv.", name);
	    SendMes(20.0, playerid, COLOR_RED, str);

		GetPlayerName(pID, name, sizeof(name));
		format(str, sizeof(str), "{CF80A9}* %s-u zvoni telefon.", name);
	    SendMes(20.0, pID, COLOR_RED, str);
	    pPozivalac[pID] = playerid;
		SetTimerEx("TelefonAnim", 2300, false, "i", playerid);
	}
	return 1;
}

CMD:answer(playerid, params[], help)
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(pPozivalac[playerid] == -1) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niko vas ne zove na telefon!");
	if(ulogovan[pPozivalac[playerid]] == 0) { SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Igrac koji vas je zvao vise nije ulogovan!"); pPozivalac[playerid] = -1; return 1; }
	pCall[playerid] = pPozivalac[playerid];
	KillTimer(pCallTimer[playerid]);
	SCM(pPozivalac[playerid], -1, "*Telfonska veza je uspostavljena*");
	pPozivalac[playerid] = -1;
	new str[256], name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	format(str, sizeof(str), "{CF80A9}* %s se javio na telefon.", name);
 	SendMes(20.0, playerid, COLOR_RED, str);
	ApplyAnimation(playerid, "PED", "PHONE_IN", 4.1, true, true, true, true, 1, 1);
	SetTimerEx("TelefonAnim", 2300, false, "i", playerid);
	return 1;
}

CMD:h(playerid, params[], help)
{
    if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(pCall[playerid] == -1 && pPozivalac[playerid] == -1) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Ne pricate ni sa kim na telefon i niko vas ne zove!");
	if(pCall[pCall[playerid]] != -1) 
	{
		SCM(pCall[playerid], -1, "*Igrac vam je prekinuo poziv*");
		ApplyAnimation(pCall[playerid], "PED", "PHONE_OUT", 4.1, false, true, true, true, 1, 1);
		pCall[pCall[playerid]] = -1;
	}
	else SCM(pCall[playerid], -1, "*Telefon je prestao da vam zvoni*");
	KillTimer(pCall[playerid]);
	pCall[playerid] = -1;
	SCM(playerid, -1, "*Prekinuli ste telefonski poziv*");
	new str[256], name[MAX_PLAYER_NAME];
	GetPlayerName(playerid, name, sizeof(name));
	format(str, sizeof(str), "{CF80A9}* %s je prekinuo telefonski razgovor.", name);
 	SendMes(20.0, playerid, COLOR_RED, str);
	ApplyAnimation(playerid, "PED", "PHONE_OUT", 4.1, false, true, true, true, 1, 1);
	pPozivalac[playerid] = -1;
	return 1;
}

CMD:custombroj(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
    new kol, pid, poruka[128], adm[64];
    if(sscanf(params, "ii", pid, kol)) return SCM(playerid, COLOR_RED, "[USAGE] {FFFFFF}/custombroj [id] [broj]");
    format(poruka, 128, BROJEVIPATH, kol);
	if(fexist(poruka)) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Broj je vec zauzet!");
    PlayerInfo[pid][pBrojTelefona] = kol;
    GetPlayerName(pid, adm, 64);
	format(poruka, sizeof(poruka), "{1985A6}[Admin]: {FFFFFF}Uspesno ste postavili {1985A6}%d {FFFFFF}broj igracu {1985A6}%s{FFFFFF}!", kol, adm);
	SCM(playerid, -1, poruka);
	GetPlayerName(playerid, adm, 64);
	format(poruka, sizeof(poruka), "{1985A6}[Admin]: {FFFFFF}Admin {1985A6}%s {FFFFFF}vam je postavio custom broj na {1985A6}%d!", adm, kol);
	SCM(playerid, -1, poruka);
	new str[128], pName[MAX_PLAYER_NAME], ppName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(pid, ppName, sizeof(ppName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je postavio custom broj {A13C0A}%d {FFFFFF}igracu {A13C0A}%s!", pName, kol, ppName);
	WarningPoruka(str);
	format(str, 256, "Admin %s je postavio custom broj %d igracu %s!", pName, kol, ppName);
	WarLog(str);
	return 1;
}
CMD:prodavnica(playerid, params[], help)
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	if(gettime() < pRepTimer[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(IsPlayerInRangeOfPoint(playerid, 2.0, -2237.1228,130.1769,1035.4141))
	{
		SPD(playerid, DIALOG_TEHNIKA, DIALOG_STYLE_LIST, "{DAA520}Prodavnica Tehnike", "{FFFFFF}Mobilni Telefoni\nSIM Kartica - {DAA520}$300\nUplata Kredita\n{FFFFFF}Laptop - {DAA520}$5000\n{FFFFFF}RC Igracka\nRadio - {DAA520}$2000", "{DAA520}Izaberi", "{DAA520}Odustani");
	}
	return 1;
}

CMD:bolnica(playerid, params[], help)
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	if(gettime() < pRepTimer[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(pDeathSecs[playerid] <= 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste povredjeni!");
	pDeathSecs[playerid] = 0;
	new str[128];
	new pName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 128, "{FFFFFF}Igrac {940007}%s (id:%d) {FFFFFF}je otisao u bolnicu!", pName, playerid);
	WarLog(str);
	return 1;
}

CMD:report(playerid, params[], help)
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	if(gettime() < pRepTimer[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Report mozete postavljati na svakih 30 sekundi!");
	cmdtime[playerid] = gettime()+2;
	new str[128], input[30], id, text[256];
	if(sscanf(params, "us", id, input)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/report [id] [text]");
	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije povezan!");
	if(ulogovan[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije ulogovan!");
	new pName[MAX_PLAYER_NAME], pName2[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(id, pName2, sizeof(pName2));
	format(text, 256, "{940007}[REPORT]: {FFFFFF}Igrac {940007}%s (id:%d) {FFFFFF}je prijavio igraca {940007}%s (id:%d){FFFFFF}, razlog: {940007}%s!", pName, playerid, pName2, id, input);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{ if(PlayerInfo[playerid][pAdmin] > 0 || PlayerInfo[playerid][pHelper] > 0) { SCM(i, -1, text); } }
	format(str, 128, "[REPORT]: Igrac %s je prijavio igraca %s (id:%d), razlog: %s!", pName, pName2, id, input);
	WarLog(str);
	format(str, 128, "{940007}[Report]: {FFFFFF}Report na igraca {940007}%s {FFFFFF}je uspesno poslat!", pName2);
	SendClientMessage(playerid, -1, str);
	pRepTimer[playerid] = gettime()+30;
	return 1;
}
CMD:odgovor(playerid, params[], help)
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(pDobioOdgovor[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste postavili pitanej ili vam jos uvek nije odgovoreno!");
	new str[512], year, mounth, day, hour, minute, second;
	getdate(year, mounth, day);
	gettime(hour, minute, second);
	format(str, 512, "{DAA520}Staff {FFFFFF}vam je odgovorio na pitanje!\n{DAA520}Datum: {FFFFFF}%d.%d.%d.\n{DAA520}Vreme: {FFFFFF}%d:%d:%d\n\nStaff %s\n\n{FFFFFF}Ukoliko imate dodatna pitanja, obratite se na\nforumu ili diskordu! Vas {DAA520}PC:RP Staff Team!", day, mounth, year, hour, minute, second,pAskAnswer[playerid]);
	ShowPlayerDialog(playerid, DIALOG_ODGOVOR, DIALOG_STYLE_MSGBOX, "{DAA520}Odgovor na pitanje", str, "{DAA520}Ok", "");
	pDobioOdgovor[playerid] = 0;
	return 1;
}
CMD:askq(playerid, params[], help)
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	if(gettime() < pAskTimer[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Pitanja mozete postavljati na svakih 60 sekundi!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAsklist] != 0) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Vec ste postavili pitanje, sacekajte odgovor!");
	new str[128], input[128], id = NewID(15);
	if(sscanf(params, "s", input)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/askq [text]");
	if(id == -1) return SCM(playerid, COLOR_RED, "[ASKQ]: {FFFFFF}Asklista je trenutno puna, pokusajte kasnije!");
	new pName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	AskInfo[id][askText] = input;
	format(str, 128, "%s", pName);
	AskInfo[id][askSender] = str;
	AskInfo[id][askID] = playerid;
	SaveAsk(id);
	format(str, 128, "{006613}[ASKLIST]: {FFFFFF}Igrac {006613}%s {FFFFFF}je poslao pitanje id {006613}%d! (/asklist)", pName, id);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(PlayerInfo[i][pAdmin] > 0 || PlayerInfo[i][pHelper] > 0)
		{ SendClientMessage(i, -1, str); }
	}
	format(str, 128, "Igrac %s je postavio pitanje id %d!", pName, id);
	WarLog(str);
	format(str, 128, "{006613}[ASKQ]: {FFFFFF}Uspesno ste postavili pitanje id {006613}%d!", id);
	SendClientMessage(playerid, -1, str);
	pAskTimer[playerid] = gettime()+60;
	return 1;
}
CMD:asklist(playerid, params[], help)
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	new string[2048], str[128], path[64];
	for(new i = 1; i <= MAX_ASKLIST; i++)
	{
		format(path, sizeof(path), ASKLISTPATH, i);
		if(fexist(path))
		{
			format(str, sizeof(str), "{006613}[%d] (%d) %s: {FFFFFF}%s\n", i, AskInfo[i][askID], AskInfo[i][askSender], AskInfo[i][askText]);
			strcat(string, str, sizeof(string));
		}
		else
		{
			format(str, sizeof(str), "{006613}[%d] Niko: {FFFFFF}Prazno...\n", i);
			strcat(string, str, sizeof(string));
		}
	}
	ShowPlayerDialog(playerid, DIALOG_ASKLIST, DIALOG_STYLE_LIST, "{006613}Asklist", string, "{006613}Odgovori", "{006613}Napusti");
	return 1;
}
CMD:cc(playerid, params[], help)
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	for(new i = 0; i < MAX_PLAYERS; i++)
	{ ClearChat(i); }
	new pName[MAX_PLAYER_NAME], str[128];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str,128, "**** Admin {A13C0A}%s {FFFFFF}je ocistio chat ****", pName);
	SendClientMessageToAll(-1, str);
	format(str, 128, "{FFFFFF}Admin {A13C0A}%s {FFFFFF}je ocistio chat!", pName);
	WarningPoruka(str);
	format(str, 128, "Admin %s je ocistio chat!", pName);
	WarLog(str);
	return 1;
}
CMD:radio(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	ShowPlayerDialog(playerid, DIALOG_RADIO, DIALOG_STYLE_LIST, "{DAA520}Radio stanice", "{FFFFFF}Naxi Radio\nRock Radio\nPlay Radio\nRadio Karolina\nRadio Morava\nUgasi radio", "{DAA520}Izaberi", "{DAA520}Napusti");
	return 1;
}
CMD:update(playerid, params[], help)
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new ver[64];
	new updateinfo[3000], str[128];
	PlayerInfo[playerid][pVerzija] = ver;
	format(ver, 64, "{DAA520}Update - %s", VERZIJA_SKRIPTE);
	format(str, 128, "{FFFFFF}Novi {DAA520}update {FFFFFF}je na serveru!\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- Datum: {FFFFFF}05.02.2025. {DAA520}Vreme: {FFFFFF}04:20\n\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- {FFFFFF}Novi alpha update donosi bugfix-eve i nove sisteme\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- {FFFFFF}Popravljen bug unosenja pogresne komande ili id-a\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- {FFFFFF}Popravljen {DAA520}Fort Carson {FFFFFF}znak na brdu - uvek se renderuje\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- {FFFFFF}Dodati pickupi na izlaze iz interiora\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- {FFFFFF}Dodata disconnect poruka sa razlogom izlaska\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- {FFFFFF}Izmenjene warning i jos neke boje na dijalozima\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- {FFFFFF}Dodata prodavnica tehnike u kojoj mozete kupiti mobilne\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}  {FFFFFF}telefone, sim kartice, laptopove, itd\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- {FFFFFF}Dodata smrt igraca {DAA520}(povredjivanje, komande za bolnicu)\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- {FFFFFF}Komanda {DAA520}/changename {FFFFFF}dovedena u funkciju\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- {FFFFFF}Dodati {DAA520}/g i /t {FFFFFF}chatovi sa rankovima\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- {FFFFFF}Dodata {DAA520}/gethere {FFFFFF}komanda\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- Loading Screen {FFFFFF}doveden u funkciju\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- {FFFFFF}Podaci na {DAA520}Loading Screen-u {FFFFFF}sinhronizovani\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- {FFFFFF}Dodato cuvanje tuniranja vozila\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- {FFFFFF}Dodata asklista: {DAA520}/askq, /asklist, /odgovor {FFFFFF}komande\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- {FFFFFF}Dodat report sistem: {DAA520}/report {FFFFFF}komanda\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- {FFFFFF}Na komandi {DAA520}/goto {FFFFFF}ispravljene koordinate portovanja\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- {FFFFFF}Dadat {DAA520}/radio {FFFFFF}koji daje listu radio stanica\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- {FFFFFF}Dodata komanda {DAA520}/cc {FFFFFF}za ciscenje chat-a\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- {FFFFFF}Fixani bug gde se ne cuvaju skinovi igraca\n\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- {FFFFFF}To bi bilo sve za ovaj alpha update, uzivajte u igri! :D\n");
	strcat(updateinfo, str);
	format(str, 128, "{DAA520}- {FFFFFF}Za vise informacija posetite nasu stranicu: {DAA520}www.pc-rp.com\n");
	strcat(updateinfo, str);
	ShowPlayerDialog(playerid, DIALOG_UPDATE, DIALOG_STYLE_MSGBOX, ver, updateinfo, "Potvrdi", "");
	return 1;
}
CMD:gethere(playerid, params[], help)
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1 && PlayerInfo[playerid][pVip] < 3) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	new id, str[128], Float:X, Float:Y, Float:Z;
	if(sscanf(params, "u", id)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/gethere [id]");
	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije povezan!");
	if(ulogovan[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije ulogovan!");
	if(PlayerInfo[id][pAdmin] > 1 && PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete admina!");
	if(PlayerInfo[id][pHelper] > 1 && (PlayerInfo[playerid][pAdmin] < 1 || PlayerInfo[playerid][pHelper] < 1)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete helpera!");
	GetPlayerPos(playerid, X, Y, Z);
	new int = GetPlayerInterior(playerid);
	if(IsPlayerInAnyVehicle(id))
	{
	    SetVehiclePos(GetPlayerVehicleID(id), X+1, Y+1, Z+1);
	    PutPlayerInVehicle(id, GetPlayerVehicleID(id), 0);
	}
	else
	{
	    taz_SetPlayerPos(id, X+0.5, Y+0.5, Z);
	}
	SetPlayerInterior(id, int);
	new pName[MAX_PLAYER_NAME], pName1[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(id, pName1, sizeof(pName1));
	format(str, 128, "{A13C0A}%s {FFFFFF}je teleportovao {A13C0A}%s{FFFFFF} do sebe!", pName, pName1);
	WarningPoruka(str);
	format(str, 128, "%s je teleportovao %s do sebe!", pName,pName1);
	WarLog(str);
	format(str, 128, "{FFFFFF}Teleportovao si{A13C0A} %s{FFFFFF} do sebe!", pName1);
	SCM(playerid, -1, str);
	format(str, 128, "{A13C0A}%s{FFFFFF} vas je teleportovao do sebe!", pName);
	SCM(id, -1, str);
	return 1;
}
CMD:goto(playerid, params[], help)
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pVip] < 1 && PlayerInfo[playerid][pHelper] < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	new id, str[128], Float:X, Float:Y, Float:Z;
	if(sscanf(params, "u", id)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/goto [id]");
	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije povezan!");
	if(ulogovan[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije ulogovan!");
	if(PlayerInfo[id][pAdmin] > 1 && PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete do admina!");
	if(PlayerInfo[id][pHelper] > 1 && (PlayerInfo[playerid][pAdmin] < 1 || PlayerInfo[playerid][pHelper] < 1)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete do helpera!");
	GetPlayerPos(id, X, Y, Z);
	new int = GetPlayerInterior(id);
	if(IsPlayerInAnyVehicle(playerid))
	{
	    SetVehiclePos(GetPlayerVehicleID(playerid), X+1, Y+1, Z+1);
	    PutPlayerInVehicle(playerid, GetPlayerVehicleID(playerid), 0);
	}
	else
	{
	    taz_SetPlayerPos(playerid, X+0.5, Y+0.5, Z);
	}
	SetPlayerInterior(playerid, int);
	new pName[MAX_PLAYER_NAME], pName1[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(id, pName1, sizeof(pName1));
	format(str, 128, "{A13C0A}%s {FFFFFF}se teleportovao do {A13C0A}%s{FFFFFF}!", pName, pName1);
	WarningPoruka(str);
	format(str, 128, "%s se teleportovao do %s!", pName,pName1);
	WarLog(str);
	format(str, 128, "{FFFFFF}Teleportovao si se do{A13C0A} %s{FFFFFF}!", pName1);
	SCM(playerid, -1, str);
	format(str, 128, "{A13C0A}%s{FFFFFF} se teleportovao do vas!", pName);
	SCM(id, -1, str);
	return 1;
}
CMD:freeze( playerid, params[], help )
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	new id, str[128];
	if(sscanf(params, "u", id)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/freeze [id]");
	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije povezan!");
	if(ulogovan[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije ulogovan!");
	TogglePlayerControllable(id, false);
	new pName[MAX_PLAYER_NAME], pName1[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(id, pName1, sizeof(pName1));
	format(str, 128, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je zaledio igraca {A13C0A}%s{FFFFFF}!", pName, pName1);
	WarningPoruka(str);
	format(str, 128, "Admin %s je zaledio igraca %s!", pName,pName1);
	WarLog(str);
	format(str, 128, "{FFFFFF}Zaledili ste igraca{A13C0A} %s {FFFFFF}!", pName1);
	SCM(playerid, -1, str);
	return 1;
}
CMD:unfreeze( playerid, params[], help )
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	new id, str[128];
	if(sscanf(params, "u", id)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/unfreeze [id]");
	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije povezan!");
	if(ulogovan[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije ulogovan!");
	TogglePlayerControllable(id, true);
	SetCameraBehindPlayer(id);
	new pName[MAX_PLAYER_NAME], pName1[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(id, pName1, sizeof(pName1));
	format(str, 128, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je odledio igraca {A13C0A}%s{FFFFFF}!", pName, pName1);
	WarningPoruka(str);
	format(str, 128, "Admin %s je odledio igraca %s!", pName,pName1);
	WarLog(str);
	format(str, 128, "{FFFFFF}Odledili ste igraca{A13C0A} %s {FFFFFF}!", pName1);
	SCM(playerid, -1, str);
	return 1;
}
CMD:spec( playerid, params[], help )
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	new id, str[128];
	if(sscanf(params, "u", id)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/spec [id]");
	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije povezan!");
	GetPlayerPos(playerid, pSpecPos[playerid][0], pSpecPos[playerid][1], pSpecPos[playerid][2]);
	if(pSpec[playerid] != -1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Vec specate nekoga! (/specoff)");
	if(ulogovan[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije ulogovan!");
	if(id == playerid) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete sebe!");
	new pName[MAX_PLAYER_NAME], pName1[MAX_PLAYER_NAME];
	PlayerInfo[playerid][pSkin] = GetPlayerSkin(playerid);
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(id, pName1, sizeof(pName1));
	format(str, 128, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}speca igraca {A13C0A}%s{FFFFFF}!", pName, pName1);
	WarningPoruka(str);
	format(str, 128, "Admin %s speca igraca %s!", pName,pName1);
	WarLog(str);
	format(str, 128, "{FFFFFF}Specate igraca{A13C0A} %s {FFFFFF}!", pName1);
	SCM(playerid, -1, str);
	TogglePlayerSpectating(playerid, true);
	PlayerSpectatePlayer(playerid, id);
	GetPlayerPos(playerid, pSpecPos[playerid][0], pSpecPos[playerid][1], pSpecPos[playerid][2]);
	pSpec[playerid] = id;
	return 1;
}
CMD:specoff( playerid, params[], help )
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	new pName[MAX_PLAYER_NAME], pName1[MAX_PLAYER_NAME], str[128];
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(pSpec[playerid], pName1, sizeof(pName1));
	format(str, 128, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je prestao da speca igraca {A13C0A}%s{FFFFFF}!", pName, pName1);
	WarningPoruka(str);
	format(str, 128, "Admin %s je prestao da speca igraca %s!", pName,pName1);
	WarLog(str);
	format(str, 128, "{FFFFFF}Prestali ste da specate igraca{A13C0A} %s {FFFFFF}!", pName1);
	SCM(playerid, -1, str);
	TogglePlayerSpectating(playerid, false);
	taz_SetPlayerPos(playerid, pSpecPos[playerid][0], pSpecPos[playerid][1], pSpecPos[playerid][2]);
	SetCameraBehindPlayer(playerid);
	pSpec[playerid] = -1;
	SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
	return 1;
}
CMD:setskin( playerid, params[], help )
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	new id, skin, str[128];
	if(sscanf(params, "ui", id, skin)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/setskin [id] [skin]");
	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije povezan!");
	if(ulogovan[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije ulogovan!");
	if(skin < 1 || skin > 311) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Skin mora biti izmedju 1 i 311!");
	new pName[MAX_PLAYER_NAME], pName1[MAX_PLAYER_NAME];
	SetPlayerSkin(id, skin);
	PlayerInfo[id][pSkin] = skin;
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(id, pName1, sizeof(pName1));
	format(str, 128, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je postavio skin {A13C0A}%d {FFFFFF}igracu {A13C0A}%s{FFFFFF}!", pName, skin,pName1);
	WarningPoruka(str);
	format(str, 128, "Admin %s je postavio skin %d igracu %s!", pName,skin,pName1);
	WarLog(str);
	format(str, 128, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}Vam je postavio skin {A13C0A}%d!", pName,skin);
	SCM(id, -1, str);
	format(str, 128, "{FFFFFF}Igracu{A13C0A} %s {FFFFFF}ste postavili skin {A13C0A}%d!", pName1,skin);
	SCM(playerid, -1, str);
	SavePlayer(id);
	return 1;
}
CMD:adminmenu( playerid, params[], help )
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 9) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	ShowPlayerDialog(playerid, DIALOG_ADMINMENU, DIALOG_STYLE_LIST, "{DAA520}Admin Menu", "{FFFFFF}Happy Hours\nHappy Job\nPocetni Stats\nRestartuj Server", "{DAA520}Izaberi", "{DAA520}Odustani");
	return 1;
}
CMD:fill( playerid, params[], help )
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste u vozilu!");
	if(VehInfo[GetPlayerVehicleID(playerid)][vEngine] == 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Morate ugasiti motor vozila! (/engine)");
	if(VehInfo[GetPlayerVehicleID(playerid)][vFuel] >= 60) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Gorivo je vec puno do vrha!");
	SetTimerEx("Filluj", 8000, false, "i", playerid);
	return 1;
}
CMD:pojas( playerid, params[], help )
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste u vozilu!");
	if(pPojas[playerid] == 0)
	{
		new name[MAX_PLAYER_NAME], str[128];
		GetPlayerName(playerid, name, sizeof(name));
		format(str, sizeof(str), "{8C4D85}* %s vezuje pojas.", name);
		SendMes(20.0, playerid, COLOR_RED, str);
		pPojas[playerid] = 1;
	}
	else
	{
		new name[MAX_PLAYER_NAME], str[128];
		GetPlayerName(playerid, name, sizeof(name));
		format(str, sizeof(str), "{8C4D85}* %s skida pojas.", name);
		SendMes(20.0, playerid, COLOR_RED, str);
		pPojas[playerid] = 0;
	}
	return 1;
}
CMD:dostignuca( playerid, params[], help )
{
 	new str[127], string[3072];
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	format(string, sizeof(string), "{FFFFFF}Dostignuce\t{FFFFFF}Status\t{FFFFFF}Nagrada\n");
	if(PlayerInfo[playerid][pLevel] < 5)
	{ format(str, sizeof(str), "{FFFFFF}Dostigni level {1985A6}5\t{A8A832}[%d/5]\t{FFFFFF}500xp\n", PlayerInfo[playerid][pLevel]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Dostigni level {1985A6}5\t{32A852}Postgao\t{FFFFFF}500xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pLevel] < 10)
	{ format(str, sizeof(str), "{FFFFFF}Dostigni level {1985A6}10\t{A8A832}[%d/10]\t{FFFFFF}1000xp\n", PlayerInfo[playerid][pLevel]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Dostigni level {1985A6}10\t{32A852}Postigao\t{FFFFFF}1000xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pLevel] < 20)
	{ format(str, sizeof(str), "{FFFFFF}Dostigni level {1985A6}20\t{A8A832}[%d/20]\t{FFFFFF}3000xp\n", PlayerInfo[playerid][pLevel]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Dostigni level {1985A6}20\t{32A852}Postigao\t{FFFFFF}3000xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pPenzija] != 1)
	{ format(str, sizeof(str), "{FFFFFF}Penzionisi se\t{A8A832}Nisi postgao\t{FFFFFF}3000xp\n"); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Penzionisi se\t{32A852}Postigao\t{FFFFFF}3000xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pPoslovi] < 10)
	{ format(str, sizeof(str), "{FFFFFF}Zavrsi {1985A6}10 {FFFFFF}poslova\t{A8A832}[%d/10]\t{FFFFFF}100xp\n", PlayerInfo[playerid][pPoslovi]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Zavrsi {1985A6}10 {FFFFFF}poslova\t{32A852}Postigao\t{FFFFFF}100xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pPoslovi] < 20)
	{ format(str, sizeof(str), "{FFFFFF}Zavrsi {1985A6}20 {FFFFFF}poslova\t{A8A832}[%d/20]\t{FFFFFF}250xp\n", PlayerInfo[playerid][pPoslovi]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Zavrsi {1985A6}20 {FFFFFF}poslova\t{32A852}Postigao\t{FFFFFF}250xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pPoslovi] < 30)
	{ format(str, sizeof(str), "{FFFFFF}Zavrsi {1985A6}30 {FFFFFF}poslova\t{A8A832}[%d/30]\t{FFFFFF}500xp\n", PlayerInfo[playerid][pPoslovi]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Zavrsi {1985A6}30 {FFFFFF}poslova\t{32A852}Postigao\t{FFFFFF}500xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pPoslovi] < 50)
	{ format(str, sizeof(str), "{FFFFFF}Zavrsi {1985A6}50 {FFFFFF}poslova\t{A8A832}[%d/50]\t{FFFFFF}1000xp\n", PlayerInfo[playerid][pPoslovi]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Zavrsi {1985A6}50 {FFFFFF}poslova\t{32A852}Postigao\t{FFFFFF}1000xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pPoslovi] < 100)
	{ format(str, sizeof(str), "{FFFFFF}Zavrsi {1985A6}100 {FFFFFF}poslova\t{A8A832}[%d/100]\t{FFFFFF}2500xp\n", PlayerInfo[playerid][pPoslovi]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Zavrsi {1985A6}100 {FFFFFF}poslova\t{32A852}Postigao\t{FFFFFF}2500xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pPoslovi] < 150)
	{ format(str, sizeof(str), "{FFFFFF}Zavrsi {1985A6}150 {FFFFFF}poslova\t{A8A832}[%d/150]\t{FFFFFF}5000xp\n", PlayerInfo[playerid][pPoslovi]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Zavrsi {1985A6}150 {FFFFFF}poslova\t{32A852}Postigao\t{FFFFFF}5000xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pSatiIgranja] < 10)
	{ format(str, sizeof(str), "{FFFFFF}Skupi {1985A6}10 {FFFFFF}sati igranja\t{A8A832}[%d/10]\t{FFFFFF}50xp\n", PlayerInfo[playerid][pSatiIgranja]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Skupi {1985A6}10 {FFFFFF}sati igranja\t{32A852}Postigao\t{FFFFFF}50xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pSatiIgranja] < 20)
	{ format(str, sizeof(str), "{FFFFFF}Skupi {1985A6}20 {FFFFFF}sati igranja\t{A8A832}[%d/20]\t{FFFFFF}150xp\n", PlayerInfo[playerid][pSatiIgranja]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Skupi {1985A6}20 {FFFFFF}sati igranja\t{32A852}Postigao\t{FFFFFF}150xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pSatiIgranja] < 50)
	{ format(str, sizeof(str), "{FFFFFF}Skupi {1985A6}50 {FFFFFF}sati igranja\t{A8A832}[%d/50]\t{FFFFFF}500xp\n", PlayerInfo[playerid][pSatiIgranja]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Skupi {1985A6}50 {FFFFFF}sati igranja\t{32A852}Postigao\t{FFFFFF}500xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pSatiIgranja] < 100)
	{ format(str, sizeof(str), "{FFFFFF}Skupi {1985A6}100 {FFFFFF}sati igranja\t{A8A832}[%d/100]\t{FFFFFF}1000xp\n", PlayerInfo[playerid][pSatiIgranja]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Skupi {1985A6}100 {FFFFFF}sati igranja\t{32A852}Postigao\t{FFFFFF}1000xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pSatiIgranja] < 250)
	{ format(str, sizeof(str), "{FFFFFF}Skupi {1985A6}250 {FFFFFF}sati igranja\t{A8A832}[%d/250]\t{FFFFFF}2500xp\n", PlayerInfo[playerid][pSatiIgranja]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Skupi {1985A6}250 {FFFFFF}sati igranja\t{32A852}Postigao\t{FFFFFF}2500xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pPotrosio] < 100000)
	{ format(str, sizeof(str), "{FFFFFF}Potrosi {1985A6}$100.000\t{A8A832}[%d/100000]\t{FFFFFF}300xp\n", PlayerInfo[playerid][pPotrosio]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Potrosi {1985A6}$100.000\t{32A852}Postigao\t{FFFFFF}300xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pPotrosio] < 200000)
	{ format(str, sizeof(str), "{FFFFFF}Potrosi {1985A6}$200.000\t{A8A832}[%d/100000]\t{FFFFFF}500xp\n", PlayerInfo[playerid][pPotrosio]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Potrosi {1985A6}$200.000\t{32A852}Postigao\t{FFFFFF}500xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pPotrosio] < 1000000)
	{ format(str, sizeof(str), "{FFFFFF}Potrosi {1985A6}$1.000.000\t{A8A832}[%d/1000000]\t{FFFFFF}1000xp\n", PlayerInfo[playerid][pPotrosio]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Potrosi {1985A6}$1.000.000\t{32A852}Postigao\t{FFFFFF}1000xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pPotrosio] < 2000000)
	{ format(str, sizeof(str), "{FFFFFF}Potrosi {1985A6}$2.000.000\t{A8A832}[%d/2000000]\t{FFFFFF}3000xp\n", PlayerInfo[playerid][pPotrosio]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Potrosi {1985A6}$2.000.000\t{32A852}Postigao\t{FFFFFF}1000xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pKupljenaVozila] < 1)
	{ format(str, sizeof(str), "{FFFFFF}Kupi svoje {1985A6}prvo {FFFFFF}vozilo u salonu\t{A8A832}[%d/1]\t{FFFFFF}300xp\n", PlayerInfo[playerid][pKupljenaVozila]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Kupi svoje {1985A6}prvo {FFFFFF}vozilo u salonu\t{32A852}Postigao\t{FFFFFF}300xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pKupljenaVozila] < 2)
	{ format(str, sizeof(str), "{FFFFFF}Kupi svoje {1985A6}drugo {FFFFFF}vozilo u salonu\t{A8A832}[%d/2]\t{FFFFFF}700xp\n", PlayerInfo[playerid][pKupljenaVozila]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Kupi svoje {1985A6}drugo {FFFFFF}vozilo u salonu\t{32A852}Postigao\t{FFFFFF}700xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pKupljenaVozila] < 3)
	{ format(str, sizeof(str), "{FFFFFF}Kupi svoje {1985A6}trece {FFFFFF}vozilo u salonu\t{A8A832}[%d/3]\t{FFFFFF}1000xp\n", PlayerInfo[playerid][pKupljenaVozila]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Kupi svoje {1985A6}trece {FFFFFF}vozilo u salonu\t{32A852}Postigao\t{FFFFFF}1000xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pUhapsio] < 10)
	{ format(str, sizeof(str), "{FFFFFF}Uhapsi {1985A6}10 {FFFFFF}igraca\t{A8A832}[%d/10]\t{FFFFFF}300xp\n", PlayerInfo[playerid][pUhapsio]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Uhapsi {1985A6}10 {FFFFFF}igraca\t{32A852}Postigao\t{FFFFFF}300xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pUhapsio] < 20)
	{ format(str, sizeof(str), "{FFFFFF}Uhapsi {1985A6}20 {FFFFFF}igraca\t{A8A832}[%d/20]\t{FFFFFF}700xp\n", PlayerInfo[playerid][pUhapsio]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Uhapsi {1985A6}20 {FFFFFF}igraca\t{32A852}Postigao\t{FFFFFF}700xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pUhapsio] < 30)
	{ format(str, sizeof(str), "{FFFFFF}Uhapsi {1985A6}30 {FFFFFF}igraca\t{A8A832}[%d/30]\t{FFFFFF}1300xp\n", PlayerInfo[playerid][pUhapsio]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Uhapsi {1985A6}30 {FFFFFF}igraca\t{32A852}Postigao\t{FFFFFF}1300xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pOpljackao] < 1)
	{ format(str, sizeof(str), "{FFFFFF}Opljackaj {1985A6}banku/zlataru\t{A8A832}[%d/1]\t{FFFFFF}300xp\n", PlayerInfo[playerid][pOpljackao]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Opljackaj {1985A6}banku/zlataru\t{32A852}Postigao\t{FFFFFF}300xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pOpljackao] < 3)
	{ format(str, sizeof(str), "{FFFFFF}Opljackaj {1985A6}banku/zlataru 3 {FFFFFF}puta\t{A8A832}[%d/3]\t{FFFFFF}1000xp\n", PlayerInfo[playerid][pOpljackao]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Opljackaj {1985A6}banku/zlataru 3 {FFFFFF}puta\t{FFFFFF}1000xp\n"); }
	strcat(string, str);
	if(PlayerInfo[playerid][pOpljackao] < 5)
	{ format(str, sizeof(str), "{FFFFFF}Opljackaj {1985A6}banku/zlataru 5 {FFFFFF}puta\t{A8A832}[%d/5]\t{FFFFFF}1500xp\n", PlayerInfo[playerid][pOpljackao]); }
	else
	{ format(str, sizeof(str), "{FFFFFF}Opljackaj {1985A6}banku/zlataru 5 {FFFFFF}puta\t{FFFFFF}1500xp\n"); }
	strcat(string, str);
	SPD(playerid, DIALOG_HELP, DIALOG_STYLE_TABLIST_HEADERS, "{1985A6}Lista vasih dostignuca", string, "{FFFFFF}Napusti", "");
    return 1;
}
CMD:napravikontejner( playerid, params[], help )
{
 	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] >= 6)
 	{
	  	if(editing[playerid] > 0) return SCM(playerid, -1, "Vec editujete nesto.");
     	new Float:X,Float:Y,Float:Z, i = next_container( MAX_KONTEJNERA );
    	GetPlayerPos(playerid, X,Y,Z);
    	k_object[ i ] = CreateObject(3035, X,Y,Z, 0.0,0.0,0.0, 300.0);
    	EditObject(playerid, k_object[ i ]);
    	creates_container[ playerid ] = i;
    	SendClientMessage(playerid, -1, "{0070D0}[ KONTEJNER SYSTEM ]: {FFFFFF}Uspesno ste poceli kreiranje kontejnera.");
    	editing[playerid] = 101;
	}
    return 1;
}
CMD:kontejner( playerid,paramas[], help )
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
    for( new i = 0; i < MAX_KONTEJNERA; i++ ) {
        if( IsPlayerInRangeOfPoint( playerid, 2.0, KontejnerInfo[ i ][ koX ], KontejnerInfo[ i ][ koY ], KontejnerInfo[ i ][ koZ ] )) {
            if( k_pretrazen[playerid] == 1 ) return SendClientMessage(playerid, -1, "{FF0000}GRESKA: {FFFFFF}Kontejner je pretrazen, sacekaj malo !");
            if(pretrezujeKontejner[playerid] == 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Vec pretrazujete kontejner!");
            SetTimerEx( "searching_container", 30000, false, "d", playerid );
            TogglePlayerControllable( playerid, 0 );
            SendClientMessage( playerid, -1, "{1985A6}[Kontejner]: {FFFFFF}Pretrazujete, sacekajte par sekundi.." );
            pretrezujeKontejner[playerid] = 1;
            ApplyAnimation(playerid, "ped", "IDLE_tired", 4.1, 1, 1, 1, 1, 0, 1);
        }
    }
    return 1;
}
CMD:preuzmivozilo(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, 89.1872,1081.1329,13.6094)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste kod garaze salona vozila!");
	if(VoziloInfo[PlayerInfo[playerid][pVozilo1]][vUSalonu] == 0 && VoziloInfo[PlayerInfo[playerid][pVozilo2]][vUSalonu] == 0 && VoziloInfo[PlayerInfo[playerid][pVozilo3]][vUSalonu] == 0 && VoziloInfo[PlayerInfo[playerid][pVozilo4]][vUSalonu] == 0 && VoziloInfo[PlayerInfo[playerid][pVozilo5]][vUSalonu] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Nijedno od vasih vozila se ne nalazi u garazi salona!");
	if(VoziloInfo[PlayerInfo[playerid][pVozilo1]][vUSalonu] == 1)
	{
		SetVehiclePos(PlayerInfo[playerid][pVozilo1], 93.3321,1081.7015,14.2094);
		PutPlayerInVehicle(playerid, PlayerInfo[playerid][pVozilo1], 0);
		SetCameraBehindPlayer(playerid);
	}
	else if(VoziloInfo[PlayerInfo[playerid][pVozilo2]][vUSalonu] == 1)
	{
		SetVehiclePos(PlayerInfo[playerid][pVozilo2], 93.3321,1081.7015,14.2094);
		PutPlayerInVehicle(playerid, PlayerInfo[playerid][pVozilo2], 0);
		SetCameraBehindPlayer(playerid);
	}
	else if(VoziloInfo[PlayerInfo[playerid][pVozilo3]][vUSalonu] == 1)
	{
		SetVehiclePos(PlayerInfo[playerid][pVozilo3], 93.3321,1081.7015,14.2094);
		PutPlayerInVehicle(playerid, PlayerInfo[playerid][pVozilo3], 0);
		SetCameraBehindPlayer(playerid);
	}
	else if(VoziloInfo[PlayerInfo[playerid][pVozilo4]][vUSalonu] == 1)
	{
		SetVehiclePos(PlayerInfo[playerid][pVozilo4], 93.3321,1081.7015,14.2094);
		PutPlayerInVehicle(playerid, PlayerInfo[playerid][pVozilo4], 0);
		SetCameraBehindPlayer(playerid);
	}
	else if(VoziloInfo[PlayerInfo[playerid][pVozilo5]][vUSalonu] == 1)
	{
		SetVehiclePos(PlayerInfo[playerid][pVozilo5], 93.3321,1081.7015,14.2094);
		PutPlayerInVehicle(playerid, PlayerInfo[playerid][pVozilo5], 0);
		SetCameraBehindPlayer(playerid);
	}
	else {}
	SCM(playerid, -1, "{1985A6}[Salon Vozila]: {FFFFFF}Uspesno ste preuzeli vase vozilo iz garaze. Ako ga ne preparkirate na nekom drugom mestu, bice ponovo u garazi!");
	SCM(playerid, -1, "{1985A6}[Salon Vozila]: {FFFFFF}Vozilo parkirate koriscenjem komande /vpark!");
	return 1;
}

CMD:vpark(playerid, params[])
{
	new i = GetPlayerVehicleID(playerid), Float:X, Float:Y, Float:Z, Float:R;
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Morate biti u svom vozilu!");
	if(i != PlayerInfo[playerid][pVozilo1] && i != PlayerInfo[playerid][pVozilo2] && i != PlayerInfo[playerid][pVozilo3] && i != PlayerInfo[playerid][pVozilo4] && i != PlayerInfo[playerid][pVozilo5]) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Morate biti u svom vozilu!");
	if(IsPlayerInRangeOfPoint(playerid, 20.0, 89.1872,1081.1329,13.6094)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete parkrati vozilo blizu salona!");
	GetVehiclePos(i, X, Y, Z);
	GetVehicleZAngle(i, R);
	VoziloInfo[i][vX] = X;
	VoziloInfo[i][vY] = Y;
	VoziloInfo[i][vZ] = Z;
	VoziloInfo[i][vRot] = R;
	if(VoziloInfo[PlayerInfo[playerid][pVozilo1]][vUSalonu] == 1)
	{ VoziloInfo[PlayerInfo[playerid][pVozilo1]][vUSalonu] = 0; }
	if(VoziloInfo[PlayerInfo[playerid][pVozilo2]][vUSalonu] == 1)	
	{ VoziloInfo[PlayerInfo[playerid][pVozilo2]][vUSalonu] = 0; }
	if(VoziloInfo[PlayerInfo[playerid][pVozilo3]][vUSalonu] == 1)
	{ VoziloInfo[PlayerInfo[playerid][pVozilo3]][vUSalonu] = 0; }
	if(VoziloInfo[PlayerInfo[playerid][pVozilo4]][vUSalonu] == 1)
	{ VoziloInfo[PlayerInfo[playerid][pVozilo4]][vUSalonu] = 0; }
	if(VoziloInfo[PlayerInfo[playerid][pVozilo5]][vUSalonu] == 1)
	{ VoziloInfo[PlayerInfo[playerid][pVozilo5]][vUSalonu] = 0; }
	SaveVozilo(i);
	SCM(playerid, -1, "{1985A6}[Salon Vozila]: {FFFFFF}Uspesno ste parkirali vozilo, od sada ce se ovde stvarati!");
	SetVehicleToRespawn(i);
	SetVehiclePos(i, X, Y, Z);
	SetVehicleZAngle(i, R);
	return 1;
}

CMD:pay(playerid, params[])
{
	new id, Float:X, Float:Y, Float:Z, kol, str[128];
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pLevel] < 3) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Morate biti najmanje level 3!");
	if(sscanf(params, "ui", id, kol)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/pay [id] [kolicina]");
	if(ulogovan[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije ulogovan!");
	GetPlayerPos(id, X, Y, Z);
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, X, Y, Z)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije u vasoj blizini!");
	if(kol < 1 || kol > 99999) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete manje od $1 i vise od $99.999!");
	GivePlayerMoney(playerid, -kol);
	GivePlayerMoney(id, kol);
	new pName[MAX_PLAYER_NAME], pName1[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(id, pName1, sizeof(pName1));
	format(str, 128, "{FFFFFF}Igrac{A13C0A} %s {FFFFFF}je platio {A13C0A}$%d {FFFFFF}igracu {A13C0A}%s{FFFFFF}!", pName,kol,pName1);
	WarningPoruka(str);
	format(str, 128, "Igrac %s je platio $%d igracu %s!", pName,kol,pName1);
	WarLog(str);
	format(str, 128, "{FFFFFF}Igrac{A13C0A} %s {FFFFFF}Vam je dao {A13C0A}$%d!", pName,kol);
	SCM(id, -1, str);
	format(str, 128, "{FFFFFF}Igracu{A13C0A} %s {FFFFFF}ste dali {A13C0A}$%d!", pName1,kol);
	SCM(playerid, -1, str);
	return 1;
}

CMD:fine(playerid, params[])
{
	new id, kol, str[160], text[32];
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 3) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	if(sscanf(params, "uis", id, kol, text)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/fine [id] [kolicina] [razlog]");
	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije povezan!");
	if(ulogovan[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije ulogovan!");
	if(kol < 1 || kol > 200000) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete manje od $1 i vise od $200.000!");
	taz_GivePlayerMoney(id, -kol);
	new pName[MAX_PLAYER_NAME], pName1[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(id, pName1, sizeof(pName1));
	format(str, 128, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je novcano kaznio igraca {A13C0A}%s {FFFFFF}sa {A13C0A}$%d{FFFFFF}, razlog: {A13C0A}%s!", pName,pName1, kol, text);
	WarningPoruka(str);
	format(str, 160, "{FFFFFF}Admin{940007} %s {FFFFFF}je novcano kaznio igraca {940007}%s {FFFFFF}sa {940007}$%d{FFFFFF}, razlog: {940007}%s!", pName,pName1, kol, text);
	SCMTA(-1, str);
	format(str, 160, "Admin %s je novcano kaznio igraca %s  sa $%d, razlog: %s!", pName,pName1, kol, text);
	WarLog(str);
	format(str, 160, "{FFFFFF}Admin {940007}%s {FFFFFF}vas je novcano kaznio sa {940007}$%d{FFFFFF}, razlog: {940007}%s!", pName, kol, text);
	SCM(id, -1, str);
	format(str, 160, "{FFFFFF}Kaznili ste igraca {A13C0A}%s {FFFFFF}sa {A13C0A}$%d{FFFFFF}, razlog: {A13C0A}%s!", pName1, kol, text);
	SCM(playerid, -1, str);
	SavePlayer(id);
	return 1;
}
CMD:dopunizalihe(playerid, params[])
{
	new id, kol, str[256];
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	if(sscanf(params, "ii", id, kol)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/dopunizalihewa [slot] [kolicina]");
	if(id < 0 || id > 51) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Slot mora biti izmedju 0 i 51!");
	zalihevozila[id]+=kol;
	format(str, 256, "{1985A6}[Server]: {FFFFFF}Uspesno ste dopunili zalihe vozila {1985A6}%s {FFFFFF}za {1985A6}%d{FFFFFF}!", ImenaVozila[SalonskaVozila[id][0]-400], id);
	SCM(playerid, -1, str);
	SacuvajStatistiku();
	new pName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je dopunio zalihe vozila id {A13C0A}%s {FFFFFF}za {A13C0A}%d{FFFFFF}!", pName,ImenaVozila[SalonskaVozila[id][0]-400], id);
	WarningPoruka(str);
	format(str, 256, "Admin %s je dopunio zalihe vozila id %s za %d!", pName,ImenaVozila[SalonskaVozila[id][0]-400], id);
	WarLog(str);
	return 1;
}

CMD:pomoc(playerid, params[])
{
	new str[64], string[3500];
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	format(str, sizeof(str), "{FFFFFF}/phonehelp -{1985A6} Pomoc oko telefona\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/kucahelp -{1985A6} Pomoc oko komandi kuce\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/firmahelp -{1985A6} Pomoc oko komandi firme\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/vhelp -{1985A6} Pomoc oko komandi privatnog vozila\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/jobhelp -{1985A6} Pomoc oko komandi posla\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/adminhelp -{1985A6} Pomoc oko admin komandi\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/helperhelp -{1985A6} Pomoc oko helper komandi\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/viphelp -{1985A6} Pomoc oko vip komandi\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/promoterhelp -{1985A6} Pomoc oko promoter komandi\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/bankhelp -{1985A6} Pomoc oko banke\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/n -{1985A6} Chat za novajlije\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/b -{1985A6} OOC chat\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/me /do /try -{1985A6} RP komande\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/askq -{1985A6} Postavljanje pitanja STAFF timu\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/report -{1985A6} Prijavljivanje igraca STAFF timu\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/rlocate -{1985A6} Lociranje rent vozila\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/zapalicigaru -{1985A6} Paljenje cigare\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/ugasicigaru -{1985A6} Gasenje cigare\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/kaciga -{1985A6} Stavljanje kacige\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/playersinradius -{1985A6} Lista igraca u blizini\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/pojas -{1985A6} Vezivanje pojasa\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/popravivozilo -{1985A6} Popravka vozila alatom\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/akcenat -{1985A6} Postavljanje akcenta igraca\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/pgreet -{1985A6} Pozdravljanje igraca\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/tehnicki -{1985A6} Obavljanje tehnickog pregleda\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/playercc -{1985A6} Ciscenje sopstvenog chata\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/grebgreb -{1985A6} Igranje nagradne igre\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/skills -{1985A6} Prikazuje vestine igraca\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/drop -{1985A6} Bacanje predmeta iz inventorija\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/pickup -{1985A6} Kupljenje predmeta sa poda\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/daj -{1985A6} Davanje predmeta iz inventorija igracu\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/drzavljanstvo -{1985A6} Promena drzavljanstva\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/platikauciju -{1985A6} Placanje kaucije\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/registrujvozilo -{1985A6} Registracija vozila\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/sef -{1985A6} Koriscenje sefa\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/ss -{1985A6} Prikazivanje statistike drugim igracima\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/stats -{1985A6} Prikazivanje statistike\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/sl -{1985A6} Prikazivanje dozvola drugim igracima\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/usedrugs -{1985A6} Koriscenje narkotika\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/refill -{1985A6} Dopunjavanje rezervoara\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/pay -{1985A6} Davanje novca igracu\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/spawnchange -{1985A6} Menjanje spawn-a\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/pm -{1985A6} Privatna poruka\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/eject -{1985A6} Izbacivanje igraca iz vozila\n");
	strcat(string, str);
	format(str, sizeof(str), "{FFFFFF}/pravila -{1985A6} Pokazuje pravila servera\n");
	strcat(string, str);
	SPD(playerid, DIALOG_HELP, DIALOG_STYLE_MSGBOX, "{1985A6}Lista komandi", string, "{FFFFFF}Napusti", "");
	return 1;
}
CMD:changeorg(playerid, params[])
{
	new id;
	new nfile[128];
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	if(sscanf(params, "i", id)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/changeorg [id]");
	format(nfile, sizeof(nfile), ORGPATH, id);
    if(!fexist(nfile)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste uneli id postojece organizacije!");
    chorg[playerid] = id;
    new pName[MAX_PLAYER_NAME], str[128];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je zapoceo izmene organizacije {A13C0A}%s {FFFFFF}!", pName,OrgInfo[id][orgIme]);
	WarningPoruka(str);
	format(str, 256, "Admin %s je zapoceo izmene organizacije id %s!", pName,OrgInfo[id][orgIme]);
	WarLog(str);
    SPD(playerid, DIALOG_CHANGEORG, DIALOG_STYLE_LIST, "{1985A6}Menjanje organizacije", "{FFFFFF}Ime\nTip(Drzavna/Ilegalna)\nIme Lider Ranka\nIme ranka 1\nIme ranka 2\nIme ranka 3\nIme ranka 4\nIme ranka 5\nIme ranka 6\nIme ranka 7\nSkin Lidera\nSkin ranka 1\nSkin ranka 2\nSkin ranka 3\nSkin ranka 4\nSkin ranka 5\nSkin ranka 6\nSkin ranka 7", "Potvrdi", "Odustani");
	return 1;
}
CMD:agl(playerid, params[])
{
	new id, tip[64];
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	if(sscanf(params, "is[64]", id, tip)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/agl [id] [tip] | A B C D F letenje plovidba oruzje");
	if(ulogovan[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije povezan!");
	if(!strcmp(tip, "A", false))
	{
		PlayerInfo[id][pAL] = 1;
		SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste postavili dozvolu kategorije A igracu!");
		SCM(id, -1, "{1985A6}[Server]: {FFFFFF}Admin vam je dao dozvolu kategorije A!");
	}
	else if(!strcmp(tip, "B", false))
	{
		PlayerInfo[id][pBL] = 1;
		SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste postavili dozvolu kategorije B igracu!");
		SCM(id, -1, "{1985A6}[Server]: {FFFFFF}Admin vam je dao dozvolu kategorije B!");
	}
	else if(!strcmp(tip, "C", false))
	{
		PlayerInfo[id][pCL] = 1;
		SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste postavili dozvolu kategorije C igracu!");
		SCM(id, -1, "{1985A6}[Server]: {FFFFFF}Admin vam je dao dozvolu kategorije C!");
	}
	else if(!strcmp(tip, "D", false))
	{
		PlayerInfo[id][pDL] = 1;
		SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste postavili dozvolu kategorije D igracu!");
		SCM(id, -1, "{1985A6}[Server]: {FFFFFF}Admin vam je dao dozvolu kategorije D!");
	}
	else if(!strcmp(tip, "F", false))
	{
		PlayerInfo[id][pFL] = 1;
		SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste postavili dozvolu kategorije F igracu!");
		SCM(id, -1, "{1985A6}[Server]: {FFFFFF}Admin vam je dao dozvolu kategorije F!");
	}
	else if(!strcmp(tip, "letenje", false))
	{
		PlayerInfo[id][pLetenjeL] = 1;
		SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste postavili dozvolu za letenje igracu!");
		SCM(id, -1, "{1985A6}[Server]: {FFFFFF}Admin vam je dao dozvolu za letenje!");
	}
	else if(!strcmp(tip, "plovidba", false))
	{
		PlayerInfo[id][pBrodL] = 1;
		SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste postavili dozvolu za plovidbu igracu!");
		SCM(id, -1, "{1985A6}[Server]: {FFFFFF}Admin vam je dao dozvolu za plovidbu!");
	}
	else if(!strcmp(tip, "oruzje", false))
	{
		PlayerInfo[id][pGunL] = 1;
		SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste postavili dozvolu za oruzje igracu!");
		SCM(id, -1, "{1985A6}[Server]: {FFFFFF}Admin vam je dao dozvolu za oruzje!");
	}
	else return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste uneli odgovarajuci naziv dozvole!");
	new pName[MAX_PLAYER_NAME], str[128], ppName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(id, ppName, sizeof(ppName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je dao dozvolu tipa {A13C0A}%s {FFFFFF}igracu {A13C0A}%s {FFFFFF}!", pName,tip, ppName);
	WarningPoruka(str);
	format(str, 256, "Admin %s je dao dozvolu tipa %s igracu %s!",  pName,tip, ppName);
	WarLog(str);
	return 1;
}
CMD:sl(playerid, params[])
{
	new id, str[128], ima[64], string[1024], pName[MAX_PLAYER_NAME], Float:X, Float:Y, Float:Z;
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(sscanf(params, "i", id)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/sl [id]");
	if(!IsPlayerInRangeOfPoint(playerid, 4.0, X, Y, Z)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste blizu igraca!");
	if(ulogovan[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije povezan!");
	if(PlayerInfo[playerid][pAL] == 0) {format(ima, 64, "Ne poseduje");} else {format(ima, 64, "Poseduje");}
	format(str, sizeof(str), "{1985A6}A Kategorija: {FFFFFF}%s\n", ima);
	strcat(string, str);
	if(PlayerInfo[playerid][pBL] == 0) {format(ima, 64, "Ne poseduje");} else {format(ima, 64, "Poseduje");}
	format(str, sizeof(str), "{1985A6}B Kategorija: {FFFFFF}%s\n", ima);
	strcat(string, str);
	if(PlayerInfo[playerid][pCL] == 0) {format(ima, 64, "Ne poseduje");} else {format(ima, 64, "Poseduje");}
	format(str, sizeof(str), "{1985A6}C Kategorija: {FFFFFF}%s\n", ima);
	strcat(string, str);
	if(PlayerInfo[playerid][pDL] == 0) {format(ima, 64, "Ne poseduje");} else {format(ima, 64, "Poseduje");}
	format(str, sizeof(str), "{1985A6}D Kategorija: {FFFFFF}%s\n", ima);
	strcat(string, str);
	if(PlayerInfo[playerid][pFL] == 0) {format(ima, 64, "Ne poseduje");} else {format(ima, 64, "Poseduje");}
	format(str, sizeof(str), "{1985A6}F Kategorija: {FFFFFF}%s\n", ima);
	strcat(string, str);
	if(PlayerInfo[playerid][pLetenjeL] == 0) {format(ima, 64, "Ne poseduje");} else {format(ima, 64, "Poseduje");}
	format(str, sizeof(str), "{1985A6}Dozvola za letenje: {FFFFFF}%s\n", ima);
	strcat(string, str);
	if(PlayerInfo[playerid][pBrodL] == 0) {format(ima, 64, "Ne poseduje");} else {format(ima, 64, "Poseduje");}
	format(str, sizeof(str), "{1985A6}Dozvola za plovidbu: {FFFFFF}%s\n", ima);
	strcat(string, str);
	if(PlayerInfo[playerid][pGunL] == 0) {format(ima, 64, "Ne poseduje");} else {format(ima, 64, "Poseduje");}
	format(str, sizeof(str), "{1985A6}Dozvola za oruzje: {FFFFFF}%s\n", ima);
	strcat(string, str);
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 128, "{1985A6}Lista dozvola igraca {FFFFFF}%s", pName);
	SPD(id, DIALOG_SL, DIALOG_STYLE_MSGBOX, str, string, "Napusti", "");
	return 1;
}
CMD:dozvole(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, -2032.9714,-115.7158,1035.1719) && !IsPlayerInRangeOfPoint(playerid, 2.0, -2033.4338,-117.4285,1035.1719)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na mestu!");
	if(radi[playerid] != 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Trenutno radite neki posao, prvo ga prekinite! /prekiniposao");
	if(pUniforma[playerid] != 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Prvo morate skinuti uniformu posla!");
	new text[128];
	if(sscanf(params, "s[128]", text)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/dozvole [grad] | fc (Fort Carson) ili bb (Blueberry)");
	if(!strcmp(text, "fc", true))
	{
		SCM(playerid, COLOR_RED, "{DAA520}[Server]: {FFFFFF}Uspesno ste izabrali Fort Carson za polaganje!");
		pIzborZaPolaganje[playerid] = 1;
	}
	else if(!strcmp(text, "bb", true))
	{
		SCM(playerid, COLOR_RED, "{DAA520}[Server]: {FFFFFF}Uspesno ste izabrali Blueberry za polaganje!");
		pIzborZaPolaganje[playerid] = 2;
	}
	else return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste uneli ispravnu skracenicu grada (fc/bb)!");
	SPD(playerid, DIALOG_DOZVOLE, DIALOG_STYLE_LIST, "{1985A6}Lista Dozvola", "{1985A6}A Kategorija {FFFFFF}- Motori - {1985A6}$10.000 {FFFFFF}(Besplatno za igrace ispod nivoa 3)\n{1985A6}B Kategorija {FFFFFF}- Automobili - {1985A6}$20.000 {FFFFFF}(Besplatno za igrace ispod nivoa 3)\n{1985A6}C Kategorija {FFFFFF}- Kamioni - {1985A6}$20.000 {FFFFFF}(Besplatno za igrace ispod nivoa 3)\n{1985A6}D Kategorija {FFFFFF}- Autobusi - {1985A6}$20.000 {FFFFFF}(Besplatno za igrace ispod nivoa 3)\n{1985A6}F Kategorija {FFFFFF}- Traktori - {1985A6}$15.000 {FFFFFF}(Besplatno za igrace ispod nivoa 3)\n{1985A6}Dozvola za {FFFFFF}letenje - {1985A6}$60.000 {FFFFFF}(Besplatno za igrace ispod nivoa 3)\n{1985A6}Dozvola za {FFFFFF}plovidbu - {1985A6}$40.000 {FFFFFF}(Besplatno za igrace ispod nivoa 3)", "Izaberi", "Odustani");
	return 1;
}
CMD:otkaz(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(!IsPlayerInRangeOfPoint(playerid, 2.0, 358.7209,178.6033,1008.3828) || !IsPlayerInRangeOfPoint(playerid, 2.0, 427.3395,148.3786,1003.0827)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na mestu za davanje otkaza!");
	if(PlayerInfo[playerid][pPosao] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Vec ste nezaposleni!");
	if(radi[playerid] != 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Trenutno radite neki posao, prvo ga prekinite! /prekiniposao");
	if(pUniforma[playerid] != 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Prvo morate skinuti uniformu posla!");
	SCM(playerid, -1, "{1985A6}[Otkaz]: {FFFFFF}Uspesno ste dali otkaz!");
	PlayerInfo[playerid][pPosao] = 0;
	SavePlayer(playerid);
	return 1;
}
CMD:poslovi(playerid, params[])
{	
	new string[2056], str[128], n = sizeof(Poslovi);
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	for(new i = 0; i < n; i++)
	{
		format(str, sizeof(str), "{1985A6}[{FFFFFF}%d{1985A6}] {FFFFFF}- %s\n", i+1, Poslovi[i]);
		strcat(string, str);
	}
	ShowPlayerDialog(playerid, DIALOG_GOTOVPOSAO, DIALOG_STYLE_MSGBOX, "{1985A6}Lista Poslova", string, "Napusti", "");
	return 1;
}
CMD:f(playerid, params[])
{
	new n = PlayerInfo[playerid][pOrg], str[150], text[128], pName[MAX_PLAYER_NAME];
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(n == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste u organizaciji!");
	if(sscanf(params, "s[128]", text)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/f [text]");
	GetPlayerName(playerid, pName, sizeof(pName));
	if(PlayerInfo[playerid][pRank] == 1)
	{format(str, 150, "{01610E}** (( [%s] (R%d) %s %s: {FFFFFF}%s {01610E})) **", OrgInfo[n][orgIme], PlayerInfo[playerid][pRank], OrgInfo[n][orgRank1], pName, text);}
	if(PlayerInfo[playerid][pRank] == 2)
	{format(str, 150, "{01610E}** (( [%s] (R%d) %s %s: {FFFFFF}%s {01610E})) **", OrgInfo[n][orgIme], PlayerInfo[playerid][pRank], OrgInfo[n][orgRank2], pName, text);}
	if(PlayerInfo[playerid][pRank] == 3)
	{format(str, 150, "{01610E}** (( [%s] (R%d) %s %s: {FFFFFF}%s {01610E})) **", OrgInfo[n][orgIme], PlayerInfo[playerid][pRank], OrgInfo[n][orgRank3], pName, text);}
	if(PlayerInfo[playerid][pRank] == 4)
	{format(str, 150, "{01610E}** (( [%s] (R%d) %s %s: {FFFFFF}%s {01610E})) **", OrgInfo[n][orgIme], PlayerInfo[playerid][pRank], OrgInfo[n][orgRank4], pName, text);}
	if(PlayerInfo[playerid][pRank] == 5)
	{format(str, 150, "{01610E}** (( [%s] (R%d) %s %s: {FFFFFF}%s {01610E})) **", OrgInfo[n][orgIme], PlayerInfo[playerid][pRank], OrgInfo[n][orgRank5], pName, text);}
	if(PlayerInfo[playerid][pRank] == 6)
	{format(str, 150, "{01610E}** (( [%s] (R%d) %s %s: {FFFFFF}%s {01610E})) **", OrgInfo[n][orgIme], PlayerInfo[playerid][pRank], OrgInfo[n][orgRank6], pName, text);}
	if(PlayerInfo[playerid][pRank] == 7)
	{format(str, 150, "{01610E}** (( [%s] (R%d) %s %s: {FFFFFF}%s {01610E})) **", OrgInfo[n][orgIme], PlayerInfo[playerid][pRank], OrgInfo[n][orgRank7], pName, text);}
	if(PlayerInfo[playerid][pLeader] != 0)
	{format(str, 150, "{01610E}** (( [%s] (Leader) %s %s: {FFFFFF}%s {01610E})) **", OrgInfo[n][orgIme], OrgInfo[n][orgLeaderRankName], pName, text);}
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(PlayerInfo[i][pOrg] == n && ulogovan[i])
		{
			SCM(i, -1, str);
		}
	}
	return 1;
}
CMD:a(playerid, params[])
{
	new n = PlayerInfo[playerid][pAdmin], str[150], text[128], rank[64], pName[MAX_PLAYER_NAME];
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(n == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste admin!");
	if(sscanf(params, "s[128]", text)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/a [text]");
	GetPlayerName(playerid, pName, sizeof(pName));
	if(PlayerInfo[playerid][pAdmin] == 1) format(rank, 64, "Admin 1");
	if(PlayerInfo[playerid][pAdmin] == 2) format(rank, 64, "Admin 2");
	if(PlayerInfo[playerid][pAdmin] == 3) format(rank, 64, "Admin 3");
	if(PlayerInfo[playerid][pAdmin] == 4) format(rank, 64, "Admin 4");
	if(PlayerInfo[playerid][pAdmin] == 5) format(rank, 64, "Head Admin");
	if(PlayerInfo[playerid][pAdmin] == 6) format(rank, 64, "Direktor");
	if(PlayerInfo[playerid][pAdmin] == 7) format(rank, 64, "Generalni Direktor");
	if(PlayerInfo[playerid][pAdmin] == 8) format(rank, 64, "Suvlasnik");
	if(PlayerInfo[playerid][pAdmin] == 9) format(rank, 64, "Vlasnik");
	if(PlayerInfo[playerid][pAdmin] == 10) format(rank, 64, "Predsednica");
	if(PlayerInfo[playerid][pAdmin] == 1337) format(rank, 64, "Skripter");
	format(str, 150, "{1985A6}*** {FFFFFF}%s {1985A6}%s: {FFFFFF}%s {1985A6} ***", rank, pName, text);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(PlayerInfo[i][pAdmin] != 0 && ulogovan[i])
		{
			SCM(i, -1, str);
		}
	}
	return 1;
}
CMD:g(playerid, params[])
{
	new str[150], text[128], rank[64], pName[MAX_PLAYER_NAME];
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 0 && PlayerInfo[playerid][pHelper] < 0 && PlayerInfo[playerid][pVip] < 0 && PlayerInfo[playerid][pPromoter] < 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	if(sscanf(params, "s[128]", text)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/g [text]");
	GetPlayerName(playerid, pName, sizeof(pName));
	if(PlayerInfo[playerid][pPromoter] > 0) format(rank, 64, "Promoter");
	if(PlayerInfo[playerid][pVip] == 0) format(rank, 64, "Nijedan");
	if(PlayerInfo[playerid][pVip] == 1) format(rank, 64, "Bronze Vip");
	if(PlayerInfo[playerid][pVip] == 2) format(rank, 64, "Silver Vip");
	if(PlayerInfo[playerid][pVip] == 3) format(rank, 64, "Gold Vip");
	if(PlayerInfo[playerid][pVip] == 4) format(rank, 64, "Platinum Vip");
	if(PlayerInfo[playerid][pVip] == 5) format(rank, 64, "Diamond Vip");
	if(PlayerInfo[playerid][pHelper] == 1) format(rank, 64, "Helper");
	if(PlayerInfo[playerid][pHelper] == 2) format(rank, 64, "Stariji Helper");
	if(PlayerInfo[playerid][pHelper] == 3) format(rank, 64, "Vodja Helpera");
	if(PlayerInfo[playerid][pAdmin] == 1) format(rank, 64, "Admin 1");
	if(PlayerInfo[playerid][pAdmin] == 2) format(rank, 64, "Admin 2");
	if(PlayerInfo[playerid][pAdmin] == 3) format(rank, 64, "Admin 3");
	if(PlayerInfo[playerid][pAdmin] == 4) format(rank, 64, "Admin 4");
	if(PlayerInfo[playerid][pAdmin] == 5) format(rank, 64, "Head Admin");
	if(PlayerInfo[playerid][pAdmin] == 6) format(rank, 64, "Direktor");
	if(PlayerInfo[playerid][pAdmin] == 7) format(rank, 64, "Generalni Direktor");
	if(PlayerInfo[playerid][pAdmin] == 8) format(rank, 64, "Suvlasnik");
	if(PlayerInfo[playerid][pAdmin] == 9) format(rank, 64, "Vlasnik");
	if(PlayerInfo[playerid][pAdmin] == 10) format(rank, 64, "Predsednica");
	if(PlayerInfo[playerid][pAdmin] == 1337) format(rank, 64, "Skripter");
	format(str, 150, "{26FF00}[G] {FFFFFF}%s {26FF00}%s: {FFFFFF}%s {26FF00}", rank, pName, text);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if((PlayerInfo[playerid][pAdmin] > 0 || PlayerInfo[playerid][pHelper] > 0 || PlayerInfo[playerid][pVip] > 0 || PlayerInfo[playerid][pPromoter] > 0) && ulogovan[i] == 1)
		{
			SCM(i, -1, str);
		}
	}
	return 1;
}
CMD:t(playerid, params[])
{
	new str[150], text[128], rank[64], pName[MAX_PLAYER_NAME];
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 0 && PlayerInfo[playerid][pHelper] < 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	if(sscanf(params, "s[128]", text)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/t [text]");
	GetPlayerName(playerid, pName, sizeof(pName));
	if(PlayerInfo[playerid][pHelper] == 1) format(rank, 64, "Helper");
	if(PlayerInfo[playerid][pHelper] == 2) format(rank, 64, "Stariji Helper");
	if(PlayerInfo[playerid][pHelper] == 3) format(rank, 64, "Vodja Helpera");
	if(PlayerInfo[playerid][pAdmin] == 1) format(rank, 64, "Admin 1");
	if(PlayerInfo[playerid][pAdmin] == 2) format(rank, 64, "Admin 2");
	if(PlayerInfo[playerid][pAdmin] == 3) format(rank, 64, "Admin 3");
	if(PlayerInfo[playerid][pAdmin] == 4) format(rank, 64, "Admin 4");
	if(PlayerInfo[playerid][pAdmin] == 5) format(rank, 64, "Head Admin");
	if(PlayerInfo[playerid][pAdmin] == 6) format(rank, 64, "Direktor");
	if(PlayerInfo[playerid][pAdmin] == 7) format(rank, 64, "Generalni Direktor");
	if(PlayerInfo[playerid][pAdmin] == 8) format(rank, 64, "Suvlasnik");
	if(PlayerInfo[playerid][pAdmin] == 9) format(rank, 64, "Vlasnik");
	if(PlayerInfo[playerid][pAdmin] == 10) format(rank, 64, "Predsednica");
	if(PlayerInfo[playerid][pAdmin] == 1337) format(rank, 64, "Skripter");
	format(str, 150, "{E0CA02}[H-CHAT] {FFFFFF}%s {E0CA02}%s: {FFFFFF}%s {E0CA02}", rank, pName, text);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if((PlayerInfo[playerid][pAdmin] > 0 || PlayerInfo[playerid][pHelper] > 0) && ulogovan[i] == 1)
		{
			SCM(i, -1, str);
		}
	}
	return 1;
}
CMD:ao(playerid, params[])
{
	new n = PlayerInfo[playerid][pAdmin], str[200], text[128], rank[64], pName[MAX_PLAYER_NAME];
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(n == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste admin!");
	if(sscanf(params, "s[128]", text)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/ao [text]");
	GetPlayerName(playerid, pName, sizeof(pName));
	if(PlayerInfo[playerid][pAdmin] == 1) format(rank, 64, "Admin 1");
	if(PlayerInfo[playerid][pAdmin] == 2) format(rank, 64, "Admin 2");
	if(PlayerInfo[playerid][pAdmin] == 3) format(rank, 64, "Admin 3");
	if(PlayerInfo[playerid][pAdmin] == 4) format(rank, 64, "Admin 4");
	if(PlayerInfo[playerid][pAdmin] == 5) format(rank, 64, "Head Admin");
	if(PlayerInfo[playerid][pAdmin] == 6) format(rank, 64, "Direktor");
	if(PlayerInfo[playerid][pAdmin] == 7) format(rank, 64, "Generalni Direktor");
	if(PlayerInfo[playerid][pAdmin] == 8) format(rank, 64, "Suvlasnik");
	if(PlayerInfo[playerid][pAdmin] == 9) format(rank, 64, "Vlasnik");
	if(PlayerInfo[playerid][pAdmin] == 10) format(rank, 64, "Predsednica");
	if(PlayerInfo[playerid][pAdmin] == 1337) format(rank, 64, "Skripter");
	format(str, 200, "{B03902}*** [A-OOC]: {FFFFFF}%s {B03902}%s: {FFFFFF}%s {B03902} ***", rank, pName, text);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(ulogovan[i])
		{
			SCM(i, -1, str);
		}
	}
	return 1;
}

CMD:setrank(playerid, params[])
{
	new n = PlayerInfo[playerid][pLeader], id, rank, str[256], ime[MAX_PLAYER_NAME];
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(n == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste lider organizacije!");
	if(sscanf(params, "ii", id, rank)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/setrank [id] [rank]");
	if(rank < 1 && rank > 7) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete rank veci od 7 i manji od 1!");
	if(ulogovan[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije ulogovan!");
	if(PlayerInfo[id][pOrg] != n) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije clan vase organizacije!");
	GetPlayerName(id, ime, sizeof(ime));
	format(str, 256, "{01610E}[Organizacija]: {FFFFFF}Uspesno ste postavili rank igracu {01610E}%s {FFFFFF}na {01610E}%d{FFFFFF}!", ime, rank);
	SCM(playerid, -1, str);
	format(str, 256, "{01610E}[Organizacija]: {FFFFFF}Lider vam je promenio rank, sada ste rank {01610E}%d{FFFFFF}!", rank);
	SCM(id, -1, str);
	new pName[MAX_PLAYER_NAME], ppName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(id, ppName, sizeof(ppName));
	format(str, 256, "{FFFFFF}Lider{A13C0A} %s {FFFFFF}je dao rank {A13C0A}%d {FFFFFF}igracu {A13C0A}%s {FFFFFF}!", pName,rank, ppName);
	WarningPoruka(str);
	format(str, 256, "Lider %s je dao rank %d igracu %s!",  pName,rank, ppName);
	WarLog(str);
	return 1;
}
CMD:invite(playerid, params[])
{
	new n = PlayerInfo[playerid][pLeader], id, str[256], pName[MAX_PLAYER_NAME], imeorg[128];
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(n == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste lider organizacije!");
	if(sscanf(params, "i", id)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/invite [id]");
	if(ulogovan[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije ulogovan!");
	if(PlayerInfo[id][pLeader] != 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac je lider neke organizacije!");
	if(PlayerInfo[id][pOrg] != 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac je vec clan neke organizacije!");
	if(PlayerInfo[id][pLevel] < 3) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije dovoljno visok nivo (minimum nivo 3)!");
	if(pozvanuorg[id] != 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igraca neko vec zove u organizaciju, prvo mora da odbije tu pozivnicu!");
	GetPlayerName(playerid, pName, sizeof(pName));
	format(imeorg, 128, "%s", OrgInfo[n][orgIme]);
	format(str, 256, "{FFFFFF}Pozvani ste u organizaciju!\n{FFFFFF}Naziv organizacije: {01610E}%s\n{FFFFFF}Lider: {01610E}%s\n{FFFFFF}Da li zelite da se uclanite?", imeorg, pName);
	SPD(id, DIALOG_ORGINVITE, DIALOG_STYLE_MSGBOX, "{01610E}Poziv u organizaciju", str, "Da", "Ne");
	GetPlayerName(id, pName, sizeof(pName));
	format(str, 256, "{01610E}[Invite]: {FFFFFF}Uspesno ste pozvali igraca {01610E}%s {FFFFFF}u vasu organizaciju!", pName);
	SCM(playerid, -1, str);
	pozvanuorg[id] = n;
	new ppName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(id, ppName, sizeof(ppName));
	format(str, 256, "{FFFFFF}Lider{A13C0A} %s {FFFFFF}je pozvao igraca {A13C0A}%s {FFFFFF}u svoju organizaciju!", pName,ppName);
	WarningPoruka(str);
	format(str, 256, "Lider %s je pozvao igraca %s u svoju organizaciju!",  pName,ppName);
	WarLog(str);
	return 1;
}
CMD:prihvati(playerid, params[])
{
	new str[256];
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(sscanf(params, "s[256]", str)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/prihvati [naziv] | frisk/goto/prodaju");
	return 1;
}
CMD:odbij(playerid, params[])
{
	new str[256];
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(sscanf(params, "s[256]", str)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/odbij [naziv] | frisk/goto/prodaju");
	return 1;
}
CMD:gotopos(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	new Float:Pos[3], str[128];
	if(sscanf(params, "fff",Pos[0],Pos[1],Pos[2])) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/gotopos [X] [Y] [Z]");
	taz_SetPlayerPos(playerid,Pos[0],Pos[1],Pos[2]);
	SCM(playerid, -1, "{1985A6}[Goto]: {FFFFFF}Uspesno ste se teleportovali na lokaciju!");
	new pName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}se teleportovao na poziciju /gotopos!", pName);
	WarningPoruka(str);
	format(str, 256, "Admin %s se teleportovao na poziciju /gotopos!",  pName);
	WarLog(str);
	return 1;
}
CMD:gotocp(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	new str[128];
	if(CPIgraca[playerid][0] == 0 && CPIgraca[playerid][1] == 0 && CPIgraca[playerid][2] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Nemate oznacen checkpoint!");
	if(IsPlayerInAnyVehicle(playerid))
	{
		new vehid = GetPlayerVehicleID(playerid);
		SetVehiclePos(vehid, CPIgraca[playerid][0], CPIgraca[playerid][1], CPIgraca[playerid][2]);
	}
	else
	{
		taz_SetPlayerPos(playerid,CPIgraca[playerid][0], CPIgraca[playerid][1], CPIgraca[playerid][2]);
	}
	SCM(playerid, -1, "{1985A6}[Goto]: {FFFFFF}Uspesno ste se teleportovali do checkpointa!");
	new pName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}se teleportovao na checkpoint!", pName);
	WarningPoruka(str);
	format(str, 256, "Admin %s se teleportovao na checkpoint!",  pName);
	WarLog(str);
	return 1;
}
CMD:automat(playerid, params[])
{
	new blizu = 0;
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	for(new i = 0; i < MAX_AUTOMATA; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, AutomatInfo[i][aX], AutomatInfo[i][aY], AutomatInfo[i][aZ]))
		{
			blizu = 1;
			break;
		}
	}
	if(blizu == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste kod automata!");
	SPD(playerid, DIALOG_AUTOMAT, DIALOG_STYLE_LIST, "{1985A6}Automat", "{FFFFFF}Snickers cokoladica - {1985A6}$50\n{FFFFFF}Kesica cipsa - {1985A6}$40\n{FFFFFF}Kikiriki - {1985A6}$60\n{FFFFFF}Jaffa kolacici - {1985A6}$65\n{FFFFFF}Flasica vode - {1985A6}$20\n{FFFFFF}Koka kola - {1985A6}$65\n{FFFFFF}Fanta - {1985A6}$60", "Izaberi", "Odustani");
	return 1;
}
CMD:statistika(playerid, params[])
{
	new string[256];
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	format(string, 256, "{FFFFFF}Rekord igraca: {1985A6}%d", rekord);
	SPD(playerid, DIALOG_STATISTIKA, DIALOG_STYLE_MSGBOX, "{1985A6}Statistika", string, "Ok", "");
	return 1;
}
CMD:zaposlise(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pPosao] != 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Vec imate posao, prvo dajte otkaz u opstini!");
	if(PlayerInfo[playerid][pRacun] != 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Morate da otvorite racun u banci kako biste se zaposlili!");
	if(IsPlayerInRangeOfPoint(playerid, 2.0, -271.2486,1533.0491,32.9949))
	{ 
		if(PlayerInfo[playerid][pCL] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Nemate polozenu C kategoriju, prvo polozite za kamion u autoskoli!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste se zaposlili kao {1985A6}postar{FFFFFF}! Cestitamo!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Za pomoc, koristite {1985A6}/jobhelp!");
		PlayerInfo[playerid][pPosao] = 1;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, -162.0365,1161.6694,19.9003))
	{ 
		if(PlayerInfo[playerid][pDL] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Nemate polozenu D kategoriju, prvo polozite za autobus u autoskoli!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste se zaposlili kao {1985A6}bus vozac{FFFFFF}! Cestitamo!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Za pomoc, koristite {1985A6}/jobhelp!");
		PlayerInfo[playerid][pPosao] = 2;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, -32.3799,1287.0350,18.0486))
	{ 
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste se zaposlili kao {1985A6}masinovodja{FFFFFF}! Cestitamo!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Za pomoc, koristite {1985A6}/jobhelp!");
		PlayerInfo[playerid][pPosao] = 3;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, -824.2012,1443.6980,13.9725))
	{ 
		if(PlayerInfo[playerid][pCL] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Nemate polozenu C kategoriju, prvo polozite za kamion u autoskoli!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste se zaposlili kao {1985A6}kamiondzija{FFFFFF}! Cestitamo!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Za pomoc, koristite {1985A6}/jobhelp!");
		PlayerInfo[playerid][pPosao] = 4;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, 414.9254,2535.3982,19.1484))
	{ 
		if(PlayerInfo[playerid][pLetenjeL] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Nemate dozvolu za letenje, prvo polozite u autoskoli!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste se zaposlili kao {1985A6}zaprasivac komaraca{FFFFFF}! Cestitamo!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Za pomoc, koristite {1985A6}/jobhelp!");
		PlayerInfo[playerid][pPosao] = 5;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1347.3105,1257.9911,10.8203))
	{ 
		if(PlayerInfo[playerid][pLetenjeL] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Nemate dozvolu za letenje, prvo polozite u autoskoli!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste se zaposlili kao {1985A6}pilot{FFFFFF}! Cestitamo!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Za pomoc, koristite {1985A6}/jobhelp!");
		PlayerInfo[playerid][pPosao] = 6;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, 171.8137,1180.7561,14.7578))
	{ 
		if(PlayerInfo[playerid][pAL] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Nemate dozvolu za motor, prvo polozite u autoskoli!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste se zaposlili kao {1985A6}pizza dostavljac{FFFFFF}! Cestitamo!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Za pomoc, koristite {1985A6}/jobhelp!");
		PlayerInfo[playerid][pPosao] = 7;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, 94.8884,1059.6193,13.8096))
	{ 
		if(PlayerInfo[playerid][pCL] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Nemate polozenu C kategoriju, prvo polozite za kamion u autoskoli!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste se zaposlili kao {1985A6}dostavljac delova{FFFFFF}! Cestitamo!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Za pomoc, koristite {1985A6}/jobhelp!");
		PlayerInfo[playerid][pPosao] = 8;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, 14.0222,1188.0099,19.4749))
	{ 
		if(PlayerInfo[playerid][pBL] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Nemate polozenu B kategoriju, prvo polozite za automobil u autoskoli!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste se zaposlili kao {1985A6}cistac ulica{FFFFFF}! Cestitamo!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Za pomoc, koristite {1985A6}/jobhelp!");
		PlayerInfo[playerid][pPosao] = 9;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, -146.3646,1155.9105,20.1754))
	{ 
		if(PlayerInfo[playerid][pBL] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Nemate polozenu B kategoriju, prvo polozite za automobil u autoskoli!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste se zaposlili kao {1985A6}prevoznik novca{FFFFFF}! Cestitamo!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Za pomoc, koristite {1985A6}/jobhelp!");
		PlayerInfo[playerid][pPosao] = 10;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, 321.9052,851.5593,20.4063))
	{ 
		if(PlayerInfo[playerid][pCL] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Nemate polozenu C kategoriju, prvo polozite za automobil u autoskoli!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste se zaposlili kao {1985A6}prevoznik kamenja{FFFFFF}! Cestitamo!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Za pomoc, koristite {1985A6}/jobhelp!");
		PlayerInfo[playerid][pPosao] = 11;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1352.0740,348.3827,20.5010))
	{ 
		if(PlayerInfo[playerid][pBL] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Nemate polozenu B kategoriju, prvo polozite za automobil u autoskoli!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste se zaposlili kao {1985A6}logisticar{FFFFFF}! Cestitamo!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Za pomoc, koristite {1985A6}/jobhelp!");
		PlayerInfo[playerid][pPosao] = 12;
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1374.9788,475.1432,20.0520))
	{ 
		if(PlayerInfo[playerid][pBL] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Nemate polozenu B kategoriju, prvo polozite za automobil u autoskoli!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste se zaposlili kao {1985A6}skupljac sekundarnih sirovina{FFFFFF}! Cestitamo!");
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Za pomoc, koristite {1985A6}/jobhelp!");
		PlayerInfo[playerid][pPosao] = 13;
	}
	else return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na mestu za uzimanje posla!");
	return 1;
}
CMD:uniforma(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(IsPlayerInRangeOfPoint(playerid, 2.0, -281.2949,1540.4186,32.9923))
	{ 
		if(pUniforma[playerid] == 0)
		{
			if(PlayerInfo[playerid][pPosao] != 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste postar!");
			SCM(playerid, -1, "{1985A6}[Uniforma]: {FFFFFF}Uspesno ste uzeli uniformu! Spremni ste za posao!");
			pUniforma[playerid] = 1;
			if(PlayerInfo[playerid][pPol] == 1)
				SetPlayerSkin(playerid, 255);
			else
				SetPlayerSkin(playerid, 11);
		}
		else
		{
			if(PlayerInfo[playerid][pPosao] != 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste postar!");
			SCM(playerid, -1, "{1985A6}[Uniforma]: {FFFFFF}Uspesno ste skinuli uniformu!");
			pUniforma[playerid] = 0;
			SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, -158.6285,1160.3898,19.9003))
	{
		if(pUniforma[playerid] == 0)
		{
			if(PlayerInfo[playerid][pPosao] != 2) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste vozac autobusa!");
			SCM(playerid, -1, "{1985A6}[Uniforma]: {FFFFFF}Uspesno ste uzeli uniformu! Spremni ste za posao!");
			pUniforma[playerid] = 1;
			if(PlayerInfo[playerid][pPol] == 1)
				SetPlayerSkin(playerid, 255);
			else
				SetPlayerSkin(playerid, 11);
		}
		else
		{
			if(PlayerInfo[playerid][pPosao] != 2) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste vozac autobusa!");
			SCM(playerid, -1, "{1985A6}[Uniforma]: {FFFFFF}Uspesno ste skinuli uniformu!");
			pUniforma[playerid] = 0;
			SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, -28.3458,1285.8611,18.0486))
	{
		if(pUniforma[playerid] == 0)
		{
			if(PlayerInfo[playerid][pPosao] != 3) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste masinovodja!");
			SCM(playerid, -1, "{1985A6}[Uniforma]: {FFFFFF}Uspesno ste uzeli uniformu! Spremni ste za posao!");
			pUniforma[playerid] = 1;
			if(PlayerInfo[playerid][pPol] == 1)
				SetPlayerSkin(playerid, 255);
			else
				SetPlayerSkin(playerid, 11);
		}
		else
		{
			if(PlayerInfo[playerid][pPosao] != 3) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste masinovodja!");
			SCM(playerid, -1, "{1985A6}[Uniforma]: {FFFFFF}Uspesno ste skinuli uniformu!");
			pUniforma[playerid] = 0;
			SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, 414.9254,2535.3982,19.1484))
	{
		if(pUniforma[playerid] == 0)
		{
			if(PlayerInfo[playerid][pPosao] != 6) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste pilot!");
			SCM(playerid, -1, "{1985A6}[Uniforma]: {FFFFFF}Uspesno ste uzeli uniformu! Spremni ste za posao!");
			pUniforma[playerid] = 1;
			if(PlayerInfo[playerid][pPol] == 1)
				SetPlayerSkin(playerid, 255);
			else
				SetPlayerSkin(playerid, 11);
		}
		else
		{
			if(PlayerInfo[playerid][pPosao] != 6) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste pilot!");
			SCM(playerid, -1, "{1985A6}[Uniforma]: {FFFFFF}Uspesno ste skinuli uniformu!");
			pUniforma[playerid] = 0;
			SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, 171.8137,1180.7561,14.7578))
	{
		if(pUniforma[playerid] == 0)
		{
			if(PlayerInfo[playerid][pPosao] != 7) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste pizza dostavljac!");
			SCM(playerid, -1, "{1985A6}[Uniforma]: {FFFFFF}Uspesno ste uzeli uniformu! Spremni ste za posao!");
			pUniforma[playerid] = 1;
			if(PlayerInfo[playerid][pPol] == 1)
				SetPlayerSkin(playerid, 155);
			else
				SetPlayerSkin(playerid, 205);
		}
		else
		{
			if(PlayerInfo[playerid][pPosao] != 7) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste pizza dostavljac!");
			SCM(playerid, -1, "{1985A6}[Uniforma]: {FFFFFF}Uspesno ste skinuli uniformu!");
			pUniforma[playerid] = 0;
			SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
		}
	}
	else if(IsPlayerInRangeOfPoint(playerid, 2.0, 1373.5853,472.3205,20.1277))
	{
		if(pUniforma[playerid] == 0)
		{
			if(PlayerInfo[playerid][pPosao] != 13) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste skupljac sekundarnih sirovina!");
			SCM(playerid, -1, "{1985A6}[Uniforma]: {FFFFFF}Uspesno ste uzeli uniformu! Spremni ste za posao!");
			pUniforma[playerid] = 1;
			if(PlayerInfo[playerid][pPol] == 1)
				SetPlayerSkin(playerid, 137);
			else
				SetPlayerSkin(playerid, 201);
		}
		else
		{
			if(PlayerInfo[playerid][pPosao] != 13) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste skupljac sekundarnih sirovina!");
			SCM(playerid, -1, "{1985A6}[Uniforma]: {FFFFFF}Uspesno ste skinuli uniformu!");
			pUniforma[playerid] = 0;
			SetPlayerSkin(playerid, PlayerInfo[playerid][pSkin]);
		}
	}
	else return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na mestu!");
	return 1;
}
CMD:zapocniposao(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pPosao] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste zaposleni!");
	if(PlayerInfo[playerid][pPosao] == 1)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 40.0, -152.6935,1084.7131,20.5303)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste blizu poste!");
		new vid = GetPlayerVehicleID(playerid);
		if(pUniforma[playerid] == 0) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Prvo obucite uniformu!");
		if(pJobProgress[playerid] != 0) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Vec radite posao, prvo ga prekinite! /prekiniposao");
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u postarskom vozilu!");
		if(VoziloInfo[vid][vPosaoID] != 1) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Ne nalazite se u postarskom vozilu!");
		SCM(playerid, -1, "{DAA520}[Postar]: {FFFFFF}Uspesno ste pokrenuli posao postara! Razvozite pakete i pisma na oznacene adrese!");
		new rnd = random(47);
		taz_SetPlayerCheckpoint(playerid, PostarLokacije[rnd][0], PostarLokacije[rnd][1], PostarLokacije[rnd][2], 5.0);
		radi[playerid] = 1;
	}
	else if(PlayerInfo[playerid][pPosao] == 2)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 40.0, -155.0154,1201.9047,19.5938)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste blizu autobuske stanice!");
		new vid = GetPlayerVehicleID(playerid);
		if(pUniforma[playerid] == 0) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Prvo obucite uniformu!");
		if(pJobProgress[playerid] != 0) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Vec radite posao, prvo ga prekinite! /prekiniposao");
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u autobusu!");
		if(VoziloInfo[vid][vPosaoID] != 2) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Ne nalazite se u autobusu!");
		SPD(playerid, DIALOG_BUSVOZAC, DIALOG_STYLE_LIST, "{1985A6}Bus Vozac", "{FFFFFF}Gradska: {1985A6}Fort Carson\n{FFFFFF}Prigradska: {1985A6}Bone County\n{FFFFFF}Prigradska: {1985A6}Red County\n{FFFFFF}Medjugradska: {1985A6}San Fiero\n{FFFFFF}Medjugradska: {1985A6}Los Santos\n{FFFFFF}Medjugradska: {1985A6}Las Venturas", "Izaberi", "Odustani");
	}
	else if(PlayerInfo[playerid][pPosao] == 3)
	{
		new i = NewID(5);
		if(!IsPlayerInRangeOfPoint(playerid, 40.0, -28.3458,1285.8611,18.0486)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste blizu zeleznicke stanice!");
		if(pUniforma[playerid] == 0) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Prvo obucite uniformu!");
		if(pJobProgress[playerid] != 0) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Vec radite posao, prvo ga prekinite! /prekiniposao");
		if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Ne smete biti u vozilu!");
		radi[playerid] = 1;
		DestroyVehicle(nenapravljenovozilo[i]);
		pvoz[playerid] = AddStaticVehicle(538, -13.2146,1293.5237,19.4439,270.5960, 1, 1);
		StaviLabel(i, pvoz[playerid]);
		VoziloInfo[i][vID] = 538;
		VoziloInfo[i][vOwnable] = 0;
		VoziloInfo[i][vCena] = 0;
		VoziloInfo[i][vAutoskola] = 0;
		VoziloInfo[i][vPosaoID] = 3;
		VoziloInfo[i][vOrgID] = 0;
		VoziloInfo[i][vRent] = 0;
		VoziloInfo[i][vAdmin] = 0;
		VoziloInfo[i][vHelper] = 0;
		VoziloInfo[i][vVip] = 0;
		VoziloInfo[i][vPromoter] = 0;
		VoziloInfo[i][vBoja] = 1;
		VoziloInfo[i][vBoja2] = 1;
		VoziloInfo[i][vDozvola] = 0;
		VoziloInfo[i][vX] = -13.2146;
		VoziloInfo[i][vY] = 1293.5237;
		VoziloInfo[i][vZ] = 19.4439;
		SaveVozilo(i);
		SetCameraBehindPlayer(playerid);
		SCM(playerid, -1, "{DAA520}[Masinovodja]: {FFFFFF}Uspesno ste pokrenuli posao masinovodje! Pratite markere kako bi razvozili putnike!");
		SCM(playerid, -1, "{DAA520}[Masinovodja]: {FFFFFF}Obratite paznju, morate se kretati brzinom nizom od 5km/h kako bi uspesno stali na marker!");
		taz_SetPlayerCheckpoint(playerid, 6.6124,1293.4175,19.4590, 5.0);
		PutPlayerInVehicle(playerid, pvoz[playerid], 0);
	}
	else if(PlayerInfo[playerid][pPosao] == 4)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 50.0, -785.4874,1429.3898,14.5938)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste blizu parkinga za kamione!");
		new vid = GetPlayerVehicleID(playerid);
		if(radi[playerid] != 0) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Vec radite posao, prvo ga prekinite! /prekiniposao");
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u kamionu!");
		if(!IsTrailerAttachedToVehicle(vid)) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste zakacili prikolicu!");
		if(VoziloInfo[vid][vPosaoID] != 4 && IsTrailerAttachedToVehicle(vid)) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u kamionu za posao ili niste zakacili prikolicu!");
		SCM(playerid, -1, "{DAA520}[Kamiondzija]: {FFFFFF}Uspesno ste pokrenuli posao! Prevezite robu na odrediste oznaceno na mapi!");
		taz_SetPlayerCheckpoint(playerid, 2742.8125,-2465.5994,13.6484, 7.0);
		radi[playerid] = 1;
	}
	else if(PlayerInfo[playerid][pPosao] == 5)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 60.0, 364.1031,2503.3953,16.7667)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste blizu aerodroma!");
		new vid = GetPlayerVehicleID(playerid);
		if(radi[playerid] != 0) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Vec radite posao, prvo ga prekinite! /prekiniposao");
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u avionu!");
		if(VoziloInfo[vid][vPosaoID] != 5) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u avionu namenjenom za ovaj posao!");
		SCM(playerid, -1, "{DAA520}[Zaprasivac Komaraca]: {FFFFFF}Uspesno ste pokrenuli posao! Pratite markere na mapi kako bi obavili posao!");
		SCM(playerid, -1, "{DAA520}[Zaprasivac Komaraca]: {FFFFFF}Pritisnite {DAA520}2 {FFFFFF}kako bi aktivirali prskanje!");
		SetPlayerRaceCheckpoint(playerid, 3, 364.1031,2503.3953,16.7667, ZaprasivacPos[1][0], ZaprasivacPos[1][1], ZaprasivacPos[1][2], 10.0);
		pJobProgress[playerid] = 1;
		radi[playerid] = 1;
	}
	else if(PlayerInfo[playerid][pPosao] == 6)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 360.0, 1477.4677,1702.1085,10.8203)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste blizu aerodroma!");
		new vid = GetPlayerVehicleID(playerid);
		if(radi[playerid] != 0) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Vec radite posao, prvo ga prekinite! /prekiniposao");
		if(pUniforma[playerid] == 0) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Prvo obucite uniformu!");
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u avionu!");
		if(VoziloInfo[vid][vPosaoID] != 6) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u avionu namenjenom za ovaj posao!");
		SCM(playerid, -1, "{DAA520}[Pilot]: {FFFFFF}Uspesno ste pokrenuli posao! Pratite markere kako bi prevezli putnike!");
		taz_SetPlayerCheckpoint(playerid, 1477.4677,1702.1085,10.8203, 7.0);
		pJobProgress[playerid] = 1;
		radi[playerid] = 1;
	}
	else if(PlayerInfo[playerid][pPosao] == 7)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 30.0, 171.8137,1180.7561,14.7578)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste blizu firme!");
		if(radi[playerid] != 0) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Vec radite posao, prvo ga prekinite! /prekiniposao");
		if(pUniforma[playerid] == 0) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Prvo obucite uniformu!");
		SCM(playerid, -1, "{DAA520}[Pizza Dostavljac]: {FFFFFF}Uspesno ste pokrenuli posao! Preuzmite pizzu sa prozorcica!");
		taz_SetPlayerCheckpoint(playerid, 171.8137,1180.7561,14.7578, 1.5);
		pJobProgress[playerid] = 1;
		radi[playerid] = 1;
	}
	else if(PlayerInfo[playerid][pPosao] == 8)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 50.0, 103.4086,1081.4135,14.2317)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste blizu firme!");
		new vid = GetPlayerVehicleID(playerid);
		if(radi[playerid] != 0) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Vec radite posao, prvo ga prekinite! /prekiniposao");
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu za prevoz delova!");
		if(VoziloInfo[vid][vPosaoID] != 8) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu za prevoz delova!");
		SCM(playerid, -1, "{DAA520}[Dostavljac Delova]: {FFFFFF}Uspesno ste pokrenuli posao! Otidjite na oznacenu lokaciju kako bi preuzeli delove!");
		taz_SetPlayerCheckpoint(playerid, 2175.0955,-2266.4729,14.0071, 7.0);
		pJobProgress[playerid] = 1;
		radi[playerid] = 1;
		dftvozilo[playerid] = GetPlayerVehicleID(playerid);
	}
	else if(PlayerInfo[playerid][pPosao] == 9)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 40.0, 14.0222,1188.0099,19.4749)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste blizu firme!");
		new vid = GetPlayerVehicleID(playerid);
		if(radi[playerid] != 0) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Vec radite posao, prvo ga prekinite! /prekiniposao");
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu za ciscenje ulica!");
		if(VoziloInfo[vid][vPosaoID] != 9) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu za ciscenje ulica!");
		SCM(playerid, -1, "{DAA520}[Cistac Ulica]: {FFFFFF}Uspesno ste pokrenuli posao! Pratite markere kako bi cistili ulice!");
		taz_SetPlayerCheckpoint(playerid, CistacPos[0][0], CistacPos[0][1], CistacPos[0][2], 3.0);
		pJobProgress[playerid] = 1;
		radi[playerid] = 1;
	}
	else if(PlayerInfo[playerid][pPosao] == 10)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 30.0, -146.3646,1155.9105,20.1754)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste blizu firme!");
		new vid = GetPlayerVehicleID(playerid);
		if(radi[playerid] != 0) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Vec radite posao, prvo ga prekinite! /prekiniposao");
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu za prevoz novca!");
		if(VoziloInfo[vid][vPosaoID] != 10) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu za prevoz novca!");
		SCM(playerid, -1, "{DAA520}[Dostavljac Novca]: {FFFFFF}Uspesno ste pokrenuli posao! Otidjite do markera kako bi preuzel novac!");
		taz_SetPlayerCheckpoint(playerid, -143.6930,1123.3723,19.8095, 5.0);
		pJobProgress[playerid] = 0;
		radi[playerid] = 1;
	}
	else if(PlayerInfo[playerid][pPosao] == 11)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 100.0, 339.6346,853.1769,21.3491)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste blizu firme!");
		new vid = GetPlayerVehicleID(playerid);
		if(radi[playerid] != 0) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Vec radite posao, prvo ga prekinite! /prekiniposao");
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u kamionu!");
		if(!IsTrailerAttachedToVehicle(vid)) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste zakacili prikolicu!");
		if(VoziloInfo[vid][vPosaoID] != 11 && IsTrailerAttachedToVehicle(vid)) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u kamionu za posao ili niste zakacili prikolicu!");
		SCM(playerid, -1, "{DAA520}[Prevoznik Kamenja]: {FFFFFF}Uspesno ste pokrenuli posao! Prevezite robu na odrediste oznaceno na mapi!");
		taz_SetPlayerCheckpoint(playerid, -1871.8260,-1719.4462,21.7500, 7.0);
		radi[playerid] = 1;
		pJobProgress[playerid] = 1;
	}
	else if(PlayerInfo[playerid][pPosao] == 12)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 50.0, 1352.0740,348.3827,20.5010)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste blizu firme!");
		new vid = GetPlayerVehicleID(playerid);
		if(radi[playerid] != 0) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Vec radite posao, prvo ga prekinite! /prekiniposao");
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu!");
		if(VoziloInfo[vid][vPosaoID] != 12) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu za posao!");
		SCM(playerid, -1, "{DAA520}[Logisticar]: {FFFFFF}Uspesno ste pokrenuli posao! Preuzmite robu sa markera!");
		new i = random(7);
		taz_SetPlayerCheckpoint(playerid, LogisticarPos[i][0], LogisticarPos[i][1], LogisticarPos[i][2], 7.0);
		logisticarID[playerid] = i;
		radi[playerid] = 1;
		pJobProgress[playerid] = 1;
	}
	else if(PlayerInfo[playerid][pPosao] == 13)
	{
		if(!IsPlayerInRangeOfPoint(playerid, 30.0, 1373.5853,472.3205,20.1277)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste blizu firme!");
		new vid = GetPlayerVehicleID(playerid);
		if(radi[playerid] != 0) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Vec radite posao, prvo ga prekinite! /prekiniposao");
		if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu!");
		if(VoziloInfo[vid][vPosaoID] != 13) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu za posao!");
		SCM(playerid, -1, "{DAA520}[Skupljac Sekundarnih Sirovina]: {FFFFFF}Uspesno ste pokrenuli posao! Pronadjite kontejnere da bi skupili sirovine!");
		SCM(playerid, -1, "{DAA520}[Skupljac Sekundarnih Sirovina]: {FFFFFF}Mozete skupiti najvise 200kg plastike i 4000g aluminijuma!");
		SCM(playerid, -1, "{DAA520}[Skupljac Sekundarnih Sirovina]: {FFFFFF}Ukoliko zelite da ranije zavrsite posao, koristite /zavrsiposao!");
		pKamionet[playerid] = GetPlayerVehicleID(playerid);
		radi[playerid] = 1;
		pJobProgress[playerid] = 0;
		pPlastika[playerid] = 0;
		pAluminijum[playerid] = 0;

	}
	return 1;
}

CMD:zavrsiposao(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pPosao] != 13) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste zaposleni kao skupljac sekundarnih sirovina!");
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu!");
	if(VoziloInfo[GetPlayerVehicleID(playerid)][vPosaoID] != 13) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu za posao!");
	if(pPlastika[playerid] == 0 && pAluminijum[playerid] == 0) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste skupili nikakve sirovine!");
	SCM(playerid, -1, "{DAA520}[Skupljac Sekundarnih Sirovina]: {FFFFFF}Mesto za reciklazu vam je oznaceno na mapi!");
	taz_SetPlayerCheckpoint(playerid, -1048.0374,-606.0256,31.5341, 5.0);
	return 1;
}

CMD:skupisirovine(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pPosao] != 13) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste zaposleni kao skupljac sekundarnih sirovina!");
	if(radi[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne radite posao!");
	if(pPlastika[playerid] == 200 && pAluminijum[playerid] == 4000) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Vozilo vam je vec puno sirovina, odnesite ih na reciklazu! (/zavrsiposao)");
	if(pNosiSmece[playerid]) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Vec nosite sirovine iz kontejnera!");
	for(new i = 0; i < MAX_KONTEJNERA; i++)
	{
		if(IsPlayerInRangeOfPoint(playerid, 3.0, KontejnerInfo[i][koX], KontejnerInfo[i][koY], KontejnerInfo[i][koZ]))
		{
			if(pJobProgress[playerid] == i) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Vec ste pretrazili ovaj kontejner!");
			SetTimerEx("UzimaSirovine", 10000, false, "ui", playerid, i);
			SCM(playerid, -1, "Pretrazujete kontejner...");
			GameTextForPlayer(playerid, "Pretazujete kontejner", 7000, 3);
			ApplyAnimation(playerid, "ped", "IDLE_tired", 4.1, true, true, true, true, false, 1);
			TogglePlayerControllable(playerid, 0);
			pJobProgress[playerid] = i;
			return 1;
		}
	}
	SCM(playerid, COLOR_RED, "[Skupljac Sirovina]: {FFFFFF}Niste kod kontejnera!");
	return 1;
}
CMD:ubacisirovine(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(pUJailu[playerid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete koristiti komande u jailu!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pPosao] != 13) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste zaposleni kao skupljac sekundarnih sirovina!");
	if(radi[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne radite posao!");
	if(!pNosiSmece[playerid]) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste skupili sirovine iz kontejnera!");
	new Float:X, Float:Y, Float:Z;
	for(new i = 0; i < MAX_VEHICLES; i++)
	{
		if (VoziloInfo[i][vPosaoID] == 13) {GetVehiclePos(i, X, Y, Z);} else continue;
		if(IsPlayerInRangeOfPoint(playerid, 4.0, X, Y, Z) && VoziloInfo[i][vPosaoID] == 13)
		{
			if(i != pKamionet[playerid]) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste kod vozila sa kojim ste poceli posao!");
			pNosiSmece[playerid] = false;
			SCM(playerid, COLOR_RED, "{DAA520}[Skupljac Sekundarnih Sirovina]: {FFFFFF}Uspesno ste ubacili sirovine u vozilo!");
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(playerid, 1);
			ApplyAnimation(playerid, "CARRY", "putdwn105", 4.1, false, true, true, false, true, 1);
			return 1;
		}
	}
	SCM(playerid, COLOR_RED, "[Skupljac Sekundarnih Sirovina]: {FFFFFF}Niste kod vozila za skupljanje sirovina!");
	return 1;
}
CMD:ubacipizzu(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pPosao] != 7) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste zaposleni kao pizza dostavljac!");
	if(radi[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne radite posao!");
	if(pPizza[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste uzeli pizzu!");
	new Float:X, Float:Y, Float:Z;
	for(new i = 0; i < MAX_VEHICLES; i++)
	{
		if (VoziloInfo[i][vPosaoID] == 7) {GetVehiclePos(i, X, Y, Z);} else continue;
		if(IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z) && VoziloInfo[i][vPosaoID] == 7)
		{
			pPizza[playerid] = 0;
			VehInfo[i][vPizza] = 1;
			SCM(playerid, COLOR_RED, "{DAA520}[Pizza Dostavljac]: {FFFFFF}Uspesno ste ubacili pizzu u skuter!");
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			RemovePlayerAttachedObject(playerid, 1);
			ApplyAnimation(playerid, "CARRY", "putdwn105", 4.1, 0, 1, 1, 0, 1, 1);
			return 1;
		}
	}
	SCM(playerid, COLOR_RED, "[Pizza Dostavljac]: {FFFFFF}Niste kod skutera za dostavu pizze!");
	return 1;
}
CMD:izvadipizzu(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pPosao] != 7) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste zaposleni kao pizza dostavljac!");
	if(radi[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne radite posao!");
	if(pPizza[playerid] == 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Vec ste uzeli pizzu u ruke!");
	new Float:X, Float:Y, Float:Z;
	for(new i = 0; i < MAX_VEHICLES; i++)
	{
		if (VoziloInfo[i][vPosaoID] == 7) {GetVehiclePos(i, X, Y, Z);} else continue;
		if(IsPlayerInRangeOfPoint(playerid, 2.0, X, Y, Z) && VehInfo[i][vPizza] == 1)
		{
			pPizza[playerid] = 1;
			VehInfo[i][vPizza] = 0;
			SCM(playerid, COLOR_RED, "{DAA520}[Pizza Dostavljac]: {FFFFFF}Uspesno ste uzeli pizzu!");
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
			SetPlayerAttachedObject(playerid, 1, 2814, 14, 0.30, -0.04, 0.16, 100.0, -17.0, -10.0, 1.0, 1.0, 1.0);
			ApplyAnimation(playerid, "CARRY", "liftup105", 4.1, 0, 1, 1, 0, 1, 1);
			return 1;
		}
	}
	SCM(playerid, COLOR_RED, "[Pizza Dostavljac]: {FFFFFF}Niste kod skutera za dostavu pizze ili u kutiji na skuteru nema pizze!");
	return 1;
}
CMD:prekiniposao(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pPosao] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste zaposleni!");
	if(radi[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne radite nikakav posao!");
	if(PlayerInfo[playerid][pPosao] == 1)
	{
		pJobProgress[playerid] = 0;
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste prekinuli posao!");
		taz_DisablePlayerCheckpoint(playerid);
		TogglePlayerControllable(playerid, 1);
		radi[playerid] = 0;
	}
	if(PlayerInfo[playerid][pPosao] == 2)
	{
		pJobProgress[playerid] = 0;
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste prekinuli posao!");
		taz_DisablePlayerCheckpoint(playerid);
		TogglePlayerControllable(playerid, 1);
		radi[playerid] = 0;
	}
	if(PlayerInfo[playerid][pPosao] == 3)
	{
		new i = pvoz[playerid];
		pJobProgress[playerid] = 0;
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste prekinuli posao!");
		taz_DisablePlayerCheckpoint(playerid);
		TogglePlayerControllable(playerid, 1);
		radi[playerid] = 0;
		DestroyVehicle(i);
		VoziloInfo[i][vID] = 0;
		VoziloInfo[i][vOwnable] = 0;
		VoziloInfo[i][vCena] = 0;
		VoziloInfo[i][vAutoskola] = 0;
		VoziloInfo[i][vPosaoID] = 0;
		VoziloInfo[i][vOrgID] = 0;
		VoziloInfo[i][vRent] = 0;
		VoziloInfo[i][vAdmin] = 0;
		VoziloInfo[i][vVip] = 0;
		VoziloInfo[i][vPromoter] = 0;
		VoziloInfo[i][vBoja] = 0;
		VoziloInfo[i][vBoja2] = 0;
		VoziloInfo[i][vDozvola] = 0;
		VoziloInfo[i][vID] = 0;
		VoziloInfo[i][vX] = 0;
		VoziloInfo[i][vY] = 0;
		VoziloInfo[i][vZ] = 0;
		new vfile[64];
		format(vfile, 64, VEHPATH, i);
		fremove(vfile);
		nenapravljenovozilo[i] = AddStaticVehicle(411, -3122.87036, 1042.63818, 1.69223, 0.0, 1, 1);
		pvoz[playerid] = -1;
		SetCameraBehindPlayer(playerid);
	}
	if(PlayerInfo[playerid][pPosao] == 4)
	{
		pJobProgress[playerid] = 0;
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste prekinuli posao!");
		taz_DisablePlayerCheckpoint(playerid);
		TogglePlayerControllable(playerid, 1);
		radi[playerid] = 0;
	}
	if(PlayerInfo[playerid][pPosao] == 5)
	{
		pJobProgress[playerid] = 0;
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste prekinuli posao!");
		DisablePlayerRaceCheckpoint(playerid);
		TogglePlayerControllable(playerid, 1);
		radi[playerid] = 0;
	}
	if(PlayerInfo[playerid][pPosao] == 6)
	{
		pJobProgress[playerid] = 0;
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste prekinuli posao!");
		taz_DisablePlayerCheckpoint(playerid);
		TogglePlayerControllable(playerid, 1);
		radi[playerid] = 0;
	}
	if(PlayerInfo[playerid][pPosao] == 7)
	{
		pJobProgress[playerid] = 0;
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste prekinuli posao!");
		DisablePlayerRaceCheckpoint(playerid);
		TogglePlayerControllable(playerid, 1);
		radi[playerid] = 0;
	}
	if(PlayerInfo[playerid][pPosao] == 8)
	{
		pJobProgress[playerid] = 0;
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste prekinuli posao!");
		taz_DisablePlayerCheckpoint(playerid);
		TogglePlayerControllable(playerid, 1);
		radi[playerid] = 0;
		for(new i = 0; i < 8; i++)
		{
			DestroyObject(dft[playerid][i]);
		}
	}
	if(PlayerInfo[playerid][pPosao] == 9)
	{
		pJobProgress[playerid] = 0;
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste prekinuli posao!");
		taz_DisablePlayerCheckpoint(playerid);
		TogglePlayerControllable(playerid, 1);
		radi[playerid] = 0;
	}
	if(PlayerInfo[playerid][pPosao] == 10)
	{
		pJobProgress[playerid] = 0;
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste prekinuli posao!");
		taz_DisablePlayerCheckpoint(playerid);
		TogglePlayerControllable(playerid, 1);
		radi[playerid] = 0;
	}
	if(PlayerInfo[playerid][pPosao] == 11)
	{
		pJobProgress[playerid] = 0;
		SCM(playerid, -1, "{1985A6}[Posao]: {FFFFFF}Uspesno ste prekinuli posao!");
		taz_DisablePlayerCheckpoint(playerid);
		TogglePlayerControllable(playerid, 1);
		radi[playerid] = 0;
	}
	return 1;
}
CMD:obrisivozilo(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new i;
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	if(sscanf(params, "i", i)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/obrisivozilo [id]");
	DestroyVehicle(i);
	VoziloInfo[i][vID] = 0;
	VoziloInfo[i][vOwnable] = 0;
	VoziloInfo[i][vCena] = 0;
	VoziloInfo[i][vAutoskola] = 0;
	VoziloInfo[i][vPosaoID] = 0;
	VoziloInfo[i][vOrgID] = 0;
	VoziloInfo[i][vRent] = 0;
	VoziloInfo[i][vAdmin] = 0;
	VoziloInfo[i][vVip] = 0;
	VoziloInfo[i][vPromoter] = 0;
	VoziloInfo[i][vBoja] = 0;
	VoziloInfo[i][vBoja2] = 0;
	VoziloInfo[i][vDozvola] = 0;
	VoziloInfo[i][vID] = 0;
	VoziloInfo[i][vX] = 0;
	VoziloInfo[i][vY] = 0;
	VoziloInfo[i][vZ] = 0;
	new vfile[64];
	format(vfile, 64, VEHPATH, i);
	fremove(vfile);
	nenapravljenovozilo[i] = AddStaticVehicle(411, -3122.87036, 1042.63818, 1.69223, 0.0, 1, 1);
	SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste obrisali vozilo!");
	new pName[MAX_PLAYER_NAME], str[128];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je obrisao vozilo id {A13C0A}%d!", pName, i);
	WarningPoruka(str);
	format(str, 256, "Admin %s je obrisao vozilo id {A13C0A}%d!",  pName, i);
	WarLog(str);
	return 1;
}
CMD:napravieventvozilo(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new id, eventid, i = NewID(5);
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	if(sscanf(params, "ii", id, eventid)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/napravieventvozilo [id] [eventid]");
	if(pEditujeVozilo[playerid] != 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Vec editujete vozilo!");	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	DestroyVehicle(nenapravljenovozilo[i]);
	probnovozilo[playerid] = AddStaticVehicle(id, X, Y, Z, 0.0, 77, 62);
	pEditujeVozilo[playerid] = i;
	PutPlayerInVehicle(playerid, probnovozilo[playerid], 0);
	VoziloInfo[i][vID] = id;
	VoziloInfo[i][vOwnable] = 0;
	VoziloInfo[i][vCena] = 0;
	VoziloInfo[i][vAutoskola] = 0;
	VoziloInfo[i][vPosaoID] = 0;
	VoziloInfo[i][vOrgID] = 0;
	VoziloInfo[i][vRent] = 0;
	VoziloInfo[i][vAdmin] = 0;
	VoziloInfo[i][vHelper] = 0;
	VoziloInfo[i][vVip] = 0;
	VoziloInfo[i][vPromoter] = 0;
	VoziloInfo[i][vSalon] = 0;
	VoziloInfo[i][vBoja] = 77;
	VoziloInfo[i][vBoja2] = 62;
	VoziloInfo[i][vDozvola] = 0;
	VoziloInfo[i][vEvent] = eventid;
	VoziloInfo[i][vX] = X;
	VoziloInfo[i][vY] = Y;
	VoziloInfo[i][vZ] = Z;
	VoziloInfo[i][vPainJob] = -1;
	SaveVozilo(i);
	SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste kreirali event vozilo!");
	SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Kada uparkirate vozilo, ukucajte /sacuvajvozilo!");
	new pName[MAX_PLAYER_NAME], str[128];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je napravio event vozilo id {A13C0A}%d!", pName, i);
	WarningPoruka(str);
	format(str, 256, "Admin %s je napravio vozilo id {A13C0A}%d!",  pName, i);
	WarLog(str);
	return 1;
}
CMD:napravivozilo(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new id, own, cena, posao, org, r, adm, hlp, vip, prom, salon, b1, b2, doz, autoskola, i = NewID(5);
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	if(sscanf(params, "iiiiiiiiiiiiiii", id, own, cena, autoskola, posao, org, r, adm, hlp, vip, prom, salon, b1, b2, doz)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/napravivozilo [id] [ownable] [cena] [autosk] [posao] [org] [rent] [admin] [helper] [vip] [promoter] [salon] [b1] [b2] [doz]");
	if(pEditujeVozilo[playerid] != 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Vec editujete vozilo!");	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X, Y, Z);
	DestroyVehicle(nenapravljenovozilo[i]);
	probnovozilo[playerid] = AddStaticVehicle(id, X, Y, Z, 0.0, b1, b2);
	pEditujeVozilo[playerid] = i;
	PutPlayerInVehicle(playerid, probnovozilo[playerid], 0);
	VoziloInfo[i][vID] = id;
	VoziloInfo[i][vOwnable] = own;
	VoziloInfo[i][vCena] = cena;
	VoziloInfo[i][vAutoskola] = autoskola;
	VoziloInfo[i][vPosaoID] = posao;
	VoziloInfo[i][vOrgID] = org;
	VoziloInfo[i][vRent] = r;
	VoziloInfo[i][vAdmin] = adm;
	VoziloInfo[i][vHelper] = hlp;
	VoziloInfo[i][vVip] = vip;
	VoziloInfo[i][vPromoter] = prom;
	VoziloInfo[i][vSalon] = salon;
	VoziloInfo[i][vBoja] = b1;
	VoziloInfo[i][vBoja2] = b2;
	VoziloInfo[i][vDozvola] = doz;
	VoziloInfo[i][vID] = id;
	VoziloInfo[i][vX] = X;
	VoziloInfo[i][vY] = Y;
	VoziloInfo[i][vZ] = Z;
	VoziloInfo[i][vPainJob] = -1;
	SaveVozilo(i);
	SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste kreirali vozilo!");
	SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Kada uparkirate vozilo, ukucajte /sacuvajvozilo!");
	new pName[MAX_PLAYER_NAME], str[128];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je napravio vozilo id {A13C0A}%d!", pName, i);
	WarningPoruka(str);
	format(str, 256, "Admin %s je napravio vozilo id {A13C0A}%d!",  pName, i);
	WarLog(str);
	return 1;
}
CMD:sacuvajvozilo(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(pEditujeVozilo[playerid] != 0)
	{
		new Float:X, Float:Y, Float:Z, Float:R, i = pEditujeVozilo[playerid];
		GetVehiclePos(probnovozilo[playerid], X, Y, Z);
		GetVehicleZAngle(probnovozilo[playerid], R);
		VoziloInfo[i][vX] = X;
		VoziloInfo[i][vY] = Y;
		VoziloInfo[i][vZ] = Z;
		VoziloInfo[i][vRot] = R;
		SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste parkirali vozilo, vozilo je sacuvano!");
		RemovePlayerFromVehicle(playerid);
		DestroyVehicle(probnovozilo[playerid]);
		new vozilo = AddStaticVehicle(VoziloInfo[i][vID], VoziloInfo[i][vX], VoziloInfo[i][vY], VoziloInfo[i][vZ], VoziloInfo[i][vRot], VoziloInfo[i][vBoja], VoziloInfo[i][vBoja2]);
		VehInfo[i][vEngine] = 0;
		VehInfo[i][vLights] = 0;
		VehInfo[i][vAlarm] = 0;
		VehInfo[i][vDoor] = 0;
		VehInfo[i][vBonnet] = 0;
		VehInfo[i][vObj] = 0;
		SetVehicleParamsEx(i, VehInfo[i][vEngine], VehInfo[i][vLights], VehInfo[i][vAlarm], VehInfo[i][vDoor], VehInfo[i][vBonnet], VehInfo[i][vBonnet], VehInfo[i][vObj]);
		StaviLabel(i, vozilo);
		pEditujeVozilo[playerid] = 0;
		SaveVozilo(i);
		if(VoziloInfo[i][vEvent] != 0)
		{
			SetVehicleVirtualWorld(i, VoziloInfo[i][vEvent]);
		}
	}
	return 1;
}
CMD:me(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new txt[128], str[256], name[64];
	if(sscanf(params, "s[128]", txt)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/me [text]!");
	GetPlayerName(playerid, name, sizeof(name));
	format(str, sizeof(str), "{CF80A9}* %s %s [/me]", name, txt);
	SendMes(20.0, playerid, COLOR_RED, str);
	return 1;
}
CMD:b(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new txt[128], str[256], name[64];
	if(sscanf(params, "s[128]", txt)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/b [text]");
	GetPlayerName(playerid, name, sizeof(name));
	format(str, sizeof(str), "{1985A6}-|  [{FFFFFF}OOC{1985A6}] %s{FFFFFF}: %s  {1985A6}|-", name, txt);
	SendMes(20.0, playerid, COLOR_RED, str);
	return 1;
}
CMD:fv(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[SERVER]: {FFFFFF}Niste ovlasceni!");
	if(!IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_RED, "[SERVER]: {FFFFFF}Niste u vozilu!");
	RepairVehicle(GetPlayerVehicleID(playerid));
	SCM(playerid, COLOR_RED, "{1985A6}[SERVER]: {FFFFFF}Uspesno ste popravili vozilo!");
	new pName[MAX_PLAYER_NAME], str[128];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je popravio vozilo id {A13C0A}%d!", pName, GetPlayerVehicleID(playerid));
	WarningPoruka(str);
	format(str, 256, "Admin %s je obrisao popravio id {A13C0A}%d!",  pName, GetPlayerVehicleID(playerid));
	WarLog(str);
	return 1;
}
CMD:afv(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new id, vid;
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[SERVER]: {FFFFFF}Niste ovlasceni!");
	if(sscanf(params, "u", id)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/afv [id igraca]");
	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_RED, "[SERVER]: {FFFFFFIgrac nije povezan!");
	if(!IsPlayerInAnyVehicle(id)) return SCM(playerid, COLOR_RED, "[SERVER]: {FFFFFF}Igrac nije u vozilu!");
	vid = GetPlayerVehicleID(id);
	RepairVehicle(vid);
	SCM(playerid, COLOR_RED, "{1985A6}[SERVER]: {FFFFFF}Uspesno ste popravili necije vozilo!");
	SCM(id, COLOR_RED, "{1985A6}[SERVER]: {FFFFFF}Admin vam je popravio vozilo!");
	new pName[MAX_PLAYER_NAME], str[128];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je popravio vozilo id {A13C0A}%d!", pName, vid);
	WarningPoruka(str);
	format(str, 256, "Admin %s je obrisao popravio id {A13C0A}%d!",  pName, vid);
	WarLog(str);
	return 1;
}
CMD:promoteri(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new string[3400], str[256], onl[64];
	for(new i = 0; i < MAX_PROMOTERS; i++)
	{
	    if(GetPlayerID(PromoterInfo[i][promName]) == -1)
	    {
	        format(onl, sizeof(onl), "{8B8989}Offline");
	    }
	    else
	    {
	        format(onl, sizeof(onl), "{7FFF00}Online");
	    }
	    format(str, sizeof(str), "{1985A6}[{FFFFFF}%d{1985A6}] - {FFFFFF}Ime: {1985A6}%s {FFFFFF}| {1985A6}%s {FFFFFF}| {FFFFFF}Neaktivnost: {1985A6}%d{FFFFFF}min \n", i, PromoterInfo[i][promName], onl, PromoterInfo[i][promNeaktivnost]);
		strcat(string, str);
	}
	SPD(playerid, DIALOG_PROMLIST, DIALOG_STYLE_MSGBOX, "{1985A6}Promoter Lista", string, "{1985A6}Potvrdi", "");
	return true;
}
CMD:skinipromotera(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[SERVER]: {FFFFFF}Niste ovlasceni!");
	new slot, pfile[128], pid, plfile[128], niko[128], poruka[128], adm[64], ime[128];
	if(sscanf(params, "i", slot)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/skinipromotera [slot]");
	if(slot < 0 && slot > 19) return SCM(playerid, COLOR_RED, "[SERVER]: {FFFFFF}Slot mora biti izmedju 0 i 19!");
	format(pfile, 128, PROMPATH, slot);
	format(niko, 128, "Niko");
	if(!UzetPromSlot(slot)) return SCM(playerid, COLOR_RED, "[SERVER]: {FFFFFF}Slot nije uzet!");
	format(ime, 128, PromoterInfo[slot][promName]);
	pid = GetPlayerID(ime);
	if(pid == -1)
	{
	    format(plfile, 128, PATH, ime);
	    INI_ParseFile(plfile, "LoadUser_%s", .bExtra = true, .extra = SKIDANJEID);
	    PlayerInfo[SKIDANJEID][pPromoter] = 0;
	    PromoterInfo[slot][promName] = niko;
	    PromoterInfo[slot][promNeaktivnost] = 0;
	    Sacuvaj(SKIDANJEID, ime);
	    SavePromoter(slot);
	}
	else
	{
	    PlayerInfo[pid][pPromoter] = 0;
	    PromoterInfo[slot][promName] = niko;
	    PromoterInfo[slot][promNeaktivnost] = 0;
	    SavePlayer(pid);
	    SavePromoter(slot);
	    GetPlayerName(playerid, adm, sizeof(adm));
	    format(poruka, sizeof(poruka), "{1985A6}[PROMOTER]: {FFFFFF}Skinut vam je promoter od strane admina {1985A6}%s!", adm);
	    SCM(pid, -1, poruka);
	}
 	format(poruka, sizeof(poruka), "{1985A6}[PROMOTER]: {FFFFFF}Uspesno ste skinuli promotera sa slota {1985A6}%d{FFFFFF}! Ime: {1985A6}%s", slot, ime);
 	SCM(playerid, -1, poruka);
 	new pName[MAX_PLAYER_NAME], str[128];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je skinuo promotera sa slota {A13C0A}%d!", pName, slot);
	WarningPoruka(str);
	format(str, 256, "Admin %s je skinuo promotera sa slota {A13C0A}%d!",  pName, slot);
	WarLog(str);
	return 1;
}
CMD:makepromoter(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new id, slot;
	if(IsPlayerAdmin(playerid) || PlayerInfo[playerid][pAdmin] > 0)
	{
	    if(sscanf(params, "ui", id, slot)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/makepromoter [id] [slot]");
	    else if(slot < 0 && slot > 19) return SCM(playerid, COLOR_RED, "[SERVER]: {FFFFFF}Slot mora biti izmedju 0 i 19!");
	    else if(UzetPromSlot(slot)) return SCM(playerid, COLOR_RED, "[SERVER]: {FFFFFF}Slot je vec uzet!");
	    else
	    {
	        new ime[128];
	        PlayerInfo[id][pPromoter] = 1;
	        GetPlayerName(id, ime, sizeof(ime));
	        PromoterInfo[slot][promName] = ime;
	        PromoterInfo[slot][promNeaktivnost] = 0;
	        SavePromoter(slot);
	        new pName[MAX_PLAYER_NAME], str[128];
			GetPlayerName(playerid, pName, sizeof(pName));
			format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je postavio promotera sa slota {A13C0A}%d!", pName, slot);
			WarningPoruka(str);
			format(str, 256, "Admin %s je postavio promotera sa slota {A13C0A}%d!",  pName, slot);
			WarLog(str);
	    }
	}
	else
	{
	    SCM(playerid, COLOR_RED, "[SERVER]: {FFFFFF}Niste ovlasceni!");
	}
	return true;
}
CMD:makevip(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new id, level, dani;
	if(IsPlayerAdmin(playerid) || PlayerInfo[playerid][pAdmin] > 0)
	{
	    if(sscanf(params, "uii", id, level, dani)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/makevip [id] [level] [dani]");
	    else if(level < 0 && level > 5) return SCM(playerid, COLOR_RED, "[SERVER]: {FFFFFF}Level mora biti izmedju 0 i 5! (0 za skidanje)");
	    else if(dani < 1 && dani > 90) return SCM(playerid, COLOR_RED, "[SERVER]: {FFFFFF}Ne mozete postaviti manje od 1 i vise od 90 dana!");
	    else
	    {
	    	new pName[MAX_PLAYER_NAME], pName2[MAX_PLAYER_NAME], str[128];
			GetPlayerName(playerid, pName, sizeof(pName));
			GetPlayerName(id, pName2, sizeof(pName2));
			format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je postavio vipa igracu {A13C0A}%s {FFFFFF}na level {A13C0A}%d {FFFFFF}na {A13C0A}%d {FFFFFF}dana!", pName, pName2, level, dani);
			WarningPoruka(str);
			format(str, 256, "Admin %s je postavio vipa igracu %s na level %d na %d dana!", pName, pName2, level, dani);
			WarLog(str);
			format(str, 256, "{1985A6}[Server]: {FFFFFF}Postavili ste vipa igracu {1985A6}%s {FFFFFF}na level {1985A6}%d {FFFFFF}na {1985A6}%d {FFFFFF}dana!", pName2, level, dani);
			SCM(playerid, -1, str);
			format(str, 256, "{1985A6}[Server]: {FFFFFF}Admin {1985A6}%s {FFFFFF}vam je dao vipa {1985A6}%d {FFFFFF}na {1985A6}%d {FFFFFF}dana!", pName, level, dani);
			SCM(id, -1, str);
	    	PlayerInfo[id][pVip] = level;
	    	PlayerInfo[id][pVipDani] = dani;
	        SavePlayer(id);
	    }
	}
	else
	{
	    SCM(playerid, COLOR_RED, "[SERVER]: {FFFFFF}Niste ovlasceni!");
	}
	return true;
}
CMD:nagradnishop(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	ShowPlayerDialog(playerid, NAGRADNI_SHOP, DIALOG_STYLE_LIST, "{1985A6}Nagradni Shop", "{FFFFFF}Vip Status\nBoost\nImovina\nPromena imena\nPromena tipa igraca\nSpecijalni broj telefona", "{FFFFFF}Izaberi", "{FFFFFF}Odustani");
	return true;
}
CMD:dodajvipdane(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new id, dani;
	if(IsPlayerAdmin(playerid) || PlayerInfo[playerid][pAdmin] > 0)
	{
	    if(sscanf(params, "ui", id, dani)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/dodajvipdane [id] [dani]");
	    else if(dani < 1 && dani > 90) return SCM(playerid, COLOR_RED, "[SERVER]: {FFFFFF}Ne mozete postaviti manje od 1 i vise od 90 dana!");
	    else
	    {
	    	new pName[MAX_PLAYER_NAME], pName2[MAX_PLAYER_NAME], str[128];
			GetPlayerName(playerid, pName, sizeof(pName));
			GetPlayerName(id, pName2, sizeof(pName2));
			format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je igracu {A13C0A}%s {FFFFFF}dodao {A13C0A}%d {FFFFFF}vip dana!", pName, pName2, dani);
			WarningPoruka(str);
			format(str, 256, "Admin %s je postavio vipa igracu %s na level %d na %d dana!", pName, pName2, dani);
			WarLog(str);
	    	PlayerInfo[id][pVipDani]+=dani;
	        SavePlayer(id);
	    }
	}
	else
	{
	    SCM(playerid, COLOR_RED, "[SERVER]: {FFFFFF}Niste ovlasceni!");
	}
	return true;
}
CMD:ban(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni da koristite komandu!");
	new id, dan, razlog[128], pName[128], adm[128], poruka[256];
	if(sscanf(params, "us[128]i", id, razlog, dan)) return SCM(playerid, COLOR_RED, "[Usage]: {FFFFFF}/ban [id] [razlog] [broj dana (101-perm)]!");
	if(!IsPlayerConnected(id)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}NIgrac nije povezan!");
	if(!((dan >= 1 && dan <= 30) || dan == 101)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Dan mora biti izmedju 1 i 30 (101 za perma ban)!");
	GetPlayerName(id, pName, sizeof(pName));
	GetPlayerName(playerid, adm, sizeof(adm));
	if(dan >= 1 && dan <= 30)
	{
	    PlayerInfo[id][pBan] = dan;
	    format(poruka, sizeof(poruka), "Admin {1985A6}%s {FFFFFF}je banovao igraca {1985A6}%s {FFFFFF}na {1985A6}%d {FFFFFF}dana! Razlog: {1985A6}%s", adm, pName, dan, razlog);
	}
	if(dan == 101)
	{
	    PlayerInfo[id][pBan] = dan;
	    format(poruka, sizeof(poruka), "Admin {1985A6}%s {FFFFFF}je banovao igraca {1985A6}%s zauvek{FFFFFF}! Razlog: {1985A6}%s", adm, pName, razlog);
	}
	PlayerInfo[id][pBanRazlog] = razlog;
	SendClientMessageToAll(-1, poruka);
	SetTimerEx("KickPlayer", 500, false, "i", id);
	new str[128], ppName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(id, ppName, sizeof(ppName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je banovao igraca {A13C0A}%s!", pName, ppName);
	WarningPoruka(str);
	format(str, 256, "Admin %s je banovao igraca {A13C0A}%s!",  pName, ppName);
	WarLog(str);
	return 1;
}
CMD:napravigate(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new id, Float:X, Float:Y, Float:Z, i = NewID(4);
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni da koristite komandu!");
	if(sscanf(params, "i", id)) return SCM(playerid, COLOR_RED, "[Usage]: {FFFFFF}/napravigate [id] <- id objekta!");
	if(editagate[playerid] != 0 || editing[playerid] != 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Vec editujete neki gate/objekat!");
	GetPlayerPos(playerid, X, Y, Z);
	gateObj[i] = CreateObject(id, X+1, Y+1, Z+1, 0.0, 0.0, 0.0, 300.0);
	editagate[playerid] = i;
	editagateid[playerid] = id;
	SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Poceli ste pravljenje gate-a!");
	editing[playerid] = 1;
	EditObject(playerid, gateObj[i]);
	gatefaza[playerid] = 1;
	SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Stavite gate tako da bude zatvoren!");
	new str[128], pName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je napravio gate {A13C0A}%d!", pName, i);
	WarningPoruka(str);
	format(str, 256, "Admin %s je napravio gate %d!", pName, i);
	WarLog(str);
	return 1;
}

CMD:aduty(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
    if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni da koristite komandu!");
    new string[128], ime[64];
    if(pADuty[playerid] == 0)
    {
        pADuty[playerid] = 1;
        SetPlayerHealth(playerid, 999999);
        GetPlayerName(playerid, ime, sizeof(ime));
        format(string, sizeof(string), "{1985A6}[DUTY]: {FFFFFF}Admin {1985A6}%s {FFFFFF}je sada na duznosti!", ime);
        SendClientMessageToAll(-1, string);
    }
    else
    {
        pADuty[playerid] = 0;
        SetPlayerHealth(playerid, 100);
        GetPlayerName(playerid, ime, sizeof(ime));
        format(string, sizeof(string), "{1985A6}[DUTY]: {FFFFFF}Admin {1985A6}%s {FFFFFF}vise nije na duznost!", ime);
        SendClientMessageToAll(-1, string);
    }
	return 1;
}
CMD:hduty(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
    if(PlayerInfo[playerid][pHelper] < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni da koristite komandu!");
    new string[128], ime[64];
    if(pHDuty[playerid] == 0)
    {
        pHDuty[playerid] = 1;
        SetPlayerHealth(playerid, 999999);
        GetPlayerName(playerid, ime, sizeof(ime));
        format(string, sizeof(string), "{1985A6}[DUTY]: {FFFFFF}Helper {1985A6}%s {FFFFFF}je sada na duznosti! /askq ako vam je potrebna pomoc!", ime);
        SendClientMessageToAll(-1, string);
    }
    else
    {
        pHDuty[playerid] = 0;
        SetPlayerHealth(playerid, 100);
        GetPlayerName(playerid, ime, sizeof(ime));
        format(string, sizeof(string), "{1985A6}[DUTY]: {FFFFFF}Helper {1985A6}%s {FFFFFF}vise nije na duznost!", ime);
        SendClientMessageToAll(-1, string);
    }
	return 1;
}
CMD:admini(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new string[3500], str[256], onl[64];
	for(new i = 0; i < MAX_ADMINS; i++)
	{
	    if(GetPlayerID(AdminInfo[i][aName]) == -1)
	    {
	        format(onl, sizeof(onl), "{8B8989}Offline");
	    }
	    else
	    {
	        format(onl, sizeof(onl), "{7FFF00}Online");
	    }
	    format(str, sizeof(str), "{1985A6}[{FFFFFF}%d{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}| %s {FFFFFF}| Neaktivnost: {1985A6}%d{FFFFFF}min | Duty Time: {1985A6}%d{FFFFFF}min \n", i+1, AdminInfo[i][aName], onl, AdminInfo[i][aNeaktivnost], AdminInfo[i][aDuty]);
	    strcat(string, str);
	}
	SPD(playerid, DIALOG_ALIST, DIALOG_STYLE_MSGBOX, "{1985A6}Lista Admina", string, "{1985A6}Potvrdi", "");
	return 1;
}
CMD:helperi(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new string[3500], str[256], onl[64];
	for(new i = 0; i < MAX_ADMINS; i++)
	{
	    if(GetPlayerID(HelperInfo[i][hlName]) == -1)
	    {
	        format(onl, sizeof(onl), "{8B8989}Offline");
	    }
	    else
	    {
	        format(onl, sizeof(onl), "{7FFF00}Online");
	    }
	    format(str, sizeof(str), "{1985A6}[{FFFFFF}%d{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}| %s {FFFFFF}| Neaktivnost: {1985A6}%d{FFFFFF}min | Duty Time: {1985A6}%d{FFFFFF}min \n", i+1, HelperInfo[i][hlName], onl, HelperInfo[i][hlNeaktivnost], HelperInfo[i][hlDuty]);
	    strcat(string, str);
	}
	SPD(playerid, DIALOG_ALIST, DIALOG_STYLE_MSGBOX, "{1985A6}Lista Helpera", string, "{1985A6}Potvrdi", "");
	return 1;
}
CMD:skinilidera(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
    if(PlayerInfo[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni da koristite komandu!");
    new id, orgfile[128], pid, pfile[128], niko[128], poruka[128], adm[128];
    if(sscanf(params, "i", id)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/skinilidera [id]!");
    format(orgfile, sizeof(orgfile), ORGPATH, id);
    format(niko, sizeof(niko), "Niko");
    if(!fexist(orgfile)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ova organizacija ne postoji!");
    pid = GetPlayerID(OrgInfo[id][orgLeader]);
    if(pid == -1)
    {
        new ime[128];
        format(ime, sizeof(ime), OrgInfo[id][orgLeader]);
        format(pfile, sizeof(pfile), PATH, ime);
        INI_ParseFile(pfile, "LoadUser_%s", .bExtra = true, .extra = SKIDANJEID);
        PlayerInfo[SKIDANJEID][pLeader] = 0;
        PlayerInfo[SKIDANJEID][pOrg] = 0;
        OrgInfo[id][orgLeader] = niko;
        RefreshPickupLabel(id, 2);
        Sacuvaj(SKIDANJEID, ime);
        SaveOrg(id);
    }
    else
    {
        PlayerInfo[pid][pLeader] = 0;
        PlayerInfo[pid][pOrg] = 0;
        OrgInfo[id][orgLeader] = niko;
        GetPlayerName(playerid, adm, sizeof(adm));
        format(poruka, sizeof(poruka), "{1985A6}[Leader]: {FFFFFF}Skinut vam je lider organizacije {1985A6}%s {FFFFFF}od strane admina {1985A6}%s!", OrgInfo[id][orgIme], adm);
        RefreshPickupLabel(id, 2);
        SavePlayer(pid);
        SaveOrg(id);
        SetPlayerSkin(pid, PlayerInfo[playerid][pSkin]);
        TogglePlayerControllable(pid, 1);
    }
    new str[128], pName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je skinuo lidera organizacije {A13C0A}%d!", pName, id);
	WarningPoruka(str);
	format(str, 256, "Admin %s je skinuo lidera organizacije %d!", pName, id);
	WarLog(str);
    format(poruka, sizeof(poruka), "{1985A6}[Server]: {FFFFFF}Uspesno ste skinuli lidera organizacije {1985A6}%s{FFFFFF}!", OrgInfo[id][orgIme]);
    SCM(playerid, -1, poruka);
	return 1;
}
CMD:changename(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni da koristite komandu!");
	new id, novoime[128], ime[128], file[128], string[128];
	if(sscanf(params, "us[128]", id, novoime)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/changename [id] [ime]!");
	if(!IsPlayerConnected(id))  return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije na serveru!");
	GetPlayerName(id, ime, sizeof(ime));
	format(file, sizeof(file), PATH, novoime);
	if(fexist(file)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}To ime je vec iskorisceno!");
	format(file, sizeof(file), PATH, ime);
	SetPlayerName(id, novoime);
	SavePlayer(id);
	fremove(file);
	if(PlayerInfo[id][pKuca] != 9999)
	{
	    HouseInfo[PlayerInfo[id][pKuca]][hOwner] = novoime;
	    SaveHouse(PlayerInfo[id][pKuca]);
	    RefreshPickupLabel(PlayerInfo[id][pKuca], 1);
	}
	if(PlayerInfo[id][pLeader] != 0)
	{
	    OrgInfo[PlayerInfo[id][pLeader]][orgLeader] = novoime;
	    SaveOrg(PlayerInfo[id][pLeader]);
	    RefreshPickupLabel(PlayerInfo[id][pLeader], 2);
	}
	if(PlayerInfo[id][pVozilo1] != 0)
	{
	    VoziloInfo[PlayerInfo[id][pVozilo1]][vOwner] = novoime;
	    SaveVozilo(PlayerInfo[id][pVozilo1]);
	}
	if(PlayerInfo[id][pVozilo2] != 0)
	{
	    VoziloInfo[PlayerInfo[id][pVozilo2]][vOwner] = novoime;
	    SaveVozilo(PlayerInfo[id][pVozilo2]);
	}
	if(PlayerInfo[id][pVozilo3] != 0)
	{
	    VoziloInfo[PlayerInfo[id][pVozilo3]][vOwner] = novoime;
	    SaveVozilo(PlayerInfo[id][pVozilo3]);
	}
	if(PlayerInfo[id][pVozilo4] != 0)
	{
	    VoziloInfo[PlayerInfo[id][pVozilo4]][vOwner] = novoime;
	    SaveVozilo(PlayerInfo[id][pVozilo4]);
	}
	if(PlayerInfo[id][pVozilo5] != 0)
	{
	    VoziloInfo[PlayerInfo[id][pVozilo5]][vOwner] = novoime;
	    SaveVozilo(PlayerInfo[id][pVozilo5]);
	}
	if(PlayerInfo[id][pFirma] != 0)
	{
	    FirmaInfo[PlayerInfo[id][pFirma]][fiOwner] = novoime;
	    SaveFirma(PlayerInfo[id][pFirma]);
	}
	format(string, sizeof(string), "{1985A6}[Server]: {FFFFFF}Uspesno ste promenili ime igracu {1985A6}%s {FFFFFF}u {1985A6}%s!", ime, novoime);
	SCM(playerid, -1, string);
	return 1;
}
CMD:refresh(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni da koristite komandu!");
	new id, tip;
	if(sscanf(params, "ii", id, tip)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/refresh [id] [tip]!");
	if(tip < 1 || tip > 2) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Tip mora biti 1 ili 2 (1 - house | 2 - org)!");
	if(tip == 1)
	{
	    if(id < 0 || id > MAX_HOUSES) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}ID nije validan!");
	    RefreshPickupLabel(id, tip);
	}
	if(tip == 2)
	{
	    if(id < 0 || id > brojorg) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}ID nije validan!");
	    RefreshPickupLabel(id, tip);
	}
	SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste refresh-ovali server.");
	return 1;
}
CMD:gps(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(brojgpsova < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}GPS-ovi jos nisu napravljeni!");
	new string[2048], text[128];
	for(new i = 1; i <= brojgpsova; i++)
	{
	    format(text, sizeof(text), "{1985A6}[{FFFFFF}%d{1985A6}] - {FFFFFF}%s\n", i, GPSInfo[i][gpsIme]);
	    strcat(string, text);
	}
	ShowPlayerDialog(playerid, DIALOG_GPS, DIALOG_STYLE_LIST, "{1985A6}Gps", string, "{1985A6}Izaberi", "{1985A6}Odustani");
	return 1;
}
CMD:napravigps(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni da koristite komandu!");
	new ime[128], Float:X, Float:Y, Float:Z, i = NewID(7), gpsfile[64];
	if(sscanf(params, "s[128]", ime)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/napravigps [ime]");
	GetPlayerPos(playerid, X, Y, Z);
	GPSInfo[i][gpsIme] = ime;
	GPSInfo[i][gX] = X;
	GPSInfo[i][gZ] = Y;
	GPSInfo[i][gY] = Z;
	SaveGPS(i);
	SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste napravili gps!");
	format(gpsfile, sizeof(gpsfile), GPSPATH, i);
 	INI_ParseFile(gpsfile, "LoadGPS", .bExtra = true, .extra = i);
 	brojgpsova++;
	return 1;
}
CMD:port(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] > 1 || PlayerInfo[playerid][pHelper] > 1 || PlayerInfo[playerid][pVip] > 2) return ShowPlayerDialog(playerid, DIALOG_PORT, DIALOG_STYLE_LIST, "{1985A6}Port", "{FFFFFF}Fort Carson\nBlueberry\nPoslovi\nOrganizacije\nOstalo", "{1985A6}Izaberi", "{1985A6}Odustani");
	else if(PlayerInfo[playerid][pVip] > 1 && PlayerInfo[playerid][pVip] <= 2) 
	{
		if(brojvipportova < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Portovi jos nisu napravljeni!");
		new string[2048], text[128];
		for(new i = 1; i <= brojvipportova; i++)
		{
			format(text, sizeof(text), "{1985A6}[{FFFFFF}%d{1985A6}] - {FFFFFF}%s\n", i, VipPortInfo[i][vipportIme]);
			strcat(string, text);
		}
	    return ShowPlayerDialog(playerid, DIALOG_VIPPORT, DIALOG_STYLE_LIST, "{1985A6}Vip Port", string, "{1985A6}Izaberi", "{1985A6}Odustani"); 
	}
	else if(PlayerInfo[playerid][pPromoter] == 1)
	{
		if(brojpromportova < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Portovi jos nisu napravljeni!");
		new string[2048], text[128];
		for(new i = 1; i <= brojpromportova; i++)
		{
			format(text, sizeof(text), "{1985A6}[{FFFFFF}%d{1985A6}] - {FFFFFF}%s\n", i, PromPortInfo[i][promportIme]);
			strcat(string, text);
		}
	    return ShowPlayerDialog(playerid, DIALOG_PROMPORT, DIALOG_STYLE_LIST, "{1985A6}Promoter Port", string, "{1985A6}Izaberi", "{1985A6}Odustani"); 
	}
	else return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni da koristite komandu!");
}
CMD:napravivipport(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni da koristite komandu!");
	new ime[32];
	if(sscanf(params, "s[32]", ime)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/napravivipport [ime]");
	new Float:X, Float:Y, Float:Z, i = NewID(19), portfile[64];
	GetPlayerPos(playerid, X, Y, Z);
	VipPortInfo[i][vipportIme] = ime;
	VipPortInfo[i][vipportX] = X;
	VipPortInfo[i][vipportY] = Y;
	VipPortInfo[i][vipportZ] = Z;
	SaveVipPort(i);
	SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste napravili port!");
	format(portfile, sizeof(portfile), VIPPORTPATH, i);
	INI_ParseFile(portfile, "LoadVipPorts", .bExtra = true, .extra = i);
	brojvipportova++;
	new str[128], pName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je napravio vip port {A13C0A}%s!", pName, ime);
	WarningPoruka(str);
	format(str, 256, "%s je napravio vip port %s!", pName, ime);
	WarLog(str);
	return 1;
}
CMD:napravipromoterport(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni da koristite komandu!");
	new ime[32];
	if(sscanf(params, "s[32]", ime)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/napravipromoterport [ime]");
	new Float:X, Float:Y, Float:Z, i = NewID(20), portfile[64];
	GetPlayerPos(playerid, X, Y, Z);
	PromPortInfo[i][promportIme] = ime;
	PromPortInfo[i][promportX] = X;
	PromPortInfo[i][promportY] = Y;
	PromPortInfo[i][promportZ] = Z;
	SavePromoterPort(i);
	SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste napravili port!");
	format(portfile, sizeof(portfile), PROMOTERPORTPATH, i);
	INI_ParseFile(portfile, "LoadPromPorts", .bExtra = true, .extra = i);
	brojpromportova++;
	new str[128], pName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je napravio promoter port {A13C0A}%s!", pName, ime);
	WarningPoruka(str);
	format(str, 256, "%s je napravio promoter port %s!", pName, ime);
	WarLog(str);
	return 1;
}
CMD:napraviport(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni da koristite komandu!");
	new ime[32];
	if(sscanf(params, "s[32]", ime)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/napraviport [ime]");
	format(pPortIme[playerid], 32, "%s", ime);
	ShowPlayerDialog(playerid, DIALOG_NAPRAVIPORT, DIALOG_STYLE_LIST, "{1985A6}Izbor kategorije", "{FFFFFF}Fort Carson\nBlueberry\nPoslovi\nOrganizacije\nOstalo", "{1985A6}Izaberi", "{1985A6}Odustani");
	return 1;
}
CMD:organizacije(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new lista[1024], text[128];
	if(brojorg < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Organizacije jos uvek nisu napravljene!");
	for(new i = 1; i <= brojorg; i++)
	{
	    format(text, sizeof(text), "{1985A6}[{FFFFFF}%d{1985A6}] - {FFFFFF}%s\n", i, OrgInfo[i][orgIme]);
	    strcat(lista, text);
	}
	ShowPlayerDialog(playerid, DIALOG_ORGLIST, DIALOG_STYLE_MSGBOX, "{1985A6}Lista Organizacija", lista, "{1985A6}Napusti", "");
	return 1;
}
CMD:lideri(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new onl[64], str[190], string[2048];
	if(brojorg < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Organizacije jos uvek nisu napravljene!");
	for(new i = 1; i < MAX_ORGS; i++)
	{
		new orgfile[64];
	    format(orgfile, sizeof(orgfile), ORGPATH, i);
     	if(fexist(orgfile))
     	{
     		if(GetPlayerID(OrgInfo[i][orgLeader]) == -1)
		    {
		        format(onl, sizeof(onl), "{8B8989}Offline");
		    }
		    else
		    {
		        format(onl, sizeof(onl), "{7FFF00}Online");
		    }
		    format(str, sizeof(str), "{1985A6}[{FFFFFF}%d{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}| %s {FFFFFF}| Neaktivnost: {1985A6}%d{FFFFFF}min\n", i, OrgInfo[i][orgLeader], onl, OrgInfo[i][orgLeaderNeaktivnost]);
		    strcat(string, str);
     	}
	}
	ShowPlayerDialog(playerid, DIALOG_ORGLEADERS, DIALOG_STYLE_MSGBOX, "{1985A6}Lista Lidera", string, "{1985A6}Napusti", "");
	return 1;
}
CMD:memberi(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new str[128], string[2048];
	if(PlayerInfo[playerid][pOrg] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste u organizaciji!");
	new i = PlayerInfo[playerid][pOrg];
	format(str, sizeof(str), "{1985A6}[{FFFFFF}1{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}\n", OrgInfo[i][orgMember1]);
	strcat(string, str);
	format(str, sizeof(str), "{1985A6}[{FFFFFF}2{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}\n", OrgInfo[i][orgMember2]);
	strcat(string, str);
	format(str, sizeof(str), "{1985A6}[{FFFFFF}3{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}\n", OrgInfo[i][orgMember3]);
	strcat(string, str);
	format(str, sizeof(str), "{1985A6}[{FFFFFF}4{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}\n", OrgInfo[i][orgMember4]);
	strcat(string, str);
	format(str, sizeof(str), "{1985A6}[{FFFFFF}5{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}\n", OrgInfo[i][orgMember5]);
	strcat(string, str);
	format(str, sizeof(str), "{1985A6}[{FFFFFF}6{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}\n", OrgInfo[i][orgMember6]);
	strcat(string, str);
	format(str, sizeof(str), "{1985A6}[{FFFFFF}7{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}\n", OrgInfo[i][orgMember7]);
	strcat(string, str);
	format(str, sizeof(str), "{1985A6}[{FFFFFF}8{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}\n", OrgInfo[i][orgMember8]);
	strcat(string, str);
	format(str, sizeof(str), "{1985A6}[{FFFFFF}9{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}\n", OrgInfo[i][orgMember9]);
	strcat(string, str);
	format(str, sizeof(str), "{1985A6}[{FFFFFF}10{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}\n", OrgInfo[i][orgMember10]);
	strcat(string, str);
	format(str, sizeof(str), "{1985A6}[{FFFFFF}11{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}\n", OrgInfo[i][orgMember11]);
	strcat(string, str);
	format(str, sizeof(str), "{1985A6}[{FFFFFF}12{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}\n", OrgInfo[i][orgMember12]);
	strcat(string, str);
	format(str, sizeof(str), "{1985A6}[{FFFFFF}13{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}\n", OrgInfo[i][orgMember13]);
	strcat(string, str);
	format(str, sizeof(str), "{1985A6}[{FFFFFF}14{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}\n", OrgInfo[i][orgMember14]);
	strcat(string, str);
	format(str, sizeof(str), "{1985A6}[{FFFFFF}15{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}\n", OrgInfo[i][orgMember15]);
	strcat(string, str);
	format(str, sizeof(str), "{1985A6}[{FFFFFF}16{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}\n", OrgInfo[i][orgMember16]);
	strcat(string, str);
	format(str, sizeof(str), "{1985A6}[{FFFFFF}17{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}\n", OrgInfo[i][orgMember17]);
	strcat(string, str);
	format(str, sizeof(str), "{1985A6}[{FFFFFF}18{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}\n", OrgInfo[i][orgMember18]);
	strcat(string, str);
	format(str, sizeof(str), "{1985A6}[{FFFFFF}19{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}\n", OrgInfo[i][orgMember19]);
	strcat(string, str);
	format(str, sizeof(str), "{1985A6}[{FFFFFF}20{1985A6}] {FFFFFF}- Ime: {1985A6}%s {FFFFFF}\n", OrgInfo[i][orgMember20]);
	strcat(string, str);
	ShowPlayerDialog(playerid, DIALOG_ORGLEADERS, DIALOG_STYLE_MSGBOX, "{1985A6}Lista Clanova Organizacije", string, "{1985A6}Napusti", "");
	return 1;
}
CMD:makeleader(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni da koristite ovu komandu!");
	if(brojorg < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Organizacije jos uvek nisu napravljene!");
	new id, orgid, ime[128], string[256];
	if(sscanf(params, "ui", id, orgid)) return SCM(playerid, COLOR_RED, "[Usage]: {FFFFFF}/makeleader [id] [orgid]");
	if(ulogovan[id] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac nije ulogovan!");
	if(PlayerInfo[id][pLeader] != 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Igrac je vec lider neke organizacije!");
	if(orgid < 1 || orgid > brojorg) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Netacan ID organizacije!");
	GetPlayerName(id, ime, sizeof(ime));
	PlayerInfo[id][pLeader] = orgid;
	PlayerInfo[id][pOrg] = orgid;
	OrgInfo[orgid][orgLeader] = ime;
	SavePlayer(id);
	SaveOrg(orgid);
	format(string, sizeof(string), "{1985A6}[Server]: {FFFFFF}Uspesno ste postavili lidera organizacije {1985A6}%s{FFFFFF} igracu {1985A6}%s!", OrgInfo[orgid][orgIme], ime);
	SCM(playerid, -1, string);
	format(string, sizeof(string), "{1985A6}[Server]: {FFFFFF}Cestitamo, postali ste lider organizacije {1985A6}%s{FFFFFF}!", OrgInfo[orgid][orgIme]);
	SCM(id, -1, string);
	Delete3DTextLabel(orgLabel[orgid]);
	format(string, sizeof(string), "{1985A6}[ {FFFFFF}%s {1985A6}]\n{FFFFFF}Leader: {1985A6}%s", OrgInfo[orgid][orgIme], OrgInfo[orgid][orgLeader]);
	orgLabel[orgid] = Create3DTextLabel(string, COLOR_BLACK, OrgInfo[orgid][orgX], OrgInfo[orgid][orgY], OrgInfo[orgid][orgZ], 20.0, 0, 0);
	SetPlayerSkin(id, OrgInfo[orgid][orgLeaderSkin]);
    TogglePlayerControllable(id, 1);
    new str[128], pName[MAX_PLAYER_NAME], ppName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(id, ppName, sizeof(ppName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je postavio {A13C0A}%s {FFFFFF}za lidera organizacije {A13C0A}%s!", pName, OrgInfo[orgid][orgIme], ppName);
	WarningPoruka(str);
	format(str, 256, "Admin %s je postavio %s za lidera organizacije %s!", pName, OrgInfo[orgid][orgIme], ppName);
	WarLog(str);
	return 1;
}
CMD:napraviorg(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	if(editaorg[playerid] != -1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Vec pravite/editujete organizaciju!");
	new Float:X, Float:Y, Float:Z, i = NewID(2), nikostring[128];
	format(nikostring, sizeof(nikostring), "Niko");
	editaorg[playerid] = i;
	OrgInfo[i][orgLeader] = nikostring;
	OrgInfo[i][orgMember1] = nikostring;
	OrgInfo[i][orgMember2] = nikostring;
	OrgInfo[i][orgMember3] = nikostring;
	OrgInfo[i][orgMember4] = nikostring;
	OrgInfo[i][orgMember5] = nikostring;
	OrgInfo[i][orgMember6] = nikostring;
	OrgInfo[i][orgMember7] = nikostring;
	OrgInfo[i][orgMember8] = nikostring;
	OrgInfo[i][orgMember9] = nikostring;
	OrgInfo[i][orgMember10] = nikostring;
	OrgInfo[i][orgMember11] = nikostring;
	OrgInfo[i][orgMember12] = nikostring;
	OrgInfo[i][orgMember13] = nikostring;
	OrgInfo[i][orgMember14] = nikostring;
	OrgInfo[i][orgMember15] = nikostring;
	OrgInfo[i][orgMember16] = nikostring;
	OrgInfo[i][orgMember17] = nikostring;
	OrgInfo[i][orgMember18] = nikostring;
	OrgInfo[i][orgMember19] = nikostring;
	OrgInfo[i][orgMember20] = nikostring;
	OrgInfo[i][orgSefMoney] = 0;
	OrgInfo[i][orgSefMats] = 0;
	OrgInfo[i][orgSefDrugs] = 0;
 	GetPlayerPos(playerid, X, Y, Z);
 	OrgInfo[i][orgX] = X;
 	OrgInfo[i][orgY] = Y;
 	OrgInfo[i][orgZ] = Z;
 	orgPickup[i] = CreatePickup(19132, 1, X, Y, Z);
 	SCM(playerid, COLOR_ORANGE, "{1985A6}[Server]: {FFFFFF}Uspesno ste zapoceli pravljenje organizacije!");
 	ShowPlayerDialog(playerid, DIALOG_ORGIME, DIALOG_STYLE_INPUT, "{1985A6}Ime organizacije", "{FFFFFF}Unesite zeljeno ime organizacije!", "Potvrdi", "Odustani");
 	brojorg++;
	return 1;
}
CMD:obrisiorg(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new i, orgfile[64];
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	if(sscanf(params, "i", i)) return SCM(playerid, COLOR_RED, "[Usage]: {FFFFFF}/makeleader [id] [orgid]");
	if(editaorg[playerid] != -1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Vec pravite/editujete organizaciju!");
	format(orgfile, sizeof(orgfile), ORGPATH, i);
	if(!fexist(orgfile)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne postoji organizacija sa tim id-em!");
 	DestroyPickup(orgPickup[i]);
 	Delete3DTextLabel(orgLabel[i]);
 	fremove(orgfile);
 	SCM(playerid, COLOR_ORANGE, "{1985A6}[Server]: {FFFFFF}Uspesno ste obrisali organizaciju!");
 	brojorg--;
	return 1;
}
CMD:rtcall(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 1 && PlayerInfo[playerid][pHelper] < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	RespawnVozila();
	SCM(playerid, COLOR_BLUE, "{1985A6}[Respawn Vozila]: {FFFFFF}Uspesno ste odradili respawn svih vozila!");
	return 1;
}
CMD:katalog(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(!IsPlayerInRangeOfPoint(playerid, 3.0, 111.7311,1051.4434,13.7996) && !IsPlayerInRangeOfPoint(playerid, 3.0, 111.5714,1053.4357,13.7996) && !IsPlayerInRangeOfPoint(playerid, 3.0, 111.5134,1055.4646,13.7996)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste u salonu vozila na salteru za pregled kataloga!");
	new str[128], kat[16];
	SakrijTD(playerid);
	SalonTDPrikazi(playerid);
	SelectTextDraw(playerid, 0xFFFFFFFF);
	SCM(playerid, COLOR_BLUE, "{1985A6}[Katalog]: {FFFFFF}Da bi napustili katalog, ukucajte /napustikatalog!");
	pKatalog[playerid] = 1;
	new i = SalonskaVozila[0][0];
	PlayerTextDrawSetString(playerid, SalonTD3[playerid], ImenaVozila[i-400]);
	format(str, 128, "Cena:~b~ %d", SalonskaVozila[pKatalog[playerid]-1][1]);
	PlayerTextDrawSetString(playerid, SalonTD4[playerid], str);
	if(SalonskaVozila[pKatalog[playerid]-1][2] == 1) {format(kat, 16, "A");}
	if(SalonskaVozila[pKatalog[playerid]-1][2] == 2) {format(kat, 16, "B");}
	if(SalonskaVozila[pKatalog[playerid]-1][2] == 5) {format(kat, 16, "F");}
	format(str, 128, "Kategorija:~b~ %s", kat);
	PlayerTextDrawSetString(playerid, SalonTD5[playerid], str);
	format(str, 128, "Preostalo:~b~ %d", zalihevozila[pKatalog[playerid]-1]);
	PlayerTextDrawSetString(playerid, SalonTD6[playerid], str);
	SetPlayerVirtualWorld(playerid, playerid+1);
	SetPlayerPos(playerid, -353.3591,1945.2610,59.7838);
	SetPlayerCameraPos(playerid, -353.3596, 1945.1473, 61.4283);
	SetPlayerCameraLookAt(playerid, -352.6713, 1945.8730, 61.0736);
	//pSalonVozilo[playerid] = AddStaticVehicle(SalonskaVozila[pKatalog[playerid]-1][0], -347.9390, 1950.7653, 59.3629, 180.0000, 1, 1);
	//SetVehicleVirtualWorld(pSalonVozilo[playerid], GetPlayerVirtualWorld(playerid));
	i = NewID(5);
	DestroyVehicle(nenapravljenovozilo[i]);
	pSalonVozilo[playerid] = AddStaticVehicle(461, -348.2014, 1950.7007, 59.3392, 180.0000, 1, 1);
	SetVehicleVirtualWorld(pSalonVozilo[playerid], GetPlayerVirtualWorld(playerid));
	return 1;
}
CMD:napustikatalog(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(pKatalog[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne pregledate katalog!");
	SalonTDSakrij(playerid);
	PrikaziTD(playerid);
	CancelSelectTextDraw(playerid);
	SCM(playerid, COLOR_BLUE, "{1985A6}[Katalog]: {FFFFFF}Uspesno ste napustili katalog!");
	pKatalog[playerid] = 1;
	taz_SetPlayerPos(playerid, 111.5714,1053.4357,13.7996);
	SetCameraBehindPlayer(playerid);
	SetPlayerVirtualWorld(playerid, 0);
	return 1;
}
CMD:kupikucu(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pKuca] != 9999) return SCM(playerid, COLOR_RED, "[HOUSE]: {FFFFFF}Vec imate kucu!");
	new Float:X, Float:Y, Float:Z;
	for(new hid = 0; hid < MAX_HOUSES; hid++)
	{
	    X=Float:HouseInfo[hid][hX];
	    Y=Float:HouseInfo[hid][hY];
	    Z=Float:HouseInfo[hid][hZ];
	    if(IsPlayerInRangeOfPoint(playerid, 2.0, Float:X, Float:Y, Float:Z))
	    {
	        if(HouseInfo[hid][hOwned] == 1) return SCM(playerid, COLOR_RED, "[HOUSE]: {FFFFFF}Kuca je vec kupljena!");
	        if(GetPlayerMoney(playerid) < HouseInfo[hid][hCena]) return SCM(playerid, COLOR_RED, "[HOUSE]: {FFFFFF}Nemate dovoljno novca da kupite kucu!");
	        if(PlayerInfo[playerid][pLevel] < HouseInfo[hid][hLevel]) return SCM(playerid, COLOR_RED, "[HOUSE]: {FFFFFF}Niste dovoljan level!");
	        taz_GivePlayerMoney(playerid, -HouseInfo[hid][hCena]);
	        new ime[128];
	        GetPlayerName(playerid, ime, sizeof(ime));
	        PlayerInfo[playerid][pKuca] = hid;
	        HouseInfo[hid][hOwner] = ime;
	        HouseInfo[hid][hOwned] = 1;
	        DestroyDynamic3DTextLabel(hLabel[hid]);
	        DestroyPickup(hPickup[hid]);
	        new string[512], tipk[64];
			if(HouseInfo[hid][hTip] == 1) format(tipk, 64, "Stan");
			if(HouseInfo[hid][hTip] == 2) format(tipk, 64, "Mala kuca");
			if(HouseInfo[hid][hTip] == 3) format(tipk, 64, "Srednja kuca");
			if(HouseInfo[hid][hTip] == 4) format(tipk, 64, "Velika kuca");
			if(HouseInfo[hid][hTip] == 5) format(tipk, 64, "Vila");
		    format(string, sizeof(string), "{1985A6}[ {FFFFFF}Kupljena kuca {1985A6}]\nOwner: {FFFFFF}%s\n{1985A6}Cena: {FFFFFF}%d\n{1985A6}Level: {FFFFFF}%d\n{1985A6}Tip: {FFFFFF}%s\n{1985A6}Adresa: {FFFFFF}%d", HouseInfo[hid][hOwner], HouseInfo[hid][hCena], HouseInfo[hid][hLevel], tipk, hid);
		    hPickup[hid] = CreatePickup(1272, 1, HouseInfo[hid][hX], HouseInfo[hid][hY], HouseInfo[hid][hZ]);
		    hLabel[hid] = CreateDynamic3DTextLabel(string, COLOR_WHITE, HouseInfo[hid][hX]+0.1, HouseInfo[hid][hY], HouseInfo[hid][hZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
			SaveHouse(hid);
		    SavePlayer(playerid);
		    new gid = HouseInfo[hid][hGaraza];
		    SaveGaraza(gid);
		    format(string, sizeof(string), "{1985A6}[ {FFFFFF}Privatna Garaza {1985A6}]\nOwner: {FFFFFF}%s\n{1985A6}Adresa garaze: {FFFFFF}%d\n{1985A6}Adresa kuce kojoj pripada: {FFFFFF}%d", ime, gid, GarazaInfo[gid][gaHouse]);
			gaPickup[gid] = CreatePickup(19130, 1, GarazaInfo[gid][gaX], GarazaInfo[gid][gaY], GarazaInfo[gid][gaZ]);
			gaLabel[gid] = Create3DTextLabel(string, COLOR_WHITE, GarazaInfo[gid][gaX], GarazaInfo[gid][gaY], GarazaInfo[gid][gaZ], 10.0, 0, 0);
		    SCM(playerid, COLOR_BLUE, "[HOUSE]: {FFFFFF}Uspesno ste kupili kucu! Cestitamo!");
	    }
	}
    return 1;
}
CMD:napravikucu(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new cena, level, tip;
	if(sscanf(params, "iii", cena, level, tip)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/napravikucu [cena] [level] [tip]! Tipovi: 1-Stan 2-Mala 3-Srednja 4-Velika 5-Vila");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[HOUSE]: {FFFFFF}Niste ovlasceni da koristite ovu komandu!");
	new Float:X, Float:Y, Float:Z, i=NewID(1);
	GetPlayerPos(playerid, X, Y, Z);
	HouseInfo[i][hOwned] = 0;
	HouseInfo[i][hCena] = cena;
	HouseInfo[i][hLevel] = level;
	HouseInfo[i][hNeaktivnost] = 0;
	HouseInfo[i][hTip] = tip;
	HouseInfo[i][hX] = X;
	HouseInfo[i][hY] = Y;
	HouseInfo[i][hZ] = Z;
	HouseInfo[i][hSef] = 0;
	HouseInfo[i][hZakljucana] = 0;
	new string[512], tipk[64];
	if(HouseInfo[i][hTip] == 1) format(tipk, 64, "Stan");
	if(HouseInfo[i][hTip] == 2) format(tipk, 64, "Mala kuca");
	if(HouseInfo[i][hTip] == 3) format(tipk, 64, "Srednja kuca");
	if(HouseInfo[i][hTip] == 4) format(tipk, 64, "Velika kuca");
	if(HouseInfo[i][hTip] == 5) format(tipk, 64, "Vila");
	format(string, sizeof(string), "{1985A6}[ {FFFFFF}Kuca na prodaju {1985A6}]\nOwner: {FFFFFF}Niko\n{1985A6}Cena: {FFFFFF}$%d\n{1985A6}Level: {FFFFFF}%d\n{1985A6}Tip: {FFFFFF}%s\n{1985A6}Adresa: {FFFFFF}%d\n/kupikucu", HouseInfo[i][hCena], HouseInfo[i][hLevel], tipk, i);
    hPickup[i] = CreatePickup(1273, 1, HouseInfo[i][hX], HouseInfo[i][hY], HouseInfo[i][hZ]);
    hLabel[i] = CreateDynamic3DTextLabel(string, COLOR_WHITE, HouseInfo[i][hX]+0.1, HouseInfo[i][hY], HouseInfo[i][hZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
    SaveHouse(i);
    SCM(playerid, COLOR_BLUE, "{1985A6}[HOUSE]: {FFFFFF}Uspesno ste napravili kucu!");
    return 1;
}
CMD:napraviimanje(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new cena, level, precnik;
	if(sscanf(params, "iii", cena, level, precnik)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/napraviimanje [cena] [level] [precnik]");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[IMANJE]: {FFFFFF}Niste ovlasceni da koristite ovu komandu!");
	new Float:X, Float:Y, Float:Z, i=NewID(17);
	GetPlayerPos(playerid, X, Y, Z);
	ImanjeInfo[i][iOwned] = 0;
	ImanjeInfo[i][iCena] = cena;
	ImanjeInfo[i][iLevel] = level;
	ImanjeInfo[i][iNeaktivnost] = 0;
	ImanjeInfo[i][iPrecnik] = precnik;
	ImanjeInfo[i][iX] = X;
	ImanjeInfo[i][iY] = Y;
	ImanjeInfo[i][iZ] = Z;
	ImanjeInfo[i][iBrojStabala] = 0;
	new string[512];
	format(string, sizeof(string), "{1985A6}Imanje na prodaju\nOwner: {FFFFFF}Niko\n{1985A6}Cena: {FFFFFF}$%d\n{1985A6}Level: {FFFFFF}%d\n{1985A6}Precnik: {FFFFFF}%d\n{1985A6}Adresa: {FFFFFF}%d\n/kupiimanje", ImanjeInfo[i][iCena], ImanjeInfo[i][iLevel], ImanjeInfo[i][iPrecnik], i);
	iPickup[i] = CreatePickup(19320, 1, ImanjeInfo[i][iX], ImanjeInfo[i][iY], ImanjeInfo[i][iZ]);
	iLabel[i] = CreateDynamic3DTextLabel(string, COLOR_WHITE, ImanjeInfo[i][iX]+0.1, ImanjeInfo[i][iY], ImanjeInfo[i][iZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
    SaveImanje(i);
    SCM(playerid, COLOR_BLUE, "{1985A6}[IMANJE]: {FFFFFF}Uspesno ste napravili imanje!");
    return 1;
}
CMD:napravigarazu(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new tip;
	if(sscanf(params, "i", tip)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/napravigarazu [id kuce]");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Garaza]: {FFFFFF}Niste ovlasceni da koristite ovu komandu!");
	new Float:X, Float:Y, Float:Z, i=NewID(10);
	GetPlayerPos(playerid, X, Y, Z);
	GarazaInfo[i][gaX] = X;
	GarazaInfo[i][gaY] = Y;
	GarazaInfo[i][gaZ] = Z;
	GarazaInfo[i][gaHouse] = tip;
    SaveGaraza(i);
    new string[512];
	format(string, sizeof(string), "{1985A6}[ {FFFFFF}Privatna Garaza {1985A6}]\nOwner: {FFFFFF}Niko\n{1985A6}Adresa garaze: {FFFFFF}%d\n{1985A6}Adresa kuce kojoj pripada: {FFFFFF}%d", i, GarazaInfo[i][gaHouse]);
	gaPickup[i] = CreatePickup(19130, 1, GarazaInfo[i][gaX], GarazaInfo[i][gaY], GarazaInfo[i][gaZ]);
	gaLabel[i] = Create3DTextLabel(string, COLOR_WHITE, GarazaInfo[i][gaX], GarazaInfo[i][gaY], GarazaInfo[i][gaZ], 10.0, 0, 0);
	HouseInfo[GarazaInfo[i][gaHouse]][hGaraza] = i;
    SCM(playerid, COLOR_BLUE, "{1985A6}[Garaza]: {FFFFFF}Uspesno ste napravili garazu!");
    return 1;
}

CMD:napravitocilicu(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new tip;
	if(sscanf(params, "i", tip)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/napravitocilicu [id firme]");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Garaza]: {FFFFFF}Niste ovlasceni da koristite ovu komandu!");
	new Float:X, Float:Y, Float:Z, i=NewID(11);
	GetPlayerPos(playerid, X, Y, Z);
	TocilicaInfo[i][tX] = X;
	TocilicaInfo[i][tY] = Y;
	TocilicaInfo[i][tZ] = Z;
	TocilicaInfo[i][tFirma] = tip;
    SaveTocilica(i);
    new string[512];
	format(string, sizeof(string), "{1985A6}[ {FFFFFF}Benzinska Pumpa {1985A6}]\n{FFFFFF}/fill | /kupikanister\n{1985A6}Cena benzina: {FFFFFF}$30/l\n{1985A6}Cena plina: {FFFFFF}$15/l\n{1985A6}Adresa: {FFFFFF}%d", i);
	tPickup[i] = CreatePickup(1650, 1, TocilicaInfo[i][tX], TocilicaInfo[i][tY], TocilicaInfo[i][tZ]+0.20);
	tLabel[i] = Create3DTextLabel(string, COLOR_WHITE, TocilicaInfo[i][tX], TocilicaInfo[i][tY], TocilicaInfo[i][tZ], 10.0, 0, 0);
    SCM(playerid, COLOR_BLUE, "{1985A6}[Garaza]: {FFFFFF}Uspesno ste napravili tocilicu!");
    return 1;
}

CMD:obrisikucu(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new i, h_file[64];
	if(sscanf(params, "i", i)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/obrisikucu [id]!");
	format(h_file, sizeof(h_file), HOUSEPATH, i);
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni da koristite ovu komandu!");
	if(!fexist(h_file)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Kuca sa ovim id-em ne postoji!");
	HouseInfo[i][hOwned] = 0;
	HouseInfo[i][hCena] = 0;
	HouseInfo[i][hLevel] = 0;
	HouseInfo[i][hNeaktivnost] = 0;
	HouseInfo[i][hTip] = 0;
	HouseInfo[i][hSef] = 0;
	HouseInfo[i][hZakljucana] = 0;
	DestroyPickup(hPickup[i]);
	DestroyDynamic3DTextLabel(hLabel[i]);
    fremove(h_file);
    SCM(playerid, COLOR_BLUE, "{1985A6}[HOUSE]: {FFFFFF}Uspesno ste obrisali kucu!");
    return 1;
}
CMD:obrisigarazu(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new i, h_file[64];
	if(sscanf(params, "i", i)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/obrisigarazu [id]!");
	format(h_file, sizeof(h_file), GARAZAPATH, i);
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni da koristite ovu komandu!");
	if(!fexist(h_file)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Garaza sa ovim id-em ne postoji!");
	GarazaInfo[i][gaHouse] = 0;
	DestroyPickup(gaPickup[i]);
	Delete3DTextLabel(gaLabel[i]);
    fremove(h_file);
    SCM(playerid, COLOR_BLUE, "{1985A6}[Garaza]: {FFFFFF}Uspesno ste obrisali kucu!");
    return 1;
}
CMD:obrisitocilicu(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new i, h_file[64];
	if(sscanf(params, "i", i)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/obrisitocilicu [id]!");
	format(h_file, sizeof(h_file), TOCILICAPATH, i);
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni da koristite ovu komandu!");
	if(!fexist(h_file)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Tocilica sa ovim id-em ne postoji!");
	TocilicaInfo[i][tFirma] = 0;
	DestroyPickup(tPickup[i]);
	Delete3DTextLabel(tLabel[i]);
    fremove(h_file);
    SCM(playerid, COLOR_BLUE, "{1985A6}[Tocilica]: {FFFFFF}Uspesno ste obrisali kucu!");
    return 1;
}
CMD:kupifirmu(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pFirma] != 0) return SCM(playerid, COLOR_RED, "[Firma]: {FFFFFF}Vec imate firmu!");
	new Float:X, Float:Y, Float:Z;
	for(new hid = 0; hid < MAX_FIRME; hid++)
	{
	    X=Float:FirmaInfo[hid][fiX];
	    Y=Float:FirmaInfo[hid][fiY];
	    Z=Float:FirmaInfo[hid][fiZ];
	    if(IsPlayerInRangeOfPoint(playerid, 2.0, Float:X, Float:Y, Float:Z))
	    {
	        if(FirmaInfo[hid][fiOwned] == 1) return SCM(playerid, COLOR_RED, "[Firma]: {FFFFFF}Firma je vec kupljena!");
	        if(GetPlayerMoney(playerid) < FirmaInfo[hid][fiCena]) return SCM(playerid, COLOR_RED, "[Firma]: {FFFFFF}Nemate dovoljno novca da kupite ovu firmu!");
	        if(PlayerInfo[playerid][pLevel] < FirmaInfo[hid][fiLevel]) return SCM(playerid, COLOR_RED, "[Firma]: {FFFFFF}Niste dovoljan level!");
	        taz_GivePlayerMoney(playerid, -FirmaInfo[hid][fiCena]);
	        new ime[128];
	        GetPlayerName(playerid, ime, sizeof(ime));
	        PlayerInfo[playerid][pFirma] = hid;
	        FirmaInfo[hid][fiOwner] = ime;
	        FirmaInfo[hid][fiOwned] = 1;
	        DestroyDynamic3DTextLabel(fLabel[hid]);
	        DestroyPickup(fPickup[hid]);
	        new string[512], tipk[64];
			if(FirmaInfo[hid][fiTip] == 1) format(tipk, 64, "Market 24/7");
			if(FirmaInfo[hid][fiTip] == 2) format(tipk, 64, "Picerija");
			if(FirmaInfo[hid][fiTip] == 3) format(tipk, 64, "Restoran");
			if(FirmaInfo[hid][fiTip] == 4) format(tipk, 64, "Prodavnica Tehnike");
			if(FirmaInfo[hid][fiTip] == 5) format(tipk, 64, "Gun Shop");
			if(FirmaInfo[hid][fiTip] == 6) format(tipk, 64, "Poljoprivredna Prodavnica");
			if(FirmaInfo[hid][fiTip] == 7) format(tipk, 64, "Auto Skola");
		    format(string, sizeof(string), "{DAA520}[ {FFFFFF}Firma {DAA520}]\nOwner: {FFFFFF}%s\n{DAA520}Cena: {FFFFFF}%d\n{DAA520}Level: {FFFFFF}%d\n{DAA520}Tip: {FFFFFF}%s\n{DAA520}Adresa: {FFFFFF}%d", FirmaInfo[hid][fiOwner], FirmaInfo[hid][fiCena], FirmaInfo[hid][fiLevel], tipk, hid);
		    fPickup[hid] = CreatePickup(1274, 1, FirmaInfo[hid][fiX], FirmaInfo[hid][fiY], FirmaInfo[hid][fiZ]);
		    fLabel[hid] = CreateDynamic3DTextLabel(string, COLOR_WHITE, FirmaInfo[hid][fiX]+0.1, FirmaInfo[hid][fiY], FirmaInfo[hid][fiZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
			SaveFirma(hid);
		    SavePlayer(playerid);
		    SCM(playerid, COLOR_BLUE, "[Firma]: {FFFFFF}Uspesno ste kupili firmu! Cestitamo!");
	    }
	}
    return 1;
}
CMD:napravifirmu(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new cena, level, tip;
	if(sscanf(params, "iii", cena, level, tip)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/napravifirmu [cena] [level] [tip]");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Firma]: {FFFFFF}Niste ovlasceni!");
	new Float:X, Float:Y, Float:Z, i=NewID(8);
	GetPlayerPos(playerid, X, Y, Z);
	FirmaInfo[i][fiOwned] = 0;
	FirmaInfo[i][fiCena] = cena;
	FirmaInfo[i][fiLevel] = level;
	FirmaInfo[i][fiNeaktivnost] = 0;
	FirmaInfo[i][fiTip] = tip;
	FirmaInfo[i][fiX] = X;
	FirmaInfo[i][fiY] = Y;
	FirmaInfo[i][fiZ] = Z;
	FirmaInfo[i][fiKasa] = 0;
	FirmaInfo[i][fiProdukti] = 100;
	new string[512], tipk[64];
	if(FirmaInfo[i][fiTip] == 1) format(tipk, 64, "Market 24/7");
	if(FirmaInfo[i][fiTip] == 2) format(tipk, 64, "Picerija");
	if(FirmaInfo[i][fiTip] == 3) format(tipk, 64, "Restoran");
	if(FirmaInfo[i][fiTip] == 4) format(tipk, 64, "Prodavnica Tehnike");
	if(FirmaInfo[i][fiTip] == 5) format(tipk, 64, "Gun Shop");
	if(FirmaInfo[i][fiTip] == 6) format(tipk, 64, "Poljoprivredna Prodavnica");
	if(FirmaInfo[i][fiTip] == 7) format(tipk, 64, "Auto Skola");
	if(FirmaInfo[i][fiTip] == 8) format(tipk, 64, "Benzinska Pumpa");
	if(FirmaInfo[i][fiTip] == 9) format(tipk, 64, "Butik");
	format(string, sizeof(string), "{DAA520}[ {FFFFFF}Firma na prodaju {DAA520}]\nOwner: {FFFFFF}Niko\n{DAA520}Cena: {FFFFFF}%d\n{DAA520}Level: {FFFFFF}%d\n{DAA520}Tip: {FFFFFF}%s\n{DAA520}Adresa: {FFFFFF}%d\n/kupifirmu", FirmaInfo[i][fiCena], FirmaInfo[i][fiLevel], tipk, i);
    fPickup[i] = CreatePickup(1274, 1, FirmaInfo[i][fiX], FirmaInfo[i][fiY], FirmaInfo[i][fiZ]);
    fLabel[i] = CreateDynamic3DTextLabel(string, COLOR_WHITE, FirmaInfo[i][fiX]+0.1, FirmaInfo[i][fiY], FirmaInfo[i][fiZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
    SaveFirma(i);
    SCM(playerid, COLOR_BLUE, "{1985A6}[Firma]: {FFFFFF}Uspesno ste napravili firmu!");
    return 1;
}
CMD:obrisifirmu(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new i, ffile[64];
	if(sscanf(params, "i", i)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/obrisifirmu [id]");
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Firma]: {FFFFFF}Niste ovlasceni!");
	format(ffile, sizeof(ffile), FIRMAPATH, i);
	if(!fexist(ffile)) return SCM(playerid, COLOR_RED, "[Firma]: {FFFFFF}Ne postoji firma sa tim id-em!");
	FirmaInfo[i][fiOwned] = 0;
	FirmaInfo[i][fiCena] = 0;
	FirmaInfo[i][fiLevel] = 0;
	FirmaInfo[i][fiNeaktivnost] = 0;
	FirmaInfo[i][fiTip] = 0;
	FirmaInfo[i][fiKasa] = 0;
	FirmaInfo[i][fiProdukti] = 100;
	DestroyPickup(fPickup[i]);
	DestroyDynamic3DTextLabel(fLabel[i]);
	fremove(ffile);
    SCM(playerid, COLOR_BLUE, "{1985A6}[Firma]: {FFFFFF}Uspesno ste obrisali firmu!");
    return 1;
}
CMD:napraviautomat(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[HOUSE]: {FFFFFF}Niste ovlasceni da koristite ovu komandu!");
	new Float:X, Float:Y, Float:Z, i=NewID(6), str[128];
	GetPlayerPos(playerid, X, Y, Z);
	AutomatInfo[i][aX] = X;
	AutomatInfo[i][aY] = Y;
	AutomatInfo[i][aZ] = Z;
	format(str, 128, "{1985A6}[ {FFFFFF}AUTOMAT {1985A6}]\n{FFFFFF}/automat\nID: {1985A6}%d", i);
	automat[i] = Create3DTextLabel(str, -1, AutomatInfo[i][aX],AutomatInfo[i][aY],AutomatInfo[i][aZ], 25.0, 0, 0);
    SaveAutomat(i);
    SCM(playerid, COLOR_BLUE, "{1985A6}[Automat]: {FFFFFF}Uspesno ste napravili automat!");
    return true;
}
CMD:napravibankomat(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[HOUSE]: {FFFFFF}Niste ovlasceni da koristite ovu komandu!");
	new Float:X, Float:Y, Float:Z, i=NewID(9), str[128];
	GetPlayerPos(playerid, X, Y, Z);
	BankomatInfo[i][bX] = X;
	BankomatInfo[i][bY] = Y;
	BankomatInfo[i][bZ] = Z;
	format(str, 128, "{1985A6}[ {FFFFFF}BANKOMAT {1985A6}]\n{FFFFFF}/bankomat\n/robbankomat\nID: {1985A6}%d", i);
	bankomat[i] = Create3DTextLabel(str, -1, BankomatInfo[i][bX],BankomatInfo[i][bY],BankomatInfo[i][bZ], 25.0, 0, 0);
    SaveBankomat(i);
    SCM(playerid, COLOR_BLUE, "{1985A6}[Bankomat]: {FFFFFF}Uspesno ste napravili bankomat!");
    return true;
}
CMD:transfer(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1458.5801,-972.6403,19.1646))
	{
		if(PlayerInfo[playerid][pRacun] == 1)
		{
		    new id, pare, string[128];
			if(sscanf(params, "ii", pare)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/transfer [id] [novac]!");
			if(ulogovan[id] == 0) return SCM(playerid, COLOR_RED, "[BANK]: {FFFFFF}Igrac nije povezan!");
			if(PlayerInfo[id][pRacun] == 0) return SCM(playerid, COLOR_RED, "[BANK]: {FFFFFF}Igrac nema bankovni racun!");
			if(pare > 100000 || pare < 5000) return SCM(playerid, COLOR_RED, "[BANK]: {FFFFFF}Ne mozete manje od $5000 i vise od $100000!");
			PlayerInfo[playerid][pBanka]-=pare;
			PlayerInfo[id][pBanka]+=pare;
			format(string, sizeof(string), "[BANK]: {FFFFFF}Uspesno ste prebacili $%d drugom igracu!", pare);
			SCM(playerid, COLOR_BLUE, string);
		}
		else
		{
		    SCM(playerid, COLOR_RED, "[BANK]: {FFFFFF}Nemate racun u banci!");
		}
 	}
	return 1;
}
CMD:kredit(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(IsPlayerInRangeOfPoint(playerid, 2.0, 1458.5801,-972.6403,19.1646) || IsPlayerInRangeOfPoint(playerid, 2.0, 2018.7411,1165.8770,541.0759))
	{
		if(PlayerInfo[playerid][pRacun] == 1)
		{
		    new pare, string[128];
			if(sscanf(params, "i", pare)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/kredit [novac]!");
			if(pare > 100000 || pare < 20000) return SCM(playerid, COLOR_RED, "[BANK]: {FFFFFF}Ne mozete manje od $20000 i vise od $100000!");
			if(PlayerInfo[playerid][pRate] > 0) return SCM(playerid, COLOR_RED, "[BANK]: {FFFFFF}Vec imate neisplacen kredit!");
			PlayerInfo[playerid][pRate] = 10;
			PlayerInfo[playerid][pKredit] = pare;
			taz_GivePlayerMoney(playerid, pare);
			format(string, sizeof(string), "{DAA520}[BANK]: {FFFFFF}Uspesno ste uzeli kredit od $%d!", pare);
			SCM(playerid, COLOR_BLUE, string);
		}
		else
		{
		    SCM(playerid, COLOR_RED, "{DAA520}[BANK]: {FFFFFF}Nemate racun u banci!");
		}
 	}
	return 1;
}
CMD:napraviracun(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
    if(IsPlayerInRangeOfPoint(playerid, 2.0, 1456.4519,-972.4586,19.1609) || IsPlayerInRangeOfPoint(playerid, 2.0, 2014.9720,1165.7174,541.0759))
	{
		if(PlayerInfo[playerid][pRacun] == 0)
		{
	        PlayerInfo[playerid][pRacun] = 1;
	        SCM(playerid, COLOR_BLUE, "{DAA520}[BANK]: {FFFFFF}Uspesno ste otvorili racun u banci!");
		}
		else
		{
			return SCM(playerid, COLOR_RED, "[BANK]: {FFFFFF}Vec imate racun u banci!");
		}
	}
	return 1;
}
CMD:deposit(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
    if(IsPlayerInRangeOfPoint(playerid, 2.0, 1460.8018,-972.6647,19.1685) || IsPlayerInRangeOfPoint(playerid, 2.0, 2022.3209,1166.0267,541.0759))
	{
		if(PlayerInfo[playerid][pRacun] == 1)
		{
		    new pare;
			if(sscanf(params, "i", pare)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/deposit [novac]!");
			if(pare > GetPlayerMoney(playerid)) return SCM(playerid, COLOR_RED, "[BANK]: {FFFFFF}Nemate dovoljno novca!");
			if(pare > 99999 || pare < 1) return SCM(playerid, COLOR_RED, "[BANK]: {FFFFFF}Ne mozete manje od $1 i vise od $99999!");
			taz_GivePlayerMoney(playerid, -pare);
			PlayerInfo[playerid][pBanka]+=pare;
			SCM(playerid, COLOR_BLUE, "{DAA520}[BANK]: {FFFFFF}Uspesno ste prebacili novac u banku!");
		}
		else
		{
		    SCM(playerid, COLOR_RED, "[BANK]: {FFFFFF}Nemate racun u banci!");
		}
	}
	return 1;
}
CMD:withdraw(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
    if(IsPlayerInRangeOfPoint(playerid, 2.0, 1463.0957,-972.5809,19.1725) || IsPlayerInRangeOfPoint(playerid, 2.0, 2022.3209,1166.0267,541.0759))
	{
		if(PlayerInfo[playerid][pRacun] == 1)
		{
		    new pare;
			if(sscanf(params, "i", pare)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}withdraw [novac]!");
			if(pare > PlayerInfo[playerid][pBanka]) return SCM(playerid, COLOR_RED, "[BANK]: {FFFFFF}Nemate dovoljno novca u banci!");
			if(pare > 99999 || pare < 1) return SCM(playerid, COLOR_RED, "[BANK]: {FFFFFF}Ne mozete manje od $1 i vise od $99999!");
			taz_GivePlayerMoney(playerid, pare);
			PlayerInfo[playerid][pBanka]-=pare;
			SCM(playerid, COLOR_BLUE, "{DAA520}[BANK]: {FFFFFF}Uspesno ste podigli novac iz banke!");
		}
		else
		{
		    SCM(playerid, COLOR_RED, "[BANK]: {FFFFFF}Nemate racun u banci!");
		}
	}
	return 1;
}
CMD:jp(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(!IsPlayerConnected(playerid)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste povezani na server!");
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ovlasceni!");
	if(GetPlayerSpecialAction(playerid) != SPECIAL_ACTION_USEJETPACK)
	{
	    SetPlayerSpecialAction(playerid, SPECIAL_ACTION_USEJETPACK);
	    SCM(playerid, COLOR_BLUE, "{1985A6}[Server]: {FFFFFF}Uspesno ste uzeli jetpack!");
	}
	if(GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_USEJETPACK)
	{
	    new Float:X, Float:Y, Float:Z;
	    GetPlayerPos(playerid, X, Y, Z);
	    taz_SetPlayerPos(playerid, X, Y, Z);
	    SCM(playerid, COLOR_BLUE, "{1985A6}[Server]: {FFFFFF}Uspesno ste skinuli jetpack!");
	}
	return 1;
}
CMD:snow(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	#if SNOW_MODE == 1
	new Float:X, Float:Y, Float:Z;
	if(IsPlayerConnected(playerid))
	{
	    if(sneg[playerid] == 0)
		{
		    sneg[playerid]=1;
		    GetPlayerCameraPos(playerid, X, Y, Z);
		    snegobj[playerid] = CreatePlayerObject(playerid, 18864, X, Y, Z-5, 0.0, 0.0, 0.0, 300.0);
		    SCM(playerid, COLOR_BLUE, "[WINTER EDITION]: {FFFFFF}Uspesno ste ukljucili sneg!");
		}
		else if(sneg[playerid] == 1)
		{
		    sneg[playerid]=0;
		    DestroyPlayerObject(playerid, snegobj[playerid]);
		    SCM(playerid, COLOR_BLUE, "[WINTER EDITION]: {FFFFFF}Uspesno ste iskljucili sneg!");
		}
	}
	#endif
	return 1;
}
CMD:exitveh(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	RemovePlayerFromVehicle(playerid);
	ClearAnimations(playerid);
	TogglePlayerControllable(playerid, 1);
	return 1;
}
CMD:rent(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new vreme, cena, vid = GetPlayerVehicleID(playerid);
	if(sscanf(params, "i", vreme)) return SCM(playerid, COLOR_RED, "[USAGE]: {FFFFFF}/rent [vreme] - minut - $20 - min 5 minuta!");
	cena=vreme*20;
	if(VoziloInfo[vid][vRent] != 1) return SCM(playerid, COLOR_RED, "[RENT]: {FFFFFF}Niste u rent vozilu!");
	else if(vreme < 5 || vreme > 30) return SCM(playerid, COLOR_RED, "[RENT]: {FFFFFF}Ne mozete manje od 5 i vise od 30 minuta!");
	else if(GetPlayerMoney(playerid) < cena) return SCM(playerid, COLOR_RED, "[RENT]: {FFFFFF}Nemate dovoljno novca!");
	else if(renta[playerid] != -1) return SCM(playerid, COLOR_RED, "[RENT]: {FFFFFF}Vec rentate vozilo!");
	else
	{
	    new string[128];
	    rentvreme[playerid] = vreme;
	    TogglePlayerControllable(playerid, 1);
	    renta[playerid] = vid;
	    rented[vid] = 1;
	    taz_GivePlayerMoney(playerid, -cena);
	    format(string, sizeof(string), "{1985A6}[RENT]: {FFFFFF}Uspesno ste rentali vozilo na %d minuta za $%d", vreme, cena);
	    SCM(playerid, -1, string);
	}
	return 1;
}
CMD:unrent(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(renta[playerid] == -1)
	{
		SCM(playerid, COLOR_RED, "[RENT]: {FFFFFF}Ne rentate vozilo!");
 	}
	else
	{
	    new vehid = renta[playerid];
	    SetVehicleToRespawn(vehid);
	    rented[vehid] = 0;
	    renta[playerid] = -1;
	    SCM(playerid, -1, "{1985A6}[RENT]: {FFFFFF}Uspesno ste unrentali vozilo!");
	}
	return 1;
}
CMD:nerentaj(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new vid = GetPlayerVehicleID(playerid);
	if(VoziloInfo[vid][vRent] == 1)
	{
	    RemovePlayerFromVehicle(playerid);
	    TogglePlayerControllable(playerid, 1);
	    SCM(playerid, -1, "{1985A6}[RENT]: {FFFFFF}Uspesno ste izasli iz rent vozila!");
	}
	return 1;
}

CMD:restart(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
    if(IsPlayerAdmin(playerid) || PlayerInfo[playerid][pAdmin] > 5)
	{
	    SetTimer("rst", 10000, false);
	    SendClientMessage(playerid, COLOR_RED, "SERVER-RESTART: {FFFFFF}Uspesno ste pokrenuli restartovanje servera!");
	    SendClientMessageToAll(COLOR_RED, "SERVER-RESTART: {FFFFFF}Admin je pokrenuo restartovanje servera! Server ce se restartovati za 10 sekundi!");
	}
	return 1;
}

CMD:makeadmin(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new id, lvl, slot;
	if(IsPlayerAdmin(playerid) || PlayerInfo[playerid][pAdmin] > 0)
	{
	    if(sscanf(params, "uii", id, lvl, slot)) return SCM(playerid, COLOR_RED, "USAGE: {FFFFFF}/makeadmin [id] [level] [slot]");
	    else if(lvl < 1 || lvl > 1337) return SCM(playerid, COLOR_RED, "SERVER: {FFFFFF}Ne mozete lvl manji od 0 i veci od 10 (1337)");
	    else if(lvl > 10 && lvl != 1337) return SCM(playerid, COLOR_RED, "SERVER: {FFFFFF}Ne mozete lvl veci od 6 (1337)");
	    else if(slot < 1 || slot > 20) return SCM(playerid, COLOR_RED, "SERVER: {FFFFFF}Slot moze biti izmedju 1 i 20!");
	    else if(UzetSlot(slot-1)) return SCM(playerid, COLOR_RED, "SERVER: {FFFFFF}Slot je vec uzet!");
	    else
	    {
	        new ime[128];
	        PlayerInfo[id][pAdmin] = lvl;
	        SCM(playerid, COLOR_BLUE, "ADMIN: {FFFFFF}Uspesno ste postavili novog admina!");
	        SCM(id, COLOR_BLUE, "ADMIN: {FFFFFF}Cestitamo, postali ste admin! Zelimo vam ugodnu igru!");
	        GetPlayerName(id, ime, 128);
	        AdminInfo[slot-1][aName] = ime;
	        AdminInfo[slot-1][aNeaktivnost] = 0;
	        AdminInfo[slot-1][aDuty] = 0;
	        SaveAdmin(slot-1);
	        SavePlayer(id);
	    }
	}
	else
	{
	    SCM(playerid, COLOR_RED, "SERVER: {FFFFFF}Nemate dozvolu da koristite tu komandu!");
	}
	new str[128], pName[MAX_PLAYER_NAME], ppName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(id, ppName, sizeof(ppName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je postavio admina igracu {A13C0A}%s {FFFFFF}! Level: {A13C0A}%d", pName, ppName, lvl);
	WarningPoruka(str);
	format(str, 256, "Admin %s je postavio admina igracu %s! Level: %d!", pName, ppName, lvl);
	WarLog(str);
	return true;
}
CMD:makehelper(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new id, lvl, slot;
	if(IsPlayerAdmin(playerid) || PlayerInfo[playerid][pAdmin] > 0)
	{
	    if(sscanf(params, "uii", id, lvl, slot)) return SCM(playerid, COLOR_RED, "[Usage]: {FFFFFF}/makehelper [id] [level] [slot]");
	    else if(lvl < 1 || lvl > 3) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete lvl manji od 1 i veci od 3!");
	    else if(slot < 1 || slot > 20) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Slot moze biti izmedju 1 i 20!");
	    else if(UzetHSlot(slot)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Slot je vec uzet!");
	    else
	    {
	        new ime[128];
	        PlayerInfo[id][pHelper] = lvl;
	        SCM(playerid, COLOR_BLUE, "{1985A6}HELPER: {FFFFFF}Uspesno ste postavili novog helpera!");
	        SCM(id, COLOR_BLUE, "{1985A6}HELPER: {FFFFFF}Cestitamo, postali ste helper! Zelimo vam ugodnu igru!");
	        GetPlayerName(id, ime, 128);
	        HelperInfo[slot-1][hlName] = ime;
	        HelperInfo[slot-1][hlNeaktivnost] = 0;
	        HelperInfo[slot-1][hlDuty] = 0;
	        SaveHelper(slot-1);
	        SavePlayer(id);
	    }
	}
	else
	{
	    SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Nemate dozvolu da koristite tu komandu!");
	}
	new str[128], pName[MAX_PLAYER_NAME], ppName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(id, ppName, sizeof(ppName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je postavio helpera igracu {A13C0A}%s {FFFFFF}! Level: {A13C0A}%d", pName, ppName, lvl);
	WarningPoruka(str);
	format(str, 256, "Admin %s je postavio helpera igracu %s! Level: %d!", pName, ppName, lvl);
	WarLog(str);
	return true;
}
CMD:skiniadmina(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
    new slot, afile[128], pid, pfile[128], niko[128], poruka[128], adm[64], ime[128];
    if(sscanf(params, "i", slot)) return SCM(playerid, COLOR_RED, "[USAGE] {FFFFFF}/skiniadmina [slot]");
    if(slot < 1 || slot > 20) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Slot mora biti izmedju 1 i 20!");
	format(afile, sizeof(afile), ADMINPATH, slot-1);
	format(niko, 128, "Niko");
	if(!strcmp(niko, AdminInfo[slot-1][aName])) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Slot nije zauzet!");
	pid = GetPlayerID(AdminInfo[slot-1][aName]);
 	format(ime, sizeof(ime), AdminInfo[slot-1][aName]);
	if(pid == -1)
	{
	    PlayerInfo[SKIDANJEID][pAdmin] = 0;
	    AdminInfo[slot-1][aName] = niko;
	    AdminInfo[slot-1][aNeaktivnost] = 0;
	    AdminInfo[slot-1][aDuty] = 0;
	    format(pfile, sizeof(pfile), PATH, ime);
	    if(!fexist(pfile)) return SCM(playerid, COLOR_RED, "Fajl igraca koji je na tom admin slotu nije pronadjen.");
	    INI_ParseFile(pfile, "LoadUser_%s", .bExtra = true, .extra = SKIDANJEID);
	    Sacuvaj(SKIDANJEID, ime);
	    SaveAdmin(slot-1);
	}
	else
	{
	    PlayerInfo[pid][pAdmin] = 0;
	    AdminInfo[slot-1][aName] = niko;
	    AdminInfo[slot-1][aNeaktivnost] = 0;
	    AdminInfo[slot-1][aDuty] = 0;
	    SavePlayer(pid);
	    SaveAdmin(slot-1);
	    GetPlayerName(playerid, adm, sizeof(adm));
	    format(poruka, sizeof(poruka), "{1985A6}[Admin]: {FFFFFF}Skinut vam je admin od strane admina {1985A6}%s{FFFFFF}!", adm);
	    SCM(pid, -1, poruka);
	    pADuty[pid] = 0;
	}
	format(poruka, sizeof(poruka), "{1985A6}[Admin]: {FFFFFF}Uspesno ste skinuli admina sa slota {1985A6}%d{FFFFFF}! Ime: {1985A6}%s", slot, ime);
	SCM(playerid, -1, poruka);
	new str[128], pName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je skinuo admina sa slota {A13C0A}%d!", pName, slot);
	WarningPoruka(str);
	format(str, 256, "Admin %s je skinuo admina sa slota %d!", pName, slot);
	WarLog(str);
	return 1;
}
CMD:agivemoney(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
    new kol, pid, poruka[128], adm[64];
    if(sscanf(params, "ii", pid, kol)) return SCM(playerid, COLOR_RED, "[USAGE] {FFFFFF}/agivemoney [id] [kolicina]");
    taz_GivePlayerMoney(pid, kol);
    GetPlayerName(pid, adm, 64);
	format(poruka, sizeof(poruka), "{1985A6}[Admin]: {FFFFFF}Uspesno ste dali {1985A6}$%d {FFFFFF}novca igracu {1985A6}%s{FFFFFF}!", kol, adm);
	SCM(playerid, -1, poruka);
	GetPlayerName(playerid, adm, 64);
	format(poruka, sizeof(poruka), "{1985A6}[Admin]: {FFFFFF}Admin {1985A6}%s {FFFFFF}vam je dao {1985A6}$%d {FFFFFF}novca!", adm, kol);
	SCM(playerid, -1, poruka);
	new str[128], pName[MAX_PLAYER_NAME], ppName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(pid, ppName, sizeof(ppName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je dao {A13C0A}%d {FFFFFF}novca igracu {A13C0A}%s!", pName, kol, ppName);
	WarningPoruka(str);
	format(str, 256, "Admin %s je dao %d novca igracu %s!", pName, kol, ppName);
	WarLog(str);
	return 1;
}
CMD:asetjob(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
    if(PlayerInfo[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
    new kol, pid, poruka[128], adm[64];
    if(sscanf(params, "ii", pid, kol)) return SCM(playerid, COLOR_RED, "[USAGE] {FFFFFF}/asetjob [id] [jobid]");
    if(kol < 0) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Ne mozete manje od 0!");
    PlayerInfo[playerid][pPosao] = kol;
    GetPlayerName(pid, adm, 64);
	format(poruka, sizeof(poruka), "{1985A6}[Admin]: {FFFFFF}Uspesno ste postavili posao igracu {1985A6}%s {FFFFFF}na {1985A6}%d{FFFFFF}!", adm, kol);
	SCM(playerid, -1, poruka);
	GetPlayerName(playerid, adm, 64);
	format(poruka, sizeof(poruka), "{1985A6}[Admin]: {FFFFFF}Admin {1985A6}%s {FFFFFF}vam je postavio posao na {1985A6}%d{FFFFFF}!", adm, kol);
	SCM(playerid, -1, poruka);
	new str[128], pName[MAX_PLAYER_NAME], ppName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(pid, ppName, sizeof(ppName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je postavio posao {A13C0A}%d {FFFFFF}igracu {A13C0A}%s!", pName, kol, ppName);
	WarningPoruka(str);
	format(str, 256, "Admin %s je postavio posao %d igracu %s!", pName, kol, ppName);
	WarLog(str);
	return 1;
}
CMD:asetglad(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
    if(PlayerInfo[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
    new kol, pid, poruka[128], adm[64];
    if(sscanf(params, "ii", pid, kol)) return SCM(playerid, COLOR_RED, "[USAGE] {FFFFFF}/asetglad [id] [kolicina]");
    if(kol < 0 || kol > 100) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Ne mozete manje od 0 i vise od 100!");
    PlayerInfo[pid][pGlad] = kol;
    GetPlayerName(pid, adm, 64);
	format(poruka, sizeof(poruka), "{1985A6}[Admin]: {FFFFFF}Uspesno ste postavili glad igracu {1985A6}%s {FFFFFF}na {1985A6}%d{FFFFFF}!", adm, kol);
	SCM(playerid, -1, poruka);
	GetPlayerName(playerid, adm, 64);
	format(poruka, sizeof(poruka), "{1985A6}[Admin]: {FFFFFF}Admin {1985A6}%s {FFFFFF}vam je postavio glad na {1985A6}%d{FFFFFF}!", adm, kol);
	SCM(playerid, -1, poruka);
	new str[128], pName[MAX_PLAYER_NAME], ppName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(pid, ppName, sizeof(ppName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je postavio glad na {A13C0A}%d {FFFFFF}igracu {A13C0A}%s!", pName, kol, ppName);
	WarningPoruka(str);
	format(str, 256, "Admin %s je postavio glad na %d igracu %s!", pName, kol, ppName);
	WarLog(str);
	return 1;
}
CMD:asetzedj(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
    if(PlayerInfo[playerid][pAdmin] < 4) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
    new kol, pid, poruka[128], adm[64];
    if(sscanf(params, "ii", pid, kol)) return SCM(playerid, COLOR_RED, "[USAGE] {FFFFFF}/asetzedj [id] [kolicina]");
    if(kol < 0 || kol > 100) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Ne mozete manje od 0 i vise od 100!");
    PlayerInfo[pid][pZedj] = kol;
    GetPlayerName(pid, adm, 64);
	format(poruka, sizeof(poruka), "{1985A6}[Admin]: {FFFFFF}Uspesno ste postavili zedj igracu {1985A6}%s {FFFFFF}na {1985A6}%d{FFFFFF}!", adm, kol);
	SCM(playerid, -1, poruka);
	GetPlayerName(playerid, adm, 64);
	format(poruka, sizeof(poruka), "{1985A6}[Admin]: {FFFFFF}Admin {1985A6}%s {FFFFFF}vam je postavio zedj na {1985A6}%d{FFFFFF}!", adm, kol);
	SCM(playerid, -1, poruka);
	new str[128], pName[MAX_PLAYER_NAME], ppName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(pid, ppName, sizeof(ppName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je postavio zedj na {A13C0A}%d {FFFFFF}igracu {A13C0A}%s!", pName, kol, ppName);
	WarningPoruka(str);
	format(str, 256, "Admin %s je postavio zedj na %d igracu %s!", pName, kol, ppName);
	WarLog(str);
	return 1;
}
CMD:skinihelpera(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
    if(PlayerInfo[playerid][pAdmin] < 6) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Niste ovlasceni!");
    new slot, afile[128], pid, pfile[128], niko[128], poruka[128], adm[64], ime[128];
    if(sscanf(params, "i", slot)) return SCM(playerid, COLOR_RED, "[USAGE] {FFFFFF}/skinihelpera [slot]");
    if(slot < 1 || slot > 20) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Slot mora biti izmedju 1 i 20!");
	format(afile, sizeof(afile), HELPERPATH, slot-1);
	format(niko, 128, "Niko");
	if(!strcmp(niko, HelperInfo[slot-1][hlName])) return SCM(playerid, COLOR_RED, "[Server] {FFFFFF}Slot nije zauzet!");
	pid = GetPlayerID(HelperInfo[slot-1][hlName]);
 	format(ime, sizeof(ime), HelperInfo[slot-1][hlName]);
	if(pid == -1)
	{
	    format(pfile, sizeof(pfile), PATH, ime);
	    INI_ParseFile(pfile, "LoadUser_%s", .bExtra = true, .extra = SKIDANJEID);
	    PlayerInfo[SKIDANJEID][pHelper] = 0;
	    HelperInfo[slot-1][hlName] = niko;
	    HelperInfo[slot-1][hlNeaktivnost] = 0;
	    HelperInfo[slot-1][hlDuty] = 0;
	    Sacuvaj(SKIDANJEID, ime);
	    SaveAdmin(slot-1);
	}
	else
	{
	    PlayerInfo[pid][pHelper] = 0;
	    HelperInfo[slot-1][hlName] = niko;
	    HelperInfo[slot-1][hlNeaktivnost] = 0;
	    HelperInfo[slot-1][hlDuty] = 0;
	    SavePlayer(pid);
	    SaveAdmin(slot-1);
	    GetPlayerName(playerid, adm, sizeof(adm));
	    format(poruka, sizeof(poruka), "{1985A6}[Helper]: {FFFFFF}Skinut vam je helper od strane admina {1985A6}%s{FFFFFF}!", adm);
	    SCM(pid, -1, poruka);
	}
	format(poruka, sizeof(poruka), "{1985A6}[Helper]: {FFFFFF}Uspesno ste skinuli helpera sa slota {1985A6}%d{FFFFFF}! Ime: {1985A6}%s", slot, ime);
	SCM(playerid, -1, poruka);
	new str[128], pName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je skinuo helpera sa slota {A13C0A}%d!", pName, slot);
	WarningPoruka(str);
	format(str, 256, "Admin %s je skinuo helpera sa slota %d!", pName, slot);
	WarLog(str);
	return 1;
}
CMD:licna(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	PrikaziLicnu(playerid);
	return 1;
}
CMD:stats(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;

	new rank[64], pName[MAX_PLAYER_NAME];
	GetPlayerName(playerid, pName, sizeof(pName));
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][31], pName);
	
	if(PlayerInfo[playerid][pVozilo1] == 0) {format(rank, sizeof(rank), "Nemate");} else {format(rank, sizeof(rank), "%s, %d", ImenaVozila[GetVehicleModel(PlayerInfo[playerid][pVozilo1])-400], PlayerInfo[playerid][pVozilo1]);}
	if(PlayerInfo[playerid][pVozilo1] == 0) { PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][21], 1213); PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][21], -10.000000, 0.000000, -20.000000, 50.800000); } else { PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][21], -10.000000, 0.000000, -20.000000, 0.800000); PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][21], GetVehicleModel(PlayerInfo[playerid][pVozilo1])); }
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][26], rank);

	if(PlayerInfo[playerid][pVozilo2] == 0) {format(rank, sizeof(rank), "Nemate");} else {format(rank, sizeof(rank), "%s, %d", ImenaVozila[GetVehicleModel(PlayerInfo[playerid][pVozilo2])-400], PlayerInfo[playerid][pVozilo2]);}
	if(PlayerInfo[playerid][pVozilo2] == 0) { PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][24], 1213); PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][24], -10.000000, 0.000000, -20.000000, 50.800000); } else { PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][24], -10.000000, 0.000000, -20.000000, 0.800000); PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][24], GetVehicleModel(PlayerInfo[playerid][pVozilo2])); }
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][27], rank);

	if(PlayerInfo[playerid][pVozilo3] == 0) {format(rank, sizeof(rank), "Nemate");} else {format(rank, sizeof(rank), "%s, %d", ImenaVozila[GetVehicleModel(PlayerInfo[playerid][pVozilo3])-400], PlayerInfo[playerid][pVozilo3]);}
	if(PlayerInfo[playerid][pVozilo3] == 0) { PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][25], 1213); PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][25], -10.000000, 0.000000, -20.000000, 50.800000); } else { PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][25], -10.000000, 0.000000, -20.000000, 0.800000); PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][25], GetVehicleModel(PlayerInfo[playerid][pVozilo3])); }
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][28], rank);

	if(PlayerInfo[playerid][pVozilo4] == 0) {format(rank, sizeof(rank), "Nemate");} else {format(rank, sizeof(rank), "%s, %d", ImenaVozila[GetVehicleModel(PlayerInfo[playerid][pVozilo4])-400], PlayerInfo[playerid][pVozilo4]);}
	if(PlayerInfo[playerid][pVozilo4] == 0) { PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][23], 1213); PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][23], -10.000000, 0.000000, -20.000000, 50.800000); } else { PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][23], -10.000000, 0.000000, -20.000000, 0.800000); PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][23], GetVehicleModel(PlayerInfo[playerid][pVozilo4])); }
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][29], rank);

	if(PlayerInfo[playerid][pVozilo5] == 0) {format(rank, sizeof(rank), "Nemate");} else {format(rank, sizeof(rank), "%s, %d", ImenaVozila[GetVehicleModel(PlayerInfo[playerid][pVozilo5])-400], PlayerInfo[playerid][pVozilo5]);}
	if(PlayerInfo[playerid][pVozilo5] == 0) { PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][22], 1213); PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][22], -10.000000, 0.000000, -20.000000, 50.800000); } else { PlayerTextDrawSetPreviewRot(playerid, StatsTextdrawPlayer[playerid][22], -10.000000, 0.000000, -20.000000, 0.800000); PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][22], GetVehicleModel(PlayerInfo[playerid][pVozilo5])); }
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][30], rank);

	format(rank, sizeof(rank), "KREDIT: %d", PlayerInfo[playerid][pFonKredit]);
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][20], rank);

	if(PlayerInfo[playerid][pBrojTelefona] == 0) {format(rank, sizeof(rank), "Nemate");} else {format(rank, sizeof(rank), "BROJ TELEFONA: %d", PlayerInfo[playerid][pBrojTelefona]);}
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][19], rank);

	if(PlayerInfo[playerid][pTelefon] == 0) format(rank, 64, "Nemate");
	if(PlayerInfo[playerid][pTelefon] == 1) format(rank, 64, "TELEFON: Nokia 3310");
	if(PlayerInfo[playerid][pTelefon] == 2) format(rank, 64, "TELEFON: LG G3");
	if(PlayerInfo[playerid][pTelefon] == 3) format(rank, 64, "TELEFON: Samsung Galaxy S8");
	if(PlayerInfo[playerid][pTelefon] == 4) format(rank, 64, "TELEFON: Xiaomi Redmi 12");
	if(PlayerInfo[playerid][pTelefon] == 5) format(rank, 64, "TELEFON: Samsung Galaxy S24");
	if(PlayerInfo[playerid][pTelefon] == 6) format(rank, 64, "TELEFON: iPhone 16 Pro Max");
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][18], rank);

	if(PlayerInfo[playerid][pVip] == 0) format(rank, 64, "POZICIJA: Nijedan");
	if(PlayerInfo[playerid][pVip] == 1) format(rank, 64, "POZICIJA: Bronze Vip");
	if(PlayerInfo[playerid][pVip] == 2) format(rank, 64, "POZICIJA: Silver Vip");
	if(PlayerInfo[playerid][pVip] == 3) format(rank, 64, "POZICIJA: Gold Vip");
	if(PlayerInfo[playerid][pVip] == 4) format(rank, 64, "POZICIJA: Platinum Vip");
	if(PlayerInfo[playerid][pVip] == 5) format(rank, 64, "POZICIJA: Diamond Vip");
	if(PlayerInfo[playerid][pPromoter] == 1) format(rank, 64, "POZICIJA: Promoter");
	if(PlayerInfo[playerid][pAdmin] > 0 && PlayerInfo[playerid][pAdmin] < 5) format(rank, 64, "POZICIJA: Admin");
	if(PlayerInfo[playerid][pAdmin] == 5) format(rank, 64, "POZICIJA: Head Admin");
	if(PlayerInfo[playerid][pAdmin] == 6) format(rank, 64, "POZICIJA: Direktor");
	if(PlayerInfo[playerid][pAdmin] == 7) format(rank, 64, "POZICIJA: Generalni Direktor");
	if(PlayerInfo[playerid][pAdmin] == 8) format(rank, 64, "POZICIJA: Suvlasnik");
	if(PlayerInfo[playerid][pAdmin] == 9) format(rank, 64, "POZICIJA: Vlasnik");
	if(PlayerInfo[playerid][pAdmin] == 10) format(rank, 64, "POZICIJA: Predsednica");
	if(PlayerInfo[playerid][pAdmin] == 1337) format(rank, 64, "POZICIJA: Skripter");
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][16], rank);

	format(rank, 64, "Do plate: %dmin", PlayerInfo[playerid][pDoPlate]);
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][15], rank);

	format(rank, 64, "XP: %d/%d", PlayerInfo[playerid][pRespekti], PlayerInfo[playerid][pNeededRep]);
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][14], rank);

	format(rank, 64, "Level: %d", PlayerInfo[playerid][pLevel]);
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][13], rank);
	
	if(PlayerInfo[playerid][pLeader] == 0) {format(rank, sizeof(rank), "LIDER: Niste lider");} else {format(rank, sizeof(rank), "LIDER: %s", OrgInfo[PlayerInfo[playerid][pLeader]][orgIme]);}
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][11], rank);
	if(PlayerInfo[playerid][pOrg] == 0) {format(rank, sizeof(rank), "CLAN: Niste clan");} else {format(rank, sizeof(rank), "CLAN: %s", OrgInfo[PlayerInfo[playerid][pOrg]][orgIme]);}
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][10], rank);
	if(PlayerInfo[playerid][pOrg] == 0) {format(rank, sizeof(rank), "RANK: Niste clan");} else {format(rank, sizeof(rank), "RANK: %s", PlayerInfo[playerid][pRank]);}
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][12], rank);

	if(PlayerInfo[playerid][pKuca] == 9999) {format(rank, sizeof(rank), "KUCA: Nemate");} else {format(rank, sizeof(rank), "KUCA: %d", PlayerInfo[playerid][pKuca]);}
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][6], rank);
	if(PlayerInfo[playerid][pFirma] == 0) {format(rank, sizeof(rank), "FIRMA: Nemate");} else {format(rank, sizeof(rank), "FIRMA: %d", PlayerInfo[playerid][pFirma]);}
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][7], rank);
	if(PlayerInfo[playerid][pImanje] == 0) {format(rank, sizeof(rank), "IMANJE: Nemate");} else {format(rank, sizeof(rank), "IMANJE: %d", PlayerInfo[playerid][pImanje]);}
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][8], rank);

	format(rank, 64, "PLATA: $%d", PlayerInfo[playerid][pPlata]);
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][5], rank);

	if(PlayerInfo[playerid][pPosao] == 0) { format(rank, 64, "POSAO: Nezaposlen"); }
	else if(PlayerInfo[playerid][pPosao] == 1) { format(rank, 64, "POSAO: Postar"); }
	else if(PlayerInfo[playerid][pPosao] == 2) { format(rank, 64, "POSAO: Bus Vozac"); }
	else if(PlayerInfo[playerid][pPosao] == 3) { format(rank, 64, "POSAO: Masinovodja"); }
	else if(PlayerInfo[playerid][pPosao] == 4) { format(rank, 64, "POSAO: Kamiondzija"); }
	else if(PlayerInfo[playerid][pPosao] == 5) { format(rank, 64, "POSAO: Zapr. Komaraca"); }
	else if(PlayerInfo[playerid][pPosao] == 6) { format(rank, 64, "POSAO: Pilot"); }
	else if(PlayerInfo[playerid][pPosao] == 7) { format(rank, 64, "POSAO: Pizza Dostavljac"); }
	else if(PlayerInfo[playerid][pPosao] == 8) { format(rank, 64, "POSAO: Dost. Delova"); }
	else if(PlayerInfo[playerid][pPosao] == 9) { format(rank, 64, "POSAO: Cistac Ulica"); }
	else if(PlayerInfo[playerid][pPosao] == 10) { format(rank, 64, "POSAO: Prev. Novca"); }
	else if(PlayerInfo[playerid][pPosao] == 11) { format(rank, 64, "POSAO: Prev. Kamenja"); }
	else if(PlayerInfo[playerid][pPosao] == 12) { format(rank, 64, "POSAO: Logisticar"); }
	else if(PlayerInfo[playerid][pPosao] == 13) { format(rank, 64, "POSAO: Skup. Sirovina"); }
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][4], rank);

	format(rank, 64, "ZLATO: %dg", PlayerInfo[playerid][pZlato]);
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][3], rank);

	format(rank, 64, "BANKA: $%d", PlayerInfo[playerid][pBanka]);
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][2], rank);

	format(rank, 64, "NOVAC: $%d", GetPlayerMoney(playerid));
	PlayerTextDrawSetString(playerid, StatsTextdrawPlayer[playerid][1], rank);

	PlayerTextDrawSetPreviewModel(playerid, StatsTextdrawPlayer[playerid][0], GetPlayerSkin(playerid));

	for(new i = 0; i < 62; i++)
	{
		TextDrawShowForPlayer(playerid, StatsTextdrawPublic[i]);
	}
	for(new i = 0; i < 32; i++)
	{
		PlayerTextDrawShow(playerid, StatsTextdrawPlayer[playerid][i]);
	}
	SelectTextDraw(playerid, 0xFF4040AA);
	
	/*new diastr[2048], str[128], rank[64];
	format(rank, 64, "Nijedna");
	strcat(diastr, "", sizeof(diastr));
 	format(str, sizeof(str), "{1985A6}Novac: {FFFFFF}$%d\n", GetPlayerMoney(playerid));
	strcat(diastr, str, sizeof(diastr));
	format(str, sizeof(str), "{1985A6}Novac u banci: {FFFFFF}$%d\n", PlayerInfo[playerid][pBanka]);
	strcat(diastr, str, sizeof(diastr));
	format(str, sizeof(str), "{1985A6}Level: {FFFFFF}%d\n", PlayerInfo[playerid][pLevel]);
	strcat(diastr, str, sizeof(diastr));
	format(str, sizeof(str), "{1985A6}Godine: {FFFFFF}%d\n", PlayerInfo[playerid][pGodine]);
	strcat(diastr, str, sizeof(diastr));
	format(str, sizeof(str), "{1985A6}Iskustvo: {FFFFFF}%d/%dXP\n", PlayerInfo[playerid][pRespekti], PlayerInfo[playerid][pNeededRep]);
	strcat(diastr, str, sizeof(diastr));
	if(PlayerInfo[playerid][pPosao] == 0) { format(rank, 64, "Nezaposlen"); }
	else if(PlayerInfo[playerid][pPosao] == 1) { format(rank, 64, "Postar"); }
	else if(PlayerInfo[playerid][pPosao] == 2) { format(rank, 64, "Bus Vozac"); }
	else if(PlayerInfo[playerid][pPosao] == 3) { format(rank, 64, "Masinovodja"); }
	else if(PlayerInfo[playerid][pPosao] == 4) { format(rank, 64, "Kamiondzija"); }
	else if(PlayerInfo[playerid][pPosao] == 5) { format(rank, 64, "Zaprasivac Komaraca"); }
	else if(PlayerInfo[playerid][pPosao] == 6) { format(rank, 64, "Pilot"); }
	else if(PlayerInfo[playerid][pPosao] == 7) { format(rank, 64, "Pizza Dostavljac"); }
	else if(PlayerInfo[playerid][pPosao] == 8) { format(rank, 64, "Dostavljac Delova"); }
	else if(PlayerInfo[playerid][pPosao] == 9) { format(rank, 64, "Cistac Ulica"); }
	else if(PlayerInfo[playerid][pPosao] == 10) { format(rank, 64, "Prevoznik Novca"); }
	else if(PlayerInfo[playerid][pPosao] == 11) { format(rank, 64, "Prevoznik Kamenja"); }
	else if(PlayerInfo[playerid][pPosao] == 12) { format(rank, 64, "Logisticar"); }
	else if(PlayerInfo[playerid][pPosao] == 13) { format(rank, 64, "Skupljac Sirovina"); }
	format(str, sizeof(str), "{1985A6}Posao: {FFFFFF}%s\n", rank);
	strcat(diastr, str, sizeof(diastr));
	format(str, sizeof(str), "{1985A6}Vreme do plate: {FFFFFF}%d min\n", PlayerInfo[playerid][pDoPlate]);
	strcat(diastr, str, sizeof(diastr));
	format(str, sizeof(str), "{1985A6}Racuni: {FFFFFF}%d\n", PlayerInfo[playerid][pRacuni]);
	strcat(diastr, str, sizeof(diastr));
	format(str, sizeof(str), "{1985A6}Rate Kredita: {FFFFFF}%d\n", PlayerInfo[playerid][pRate]);
	strcat(diastr, str, sizeof(diastr));
	format(str, sizeof(str), "{1985A6}Vrednost Kredita: {FFFFFF}%d\n", PlayerInfo[playerid][pKredit]);
	strcat(diastr, str, sizeof(diastr));
	strcat(diastr, "\n", sizeof(diastr));
	if(PlayerInfo[playerid][pLeader] == 0) {format(rank, sizeof(rank), "Niste lider");} else {format(rank, sizeof(rank), "%s", OrgInfo[PlayerInfo[playerid][pLeader]][orgIme]);}
	format(str, sizeof(str), "{1985A6}Lider: {FFFFFF}%s\n", rank);
	strcat(diastr, str, sizeof(diastr));
	if(PlayerInfo[playerid][pOrg] == 0) {format(rank, sizeof(rank), "Niste clan");} else {format(rank, sizeof(rank), "%s", OrgInfo[PlayerInfo[playerid][pOrg]][orgIme]);}
	format(str, sizeof(str), "{1985A6}Clan: {FFFFFF}%s\n", rank);
	strcat(diastr, str, sizeof(diastr));
	strcat(diastr, "\n", sizeof(diastr));
	if(PlayerInfo[playerid][pKuca] == 9999) {format(rank, sizeof(rank), "Nema");} else {format(rank, sizeof(rank), "%d", PlayerInfo[playerid][pKuca]);}
	format(str, sizeof(str), "{1985A6}Adresa Kuce: {FFFFFF}%s\n", rank);
	strcat(diastr, str, sizeof(diastr));
	if(PlayerInfo[playerid][pVikendica] == 0) {format(rank, sizeof(rank), "Nema");} else {format(rank, sizeof(rank), "%d", PlayerInfo[playerid][pVikendica]);}
	format(str, sizeof(str), "{1985A6}Adresa Vikendice: {FFFFFF}%s\n", rank);
	strcat(diastr, str, sizeof(diastr));
	if(PlayerInfo[playerid][pFirma] == 0) {format(rank, sizeof(rank), "Nema");} else {format(rank, sizeof(rank), "%d", PlayerInfo[playerid][pFirma]);}
	format(str, sizeof(str), "{1985A6}Adresa Firme/Biznisa: {FFFFFF}%s\n", rank);
	strcat(diastr, str, sizeof(diastr));
	if(PlayerInfo[playerid][pVozilo1] == 0) {format(rank, sizeof(rank), "Nema");} else {format(rank, sizeof(rank), "%s {1985A6}ID: {FFFFFF}%d", ImenaVozila[GetVehicleModel(PlayerInfo[playerid][pVozilo1])-400], PlayerInfo[playerid][pVozilo1]);}
	format(str, sizeof(str), "{1985A6}Vozilo 1: {FFFFFF}%s\n", rank);
	strcat(diastr, str, sizeof(diastr));
	if(PlayerInfo[playerid][pVozilo2] == 0) {format(rank, sizeof(rank), "Nema");} else {format(rank, sizeof(rank), "%s {1985A6}ID: {FFFFFF}%d", ImenaVozila[GetVehicleModel(PlayerInfo[playerid][pVozilo2])-400], PlayerInfo[playerid][pVozilo2]);}
	format(str, sizeof(str), "{1985A6}Vozilo 2: {FFFFFF}%s\n", rank);
	strcat(diastr, str, sizeof(diastr));
	if(PlayerInfo[playerid][pVozilo3] == 0) {format(rank, sizeof(rank), "Nema");} else {format(rank, sizeof(rank), "%s {1985A6}ID: {FFFFFF}%d", ImenaVozila[GetVehicleModel(PlayerInfo[playerid][pVozilo3])-400], PlayerInfo[playerid][pVozilo3]);}
	format(str, sizeof(str), "{1985A6}Vozilo 3: {FFFFFF}%s\n", rank);
	strcat(diastr, str, sizeof(diastr));
	if(PlayerInfo[playerid][pVozilo4] == 0) {format(rank, sizeof(rank), "Nema");} else {format(rank, sizeof(rank), "%s {1985A6}ID: {FFFFFF}%d", ImenaVozila[GetVehicleModel(PlayerInfo[playerid][pVozilo4])-400], PlayerInfo[playerid][pVozilo4]);}
	format(str, sizeof(str), "{1985A6}Vozilo 4: {FFFFFF}%s\n", rank);
	strcat(diastr, str, sizeof(diastr));
	if(PlayerInfo[playerid][pVozilo5] == 0) {format(rank, sizeof(rank), "Nema");} else {format(rank, sizeof(rank), "%s {1985A6}ID: {FFFFFF}%d", ImenaVozila[GetVehicleModel(PlayerInfo[playerid][pVozilo5])-400], PlayerInfo[playerid][pVozilo5]);}
	format(str, sizeof(str), "{1985A6}Vozilo 5: {FFFFFF}%s\n", rank);
	strcat(diastr, str, sizeof(diastr));
	if(PlayerInfo[playerid][pImanje] == 0) {format(rank, sizeof(rank), "Nema");} else {format(rank, sizeof(rank), "%d", PlayerInfo[playerid][pImanje]);}
	format(str, sizeof(str), "{1985A6}Adresa Imanja: {FFFFFF}%s\n\n", rank);
	strcat(diastr, str, sizeof(diastr));
	if(PlayerInfo[playerid][pTelefon] == 0) format(rank, 64, "Nemate");
	if(PlayerInfo[playerid][pTelefon] == 1) format(rank, 64, "Nokia 3310");
	if(PlayerInfo[playerid][pTelefon] == 2) format(rank, 64, "LG G3");
	if(PlayerInfo[playerid][pTelefon] == 3) format(rank, 64, "Samsung Galaxy S8 Edge");
	if(PlayerInfo[playerid][pTelefon] == 4) format(rank, 64, "Xiaomi Redmi 12");
	if(PlayerInfo[playerid][pTelefon] == 5) format(rank, 64, "Samsung Galaxy S24 Ultra");
	if(PlayerInfo[playerid][pTelefon] == 6) format(rank, 64, "iPhone 16 Pro Max");
	format(str, sizeof(str), "{1985A6}Telefon: {FFFFFF}%s\n", rank);
	strcat(diastr, str, sizeof(diastr));
	if(PlayerInfo[playerid][pBrojTelefona] != 0) { format(str, sizeof(str), "{1985A6}Broj Telefona: {FFFFFF}%d\n", PlayerInfo[playerid][pBrojTelefona]); }
	else { format(str, sizeof(str), "{1985A6}Broj Telefona: {FFFFFF}Nemate\n"); }
	strcat(diastr, str, sizeof(diastr));
	format(str, sizeof(str), "{1985A6}Kredit: {FFFFFF}%d\n", PlayerInfo[playerid][pFonKredit]);
	strcat(diastr, str, sizeof(diastr));
	strcat(diastr, "\n", sizeof(diastr));
	format(str, sizeof(str), "{1985A6}Nagradni poeni: {FFFFFF}%d\n", PlayerInfo[playerid][pNagradniPoeni]);
	strcat(diastr, str, sizeof(diastr));
	if(PlayerInfo[playerid][pVip] == 0) format(rank, 64, "Nijedan");
	if(PlayerInfo[playerid][pVip] == 1) format(rank, 64, "Bronze Vip");
	if(PlayerInfo[playerid][pVip] == 2) format(rank, 64, "Silver Vip");
	if(PlayerInfo[playerid][pVip] == 3) format(rank, 64, "Gold Vip");
	if(PlayerInfo[playerid][pVip] == 4) format(rank, 64, "Platinum Vip");
	if(PlayerInfo[playerid][pVip] == 5) format(rank, 64, "Diamond Vip");
	format(str, sizeof(str), "{1985A6}Vip status: {FFFFFF}%s\n", rank);
	strcat(diastr, str, sizeof(diastr));
	format(str, sizeof(str), "{1985A6}Vip trajanje: {FFFFFF}%d\n", PlayerInfo[playerid][pVipDani]);
	strcat(diastr, str, sizeof(diastr));
	if(PlayerInfo[playerid][pPromoter] == 1) format(rank, 64, "Promoter");
	if(PlayerInfo[playerid][pAdmin] > 0 && PlayerInfo[playerid][pAdmin] < 5) format(rank, 64, "Admin");
	if(PlayerInfo[playerid][pAdmin] == 5) format(rank, 64, "Head Admin");
	if(PlayerInfo[playerid][pAdmin] == 6) format(rank, 64, "Direktor");
	if(PlayerInfo[playerid][pAdmin] == 7) format(rank, 64, "Generalni Direktor");
	if(PlayerInfo[playerid][pAdmin] == 8) format(rank, 64, "Suvlasnik");
	if(PlayerInfo[playerid][pAdmin] == 9) format(rank, 64, "Vlasnik");
	if(PlayerInfo[playerid][pAdmin] == 10) format(rank, 64, "Predsednica");
	if(PlayerInfo[playerid][pAdmin] == 1337) format(rank, 64, "Skripter");
	format(str, sizeof(str), "{1985A6}Specijalna pozicija: {FFFFFF}%s\n", rank);
	strcat(diastr, str, sizeof(diastr));
	ShowPlayerDialog(playerid, DIALOG_STATS, DIALOG_STYLE_MSGBOX, "{1985A6}Stats", diastr, "{FFFFFF}OK", "");*/
	return 1;
}

CMD:kupipasos(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(IsPlayerInRangeOfPoint(playerid, 3.0, 362.1759,173.6288,1008.3828) || IsPlayerInRangeOfPoint(playerid, 3.0, 430.6861,143.7691,1003.0840))
	{
	    if(PlayerInfo[playerid][pPasos] == 0)
	    {
	        taz_GivePlayerMoney(playerid, -1000);
	        PlayerInfo[playerid][pPasos] = 1;
	        SCM(playerid, COLOR_BLUE, "{1985A6}[Server]: {FFFFFF}Kupili ste pasos za $1000!");
	    }
	    else
	    {
	        SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Vec imate pasos!");
	    }
	}
	else
	{
		SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste na mestu za kupovinu pasosa!");
	}
	return 1;
}

CMD:kick(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new id, string[256], razlog[64], pName[MAX_PLAYER_NAME], pKickName[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, -1, "Niste admin!");
	if(sscanf(params, "is", id, razlog)) return SCM(playerid, -1, "Komanda: /kick [id] [razlog]");
	if(!IsPlayerConnected(id)) return SCM(playerid, -1, "Igrac nije povezan na server!");
	if(PlayerInfo[playerid][pAdmin] < PlayerInfo[id][pAdmin]) return SCM(playerid, -1, "Ne mozete admina veceg od sebe!");
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(id, pKickName, sizeof(pKickName));
	format(string, sizeof(string), "[KICK]: Igrac %s je kickovan od strane admina %s, razlog: %s", pKickName, pName, razlog);
	SendClientMessageToAll(COLOR_RED, string);
	Kick(id);
	new str[128];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je kickovao igraca {A13C0A}%s {FFFFFF}sa servera! Razlog: {A13C0A}%s!", pName, pKickName, razlog);
	WarningPoruka(str);
	format(str, 256, "Admin %s je kickovao igraca %s sa servera! Zazlog: %s!", pName, pKickName, razlog);
	WarLog(str);
	return 1;
}

CMD:nick(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	new id, string[256], pName[MAX_PLAYER_NAME], pKickName[MAX_PLAYER_NAME];
	if(PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, -1, "Niste admin!");
	if(sscanf(params, "is", id)) return SCM(playerid, -1, "Komanda: /nick [id]");
	if(!IsPlayerConnected(id)) return SCM(playerid, -1, "Igrac nije povezan na server!");
	if(PlayerInfo[id][pAdmin] != 0) return SCM(playerid, -1, "Ne mozete admina!");
	GetPlayerName(playerid, pName, sizeof(pName));
	GetPlayerName(id, pKickName, sizeof(pKickName));
	format(string, sizeof(string), "Igrac %s je kickovan od strane admina %s zbog nonrp imena!", pName, pKickName);
	SendClientMessageToAll(-1, string);
	Kick(id);
	new str[128];
	GetPlayerName(playerid, pName, sizeof(pName));
	format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je kickovao igraca {A13C0A}%s {FFFFFF}zbog nonrp imena!", pName, pKickName);
	WarningPoruka(str);
	format(str, 256, "Admin %s je kickovao igraca %s zbog nonrp imena!", pName, pKickName);
	WarLog(str);
	return 1;
}

CMD:engine(playerid, params[])
{
	if(ulogovan[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste ulogovani!");
	if(PlayerInfo[playerid][pAdmin] < 1 && gettime() < cmdtime[playerid]) return SCM(playerid, COLOR_RED, "[Spam]: {FFFFFF}Komande mozete koristiti na svake 2 sekunde!");
	cmdtime[playerid] = gettime()+2;
	if(IsPlayerInAnyVehicle(playerid))
	{
	    new vehid = GetPlayerVehicleID(playerid);
	    new name[MAX_PLAYER_NAME], str[128];
		GetPlayerName(playerid, name, sizeof(name));
	    if(VehInfo[vehid][vEngine] == 0)
	    {
	        if(VoziloInfo[vehid][vRent] == 1 && renta[playerid] == -1 && (renta[playerid] != vehid)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste rentovali ovo vozilo!");
	        if(VehInfo[vehid][vEngine] == 0)
	        {
	        	if(VehInfo[vehid][vFuel] <= 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}U vozilu nema goriva!");
	            SetTimerEx("UpaliAuto", 2000, false, "i", playerid);
	            GameTextForPlayer(playerid, "Motor se pali...", 2000, 3);
	            format(str, sizeof(str), "{CF80A9}* %s pokusava da upali motor na vozilu marke %s...", name, ImenaVozila[GetVehicleModel(vehid)-400]);
				SendMes(20.0, playerid, COLOR_RED, str);
	        }
	    }
	    else
	    {
	        VehInfo[vehid][vEngine] = 0;
            SetVehicleParamsEx(vehid, VehInfo[vehid][vEngine], VehInfo[vehid][vLights], VehInfo[vehid][vAlarm], VehInfo[vehid][vDoor], VehInfo[vehid][vBonnet], VehInfo[vehid][vBonnet], VehInfo[vehid][vObj]);
            SCM(playerid, COLOR_BLUE, "{1985A6}[Server]: {FFFFFF}Uspesno ste ugasili motor!");
	        format(str, sizeof(str), "{CF80A9}* %s uspesno gasi motor na vozilu marke %s.", name, ImenaVozila[GetVehicleModel(vehid)-400]);
			SendMes(20.0, playerid, COLOR_RED, str);
	    }
	}
	return 1;
}

public OnPlayerWeaponShot(playerid, weaponid, hittype, hitid, Float:fX, Float:fY, Float:fZ)
{
    pweptokens[playerid] = 5;
    return 1;
}

public OnPlayerDeath(playerid, killerid, reason)
{
	pmoneytokens[playerid] = 5;
	ppostokens[playerid] = 5;

	for(new i = 0; i < 14; i++)
	{
		PlayerTextDrawHide(playerid, BrzinomerTD[playerid][i]);
	}

	PlayerInfo[playerid][pGlad] = 25;
	PlayerInfo[playerid][pZedj] = 25;

	if(PlayerInfo[playerid][pPosao] == 1)
	{
		pJobProgress[playerid] = 0;
		taz_DisablePlayerCheckpoint(playerid);
	}
	if(PlayerInfo[playerid][pPosao] == 3 && radi[playerid] == 1)
	{
		new i = pvoz[playerid];
		pJobProgress[playerid] = 0;
		SCM(playerid, COLOR_RED, "[Masinovodja]: {FFFFFF}Posao vam je prekinut jer ste umrli!");
		taz_DisablePlayerCheckpoint(playerid);
		TogglePlayerControllable(playerid, 1);
		radi[playerid] = 0;
		DestroyVehicle(i);
		VoziloInfo[i][vID] = 0;
		VoziloInfo[i][vOwnable] = 0;
		VoziloInfo[i][vCena] = 0;
		VoziloInfo[i][vAutoskola] = 0;
		VoziloInfo[i][vPosaoID] = 0;
		VoziloInfo[i][vOrgID] = 0;
		VoziloInfo[i][vRent] = 0;
		VoziloInfo[i][vAdmin] = 0;
		VoziloInfo[i][vVip] = 0;
		VoziloInfo[i][vPromoter] = 0;
		VoziloInfo[i][vBoja] = 0;
		VoziloInfo[i][vBoja2] = 0;
		VoziloInfo[i][vDozvola] = 0;
		VoziloInfo[i][vID] = 0;
		VoziloInfo[i][vX] = 0;
		VoziloInfo[i][vY] = 0;
		VoziloInfo[i][vZ] = 0;
		new vfile[64];
		format(vfile, 64, VEHPATH, i);
		fremove(vfile);
		nenapravljenovozilo[i] = AddStaticVehicle(411, -3122.87036, 1042.63818, 1.69223, 0.0, 1, 1);
		pvoz[playerid] = -1;
	}
	radi[playerid] = 0;

	if(PlayerInfo[playerid][pAdmin] < 1)
	{
		PlayerTextDrawShow(playerid, DeathTD[playerid]);
		pDeathTimer[playerid] = SetTimerEx("SmrtTimer", 1000, true, "u", playerid);
		pDeathSecs[playerid] = 360;
		ClearChat(playerid);
		SendClientMessage(playerid, COLOR_RED, "[Povreda]: {FFFFFF}Tesko ste povredjeni i krvarite, potrebna vam je pomoc ili cete iskrvariti za 6 minuta!");
		return SendClientMessage(playerid, COLOR_RED, "[Povreda]: {FFFFFF}Pozovite hitnu pomoc (/call 333) ili koristite /bolnica ($7.000) da se odmah izlecite!");
	}
	else return 1;
}

public OnPlayerGiveDamage(playerid, damagedid, Float:amount, weaponid, bodypart)
{
	if(playerid != damagedid)
	{
		if(PlayerInfo[playerid][pOrg] == 0 && PlayerInfo[damagedid][pOrg] == 0)
		{
			if(GetPlayerState(playerid) == PLAYER_STATE_ONFOOT && PlayerInfo[playerid][pAdmin] == 0)
			{
				SCM(playerid, COLOR_RED, "[ANTI-DM]: {FFFFFF}Zabranjeno je da civili napadaju drugie civile!");
				TogglePlayerControllable(playerid, false);
				ApplyAnimation(playerid, "ped", "IDLE_tired", 4.1, 1, 1, 1, 1, 0, 1);
				SetTimerEx("CivilAttackDM", 1500, false, "i", playerid);
			}
		}
		if(PlayerInfo[playerid][pOrg] == 1 || PlayerInfo[playerid][pOrg] == 2)
		{
			if(weaponid == WEAPON_SILENCED && pTazer[playerid] != 0)
			{
				if(pWantedLevel[damagedid] == 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ovaj igrac nije trazen!");
				if(pTazed[damagedid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ovaj igrac je vec tazovan!");
				if(pCuffed[damagedid] != 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ovaj igrac je vec vezan lisicama!");
				if(PlayerInfo[damagedid][pAdmin] > 0 || PlayerInfo[damagedid][pHelper] > 0) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete admina/helpera!");
				new Float:X, Float:Y, Float:Z;
				GetPlayerPos(damagedid, X, Y, Z);
				if(!IsPlayerInRangeOfPoint(playerid, 7.0, X, Y, Z)) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste blizu igraca kog ste pogodili, ne mozete ga tazovati!");
				pTazTimer[damagedid] = SetTimerEx("TazTimer", 30000, false, "i", damagedid);
				pTazed[damagedid] = 1;
				TogglePlayerControllable(damagedid, 0);
				ApplyAnimation(damagedid, "WUZI", "CS_Dead_Guy", 4.0, 1, 1, 1, 1, 1);
				SendClientMessage(damagedid, COLOR_RED, "[Server]: {FFFFFF}Policajac vas je pogodio tazerom, zaledjeni ste na 30 sekundi!");
				new string[256], pName[MAX_PLAYER_NAME], pName1[MAX_PLAYER_NAME];
				GetPlayerName(playerid, pName, sizeof(pName));
				GetPlayerName(damagedid, pName1, sizeof(pName1));
				format(string, sizeof(string), "{CF80A9}* %s sokira gradjanina %s TaserGun-om.", pName, pName1);
				SendMes(20.0, playerid, COLOR_RED, string);
                format(string, sizeof(string), "{CF80A9}* Imao bih grcenje misica, ne bih se mogao kretati... (( %s ))",pName1);
                SendMes(20.0, playerid, COLOR_RED, string);
				GameTextForPlayer(damagedid, "~r~Tazovani ste", 3000, 3);
			}
		}
	}
	return 1;
}

public OnPlayerTakeDamage(playerid, issuerid, Float:amount, weaponid, bodypart)
{
	new Float:hp, Float:arm;
    if (issuerid != INVALID_PLAYER_ID && PlayerInfo[playerid][pOrg] == 0 && weaponid <= 46 && weaponid >= 0)
    {
        GetPlayerHealth(playerid, hp);
        GetPlayerArmour(playerid, arm);
        SetPlayerArmour(playerid, arm);
        SetPlayerHealth(playerid, hp);
    }
    return 1;
}

public OnVehicleSpawn(vehicleid)
{
	VehInfo[vehicleid][vEngine] = 0;
	VehInfo[vehicleid][vLights] = 0;
	VehInfo[vehicleid][vAlarm] = 0;
	VehInfo[vehicleid][vDoor] = 0;
	VehInfo[vehicleid][vBonnet] = 0;
	VehInfo[vehicleid][vObj] = 0;
	VehInfo[vehicleid][vFuel] = 60;
	SetVehicleParamsEx(vehicleid, VehInfo[vehicleid][vEngine], VehInfo[vehicleid][vLights], VehInfo[vehicleid][vAlarm], VehInfo[vehicleid][vDoor], VehInfo[vehicleid][vBonnet], VehInfo[vehicleid][vBonnet], VehInfo[vehicleid][vObj]);
	if(VoziloInfo[vehicleid][vOwnable] == 1)
	{
		AddVehicleComponent(vehicleid, VoziloInfo[vehicleid][vSpoiler]); 
		AddVehicleComponent(vehicleid, VoziloInfo[vehicleid][vHood]); 
		AddVehicleComponent(vehicleid, VoziloInfo[vehicleid][vRoof]); 
		AddVehicleComponent(vehicleid, VoziloInfo[vehicleid][vSideSkirt]); 
		AddVehicleComponent(vehicleid, VoziloInfo[vehicleid][vNitro]); 
		AddVehicleComponent(vehicleid, VoziloInfo[vehicleid][vExhaust]); 
		AddVehicleComponent(vehicleid, VoziloInfo[vehicleid][vWheels]); 
		AddVehicleComponent(vehicleid, VoziloInfo[vehicleid][vHydraulics]); 
		AddVehicleComponent(vehicleid, VoziloInfo[vehicleid][vFrontBumper]); 
		AddVehicleComponent(vehicleid, VoziloInfo[vehicleid][vRearBumper]); 
		AddVehicleComponent(vehicleid, VoziloInfo[vehicleid][vVentLeft]); 
		AddVehicleComponent(vehicleid, VoziloInfo[vehicleid][vVentRight]); 
		ChangeVehiclePaintjob(vehicleid, VoziloInfo[vehicleid][vPainJob]);
		ChangeVehicleColor(vehicleid, VoziloInfo[vehicleid][vBoja], VoziloInfo[vehicleid][vBoja2]);
	}
	return 1;
}

public OnVehicleDeath(vehicleid)
{
	if(Indicators_xqz[vehicleid][2]) DestroyObject(Indicators_xqz[vehicleid][2]), DestroyObject(Indicators_xqz[vehicleid][3]),DestroyObject(Indicators_xqz[vehicleid][5]),Indicators_xqz[vehicleid][2]=0;
	if(Indicators_xqz[vehicleid][0]) DestroyObject(Indicators_xqz[vehicleid][0]), DestroyObject(Indicators_xqz[vehicleid][1]),DestroyObject(Indicators_xqz[vehicleid][4]),Indicators_xqz[vehicleid][0]=0;
	return 1;
}

public OnPlayerText(playerid, text[])
{
	if(ulogovan[playerid] == 0) { ClearChat(playerid); SCM(playerid,COLOR_RED, "[SERVER]: {FFFFFF}Morate biti ulogovani!"); return 1; }
	if(!strcmp(text, nagradnaPoruka))
	{
	    if(igraTraje == 1)
	    {
	        new str[200], pName[64];
	        GetPlayerName(playerid, pName, sizeof(pName));
	        igraTraje = 0;
	        PlayerInfo[playerid][pNagradniPoeni]++;
	        PlayerInfo[playerid][pRespekti]+=10;
	        taz_GivePlayerMoney(playerid, 1000);
	        format(str, sizeof(str), "{1985A6}Nagradna igra: {FFFFFF}Igrac {1985A6}%s {FFFFFF}je prvi uneo {1985A6}%s {FFFFFF}i dobio $1000, nagradni poen i 10xp!", pName, nagradnaPoruka);
	        SCMTA(COLOR_RED, str);
	    }
	}
	else
	{
		new str[256], pName[MAX_PLAYER_NAME + 1];
		GetPlayerName(playerid, pName, sizeof(pName));
		if(pCall[playerid] == -1)
		{
			format(str, sizeof(str), "{1985A6}%s {FFFFFF}kaze: %s", pName, text);
			SendMes(20.0, playerid, COLOR_RED, str);
		}
		else
		{
		    format(str, sizeof(str), "{1985A6}%s {FFFFFF}[telefon] kaze: %s", pName, text);
			SendMes(20.0, playerid, COLOR_RED, str);
			format(str, sizeof(str), "{1985A6}[TELEFON] %s: {9E9E9E}%s", pName, text);
			if(pCall[pCall[playerid]] == playerid) SCM(pCall[playerid], -1, str);
  		}
	}
	return 0;
}

public OnPlayerCommandPerformed(playerid, cmdtext[], success)
{
	if(!success) return SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Neispravan ID ili komanda!");
	else return 1;
}

public OnPlayerEnterVehicle(playerid, vehicleid, ispassenger)
{
	return 1;
}

public OnPlayerExitVehicle(playerid, vehicleid)
{
	new name[MAX_PLAYER_NAME], str[128];
	GetPlayerName(playerid, name, sizeof(name));
	if(pPojas[playerid] == 0)
	{
		format(str, sizeof(str), "{CF80A9}%s izlazi iz vozila.", name);	
	}
	else
	{
		format(str, sizeof(str), "{CF80A9}%s skida pojas i izlazi iz vozila.", name);
	}
	SendMes(20.0, playerid, COLOR_RED, str);
	pPojas[playerid] = 0;
	return 1;
}

public OnPlayerStateChange(playerid, newstate, oldstate)
{
	if(oldstate == PLAYER_STATE_ONFOOT && newstate == PLAYER_STATE_DRIVER)
	{
		new name[MAX_PLAYER_NAME], str[128];
		GetPlayerName(playerid, name, sizeof(name));
		format(str, sizeof(str), "{CF80A9}* %s ulazi u vozilo.", name);
		SendMes(20.0, playerid, COLOR_RED, str);
	    new vehid = GetPlayerVehicleID(playerid);
	    if(VoziloInfo[vehid][vSalon] != 0)
	    {
	    	if(pEditujeVozilo[playerid] != 0)
		    {
		    	RemovePlayerFromVehicle(playerid);
	    		ClearAnimations(playerid);
	    		SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne mozete voziti vozila za izlozbu u salnu!");
	    		TogglePlayerControllable(playerid, 1);
		    }
	    }
		if(VoziloInfo[vehid][vPosaoID] != 0)
	    {
	    	if(VoziloInfo[vehid][vPosaoID] != PlayerInfo[playerid][pPosao])
		    {
		    	RemovePlayerFromVehicle(playerid);
	    		ClearAnimations(playerid);
	    		SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste zaposleni ovim poslom!");
	    		TogglePlayerControllable(playerid, 1);
		    }
	    }

	    for(new i = 0; i < 14; i++)
	    {
	    	PlayerTextDrawShow(playerid, BrzinomerTD[playerid][i]);
	    }

	    PlayerTextDrawSetPreviewModel(playerid, BrzinomerTD[playerid][13], GetVehicleModel(vehid));
	    PlayerTextDrawShow(playerid, BrzinomerTD[playerid][13]);

	    TextDrawHideForPlayer(playerid, Textdraw13);
	    TextDrawHideForPlayer(playerid, Textdraw14);
	    TextDrawHideForPlayer(playerid, Textdraw15);
	    TextDrawHideForPlayer(playerid, Textdraw16);
	    TextDrawHideForPlayer(playerid, Textdraw17);
	    TextDrawHideForPlayer(playerid, Textdraw18);
	    TextDrawHideForPlayer(playerid, Textdraw19);
	    TextDrawHideForPlayer(playerid, Textdraw20);
	    TextDrawHideForPlayer(playerid, Textdraw21);
	    TextDrawHideForPlayer(playerid, Textdraw22);
	    TextDrawHideForPlayer(playerid, Textdraw23);
	    TextDrawHideForPlayer(playerid, Textdraw24);

	    PlayerTextDrawHide(playerid, Textdrawp0[playerid]);
	    PlayerTextDrawHide(playerid, Textdrawp1[playerid]);
	    PlayerTextDrawHide(playerid, Textdrawp2[playerid]);

		new moda[30];
		format(moda, 30, "%s", ImenaVozila[GetVehicleModel(vehid)-400]);
      	PlayerTextDrawSetString(playerid, BrzinomerTD[playerid][12], moda);
      	PlayerTextDrawSetPreviewModel(playerid, BrzinomerTD[playerid][13], GetVehicleModel(vehid));

	    if(VehInfo[vehid][vEngine] == 0)
	    {
	        SCM(playerid, -1, "{1985A6}[SERVER]: {FFFFFF}Ako zelite da upalite motor pritisnite 2 ili ukucajte /engine!");
	    }
	    if(VoziloInfo[vehid][vRent] == 1)
	    {
	    	if(vehid != renta[playerid] && renta[playerid] != -1)
	    	{
	    		RemovePlayerFromVehicle(playerid);
	    		ClearAnimations(playerid);
	    		SCM(playerid, COLOR_RED, "[SERVER]: {FFFFFF}Rentate drugo vozilo!");
	    	}
	    	if(rented[vehid] == 0 && renta[playerid] == -1 && pEditujeVozilo[playerid] == 0)
	    	{
	    		SCM(playerid, -1, "{1985A6}[SERVER]: {FFFFFF}Koristite {1985A6}/rent [br.minuta] {FFFFFF}kako bi iznajmili vozilo! Cena renta je $20 po minuti!");
	    	}
	    }
	    if(VoziloInfo[vehid][vAdmin] == 1)
	    {
	    	if(PlayerInfo[playerid][pAdmin] <= 0)
	  		{
	  			RemovePlayerFromVehicle(playerid);
	    		ClearAnimations(playerid);
	    		SCM(playerid, COLOR_RED, "[SERVER]: {FFFFFF}Niste ovlasceni!");
	  		}
	    }
	    if(VoziloInfo[vehid][vHelper] == 1)
	    {
	    	if(PlayerInfo[playerid][pHelper] <= 0 && PlayerInfo[playerid][pAdmin] <= 0)
	  		{
	  			RemovePlayerFromVehicle(playerid);
	    		ClearAnimations(playerid);
	    		SCM(playerid, COLOR_RED, "[SERVER]: {FFFFFF}Niste ovlasceni!");
	  		}
	    }
	    if(VoziloInfo[vehid][vVip] == 1)
	    {
	    	if(PlayerInfo[playerid][pVip] <= 0 && PlayerInfo[playerid][pAdmin] <= 0)
	  		{
	  			RemovePlayerFromVehicle(playerid);
	    		ClearAnimations(playerid);
	    		SCM(playerid, COLOR_RED, "[SERVER]: {FFFFFF}Niste ovlasceni!");
	  		}
	    }

	    if(VoziloInfo[vehid][vAutoskola] == 1) 
	    {
	    	if(ppolaze[playerid] == 0 && polaze[playerid] == 0 && PlayerInfo[playerid][pAdmin] < 6) {SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Ne polazete prakticni deo u autoskoli!");RemovePlayerFromVehicle(playerid); return ClearAnimations(playerid);}
	  		new i = GetVehicleModel(GetPlayerVehicleID(playerid));
	  		if(i == 410)
	  		{
	  			if(obadirdozvole[playerid] != 2 && PlayerInfo[playerid][pAdmin] < 6) {SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Morate uci u vozilo kategorije koju polazete!"); RemovePlayerFromVehicle(playerid); return ClearAnimations(playerid);}
	  			SCM(playerid, -1, "{1985A6}[Auto Skola]: {FFFFFF}Pratite markere! Ako vasa brzina predje 80km/h, dobijate kazneni poen!");
	  		}
	  		if(i == 461)
	  		{
	  			if(obadirdozvole[playerid] != 1 && PlayerInfo[playerid][pAdmin] < 6) {SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Morate uci u vozilo kategorije koju polazete!"); RemovePlayerFromVehicle(playerid); return ClearAnimations(playerid);}
	  			SCM(playerid, -1, "{1985A6}[Auto Skola]: {FFFFFF}Pratite markere! Ako vasa brzina predje 80km/h, dobijate kazneni poen!");
	  		}
	  		if(i == 456)
	  		{
	  			if(obadirdozvole[playerid] != 3 && PlayerInfo[playerid][pAdmin] < 6) {SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Morate uci u vozilo kategorije koju polazete!"); RemovePlayerFromVehicle(playerid); return ClearAnimations(playerid);}
	  			SCM(playerid, -1, "{1985A6}[Auto Skola]: {FFFFFF}Pratite markere! Ako vasa brzina predje 80km/h, dobijate kazneni poen!");
	  		}
	  		if(i == 531)
	  		{
	  			if(obadirdozvole[playerid] != 5 && PlayerInfo[playerid][pAdmin] < 6) {SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Morate uci u vozilo kategorije koju polazete!"); RemovePlayerFromVehicle(playerid); return ClearAnimations(playerid);}
	  			SCM(playerid, -1, "{1985A6}[Auto Skola]: {FFFFFF}Pratite markere! Ako vasa brzina predje 80km/h, dobijate kazneni poen!");
	  		}
	    }
	}
	if(oldstate == PLAYER_STATE_DRIVER && newstate == PLAYER_STATE_ONFOOT)
	{
		if(pPojas[playerid] != 0)
		{
			new name[MAX_PLAYER_NAME], str[128];
			GetPlayerName(playerid, name, sizeof(name));
			format(str, sizeof(str), "{8C4D85}* %s skida pojas i izlazi iz vozila.", name);
			SendMes(20.0, playerid, COLOR_RED, str);
			pPojas[playerid] = 0;
		}

		for(new i = 0; i < 14; i++)
	    {
	    	PlayerTextDrawHide(playerid, BrzinomerTD[playerid][i]);
	    }

		TextDrawShowForPlayer(playerid, Textdraw13);
	    TextDrawShowForPlayer(playerid, Textdraw14);
	    TextDrawShowForPlayer(playerid, Textdraw15);
	    TextDrawShowForPlayer(playerid, Textdraw16);
	    TextDrawShowForPlayer(playerid, Textdraw17);
	    TextDrawShowForPlayer(playerid, Textdraw18);
	    TextDrawShowForPlayer(playerid, Textdraw19);
	    TextDrawShowForPlayer(playerid, Textdraw20);
	    TextDrawShowForPlayer(playerid, Textdraw21);
	    TextDrawShowForPlayer(playerid, Textdraw22);
	    TextDrawShowForPlayer(playerid, Textdraw23);
	    TextDrawShowForPlayer(playerid, Textdraw24);

	    PlayerTextDrawShow(playerid, Textdrawp0[playerid]);
	    PlayerTextDrawShow(playerid, Textdrawp1[playerid]);
	    PlayerTextDrawShow(playerid, Textdrawp2[playerid]);

		if(PlayerInfo[playerid][pPosao] == 3 && radi[playerid] == 1)
		{
			new i = pvoz[playerid];
			pJobProgress[playerid] = 0;
			SCM(playerid, COLOR_RED, "[Masinovodja]: {FFFFFF}Posao vam je prekinut jer ste napustili vozilo!");
			taz_DisablePlayerCheckpoint(playerid);
			TogglePlayerControllable(playerid, 1);
			radi[playerid] = 0;
			DestroyVehicle(i);
			VoziloInfo[i][vID] = 0;
			VoziloInfo[i][vOwnable] = 0;
			VoziloInfo[i][vCena] = 0;
			VoziloInfo[i][vAutoskola] = 0;
			VoziloInfo[i][vPosaoID] = 0;
			VoziloInfo[i][vOrgID] = 0;
			VoziloInfo[i][vRent] = 0;
			VoziloInfo[i][vAdmin] = 0;
			VoziloInfo[i][vVip] = 0;
			VoziloInfo[i][vPromoter] = 0;
			VoziloInfo[i][vBoja] = 0;
			VoziloInfo[i][vBoja2] = 0;
			VoziloInfo[i][vDozvola] = 0;
			VoziloInfo[i][vID] = 0;
			VoziloInfo[i][vX] = 0;
			VoziloInfo[i][vY] = 0;
			VoziloInfo[i][vZ] = 0;
			new vfile[64];
			format(vfile, 64, VEHPATH, i);
			fremove(vfile);
			nenapravljenovozilo[i] = AddStaticVehicle(411, -3122.87036, 1042.63818, 1.69223, 0.0, 1, 1);
			pvoz[playerid] = -1;
			SetCameraBehindPlayer(playerid);
		}

		if(pvoz[playerid] != -1)
		{
			new i = pvoz[playerid];
			SCM(playerid, COLOR_RED, "[Veh]: {FFFFFF}Vase vozilo je uspesno obrisano!");
			taz_DisablePlayerCheckpoint(playerid);
			TogglePlayerControllable(playerid, 1);
			DestroyVehicle(i);
			VoziloInfo[i][vID] = 0;
			VoziloInfo[i][vOwnable] = 0;
			VoziloInfo[i][vCena] = 0;
			VoziloInfo[i][vAutoskola] = 0;
			VoziloInfo[i][vPosaoID] = 0;
			VoziloInfo[i][vOrgID] = 0;
			VoziloInfo[i][vRent] = 0;
			VoziloInfo[i][vAdmin] = 0;
			VoziloInfo[i][vVip] = 0;
			VoziloInfo[i][vPromoter] = 0;
			VoziloInfo[i][vBoja] = 0;
			VoziloInfo[i][vBoja2] = 0;
			VoziloInfo[i][vDozvola] = 0;
			VoziloInfo[i][vID] = 0;
			VoziloInfo[i][vX] = 0;
			VoziloInfo[i][vY] = 0;
			VoziloInfo[i][vZ] = 0;
			new vfile[64];
			format(vfile, 64, VEHPATH, i);
			fremove(vfile);
			nenapravljenovozilo[i] = AddStaticVehicle(411, -3122.87036, 1042.63818, 1.69223, 0.0, 1, 1);
			pvoz[playerid] = -1;
			SetCameraBehindPlayer(playerid);
		}
   	}
	return 1;
}

public OnPlayerEnterCheckpoint(playerid)
{
	new vehid = GetPlayerVehicleID(playerid);
	if(PlayerInfo[playerid][pPosao] == 1 && radi[playerid] == 1 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(VoziloInfo[vehid][vPosaoID] != 1) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u postarskom vozilu!");
		SetTimerEx("PostarTimer", 7000, false, "i", playerid);
		pJobProgress[playerid]++;
		SCM(playerid, -1, "{DAA520}[Postar]: {FFFFFF}Predajete paket/pismo...");
		GameTextForPlayer(playerid, "~w~Sacekajte da predate pismo/paket...", 7000, 3);
		TogglePlayerControllable(playerid, 0);
	}
	if(PlayerInfo[playerid][pPosao] == 2 && radi[playerid] == 1 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(VoziloInfo[vehid][vPosaoID] != 2) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u autobusu za posao!");
		SetTimerEx("BusVozacTimer", 10000, false, "i", playerid);
		pJobProgress[playerid]++;
		SCM(playerid, -1, "{DAA520}[Bus Vozac]: {FFFFFF}Putnici ulaze/izlaze...");
		GameTextForPlayer(playerid, "~w~Sacekajte da putnici udju/izadju...", 7000, 3);
		TogglePlayerControllable(playerid, 0);
	}
	if(PlayerInfo[playerid][pPosao] == 3 && radi[playerid] == 1 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(GetSpeed(playerid) <= 5)
		{
			SetTimerEx("MasinovodjaTimer", 10000, false, "i", playerid);
			pJobProgress[playerid]++;
			SCM(playerid, -1, "{DAA520}[Masinovodja]: {FFFFFF}Putnici ulaze/izlaze...");
			GameTextForPlayer(playerid, "~w~Sacekajte da putnici udju/izadju...", 7000, 3);
			TogglePlayerControllable(playerid, 0);
		}
		else return 1;
	}
	if(PlayerInfo[playerid][pPosao] == 4 && radi[playerid] == 1 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(!IsTrailerAttachedToVehicle(vehid)) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Kamion mora imati zakacenu prikolicu kako bi obavili posao!"); 
		if(pJobProgress[playerid] == 0)
		{
			if(VoziloInfo[vehid][vPosaoID] == 4)
			{
				SetTimerEx("KamiondzijaTimer", 15000, false, "i", playerid);
				pJobProgress[playerid]++;
				SCM(playerid, -1, "{DAA520}[Kamiondzija]: {FFFFFF}Roba se istovara...");
				GameTextForPlayer(playerid, "~w~Sacekajte da radnici istovare robu...", 10000, 3);
				TogglePlayerControllable(playerid, 0);
			}
		}
		else
		{
			new str[256], rnd=random(3000);
			SCM(playerid, -1, "{DAA520}[Kamiondzija]: {FFFFFF}Uspesno ste zavrsili prevoz robe!");
			pJobProgress[playerid] = 0;
			format(str, 256, "{FFFFFF}Uspesno ste zavrsili posao!\n\nZarada: {1985A6}$%d\n{FFFFFF}Bonus: {1985A6}$%d\n\n{FFFFFF}Ukupno: {1985A6}$%d", 21000, rnd, 21000+rnd);
			PlayerInfo[playerid][pPlata]+=21000;
			PlayerInfo[playerid][pPlata]+=rnd;
			ShowPlayerDialog(playerid, DIALOG_GOTOVPOSAO, DIALOG_STYLE_MSGBOX, "{1985A6}Posao zavrsen", str, "U redu", "");
			SCM(playerid, -1, "{DAA520}[Kamiondzija]: {FFFFFF}Uspesno ste zavrsili posao, novac vam je dodat na platu!");
			PlayerInfo[playerid][pPoslovi]++;
			TogglePlayerControllable(playerid, 1);
		}
	}
	if(PlayerInfo[playerid][pPosao] == 6 && radi[playerid] == 1 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(VoziloInfo[vehid][vPosaoID] != 6) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u avionu koji sluzi za ovaj posao!");
		SetTimerEx("PilotTimer", 12000, false, "i", playerid);
		pJobProgress[playerid]++;
		SCM(playerid, -1, "{DAA520}[Pilot]: {FFFFFF}Putnici ulaze/izlaze...");
		GameTextForPlayer(playerid, "~w~Sacekajte da putnici udju/izadju...", 10000, 3);
		TogglePlayerControllable(playerid, 0);
	}
	if(PlayerInfo[playerid][pPosao] == 7 && radi[playerid] == 1)
	{
		if(GetPlayerState(playerid) != PLAYER_STATE_ONFOOT) return SCM(playerid, COLOR_RED, "[Pizza Dostavljac]: {FFFFFF}Morate biti van vozila!");
		if(pJobProgress[playerid] == 1)
		{
			pJobProgress[playerid] = 2;
			new rnd = random(55);
			SCM(playerid, COLOR_RED, "{DAA520}[Pizza Dostavljac]: {FFFFFF}Uspesno ste uzeli pizzu, ubacite je u kutiju na motoru!");
			SCM(playerid, COLOR_RED, "{DAA520}[Pizza Dostavljac]: {FFFFFF}Za ubacivanje koristite {DAA520}/ubacipizzu, {FFFFFF}a za vadjenje {DAA520}/izvadipizzu!");
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
			taz_SetPlayerCheckpoint(playerid, PizzaPos[rnd][0],PizzaPos[rnd][1],PizzaPos[rnd][2], 2.5);
			pPizza[playerid] = 1;
			SetPlayerAttachedObject(playerid, 1, 2814, 14, 0.30, -0.04, 0.16, 100.0, -17.0, -10.0, 1.0, 1.0, 1.0);
			return 1;
		}
		if(pJobProgress[playerid] == 2)
		{
			if(pPizza[playerid] == 0) return SCM(playerid, COLOR_RED, "[Pizza Dostavljac]: {FFFFFF}Morate uzeti pizzu iz kutije na skuteru za dostavu!");
			SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
			PizzaTimer(playerid);
			RemovePlayerAttachedObject(playerid, 1);
			ApplyAnimation(playerid, "CARRY", "putdwn", 4.1, 0, 1, 1, 0, 1, 1);
		}
	}
	if(PlayerInfo[playerid][pPosao] == 8 && radi[playerid] == 1 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(pJobProgress[playerid] == 1 || pJobProgress[playerid] == 2)
		{
			if(VoziloInfo[vehid][vPosaoID] != 8) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu za dostavu delova!");
			if(vehid != dftvozilo[playerid]) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu sa kojim ste zapoceli posao!");
			SetTimerEx("DostavljacDelovaTimer", 17000, false, "i", playerid);
			pJobProgress[playerid]++;
			SCM(playerid, -1, "{DAA520}[Dostavljac Delova]: {FFFFFF}Radnici vrse utovar delova...");
			GameTextForPlayer(playerid, "~w~Delovi se utovaraju, molimo sacekajte...", 10000, 3);
			TogglePlayerControllable(playerid, 0);
		}
		else
		{
			if(VoziloInfo[vehid][vPosaoID] != 8) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu za dostavu delova!");
			if(vehid != dftvozilo[playerid]) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu sa kojim ste zapoceli posao!");
			SetTimerEx("DostavljacDelovaTimer", 17000, false, "i", playerid);
			pJobProgress[playerid]++;
			SCM(playerid, -1, "{DAA520}[Dostavljac Delova]: {FFFFFF}Radnici vrse istovar delova...");
			GameTextForPlayer(playerid, "~w~Delovi se utovaraju, molimo sacekajte...", 10000, 3);
			TogglePlayerControllable(playerid, 0);
		}
	}
	if(PlayerInfo[playerid][pPosao] == 9 && radi[playerid] == 1 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(pJobProgress[playerid] < 11)
		{
			if(VoziloInfo[vehid][vPosaoID] != 9) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu za ciscenje ulica!");
			pJobProgress[playerid]++;
			SCM(playerid, -1, "{DAA520}[Cistac Ulica]: {FFFFFF}Uspesno ste ocistili deo ulice, nastavite da pratite markere...");
			new i = random(23)+1;
			taz_DisablePlayerCheckpoint(playerid);
			taz_SetPlayerCheckpoint(playerid, CistacPos[i][0], CistacPos[i][1], CistacPos[i][2], 3.0);
			return 1;
		}
		else
		{
			if(VoziloInfo[vehid][vPosaoID] != 9) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu za ciscenje ulica!");
			radi[playerid] = 0;
			SCM(playerid, -1, "{DAA520}[Cistac Ulica]: {FFFFFF}Uspesno ste zavrsili posao, novac vam je dodat na platu!");
			new str[256], rnd=random(1000);
			pJobProgress[playerid] = 0;
			format(str, 256, "{FFFFFF}Uspesno ste zavrsili posao!\n\nZarada: {1985A6}$%d\n{FFFFFF}Bonus: {1985A6}$%d\n\n{FFFFFF}Ukupno: {1985A6}$%d", 5500, rnd, 5500+rnd);
			PlayerInfo[playerid][pPlata]+=5500;
			PlayerInfo[playerid][pPlata]+=rnd;
			ShowPlayerDialog(playerid, DIALOG_GOTOVPOSAO, DIALOG_STYLE_MSGBOX, "{1985A6}Posao zavrsen", str, "U redu", "");
			PlayerInfo[playerid][pPoslovi]++;
			SavePlayer(playerid);
		}
	}
	if(PlayerInfo[playerid][pPosao] == 10 && radi[playerid] == 1 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(pJobProgress[playerid] == 0)
		{
			if(VoziloInfo[vehid][vPosaoID] != 10) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu za dostavu novca!");
			SetTimerEx("PrevoznikNovcaTimer", 7000, false, "i", playerid);
			SCM(playerid, -1, "{DAA520}[Prevoznik Novca]: {FFFFFF}Novac se utovara...");
			GameTextForPlayer(playerid, "~w~Novac se utovara...", 5000, 3);
			TogglePlayerControllable(playerid, 0);
		}
		if(pJobProgress[playerid] == 1)
		{
			if(VoziloInfo[vehid][vPosaoID] != 10) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu za dostavu novca!");
			SetTimerEx("PrevoznikNovcaTimer", 7000, false, "i", playerid);
			SCM(playerid, -1, "{DAA520}[Prevoznik Novca]: {FFFFFF}Novac se istovara...");
			GameTextForPlayer(playerid, "~w~Novac se istovara...", 5000, 3);
			TogglePlayerControllable(playerid, 0);
		}
		if(pJobProgress[playerid] == 2)
		{
			new str[256];
			new rnd = random(1000);
			pJobProgress[playerid] = 0;
			format(str, 256, "{FFFFFF}Uspesno ste zavrsili posao!\n\nZarada: {1985A6}$%d\n{FFFFFF}Bonus: {1985A6}$%d\n\n{FFFFFF}Ukupno: {1985A6}$%d", 9000, rnd, 9000+rnd);
			PlayerInfo[playerid][pPlata]+=9000;
			PlayerInfo[playerid][pPlata]+=rnd;
			ShowPlayerDialog(playerid, DIALOG_GOTOVPOSAO, DIALOG_STYLE_MSGBOX, "{1985A6}Posao zavrsen", str, "U redu", "");
			PlayerInfo[playerid][pPoslovi]++;
			SCM(playerid, -1, "{DAA520}[Prevoznik Novca]: {FFFFFF}Uspesno ste zavrsili posao, novac vam je dodat na platu!");
			TogglePlayerControllable(playerid, 1);
		}
	}
	if(PlayerInfo[playerid][pPosao] == 11 && radi[playerid] == 1 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(!IsTrailerAttachedToVehicle(vehid)) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Kamion mora imati zakacenu prikolicu kako bi obavili posao!"); 
		if(pJobProgress[playerid] == 1)
		{
			if(VoziloInfo[vehid][vPosaoID] == 11)
			{
				SetTimerEx("IstovarKamenja", 15000, false, "i", playerid);
				pJobProgress[playerid]++;
				SCM(playerid, -1, "{DAA520}[Prevoznik Kamenja]: {FFFFFF}Kamenje se istovara...");
				GameTextForPlayer(playerid, "~w~Sacekajte da radnici istovare kamenje...", 10000, 3);
				TogglePlayerControllable(playerid, 0);
			}
		}
		else
		{
			new str[256], rnd=random(3000);
			SCM(playerid, -1, "{DAA520}[Prevoznik Kamenja]: {FFFFFF}Uspesno ste zavrsili prevoz kamenja!");
			pJobProgress[playerid] = 0;
			format(str, 256, "{FFFFFF}Uspesno ste zavrsili posao!\n\nZarada: {1985A6}$%d\n{FFFFFF}Bonus: {1985A6}$%d\n\n{FFFFFF}Ukupno: {1985A6}$%d", 11000, rnd, 11000+rnd);
			PlayerInfo[playerid][pPlata]+=11000;
			PlayerInfo[playerid][pPlata]+=rnd;
			ShowPlayerDialog(playerid, DIALOG_GOTOVPOSAO, DIALOG_STYLE_MSGBOX, "{1985A6}Posao zavrsen", str, "U redu", "");
			SCM(playerid, -1, "{DAA520}[Prevoznik Kamenja]: {FFFFFF}Uspesno ste zavrsili posao, novac vam je dodat na platu!");
			PlayerInfo[playerid][pPoslovi]++;
			TogglePlayerControllable(playerid, 1);
		}
	}
	if(PlayerInfo[playerid][pPosao] == 12 && radi[playerid] == 1 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(pJobProgress[playerid] == 1)
		{
			if(VoziloInfo[vehid][vPosaoID] != 12) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu za logistiku!");
			SetTimerEx("LogisticarTimer", 7000, false, "i", playerid);
			SCM(playerid, -1, "{DAA520}[Logisticar]: {FFFFFF}Utovar u toku...");
			GameTextForPlayer(playerid, "~w~Roba se utovara...", 5000, 3);
			TogglePlayerControllable(playerid, 0);
		}
		else if(pJobProgress[playerid] < 6)
		{
			if(VoziloInfo[vehid][vPosaoID] != 12) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu za logistiku!");
			SetTimerEx("LogisticarTimer", 5000, false, "i", playerid);
			SCM(playerid, -1, "{DAA520}[Logisticar]: {FFFFFF}Istovar u toku...");
			GameTextForPlayer(playerid, "~w~Roba se istovara...", 4000, 3);
			TogglePlayerControllable(playerid, 0);
		}
	}
	if(PlayerInfo[playerid][pPosao] == 13 && radi[playerid] == 1 && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	{
		if(VoziloInfo[vehid][vPosaoID] != 13) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu za logistiku!");
		if(vehid != pKamionet[playerid]) return SCM(playerid, COLOR_RED, "[Posao]: {FFFFFF}Niste u vozilu sa kojim ste zapoceli posao!");
		SetTimerEx("SkupljacTimer", 10000, false, "i", playerid);
		SCM(playerid, -1, "{DAA520}[Skupljac Sekundarnih Sirovina]: {FFFFFF}Reciklaza u toku...");
		GameTextForPlayer(playerid, "~w~Sirovine se predaju na reciklazu...", 8000, 3);
		TogglePlayerControllable(playerid, 0);
	}
	if(VoziloInfo[vehid][vAutoskola] != 0)
	{
		if(polaze[playerid] != 0)
		{
			if(polaze[playerid] == 10)
			{
				new i = vehid;
				SCM(playerid, -1, "{DAA520}[Auto Skola]: {FFFFFF}Uspesno ste zavrsili poligon!");
				SCM(playerid, -1, "{DAA520}[Auto Skola]: {FFFFFF}Udjite u vozilo autoskole kako biste zapoceli voznju po gradu!");
				RemovePlayerFromVehicle(playerid);
				ClearAnimations(playerid);
				TogglePlayerControllable(playerid, 1);
				SetPlayerVirtualWorld(playerid, 0);

				if(pIzborZaPolaganje[playerid] == 1)
				{
					taz_SetPlayerPos(playerid, -90.8669,1357.8932, 10.6592);
					taz_SetPlayerCheckpoint(playerid, -75.8343,1363.3492,9.8693, 4.0);
				}
				else
				{
					taz_SetPlayerPos(playerid, 1218.9341,146.8772,20.5839);
					taz_SetPlayerCheckpoint(playerid, 1234.0999,155.6749,19.9324, 4.0);
				}
				
				SetPlayerInterior(playerid, 0);
				polaze[playerid] = 0;
				ppolaze[playerid] = 1;
				DestroyVehicle(i);
				VoziloInfo[i][vID] = 0;
				VoziloInfo[i][vOwnable] = 0;
				VoziloInfo[i][vCena] = 0;
				VoziloInfo[i][vAutoskola] = 0;
				VoziloInfo[i][vPosaoID] = 0;
				VoziloInfo[i][vOrgID] = 0;
				VoziloInfo[i][vRent] = 0;
				VoziloInfo[i][vAdmin] = 0;
				VoziloInfo[i][vVip] = 0;
				VoziloInfo[i][vPromoter] = 0;
				VoziloInfo[i][vBoja] = 0;
				VoziloInfo[i][vBoja2] = 0;
				VoziloInfo[i][vDozvola] = 0;
				VoziloInfo[i][vID] = 0;
				VoziloInfo[i][vX] = 0;
				VoziloInfo[i][vY] = 0;
				VoziloInfo[i][vZ] = 0;
				new vfile[64];
				format(vfile, 64, VEHPATH, i);
				fremove(vfile);
				nenapravljenovozilo[i] = AddStaticVehicle(411, -3122.87036, 1042.63818, 1.69223, 0.0, 1, 1);
				pvoz[playerid] = -1;
			}
			else
			{
				new i = polaze[playerid];
				taz_DisablePlayerCheckpoint(playerid);
				taz_SetPlayerCheckpoint(playerid, Poligon[i][0], Poligon[i][1], Poligon[i][2], 4.0);
				polaze[playerid]++;
				return SCM(playerid, -1, "{DAA520}[Auto Skola]: {FFFFFF}Nastavite da pratite markere kako bi polozili!");
			}
		}
		if(ppolaze[playerid] != 0)
		{
			if(pIzborZaPolaganje[playerid] == 1)
			{
				if(ppolaze[playerid] == 16)
				{
					RemovePlayerFromVehicle(playerid);
					ClearAnimations(playerid);
					TogglePlayerControllable(playerid, 1);
					SetVehicleToRespawn(vehid);
					obadirdozvole[playerid] = 0;
					SCM(playerid, -1, "{DAA520}[Auto Skola]: {FFFFFF}Cestitamo! Uspesno ste zavrsili prakticnu obuku i polozili vozacki ispit!");
					SCM(playerid, -1, "{DAA520}[Auto Skola]: {FFFFFF}Dozvola vam je dodeljena. Kako bi proverili dozvole koje posedujete, ukucajte {DAA520}/sl{FFFFFF}!");
					if(obadirdozvole[playerid] == 1)
						{PlayerInfo[playerid][pAL] = 1; SavePlayer(playerid);}
					if(obadirdozvole[playerid] == 2)
						{PlayerInfo[playerid][pBL] = 1; SavePlayer(playerid);}
					if(obadirdozvole[playerid] == 3)
						{PlayerInfo[playerid][pCL] = 1; SavePlayer(playerid);}
					if(obadirdozvole[playerid] == 5)
						{PlayerInfo[playerid][pFL] = 1; SavePlayer(playerid);}
					ppolaze[playerid] = 0;
				}
				else
				{
					new i = ppolaze[playerid];
					taz_DisablePlayerCheckpoint(playerid);
					taz_SetPlayerCheckpoint(playerid, GradVoznja[i][0], GradVoznja[i][1], GradVoznja[i][2], 4.0);
					ppolaze[playerid]++;
					return SCM(playerid, -1, "{DAA520}[Auto Skola]: {FFFFFF}Nastavite da pratite markere kako bi polozili!");
				}
			}
			else
			{
				if(ppolaze[playerid] == 13)
				{
					RemovePlayerFromVehicle(playerid);
					ClearAnimations(playerid);
					TogglePlayerControllable(playerid, 1);
					SetVehicleToRespawn(vehid);
					obadirdozvole[playerid] = 0;
					SCM(playerid, -1, "{DAA520}[Auto Skola]: {FFFFFF}Cestitamo! Uspesno ste zavrsili prakticnu obuku i polozili vozacki ispit!");
					SCM(playerid, -1, "{DAA520}[Auto Skola]: {FFFFFF}Dozvola vam je dodeljena. Kako bi proverili dozvole koje posedujete, ukucajte {DAA520}/sl{FFFFFF}!");
					if(obadirdozvole[playerid] == 1)
						{PlayerInfo[playerid][pAL] = 1; SavePlayer(playerid);}
					if(obadirdozvole[playerid] == 2)
						{PlayerInfo[playerid][pBL] = 1; SavePlayer(playerid);}
					if(obadirdozvole[playerid] == 3)
						{PlayerInfo[playerid][pCL] = 1; SavePlayer(playerid);}
					if(obadirdozvole[playerid] == 5)
						{PlayerInfo[playerid][pFL] = 1; SavePlayer(playerid);}
					ppolaze[playerid] = 0;
				}
				else
				{
					new i = ppolaze[playerid];
					taz_DisablePlayerCheckpoint(playerid);
					taz_SetPlayerCheckpoint(playerid, GradVoznjaBB[i][0], GradVoznjaBB[i][1], GradVoznjaBB[i][2], 4.0);
					ppolaze[playerid]++;
					return SCM(playerid, -1, "{DAA520}[Auto Skola]: {FFFFFF}Nastavite da pratite markere kako bi polozili!");
				}
			}
		}
	}
	if((polaze[playerid] != 0 || ppolaze[playerid] != 0) && VoziloInfo[vehid][vAutoskola] == 0) return SCM(playerid, COLOR_RED, "[Auto Skola]: {FFFFFF}Niste u vozilu autoskole!");
	taz_DisablePlayerCheckpoint(playerid);
	return 1;
}

public OnPlayerLeaveCheckpoint(playerid)
{
	return 1;
}

public OnPlayerEnterRaceCheckpoint(playerid)
{
	if(PlayerInfo[playerid][pPosao] == 5 && radi[playerid] == 1)
	{
		if(pJobProgress[playerid] != 33)
		{
			new vehid = GetPlayerVehicleID(playerid);
			if(VoziloInfo[vehid][vPosaoID] != 5) return SCM(playerid, COLOR_RED, "[Zaprasivac Komaraca]: {FFFFFF}Niste u vozilu koje sluzi za ovaj posao!");
			new i = pJobProgress[playerid];
			DisablePlayerRaceCheckpoint(playerid);
			SetPlayerRaceCheckpoint(playerid, 3, ZaprasivacPos[i][0], ZaprasivacPos[i][1], ZaprasivacPos[i][2], ZaprasivacPos[i+1][0], ZaprasivacPos[i+1][1], ZaprasivacPos[i+1][2], 10.0);
			pJobProgress[playerid]++;
		}
		else
		{
			DisablePlayerRaceCheckpoint(playerid);
			new str[256], rnd = random(1000);
			pJobProgress[playerid] = 0;
			radi[playerid] = 0;
			format(str, 256, "{FFFFFF}Uspesno ste zavrsili posao!\n\nZarada: {1985A6}$%d\n{FFFFFF}Bonus: {1985A6}$%d\n\n{FFFFFF}Ukupno: {1985A6}$%d", 7500, rnd, 7500+rnd);
			PlayerInfo[playerid][pPlata]+=7500;
			PlayerInfo[playerid][pPlata]+=rnd;
			ShowPlayerDialog(playerid, DIALOG_GOTOVPOSAO, DIALOG_STYLE_MSGBOX, "{1985A6}Posao zavrsen", str, "U redu", "");
			SCM(playerid, -1, "{DAA520}[Zaprasivac Komaraca]: {FFFFFF}Uspesno ste zavrsili posao, novac vam je dodat na platu!");
			PlayerInfo[playerid][pPoslovi]++;
			TogglePlayerControllable(playerid, 1);
			zarada[playerid] = 0;
		}
		
	}
	return 1;
}

public OnPlayerLeaveRaceCheckpoint(playerid)
{
	return 1;
}

public OnRconCommand(cmd[])
{
	return 1;
}

public OnPlayerRequestSpawn(playerid)
{
	return 1;
}

public OnObjectMoved(objectid)
{
	return 1;
}

public OnPlayerObjectMoved(playerid, objectid)
{
	return 1;
}

public OnPlayerPickUpPickup(playerid, pickupid)
{
	return 1;
}

public OnVehicleMod(playerid, vehicleid, componentid)
{
	if(VoziloInfo[vehicleid][vOwnable] == 1)
	{
		if(IsSpoiler(componentid))
		{ VoziloInfo[vehicleid][vSpoiler] = componentid; }
		else if(IsHood(componentid))
		{ VoziloInfo[vehicleid][vHood] = componentid; }
		else if(IsRoof(componentid))
		{ VoziloInfo[vehicleid][vRoof] = componentid; }
		else if(IsRightSkirt(componentid) || IsLeftSkirt(componentid))
		{ VoziloInfo[vehicleid][vSideSkirt] = componentid; }
		else if(IsNitro(componentid))
		{ VoziloInfo[vehicleid][vNitro] = componentid; }
		else if(IsExhaust(componentid))
		{ VoziloInfo[vehicleid][vExhaust] = componentid; }
		else if(IsWheels(componentid))
		{ VoziloInfo[vehicleid][vWheels] = componentid; }
		else if(IsHydraulics(componentid))
		{ VoziloInfo[vehicleid][vHydraulics] = componentid; }
		else if(IsFrontBumper(componentid))
		{ VoziloInfo[vehicleid][vFrontBumper] = componentid; }
		else if(IsRearBumper(componentid))
		{ VoziloInfo[vehicleid][vRearBumper] = componentid; }
		else if(IsRightVent(componentid))
		{ VoziloInfo[vehicleid][vVentRight] = componentid; }
		else if(IsLeftVent(componentid))
		{ VoziloInfo[vehicleid][vVentLeft] = componentid; }
		else SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Greska!");
		SaveVozilo(vehicleid);
	}
	return 1;
}

public OnVehiclePaintjob(playerid, vehicleid, paintjobid)
{
	if(VoziloInfo[vehicleid][vOwnable] == 1)
	{
		VoziloInfo[vehicleid][vPainJob] = paintjobid;
	}
	return 1;
}

public OnVehicleRespray(playerid, vehicleid, color1, color2)
{
	if(VoziloInfo[vehicleid][vOwnable] == 1)
	{
		VoziloInfo[vehicleid][vBoja] = color1;
		VoziloInfo[vehicleid][vBoja2] = color2;
	}
	return 1;
}

public OnPlayerSelectedMenuRow(playerid, row)
{
	return 1;
}

public OnPlayerExitedMenu(playerid)
{
	return 1;
}

public OnPlayerInteriorChange(playerid, newinteriorid, oldinteriorid)
{
	return 1;
}

public OnPlayerKeyStateChange(playerid, newkeys, oldkeys)
{
	if(newkeys & KEY_JUMP && !(oldkeys & KEY_JUMP) && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) ApplyAnimation(playerid, "GYMNASIUM", "gym_jog_falloff",4.1,0,1,1,0,0);
    if(newkeys & KEY_SPRINT && !(oldkeys & KEY_SPRINT) && GetPlayerSpecialAction(playerid) == SPECIAL_ACTION_CUFFED) ApplyAnimation(playerid, "GYMNASIUM", "gym_jog_falloff",4.1,0,1,1,0,0);
	if(newkeys & KEY_SECONDARY_ATTACK)
	{
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, -215.0918,1148.4674,19.7556)) //OPSTINA FC
	    {
	        SetPlayerInterior(playerid, 3);
	        taz_SetPlayerPos(playerid, 384.808624,173.804992,1008.382812);
	        SetPlayerFacingAngle(playerid, 90);
	        SetCameraBehindPlayer(playerid);
	        InteriorTimer(playerid);
	        return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 384.808624,173.804992,1008.382812))
	    {
	        SetPlayerInterior(playerid, 0);
	        taz_SetPlayerPos(playerid, -215.0918,1148.4674,19.7556);
	        SetPlayerFacingAngle(playerid, -90);
	        SetCameraBehindPlayer(playerid);
	        InteriorTimer(playerid);
	        return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1373.8088,405.1312,19.9555)) //OPSTINA BB
	    {
	        SetPlayerInterior(playerid, 0);
	        taz_SetPlayerPos(playerid, 441.1552,143.8580,1003.0853);
	        SetPlayerFacingAngle(playerid, 90);
	        SetCameraBehindPlayer(playerid);
	        InteriorTimer(playerid);
	        return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 441.1552,143.8580,1003.0853))
	    {
	        SetPlayerInterior(playerid, 0);
	        taz_SetPlayerPos(playerid, 1373.8088,405.1312,19.9555);
	        SetPlayerFacingAngle(playerid, -90);
	        SetCameraBehindPlayer(playerid);
	        InteriorTimer(playerid);
	        return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, -313.3308,1177.3732,19.7570)) //ZLATARA FC
	    {
	        SetPlayerInterior(playerid, 1);
	        taz_SetPlayerPos(playerid, 1014.74078, 3.78490, 1001.10498);
	        SetPlayerFacingAngle(playerid, 180);
	        SetCameraBehindPlayer(playerid);
	        InteriorTimer(playerid);
	        return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1014.74078, 3.78490, 1001.10498))
	    {
	        SetPlayerInterior(playerid, 0);
	        taz_SetPlayerPos(playerid, -313.3308,1177.3732,19.7570);
	        SetPlayerFacingAngle(playerid, 0);
	        SetCameraBehindPlayer(playerid);
	        InteriorTimer(playerid);
	        return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, -176.3848,1114.3026,19.8095)) //BANKA FC
	    {
	        SetPlayerInterior(playerid, 3);
	        taz_SetPlayerPos(playerid, 1466.1982,-1004.7651,16.2557);
	        SetPlayerFacingAngle(playerid, 0);
	        SetCameraBehindPlayer(playerid);
	        InteriorTimer(playerid);
	        return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1466.1982,-1004.7651,16.2557)) 
	    {
	        SetPlayerInterior(playerid, 0);
	        taz_SetPlayerPos(playerid, -176.3848,1114.3026,19.8095);
	        SetPlayerFacingAngle(playerid, 90);
	        SetCameraBehindPlayer(playerid);
	        InteriorTimer(playerid);
	        return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 1311.0319,329.7282,19.9141)) //BANKA BB
	    {
	        SetPlayerInterior(playerid, 3);
	        taz_SetPlayerPos(playerid, 2016.1735,1151.2471,539.4459);
	        SetPlayerFacingAngle(playerid, 0);
	        SetCameraBehindPlayer(playerid);
	        InteriorTimer(playerid);
	        return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 2016.1735,1151.2471,539.4459)) 
	    {
	        SetPlayerInterior(playerid, 0);
	        taz_SetPlayerPos(playerid, 1311.0319,329.7282,19.9141);
	        SetPlayerFacingAngle(playerid, 90);
	        SetCameraBehindPlayer(playerid);
	        InteriorTimer(playerid);
	        return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, -152.6935,1084.7131,20.5303)) //POSTA
	    {
	        SetPlayerInterior(playerid, 3);
	        taz_SetPlayerPos(playerid, -257.6290,1535.6111,32.9923);
	        SetPlayerFacingAngle(playerid, 270);
	        SetCameraBehindPlayer(playerid);
	        InteriorTimer(playerid);
	        return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, -257.6290,1535.6111,32.9923)) 
	    {
	        SetPlayerInterior(playerid, 0);
	        taz_SetPlayerPos(playerid, -152.6935,1084.7131,20.5303);
	        SetPlayerFacingAngle(playerid, 0);
	        SetCameraBehindPlayer(playerid);
	        InteriorTimer(playerid);
	        return 1;
	    }

	    //ORGANIZACIJE
	    if(IsPlayerInRangeOfPoint(playerid, 2.0, OrgInfo[1][orgX], OrgInfo[1][orgY], OrgInfo[1][orgZ])) //SHERIFF FC
	    {
	    	SetPlayerInterior(playerid, 6);
	        taz_SetPlayerPos(playerid, 246.7815,62.6737,1003.6426);
	        SetPlayerFacingAngle(playerid, 0);
	        SetCameraBehindPlayer(playerid);
	        InteriorTimer(playerid);
	        return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 2.0, 246.7815,62.6737,1003.6426)) //SHERIFF FC
	    {
	    	SetPlayerInterior(playerid, 0);
	        taz_SetPlayerPos(playerid, OrgInfo[1][orgX], OrgInfo[1][orgY], OrgInfo[1][orgZ]);
	        SetPlayerFacingAngle(playerid, -90);
	        SetCameraBehindPlayer(playerid);
	        InteriorTimer(playerid);
	        return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 2.0, OrgInfo[2][orgX], OrgInfo[2][orgY], OrgInfo[2][orgZ])) //SHERIFF BB
	    {
	    	SetPlayerInterior(playerid, 10);
	        taz_SetPlayerPos(playerid, 246.4246, 107.4923, 1003.2040);
	        SetPlayerFacingAngle(playerid, 0);
	        SetCameraBehindPlayer(playerid);
	        InteriorTimer(playerid);
	        return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 2.0, 246.4246, 107.4923, 1003.2040)) //SHERIFF BB
	    {
	    	SetPlayerInterior(playerid, 0);
	        taz_SetPlayerPos(playerid, OrgInfo[2][orgX], OrgInfo[2][orgY], OrgInfo[2][orgZ]);
	        SetPlayerFacingAngle(playerid, 0);
	        SetCameraBehindPlayer(playerid);
	        InteriorTimer(playerid);
	        return 1;
	    }

	    for(new i = 1; i < MAX_FIRME; i++)
	    {
			if(IsPlayerInRangeOfPoint(playerid, 2.0, FirmaInfo[i][fiX], FirmaInfo[i][fiY], FirmaInfo[i][fiZ]))
			{
				if(FirmaInfo[i][fiTip] == 1)
				{
					SetPlayerInterior(playerid, 17);
					taz_SetPlayerPos(playerid, -25.72,-187.82,1003.54);
					InteriorTimer(playerid);
					SetPlayerVirtualWorld(playerid, i);
	        		return 1;
				}
				else if(FirmaInfo[i][fiTip] == 4)
				{
					SetPlayerInterior(playerid, 6);
					taz_SetPlayerPos(playerid, -2240.10,136.97,1035.41);
					InteriorTimer(playerid);
					SetPlayerVirtualWorld(playerid, i);
	        		return 1;
				}
				else if(FirmaInfo[i][fiTip] == 5)
				{
					SetPlayerInterior(playerid, 6);
					taz_SetPlayerPos(playerid, 296.8690,-111.9940,1001.5156);
					InteriorTimer(playerid);
					SetPlayerVirtualWorld(playerid, i);
	        		return 1;
				}
				else if(FirmaInfo[i][fiTip] == 7)
				{
					SetPlayerInterior(playerid, 3);
					taz_SetPlayerPos(playerid, -2026.8237,-103.7391,1035.1719);
					InteriorTimer(playerid);
					SetPlayerVirtualWorld(playerid, i);
	        		return 1;
				}
			}
	    }
	    //FIRME
	    if(IsPlayerInRangeOfPoint(playerid, 2.0, 296.8690,-111.9940,1001.5156))
	    {
	    	new i = GetPlayerVirtualWorld(playerid);
	    	SetPlayerInterior(playerid, 0);
			taz_SetPlayerPos(playerid, FirmaInfo[i][fiX], FirmaInfo[i][fiY], FirmaInfo[i][fiZ]);
			InteriorTimer(playerid);
			SetPlayerVirtualWorld(playerid, 0);
	        return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 2.0, -25.72,-187.82,1003.54))
	    {
	    	new i = GetPlayerVirtualWorld(playerid);
	    	SetPlayerInterior(playerid, 0);
			taz_SetPlayerPos(playerid, FirmaInfo[i][fiX], FirmaInfo[i][fiY], FirmaInfo[i][fiZ]);
			InteriorTimer(playerid);
			SetPlayerVirtualWorld(playerid, 0);
	        return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 2.0, -2240.10,136.97,1035.41))
	    {
	    	new i = GetPlayerVirtualWorld(playerid);
	    	SetPlayerInterior(playerid, 0);
			taz_SetPlayerPos(playerid, FirmaInfo[i][fiX], FirmaInfo[i][fiY], FirmaInfo[i][fiZ]);
			InteriorTimer(playerid);
			SetPlayerVirtualWorld(playerid, 0);
	        return 1;
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 2.0, -2026.8237,-103.7391,1035.1719))
	    {
	    	new i = GetPlayerVirtualWorld(playerid);
	    	SetPlayerInterior(playerid, 0);
			taz_SetPlayerPos(playerid, FirmaInfo[i][fiX], FirmaInfo[i][fiY], FirmaInfo[i][fiZ]);
			InteriorTimer(playerid);
			SetPlayerVirtualWorld(playerid, 0);
	        return 1;
	    }

	    for(new i = 1; i < MAX_HOUSES; i++)
	    {
	    	if(IsPlayerInRangeOfPoint(playerid, 2.0, HouseInfo[i][hX], HouseInfo[i][hY], HouseInfo[i][hZ]))
	    	{
	    		if(HouseInfo[i][hOwned] == 0 && PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[House]: {FFFFFF}Kuca nije kupljena!");
	    		new ime[MAX_PLAYER_NAME];
	    		GetPlayerName(playerid, ime, sizeof(ime));
	    		if(HouseInfo[i][hZakljucana] == 1 && strcmp(ime, HouseInfo[i][hOwner]) && PlayerInfo[playerid][pAdmin] < 1) return SCM(playerid, COLOR_RED, "[House]: {FFFFFF}Kuca je zakljucana!");
	    		SetPlayerVirtualWorld(playerid, i);
	    		if(HouseInfo[i][hTip] == 1)//
	    		{
	    			SetPlayerInterior(playerid, 1);
	    			taz_SetPlayerPos(playerid, 245.23,304.76,999.14);
	    			InteriorTimer(playerid);
	        		return 1;
	    		}
	    		if(HouseInfo[i][hTip] == 2)//
	    		{
	    			SetPlayerInterior(playerid, 11);
	    			taz_SetPlayerPos(playerid, 2282.97,-1140.28,1050.89);
	    			InteriorTimer(playerid);
	        		return 1;
	    		}
	    		if(HouseInfo[i][hTip] == 3)//
	    		{
	    			SetPlayerInterior(playerid, 2);
	    			taz_SetPlayerPos(playerid, 2237.5706,-1081.5375,1049.0234);
	    			InteriorTimer(playerid);
	        		return 1;
	    		}
	    		if(HouseInfo[i][hTip] == 4)//
	    		{
	    			SetPlayerInterior(playerid, 4);
	    			taz_SetPlayerPos(playerid, -262.17,1456.61,1084.36);
	    			InteriorTimer(playerid);
	        		return 1;
	    		}
	    		if(HouseInfo[i][hTip] == 5)//
	    		{
	    			SetPlayerInterior(playerid, 12);
	    			taz_SetPlayerPos(playerid, 2324.38,-1148.48,1050.71);
	    			InteriorTimer(playerid);
	        		return 1;
	    		}
	    	}
	    }
	    if(IsPlayerInRangeOfPoint(playerid, 3.0, 245.23,304.76,999.14) || IsPlayerInRangeOfPoint(playerid, 3.0, 2282.97,-1140.28,1050.89) || IsPlayerInRangeOfPoint(playerid, 3.0, 2236.69,-1078.94,1049.02) || IsPlayerInRangeOfPoint(playerid, 3.0, -262.17,1456.61,1084.36) || IsPlayerInRangeOfPoint(playerid, 3.0, 2324.38,-1148.48,1050.71))
	    {
	    	new i = GetPlayerVirtualWorld(playerid);
	    	SetPlayerInterior(playerid, 0);
	    	taz_SetPlayerPos(playerid, HouseInfo[i][hX], HouseInfo[i][hY], HouseInfo[i][hZ]);
	    	InteriorTimer(playerid);
	    	SetPlayerVirtualWorld(playerid, 0);
	        return 1;
	    }
	}
	if(newkeys & KEY_LOOK_BEHIND)
	{
	    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
	        new vehid = GetPlayerVehicleID(playerid);
	        if(VoziloInfo[vehid][vRent] == 1 && renta[playerid] == -1 && (renta[playerid] != vehid)) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste rentovali ovo vozilo!");
	        if(VehInfo[vehid][vEngine] == 0)
	        {
	        	if(VehInfo[vehid][vFuel] <= 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}U vozilu nema goriva!");
	        	new str[128], name[MAX_PLAYER_NAME];
	            SetTimerEx("UpaliAuto", 2000, false, "i", playerid);
	            GameTextForPlayer(playerid, "Motor se pali...", 2000, 3);
	            GetPlayerName(playerid, name, sizeof(name));
	            format(str, sizeof(str), "{CF80A9}* %s pokusava da upali motor na vozilu marke %s...", name, ImenaVozila[GetVehicleModel(vehid)-400]);
				SendMes(20.0, playerid, COLOR_RED, str);
	        }
	    }
	}
	if(newkeys & KEY_ACTION)
	{
	    if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == PLAYER_STATE_DRIVER)
	    {
	        new vehid = GetPlayerVehicleID(playerid);
	        if(VehInfo[vehid][vLights] == 0)
	        {
	            VehInfo[vehid][vLights] = 1;
            	SetVehicleParamsEx(vehid, VehInfo[vehid][vEngine], VehInfo[vehid][vLights], VehInfo[vehid][vAlarm], VehInfo[vehid][vDoor], VehInfo[vehid][vBonnet], VehInfo[vehid][vBoot], VehInfo[vehid][vObj]);
	        }
	        else
	        {
	        	VehInfo[vehid][vLights] = 0;
            	SetVehicleParamsEx(vehid, VehInfo[vehid][vEngine], VehInfo[vehid][vLights], VehInfo[vehid][vAlarm], VehInfo[vehid][vDoor], VehInfo[vehid][vBonnet], VehInfo[vehid][vBonnet], VehInfo[vehid][vObj]);
	        }
	    }
	}
	if(newkeys & KEY_CROUCH)
	{
	    for(new i = 0; i < MAX_GATES; i++)
	    {
		    if(IsPlayerInRangeOfPoint(playerid, 10.0, GateInfo[i][gX], GateInfo[i][gY], GateInfo[i][gZ]))
		    {
		    	if(otvaraGate[playerid] != -1) return SCM(playerid, COLOR_RED, "Vec otvarate kapiju!");if(GateInfo[i][gPerm] == 7)
			    {
			    	if(GetPlayerMoney(playerid) < 200) return SCM(playerid, COLOR_RED, "Nemate dovoljno novca za putarinu! ($200)");
			    	TogglePlayerControllable(playerid, false);
			    	SetTimerEx("PlacanjePutarine", 3000, false, "ui", playerid, i);
			    	GameTextForPlayer(playerid, "Placanje u toku...", 2500, 3);
			    	otvaraGate[playerid] = i;
			    	break;
			    }
		    	if(PlayerInfo[playerid][pAdmin] < 1)
		    	{
			    	if(GateInfo[i][gPerm] == 2 && PlayerInfo[playerid][pPromoter] == 0) return SCM(playerid, COLOR_RED, "Niste ovlasceni!");
			    	else if(GateInfo[i][gPerm] == 3 && PlayerInfo[playerid][pVip] == 0) return SCM(playerid, COLOR_RED, "Niste ovlasceni!");
			    	else if(GateInfo[i][gPerm] == 4 && PlayerInfo[playerid][pOrg] != GateInfo[i][gOrgID]) return SCM(playerid, COLOR_RED, "Niste ovlasceni!");
			    	else if(GateInfo[i][gPerm] == 5 && PlayerInfo[playerid][pHelper] == 0) return SCM(playerid, COLOR_RED, "Niste ovlasceni!");
			    	else if(GateInfo[i][gPerm] == 6 && PlayerInfo[playerid][pAdmin] == 0) return SCM(playerid, COLOR_RED, "Niste ovlasceni!");
		    	}
				OtvoriGate(i);
				SCM(playerid, -1, "{1985A6}Otvorili ste gate!");
				break;
		    }
	    }
	}
	if(newkeys & KEY_NO)
	{
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1015.8776,-14.8913,1001.0859))
		{
			if(GetPlayerMoney(playerid) < 1100) return SCM(playerid, COLOR_RED, "Nemate dovoljno novca!");
			taz_GivePlayerMoney(playerid, -1100);
			PlayerInfo[playerid][pZlato]++;
			return SCM(playerid, -1, "Uspesno ste kupili gram zlata.");
		}
		if(IsPlayerInRangeOfPoint(playerid, 1.0, 1013.0212,-14.8336,1001.0859))
		{
			if(PlayerInfo[playerid][pZlato] < 1) return SCM(playerid, COLOR_RED, "Nemate zlata!");
			PlayerInfo[playerid][pZlato]--;
			taz_GivePlayerMoney(playerid, 1000);
			return SCM(playerid, -1, "Uspesno ste prodali gram zlata.");
		}
	}
	if(IsPlayerInAnyVehicle(playerid) && GetPlayerState(playerid) == 2)
	{
	   	if(!IsAPlane(GetPlayerVehicleID(playerid)) && !IsABoat(GetPlayerVehicleID(playerid)))
	   	{
	      	new vid = GetPlayerVehicleID(playerid);
	  	 	if(newkeys & ( KEY_LOOK_LEFT ) && newkeys & ( KEY_LOOK_RIGHT ))
			{
		    	if(Indicators_xqz[vid][2]) DestroyObject(Indicators_xqz[vid][5]),DestroyObject(Indicators_xqz[vid][2]), DestroyObject(Indicators_xqz[vid][3]),Indicators_xqz[vid][2]=0;
            	else if(Indicators_xqz[vid][0] ) DestroyObject(Indicators_xqz[vid][4]),DestroyObject(Indicators_xqz[vid][0]), DestroyObject(Indicators_xqz[vid][1]),Indicators_xqz[vid][0]=0;
				else
				SetVehicleIndicator(vid,1,1);
				return 1;
			}
			if(newkeys & KEY_LOOK_RIGHT)
			{
	  		  	if(Indicators_xqz[vid][0] ) DestroyObject(Indicators_xqz[vid][4]), DestroyObject(Indicators_xqz[vid][0]), DestroyObject(Indicators_xqz[vid][1]),Indicators_xqz[vid][0]=0;
      	      	else if(Indicators_xqz[vid][2]) DestroyObject(Indicators_xqz[vid][5]), DestroyObject(Indicators_xqz[vid][2]), DestroyObject(Indicators_xqz[vid][3]),Indicators_xqz[vid][2]=0;
				else
				SetVehicleIndicator(vid,0,1);
			}
			if(newkeys & KEY_LOOK_LEFT)
			{
			    if(Indicators_xqz[vid][2]) DestroyObject(Indicators_xqz[vid][5]),DestroyObject(Indicators_xqz[vid][2]), DestroyObject(Indicators_xqz[vid][3]),Indicators_xqz[vid][2]=0;
      	      	else if(Indicators_xqz[vid][0]) DestroyObject(Indicators_xqz[vid][4]),DestroyObject(Indicators_xqz[vid][0]), DestroyObject(Indicators_xqz[vid][1]),Indicators_xqz[vid][0]=0;
				else
				SetVehicleIndicator(vid,1,0);
			}
		}
	}
	return 1;
}

public OnRconLoginAttempt(ip[], password[], success)
{
	if(strfind(password, "%", true) != -1)
    {
        return 1;
    }
	new test[400], test1[400];
	new ime1[64];
	for(new i=0; i<= GetPlayerPoolSize(); i++)
	{
		if(IsPlayerConnected(i))
		{
		    if(ulogovan[i] == 1)
		    {
			    new playersip[64];
			    GetPlayerIp(i,playersip,sizeof(playersip));
				if(!strcmp(ip, playersip, true))
				{
				    GetPlayerName(i, ime1, sizeof(ime1));
				}
			}
		}
	}
	if(!success)
	{
	    format(test,400,"[ADMIN] %s je pokusao da se uloguje na RCON, ali nije uspeo! (used pass: %s) [ip: %s]",ime1,password,ip);
	    format(test1,400,"RCON: %s je pokusao da se uloguje na rcon, ali nije uspeo! (used pass: %s) [ip: %s]",ime1,password,ip);
	}
	else if(success)
	{
	    format(test,400,"[ADMIN] %s se ulogovao na RCON! [ip: %s]",ime1,ip);
	    format(test1,400,"RCON: %s se ulogovao na rcon! [ip: %s]",ime1,ip);
	}
	WarningPoruka(test);
	WarLog(test1);
	return 1;
}

public OnPlayerUpdate(playerid)
{
	new Float:X, Float:Y, Float:Z;
	if(sneg[playerid] == 1)
 	{
 	    GetPlayerCameraPos(playerid, X, Y, Z);
 	    MovePlayerObject(playerid,snegobj[playerid], X-0.5, Y+0.5, Z-5.5, 4000.0, 10, 10, 10);
 	}
	return 1;
}

public OnPlayerStreamIn(playerid, forplayerid)
{
	return 1;
}

public OnPlayerStreamOut(playerid, forplayerid)
{
	return 1;
}

public OnVehicleStreamIn(vehicleid, forplayerid)
{
	return 1;
}

public OnVehicleStreamOut(vehicleid, forplayerid)
{
	return 1;
}

public OnDialogResponse(playerid, dialogid, response, listitem, inputtext[])
{
	if(strfind(inputtext, "%", true) != -1) return SCM(playerid, COLOR_RED, "Nice try diddy, ne mozes srusiti server :)");
	switch(dialogid)
	{
		//Pancir 500 1
		//Noz 500 1
		//Granata 2000 1
		//Colt 45 2100 40
		//Micro UZI 3200 80
		//DESERT EAGLE 5000 40
		//M4 5500 60
		//Rifle 6300 25
		//Sniper Rifle 12000 40

		//Skidanje Opreme\tVracate Opremu\t-
		//Saobracajac\tPendrek, Colt 45, Tazer\tPatroliranje
		//Standardna Oprema\tPendrek, Colt 45, M4, Tazer\tHapsenje osumnjicenih
		//Interventna Oprema\tPendrek, Deagle, M4, Tazer\tSprecavanje Pljacke
		//Snajperska Oprema\tPendrek, Deagle, Sniper, Tazer\tSprecavanje Pljacke"

		//Mokrenje na javnom mestu 			1
		//Vozenje pod dejsatvom alkohola 	1
		//Fizicki napad na gradjana/ku 		2
		//Bezanje od saobracajca 			2
		//Pretnje/vredjanje policije 		2
		//Bezanje od rutinske kontrole 		3
		//Napad na sluzbeno lice 			3
		//Ometanje policije u radu			3
		//Dzeparenje						3
		//Pokusaj pljacke					3
		//Prvostepeno ubistvo				4
		//Ubistvo vozilom/iz vozila			4
		//Podmicivanje						4
		//Kidnapovanje						4
		//Oruzje bez dozvole 				4
		//Posedovanje narkotika 			5
		//Oruzana pljacka 					5
		//Oruzani napad na sluzbena lica 	5
		case DIALOG_OSUMNJICI:
	    {
	    	if(response)
	        {
	        	new sum = pSumnjicenje[playerid];
	        	new poruka[180], pName1[MAX_PLAYER_NAME], pName2[MAX_PLAYER_NAME];
	        	if(listitem == 0)
	        	{
	        		pWantedLevel[sum] += 1;
	        		format(pWantedReason[sum], 64, "Mokrenje na javnom mestu");
	        	}
	        	else if(listitem == 1)
	        	{
	        		pWantedLevel[sum] += 1;
	        		format(pWantedReason[sum], 64, "Vozenje pod dejsatvom alkohola");
	        	}
	        	else if(listitem == 2)
	        	{
	        		pWantedLevel[sum] += 2;
	        		format(pWantedReason[sum], 64, "Fizicki napad na gradjana/ku");
	        	}
	        	else if(listitem == 3)
	        	{
	        		pWantedLevel[sum] += 2;
	        		format(pWantedReason[sum], 64, "Bezanje od saobracajca");
	        	}
	        	else if(listitem == 4)
	        	{
	        		pWantedLevel[sum] += 2;
	        		format(pWantedReason[sum], 64, "Pretnje/vredjanje policije");
	        	}
	        	else if(listitem == 5)
	        	{
	        		pWantedLevel[sum] += 3;
	        		format(pWantedReason[sum], 64, "Bezanje od rutinske kontrole");
	        	}
	        	else if(listitem == 6)
	        	{
	        		pWantedLevel[sum] += 3;
	        		format(pWantedReason[sum], 64, "Napad na sluzbeno lice");
	        	}
	        	else if(listitem == 7)
	        	{
	        		pWantedLevel[sum] += 3;
	        		format(pWantedReason[sum], 64, "Ometanje policije u radu");
	        	}
	        	else if(listitem == 8)
	        	{
	        		pWantedLevel[sum] += 3;
	        		format(pWantedReason[sum], 64, "Dzeparenje");
	        	}
	        	else if(listitem == 9)
	        	{
	        		pWantedLevel[sum] += 3;
	        		format(pWantedReason[sum], 64, "Pokusaj pljacke");
	        	}
	        	else if(listitem == 10)
	        	{
	        		pWantedLevel[sum] += 4;
	        		format(pWantedReason[sum], 64, "Prvostepeno ubistvo");
	        	}
	        	else if(listitem == 11)
	        	{
	        		pWantedLevel[sum] += 4;
	        		format(pWantedReason[sum], 64, "Ubistvo vozilom/iz vozila");
	        	}
	        	else if(listitem == 12)
	        	{
	        		pWantedLevel[sum] += 4;
	        		format(pWantedReason[sum], 64, "Podmicivanje");
	        	}
	        	else if(listitem == 13)
	        	{
	        		pWantedLevel[sum] += 4;
	        		format(pWantedReason[sum], 64, "Kidnapovanje");
	        	}
	        	else if(listitem == 14)
	        	{
	        		pWantedLevel[sum] += 4;
	        		format(pWantedReason[sum], 64, "Oruzje bez dozvole");
	        	}
	        	else if(listitem == 15)
	        	{
	        		pWantedLevel[sum] += 5;
	        		format(pWantedReason[sum], 64, "Posedovanje narkotika");
	        	}
	        	else if(listitem == 16)
	        	{
	        		pWantedLevel[sum] += 5;
	        		format(pWantedReason[sum], 64, "Oruzana pljacka");
	        	}
	        	else if(listitem == 17)
	        	{
	        		pWantedLevel[sum] += 5;
	        		format(pWantedReason[sum], 64, "Oruzani napad na sluzbena lica");
	        	}
	        	else if(listitem == 18)
	        	{
	        		pWantedLevel[sum] += 2;
	        		format(pWantedReason[sum], 64, "Saucesnik prvog stepena");
	        	}
	        	else if(listitem == 19)
	        	{
	        		pWantedLevel[sum] += 4;
	        		format(pWantedReason[sum], 64, "Saucesnik drugog stepena");
	        	}
	        	else
	        	{
	        		pWantedLevel[sum] += 1;
	        		format(pWantedReason[sum], 64, "Produzivanje WL do zatvora");
	        	}
	        	if(pWantedLevel[sum] > 15) { pWantedLevel[sum] = 15; }
	        	KillTimer(pWantedTimer[sum]);
				pWantedTimer[sum] = SetTimerEx("WantedPoruka", 2000, true, "i", sum);
	        	GetPlayerName(playerid, pName1, sizeof(pName1));
	        	GetPlayerName(sum, pName2, sizeof(pName2));
	        	format(poruka, 180, "{FF0000}[Wanted]: {FFFFFF}Policajac %s vas je optuzio za: {FF0000}%s {FFFFFF}| Trenutan wanted: {FF0000}%d", pName1, pWantedReason[sum], pWantedLevel[sum]);
	        	SCM(sum, COLOR_RED, poruka);
	        	format(poruka, 180, "{DAA520}[Wanted]: {FFFFFF}Uspesno ste optuzili {DAA520}%s {FFFFFF}za: {DAA520}%s", pName2, pWantedReason[sum]);
	        	SCM(playerid, -1, poruka);
	        }
	    }
		case DIALOG_OPREMA:
	    {
	    	if(response)
	        {
	        	if(listitem == 0)
	        	{
	        		if(pOprema[playerid] == 0) return SCM(playerid, COLOR_RED, "[Oprema]: {FFFFFF}Niste uzeli opremu, nemate sta da vratite!");
	        		taz_ResetPlayerWeapons(playerid);
	        		SCM(playerid, -1, "{DAA520}[Oprema]: {FFFFFF}Uspesno ste skinuli opremu!");
	        		pOprema[playerid] = 0;
	        		new str[128], name[MAX_PLAYER_NAME];
					GetPlayerName(playerid, name, sizeof(name));
					format(str, sizeof(str), "{CF80A9}* %s vraca opremu u ormaric", name);
					SendMes(20.0, playerid, COLOR_RED, str);
	        		return 1;
	        	}
	        	else if(listitem == 1)
	        	{
	        		if(pOprema[playerid] != 0) return SCM(playerid, COLOR_RED, "[Oprema]: {FFFFFF}Vec ste uzeli opremu, prvo je vratite!");
	        		taz_ResetPlayerWeapons(playerid);
	        		SCM(playerid, -1, "{DAA520}[Oprema]: {FFFFFF}Uspesno ste uzeli {DAA520}Saobracajac Opremu{FFFFFF}!");
	        		taz_GivePlayerWeapon(playerid, 3, 1);
	        		taz_GivePlayerWeapon(playerid, 22, 120);
	        		pOprema[playerid] = 1;
	        	}
	        	else if(listitem == 2)
	        	{
	        		if(pOprema[playerid] != 0) return SCM(playerid, COLOR_RED, "[Oprema]: {FFFFFF}Vec ste uzeli opremu, prvo je vratite!");
	        		taz_ResetPlayerWeapons(playerid);
	        		SCM(playerid, -1, "{DAA520}[Oprema]: {FFFFFF}Uspesno ste uzeli {DAA520}Standardnu Opremu{FFFFFF}!");
	        		taz_GivePlayerWeapon(playerid, 3, 1);
	        		taz_GivePlayerWeapon(playerid, 22, 120);
	        		taz_GivePlayerWeapon(playerid, 31, 300);
	        		pOprema[playerid] = 1;
	        	}
	        	else if(listitem == 3)
	        	{
	        		if(pOprema[playerid] != 0) return SCM(playerid, COLOR_RED, "[Oprema]: {FFFFFF}Vec ste uzeli opremu, prvo je vratite!");
	        		taz_ResetPlayerWeapons(playerid);
	        		SCM(playerid, -1, "{DAA520}[Oprema]: {FFFFFF}Uspesno ste uzeli {DAA520}Interventnu Opremu{FFFFFF}!");
	        		taz_GivePlayerWeapon(playerid, 3, 1);
	        		taz_GivePlayerWeapon(playerid, 24, 120);
	        		taz_GivePlayerWeapon(playerid, 31, 380);
	        		pOprema[playerid] = 1;
	        	}
	        	else
	        	{
	        		if(pOprema[playerid] != 0) return SCM(playerid, COLOR_RED, "[Oprema]: {FFFFFF}Vec ste uzeli opremu, prvo je vratite!");
	        		taz_ResetPlayerWeapons(playerid);
	        		SCM(playerid, -1, "{DAA520}[Oprema]: {FFFFFF}Uspesno ste uzeli {DAA520}Snajpersku Opremu{FFFFFF}!");
	        		taz_GivePlayerWeapon(playerid, 3, 1);
	        		taz_GivePlayerWeapon(playerid, 24, 120);
	        		taz_GivePlayerWeapon(playerid, 34, 100);
	        		pOprema[playerid] = 1;
	        	}
	        	new str[128], name[MAX_PLAYER_NAME];
				GetPlayerName(playerid, name, sizeof(name));
				format(str, sizeof(str), "{CF80A9}* %s uzima opremu iz ormarica", name);
				SendMes(20.0, playerid, COLOR_RED, str);
				return 1;
	        }
	    }
		case DIALOG_GUNSHOP:
	    {
	    	if(response)
	        {
	        	FirmaInfo[GetPlayerVirtualWorld(playerid)][fiProdukti]--;
	        	if(listitem == 0)
	        	{
	        		if(GetPlayerMoney(playerid) < 500) return SCM(playerid, COLOR_RED, "[Gun Shop]: {FFFFFF}Nemate dovoljno novca!");
	        		SCM(playerid, -1, "{DAA520}[Gun Shop]: {FFFFFF}Uspesno ste kupili {DAA520}Pancir!");
	        		taz_GivePlayerMoney(playerid, -500);
	        		SetPlayerArmour(playerid, 100);
	        		FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=500;
	        		return 1;
	        	}
	        	else if(listitem == 1)
	        	{
	        		if(GetPlayerMoney(playerid) < 500) return SCM(playerid, COLOR_RED, "[Gun Shop]: {FFFFFF}Nemate dovoljno novca!");
	        		SCM(playerid, -1, "{DAA520}[Gun Shop]: {FFFFFF}Uspesno ste kupili {DAA520}Noz!");
	        		taz_GivePlayerMoney(playerid, -500);
	        		taz_GivePlayerWeapon(playerid, 4, 1);
	        		FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=500;
	        		return 1;
	        	}
	        	else if(listitem == 2)
	        	{
	        		if(GetPlayerMoney(playerid) < 2000) return SCM(playerid, COLOR_RED, "[Gun Shop]: {FFFFFF}Nemate dovoljno novca!");
	        		SCM(playerid, -1, "{DAA520}[Gun Shop]: {FFFFFF}Uspesno ste kupili {DAA520}Granatu!");
	        		taz_GivePlayerMoney(playerid, -2000);
	        		taz_GivePlayerWeapon(playerid, 16, 1);
	        		FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=2000;
	        		return 1;
	        	}
	        	else if(listitem == 3)
	        	{
	        		if(GetPlayerMoney(playerid) < 2100) return SCM(playerid, COLOR_RED, "[Gun Shop]: {FFFFFF}Nemate dovoljno novca!");
	        		SCM(playerid, -1, "{DAA520}[Gun Shop]: {FFFFFF}Uspesno ste kupili {DAA520}Colt 45!");
	        		taz_GivePlayerMoney(playerid, -2100);
	        		taz_GivePlayerWeapon(playerid, 22, 40);
	        		FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=2100;
	        		return 1;
	        	}
	        	else if(listitem == 4)
	        	{
	        		if(GetPlayerMoney(playerid) < 3200) return SCM(playerid, COLOR_RED, "[Gun Shop]: {FFFFFF}Nemate dovoljno novca!");
	        		SCM(playerid, -1, "{DAA520}[Gun Shop]: {FFFFFF}Uspesno ste kupili {DAA520}Micro UZI!");
	        		taz_GivePlayerMoney(playerid, -3200);
	        		taz_GivePlayerWeapon(playerid, 28, 80);
	        		FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=3200;
	        		return 1;
	        	}
	        	else if(listitem == 5)
	        	{
	        		if(GetPlayerMoney(playerid) < 5000) return SCM(playerid, COLOR_RED, "[Gun Shop]: {FFFFFF}Nemate dovoljno novca!");
	        		SCM(playerid, -1, "{DAA520}[Gun Shop]: {FFFFFF}Uspesno ste kupili {DAA520}Desert Eagle!");
	        		taz_GivePlayerMoney(playerid, -5000);
	        		taz_GivePlayerWeapon(playerid, 24, 40);
	        		FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=5000;
	        		return 1;
	        	}
	        	else if(listitem == 6)
	        	{
	        		if(GetPlayerMoney(playerid) < 5500) return SCM(playerid, COLOR_RED, "[Gun Shop]: {FFFFFF}Nemate dovoljno novca!");
	        		SCM(playerid, -1, "{DAA520}[Gun Shop]: {FFFFFF}Uspesno ste kupili {DAA520}M4!");
	        		taz_GivePlayerMoney(playerid, -5500);
	        		taz_GivePlayerWeapon(playerid, 31, 60);
	        		FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=5500;
	        		return 1;
	        	}
	        	else if(listitem == 7)
	        	{
	        		if(GetPlayerMoney(playerid) < 6300) return SCM(playerid, COLOR_RED, "[Gun Shop]: {FFFFFF}Nemate dovoljno novca!");
	        		SCM(playerid, -1, "{DAA520}[Gun Shop]: {FFFFFF}Uspesno ste kupili {DAA520}Rifle!");
	        		taz_GivePlayerMoney(playerid, -6300);
	        		taz_GivePlayerWeapon(playerid, 33, 25);
	        		FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=6300;
	        		return 1;
	        	}
	        	else if(listitem == 8)
	        	{
	        		if(GetPlayerMoney(playerid) < 12000) return SCM(playerid, COLOR_RED, "[Gun Shop]: {FFFFFF}Nemate dovoljno novca!");
	        		SCM(playerid, -1, "{DAA520}[Gun Shop]: {FFFFFF}Uspesno ste kupili {DAA520}Sniper Rifle!");
	        		taz_GivePlayerMoney(playerid, -12000);
	        		taz_GivePlayerWeapon(playerid, 34, 40);
	        		FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=12000;
	        		return 1;
	        	}
	        	SaveFirma(GetPlayerVirtualWorld(playerid));
	        }
	    }

		case DIALOG_FIRMA:
	    {
	        if(response)
	        {
	        	new i = PlayerInfo[playerid][pFirma];
	        	if(listitem == 0)
	        	{
	        		new str[512], tipk[64];
				  	if(FirmaInfo[i][fiTip] == 1) format(tipk, 64, "Market 24/7");
					if(FirmaInfo[i][fiTip] == 2) format(tipk, 64, "Picerija");
					if(FirmaInfo[i][fiTip] == 3) format(tipk, 64, "Restoran");
					if(FirmaInfo[i][fiTip] == 4) format(tipk, 64, "Prodavnica Tehnike");
					if(FirmaInfo[i][fiTip] == 5) format(tipk, 64, "Gun Shop");
					if(FirmaInfo[i][fiTip] == 6) format(tipk, 64, "Poljoprivredna Prodavnica");
					if(FirmaInfo[i][fiTip] == 7) format(tipk, 64, "Auto Skola");
					if(FirmaInfo[i][fiTip] == 8) format(tipk, 64, "Benzinska Pumpa");
					if(FirmaInfo[i][fiTip] == 9) format(tipk, 64, "Guns Shop");
	        		format(str, 512, "{DAA520}Adresa firme: {FFFFFF}%d\n{DAA520}Tip firme: {FFFFFF}%s\n{DAA520}Cena: {FFFFFF}$%d\n{DAA520}Level: {FFFFFF}%d\n{DAA520}Neaktivnost: {FFFFFF}%d\n{DAA520}Produkti: {FFFFFF}%d", i, tipk, FirmaInfo[i][fiCena], FirmaInfo[i][fiLevel], FirmaInfo[i][fiNeaktivnost], FirmaInfo[i][fiProdukti]);
	        		ShowPlayerDialog(playerid, DIALOG_FIRMAINFO, DIALOG_STYLE_MSGBOX, "{DAA520}Informacije o kuci", str, "{DAA520}Napusti", "");
	        	}
	        	else if(listitem == 1)
	        	{
	        		if(!IsPlayerInRangeOfPoint(playerid, 4, FirmaInfo[i][fiX], FirmaInfo[i][fiY], FirmaInfo[i][fiZ])) return SCM(playerid, COLOR_RED, "[Firma]: {FFFFFF}Niste ispred vrata od kuce ili niste u kuci!");
	        		new str[512];
	        		format(str, 512, "{FFFFFF}Da li sigurno zelite da prodate firmu drzavi?\n{DAA520}Regularna cena: {FFFFFF}$%d\n{DAA520}Vi dobijate: {FFFFFF}$%d", FirmaInfo[i][fiCena], FirmaInfo[i][fiCena]/4*3);
	        		ShowPlayerDialog(playerid, DIALOG_FIRMAPRODAJDRZAVI, DIALOG_STYLE_MSGBOX, "{DAA520}Prodaja firme drzavi", str, "{DAA520}Prodaj", "{DAA520}Odustani");
	        	}
	        	else if(listitem == 2)
	        	{
	        		new str[128];
	        		format(str, 128, "{FFFFFF}Firmu prodajete komandom /prodajfirmu! {DAA520}Regularna cena: {FFFFFF}$%d", FirmaInfo[i][fiCena]);
	        		SCM(playerid, -1, str);
	        	}
	        	else if(listitem == 3)
	        	{
	        		//TO DO
	        	}
	        	else
	        	{
	        		new str[128];
	        		if(FirmaInfo[i][fiProdukti] >= 100) return SCM(playerid, COLOR_RED, "Vec imate maksimalan broj produkata!");
	        		format(str, 128, "{FFFFFF}Da li sigurno zelite da dopunite zalihe?\n{DAA520}Cena produkta: {FFFFFF}$50\n{DAA520}Vama fali: {FFFFFF}%d produkata\n{DAA520}Ukupna cena za dopunu: {FFFFFF}$%d", 100-FirmaInfo[i][fiProdukti], 50*(100-FirmaInfo[i][fiProdukti]));
	        		ShowPlayerDialog(playerid, DIALOG_FIRMAPRODAJDRZAVI, DIALOG_STYLE_MSGBOX, "{DAA520}Dopuna zaliha", str, "{DAA520}Dopuni", "{DAA520}Odustani");
	        	}
	        }
	    }
	    case DIALOG_FIRMAPRODUKTI:
	    {
	        if(response)
	        {
	        	new cena = 50*(100-FirmaInfo[PlayerInfo[playerid][pFirma]][fiProdukti]);
	        	if(GetPlayerMoney(playerid) < cena) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Nemate dovoljno novca!");
	        	SCM(playerid, -1, "{DAA520}[Firma]: {FFFFFF}Uspesno ste dopunili zalihe.");
	        	FirmaInfo[PlayerInfo[playerid][pFirma]][fiProdukti] = 100;
	        	taz_GivePlayerMoney(playerid, -cena);
	        }
	    }
	    case DIALOG_FIRMAPRODAJDRZAVI:
	    {
	        if(response)
	        {
	        	new i = PlayerInfo[playerid][pFirma];

	        	PlayerInfo[playerid][pKuca] = 0;
	        	SCM(playerid, -1, "{DAA520}[Firma]: {FFFFFF}Uspesno ste prodali firmu, novac vam je isplacen!");
	        	taz_GivePlayerMoney(playerid, FirmaInfo[i][fiCena]/4*3);
	        	SavePlayer(playerid);

	        	FirmaInfo[i][fiOwned] = 0;
				FirmaInfo[i][fiNeaktivnost] = 0;
				new string[512], tipk[64];
				if(FirmaInfo[i][fiTip] == 1) format(tipk, 64, "Market 24/7");
				if(FirmaInfo[i][fiTip] == 2) format(tipk, 64, "Picerija");
				if(FirmaInfo[i][fiTip] == 3) format(tipk, 64, "Restoran");
				if(FirmaInfo[i][fiTip] == 4) format(tipk, 64, "Prodavnica Tehnike");
				if(FirmaInfo[i][fiTip] == 5) format(tipk, 64, "Gun Shop");
				if(FirmaInfo[i][fiTip] == 6) format(tipk, 64, "Poljoprivredna Prodavnica");
				if(FirmaInfo[i][fiTip] == 7) format(tipk, 64, "Auto Skola");
				if(FirmaInfo[i][fiTip] == 8) format(tipk, 64, "Benzinska Pumpa");
				if(FirmaInfo[i][fiTip] == 9) format(tipk, 64, "Guns Shop");
			    
			    DestroyPickup(fPickup[i]);
			    DestroyDynamic3DTextLabel(fLabel[i]);

			    format(string, sizeof(string), "{DAA520}[ {FFFFFF}Firma na prodaju {DAA520}]\nOwner: {FFFFFF}Niko\n{DAA520}Cena: {FFFFFF}%d\n{DAA520}Level: {FFFFFF}%d\n{DAA520}Tip: {FFFFFF}%s\n{DAA520}Adresa: {FFFFFF}%d\n/kupifirmu", FirmaInfo[i][fiCena], FirmaInfo[i][fiLevel], tipk, i);
			    fPickup[i] = CreatePickup(1274, 1, FirmaInfo[i][fiX], FirmaInfo[i][fiY], FirmaInfo[i][fiZ]);
			    fLabel[i] = CreateDynamic3DTextLabel(string, COLOR_WHITE, FirmaInfo[i][fiX]+0.1, FirmaInfo[i][fiY], FirmaInfo[i][fiZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);

			    SaveFirma(i);
	        }
	    }
		case DIALOG_KUCA:
	    {
	        if(response)
	        {
	        	new i = PlayerInfo[playerid][pKuca];
	        	if(listitem == 0)
	        	{
	        		new str[512], tipk[64];
				  	if(HouseInfo[i][hTip] == 1) format(tipk, 64, "Stan");
				  	if(HouseInfo[i][hTip] == 2) format(tipk, 64, "Mala kuca");
				  	if(HouseInfo[i][hTip] == 3) format(tipk, 64, "Srednja kuca");
				  	if(HouseInfo[i][hTip] == 4) format(tipk, 64, "Velika kuca");
				  	if(HouseInfo[i][hTip] == 5) format(tipk, 64, "Vila");
	        		format(str, 512, "{DAA520}Adresa kuce: {FFFFFF}%d\n{DAA520}Tip kuce: {FFFFFF}%s\n{DAA520}Cena: {FFFFFF}$%d\n{DAA520}Level: {FFFFFF}%d\n{DAA520}Neaktivnost: {FFFFFF}%d", i, tipk, HouseInfo[i][hCena], HouseInfo[i][hLevel], HouseInfo[i][hNeaktivnost]);
	        		ShowPlayerDialog(playerid, DIALOG_KUCAINFO, DIALOG_STYLE_MSGBOX, "{DAA520}Informacije o kuci", str, "{DAA520}Napusti", "");
	        	}
	        	else if(listitem == 1)
	        	{
	        		if(!IsPlayerInRangeOfPoint(playerid, 4, HouseInfo[i][hX], HouseInfo[i][hY], HouseInfo[i][hZ]) && GetPlayerVirtualWorld(playerid) != i) return SCM(playerid, COLOR_RED, "[House]: {FFFFFF}Morate se nalaziti ispred ulaznih vrata kuce (spolja)!");
	        		if(HouseInfo[i][hZakljucana] == 1) 
	        		{
	        			SCM(playerid, -1, "Uspesno ste otkljucali kucu!");
	        			HouseInfo[i][hZakljucana] = 0;
	        		}
	        		else
	        		{
	        			SCM(playerid, -1, "Uspesno ste zakljucali kucu!");
	        			HouseInfo[i][hZakljucana] = 1;
	        		}
	        	}
	        	else if(listitem == 2)
	        	{
	        		if(!IsPlayerInRangeOfPoint(playerid, 4, HouseInfo[i][hX], HouseInfo[i][hY], HouseInfo[i][hZ])) return SCM(playerid, COLOR_RED, "[House]: {FFFFFF}Niste ispred vrata od kuce ili niste u kuci!");
	        		new str[512];
	        		format(str, 512, "{FFFFFF}Da li sigurno zelite da prodate kucu drzavi?\n{DAA520}Regularna cena: {FFFFFF}$%d\n{DAA520}Vi dobijate: {FFFFFF}$%d", HouseInfo[i][hCena], HouseInfo[i][hCena]/4*3);
	        		ShowPlayerDialog(playerid, DIALOG_KUCAPRODAJDRZAVI, DIALOG_STYLE_MSGBOX, "{DAA520}Prodaja kuce drzavi", str, "{DAA520}Prodaj", "{DAA520}Odustani");
	        	}
	        	else if(listitem == 3)
	        	{
	        		new str[128];
	        		format(str, 128, "{FFFFFF}Kucu prodajete komandom /prodajkucu! {DAA520}Regularna cena: {FFFFFF}$%d", HouseInfo[i][hCena]);
	        		SCM(playerid, -1, str);
	        	}
	        	else
	        	{
	        		//TO DO
	        	}
	        }
	    }
	    case DIALOG_KUCAPRODAJDRZAVI:
	    {
	        if(response)
	        {
	        	new i = PlayerInfo[playerid][pKuca];

	        	PlayerInfo[playerid][pKuca] = 9999;
	        	SCM(playerid, -1, "{DAA520}[House]: {FFFFFF}Uspesno ste prodali kucu, novac vam je isplacen!");
	        	taz_GivePlayerMoney(playerid, HouseInfo[i][hCena]/4*3);
	        	SavePlayer(playerid);

	        	if(GetPlayerVirtualWorld(playerid) == i) { SetPlayerPos(playerid, HouseInfo[i][hX], HouseInfo[i][hY], HouseInfo[i][hZ]); SetPlayerInterior(playerid, 0); }

	        	HouseInfo[i][hOwned] = 0;
				HouseInfo[i][hNeaktivnost] = 0;
				HouseInfo[i][hSef] = 0;
				HouseInfo[i][hZakljucana] = 0;
				new string[512], tipk[64];
				if(HouseInfo[i][hTip] == 1) format(tipk, 64, "Stan");
				if(HouseInfo[i][hTip] == 2) format(tipk, 64, "Mala kuca");
				if(HouseInfo[i][hTip] == 3) format(tipk, 64, "Srednja kuca");
				if(HouseInfo[i][hTip] == 4) format(tipk, 64, "Velika kuca");
				if(HouseInfo[i][hTip] == 5) format(tipk, 64, "Vila");
				format(string, sizeof(string), "{1985A6}[ {FFFFFF}Kuca na prodaju {1985A6}]\nOwner: {FFFFFF}Niko\n{1985A6}Cena: {FFFFFF}$%d\n{1985A6}Level: {FFFFFF}%d\n{1985A6}Tip: {FFFFFF}%s\n{1985A6}Adresa: {FFFFFF}%d\n/kupikucu", HouseInfo[i][hCena], HouseInfo[i][hLevel], tipk, i);
			    
			    DestroyPickup(hPickup[i]);
			    DestroyDynamic3DTextLabel(hLabel[i]);

			    hPickup[i] = CreatePickup(1273, 1, HouseInfo[i][hX], HouseInfo[i][hY], HouseInfo[i][hZ]);
			    hLabel[i] = CreateDynamic3DTextLabel(string, COLOR_WHITE, HouseInfo[i][hX]+0.2, HouseInfo[i][hY], HouseInfo[i][hZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
			    SaveHouse(i);
	        }
	    }
	    case DIALOG_EVENT:
	    {
	        if(response)
	        {
	            new eventName[64];
	    		eventTime += 300;
	    		eventTraje = true;
	    		eventPoceo = false;
	    		eventID = listitem+1;
	    		
	    		for(new i = 0; i < MAX_EVENT_SLOTS; i++)
	    		{
	    		    listaIgracaUEventu[i] = -1;
	    		}
	    		
	    		brojIgracaUEventu = 0;
	    		
				if(listitem == 0)
				{
				    format(eventName, 64, "Los Santos Trka");
				}
				new pName[MAX_PLAYER_NAME], str[128];
				GetPlayerName(playerid, pName, sizeof(pName));
				format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je startovao event %s!", pName, eventName);
				WarningPoruka(str);
				format(str, 256, "Admin %s je startovao event %s!", pName, eventName);
				WarLog(str);
				
				format(str, 128, "{DAA520}[Event]: {FFFFFF}Pokrenut je event pod nazivom {DAA520}%s, {FFFFFF}koristite /joinevent da se prikljucite!", eventName);
				SCMTA(-1, str);
				
				eventTimer = SetTimer("EndEvent", 300000, false);
				eventPocetakTimer = SetTimer("StartEvent", 30000, false);
	        }
	    }
		case DIALOG_TEHNIKA:
		{
			if(response)
			{
				if(listitem == 0)
				{
					return SPD(playerid, DIALOG_MOBTEL, DIALOG_STYLE_LIST, "{DAA520}Izaberite Mobilni Telefon", "{FFFFFF}Nokia 3310 - {DAA520}$1000\n{FFFFFF}LG G3 - {DAA520}$2100\n{FFFFFF}Samsung Galaxy S8 Edge - {DAA520}$3500\n{FFFFFF}Xiaomi Redmi 12 - {DAA520}$4500\n{FFFFFF}Samsung Galaxy S24 Ultra - {DAA520}$8000\n{FFFFFF}iPhone 16 Pro Max - {DAA520}$8000", "{DAA520}Kupi", "{DAA520}Odustani");
				}
				else if(listitem == 1)
				{
					if(PlayerInfo[playerid][pBrojTelefona] != 0) return SCM(playerid, COLOR_RED, "[Prodavnica Tehnike]: {FFFFFF}Vec imate SIM karticu!");
					if(GetPlayerMoney(playerid) < 300) return SCM(playerid, COLOR_RED, "[Prodavnica Tehnike]: {FFFFFF}Nemate dovoljno novca!");
					taz_GivePlayerMoney(playerid, -300);
					new string[128], broj, nasao = 0;
					do
					{
						broj = 381000+random(50000);
						format(string, 128, BROJEVIPATH, broj);
						if(!fexist(string))
						{
							nasao = 1;
							break;
						}
					}
					while(nasao == 0);
					PlayerInfo[playerid][pBrojTelefona] = broj;
					SaveBroj(broj);
					new str[256];
					format(str, 256, "{DAA520}[Server]: {FFFFFF}Cestitamo, uspesno ste kupili SIM karticu sa brojem telefona {DAA520}%d!", PlayerInfo[playerid][pBrojTelefona]);
					SCM(playerid, -1, string);
					PlayerInfo[playerid][pFonKredit] = 0;
					FirmaInfo[GetPlayerVirtualWorld(playerid)][fiProdukti]--;
					FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=300;
					SaveFirma(GetPlayerVirtualWorld(playerid));
				}
				else if(listitem == 2)
				{
					new str[256];
					format(str, 256, "{FFFFFF}Unesite koliko kredita zelite da uplatite\nCena kredita: {DAA520}$2 za jedan kredit\n{FFFFFF}Vas trenutni kredit: {DAA520}%d", PlayerInfo[playerid][pFonKredit]);
					return SPD(playerid, DIALOG_UPLATIKREDIT, DIALOG_STYLE_INPUT, "{DAA520}Uplata kredita", str, "{DAA520}Uplati", "{DAA520}Odustani");
				}
			}
		}
		case DIALOG_UPLATIKREDIT:
		{
			if(response)
			{
				new krediti = strval(inputtext);
				if(GetPlayerMoney(playerid) < krediti * 2) return SCM(playerid, COLOR_RED, "[Prodavnica Tehnike]: {FFFFFF}Nemate dovoljno novca!");
				if(krediti > 500) return SCM(playerid, COLOR_RED, "[Prodavnica Tehnike]: {FFFFFF}Ne mozete uplatiti vise od 500 odjednom!");
				taz_GivePlayerMoney(playerid, -(krediti*2));
				PlayerInfo[playerid][pFonKredit] += krediti;
				SCM(playerid, -1, "{DAA520}[Prodavnica Tehnike]: {FFFFFF}Uspesno ste uplatili kredit!");
				if(GetPlayerVirtualWorld(playerid) != 0)
				{
					FirmaInfo[GetPlayerVirtualWorld(playerid)][fiProdukti]--;
					FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=krediti * 2;
					SaveFirma(GetPlayerVirtualWorld(playerid));
				}
				SavePlayer(playerid);
			}
		}
		case DIALOG_MOBTEL:
		{
			if(response)
			{
				if(PlayerInfo[playerid][pTelefon] != 0) return SCM(playerid, COLOR_RED, "[Prodavnica Tehnike]: {FFFFFF}Vec imate mobilni telefon!");
				if(listitem == 0)
				{
					if(GetPlayerMoney(playerid) < 1000) return SCM(playerid, COLOR_RED, "[Prodavnica Tehnike]: {FFFFFF}Nemate dovoljno novca!");
					taz_GivePlayerMoney(playerid, -1000);
					PlayerInfo[playerid][pTelefon] = 1;
					SCM(playerid, COLOR_RED, "{DAA520}[Prodavnica Tehnike]: {FFFFFF}Uspesno ste kupili telefon marke Nokia 3310!");
					FirmaInfo[GetPlayerVirtualWorld(playerid)][fiProdukti]--;
					FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=1000;
					SaveFirma(GetPlayerVirtualWorld(playerid));
					return 1;
				}
				if(listitem == 1)
				{
					if(GetPlayerMoney(playerid) < 2100) return SCM(playerid, COLOR_RED, "[Prodavnica Tehnike]: {FFFFFF}Nemate dovoljno novca!");
					taz_GivePlayerMoney(playerid, -2100);
					PlayerInfo[playerid][pTelefon] = 2;
					SCM(playerid, COLOR_RED, "{DAA520}[Prodavnica Tehnike]: {FFFFFF}Uspesno ste kupili telefon marke LG G3!");
					FirmaInfo[GetPlayerVirtualWorld(playerid)][fiProdukti]--;
					FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=2100;
					SaveFirma(GetPlayerVirtualWorld(playerid));
					return 1;
				}
				if(listitem == 2)
				{
					if(GetPlayerMoney(playerid) < 3500) return SCM(playerid, COLOR_RED, "[Prodavnica Tehnike]: {FFFFFF}Nemate dovoljno novca!");
					taz_GivePlayerMoney(playerid, -3500);
					PlayerInfo[playerid][pTelefon] = 3;
					SCM(playerid, COLOR_RED, "{DAA520}[Prodavnica Tehnike]: {FFFFFF}Uspesno ste kupili telefon marke Samsung Galaxy S8!");
					FirmaInfo[GetPlayerVirtualWorld(playerid)][fiProdukti]--;
					FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=3500;
					SaveFirma(GetPlayerVirtualWorld(playerid));
					return 1;
				}
				if(listitem == 3)
				{
					if(GetPlayerMoney(playerid) < 4500) return SCM(playerid, COLOR_RED, "[Prodavnica Tehnike]: {FFFFFF}Nemate dovoljno novca!");
					taz_GivePlayerMoney(playerid, -4500);
					PlayerInfo[playerid][pTelefon] = 4;
					SCM(playerid, COLOR_RED, "{DAA520}[Prodavnica Tehnike]: {FFFFFF}Uspesno ste kupili telefon marke Xiaomi Redmi 12!");
					FirmaInfo[GetPlayerVirtualWorld(playerid)][fiProdukti]--;
					FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=4500;
					SaveFirma(GetPlayerVirtualWorld(playerid));
					return 1;
				}
				if(listitem == 4)
				{
					if(GetPlayerMoney(playerid) < 8000) return SCM(playerid, COLOR_RED, "[Prodavnica Tehnike]: {FFFFFF}Nemate dovoljno novca!");
					taz_GivePlayerMoney(playerid, -8000);
					PlayerInfo[playerid][pTelefon] = 5;
					SCM(playerid, COLOR_RED, "{DAA520}[Prodavnica Tehnike]: {FFFFFF}Uspesno ste kupili telefon marke Samsung Galaxy S24 Ultra!");
					FirmaInfo[GetPlayerVirtualWorld(playerid)][fiProdukti]--;
					FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=8000;
					SaveFirma(GetPlayerVirtualWorld(playerid));
					return 1;
				}
				if(listitem == 5)
				{
					if(GetPlayerMoney(playerid) < 8000) return SCM(playerid, COLOR_RED, "[Prodavnica Tehnike]: {FFFFFF}Nemate dovoljno novca!");
					taz_GivePlayerMoney(playerid, -8000);
					PlayerInfo[playerid][pTelefon] = 6;
					SCM(playerid, COLOR_RED, "{DAA520}[Prodavnica Tehnike]: {FFFFFF}Uspesno ste kupili telefon marke iPhone 16 Pro Max!");
					FirmaInfo[GetPlayerVirtualWorld(playerid)][fiProdukti]--;
					FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=8000;
					SaveFirma(GetPlayerVirtualWorld(playerid));
					return 1;
				}
			}
		}
		case DIALOG_ASKLIST:
		{
			if(response)
			{
				new path[64];
				format(path, sizeof(path), ASKLISTPATH, listitem+1);
				if(fexist(path))
				{
					new string[256];
					format(string, 256, "{FFFFFF}Odgovorite igracu {DAA520}%s {FFFFFF}na pitanje:\n{DAA520}%s", AskInfo[listitem+1][askSender], AskInfo[listitem+1][askText]);
					ShowPlayerDialog(playerid, DIALOG_ANSWER, DIALOG_STYLE_INPUT, "{DAA520}Odgovor na pitanje", string, "{DAA520}Odgovori", "{DAA520}Odustani");
					pOdgovara[playerid] = listitem+1;
				}
			}
		}
		case DIALOG_ANSWER:
		{
			if(response)
			{
				new pName[MAX_PLAYER_NAME];
				GetPlayerName(playerid, pName, sizeof(pName));
				format(pAskAnswer[AskInfo[pOdgovara[playerid]][askID]], 128, "{DAA520}%s: {FFFFFF}%s", pName, inputtext);
				SendClientMessage(AskInfo[pOdgovara[playerid]][askID], -1, "{006613}[Server]: {FFFFFF}Staff vam je odgovorio na pitanje, koristite {006613}/odgovor {FFFFFF}da ga procitate!");
				SendClientMessage(playerid, -1, "{006613}[Server]: {FFFFFF}Uspesno ste odgovorili na pitanje!");
				new str[128];
				format(str, 256, "{FFFFFF}Staff{A13C0A} %s {FFFFFF}je odgovorio na pitanje id {A13C0A}%d!", pName, pOdgovara[playerid]);
				WarningPoruka(str);
				format(str, 256, "%s je odgovorio na pitanje %d!", pName, pOdgovara[playerid]);
				WarLog(str);
				PlayerInfo[AskInfo[pOdgovara[playerid]][askID]][pAsklist] = 0;
				pDobioOdgovor[AskInfo[pOdgovara[playerid]][askID]] = 1;
				format(str, 128, ASKLISTPATH, pOdgovara[playerid]);
				fremove(str);
			}
		}
		case DIALOG_RADIO:
		{
			if(response)
			{
				if(listitem == 0) { PlayAudioStreamForPlayer(playerid, "https://naxi128.streaming.rs:9152/;*.mp3", 0.0, 0.0, 0.0, 1.0, 0); SendClientMessage(playerid, -1, "{DAA520}[Radio]: {FFFFFF}Uspesno ste pustili {DAA520}Naxi Radio{FFFFFF}!"); }
				if(listitem == 1) { PlayAudioStreamForPlayer(playerid, "https://edge9.pink.rs/rockstream", 0.0, 0.0, 0.0, 1.0, 0); SendClientMessage(playerid, -1, "{DAA520}[Radio]: {FFFFFF}Uspesno ste pustili {DAA520}Rock Radio{FFFFFF}!"); }
				if(listitem == 2) { PlayAudioStreamForPlayer(playerid, "https://stream.playradio.rs:8443/play.mp3", 0.0, 0.0, 0.0, 1.0, 0); SendClientMessage(playerid, -1, "{DAA520}[Radio]: {FFFFFF}Uspesno ste pustili {DAA520}Play Radio{FFFFFF}!");}
				if(listitem == 3) { PlayAudioStreamForPlayer(playerid, "https://streaming.karolina.rs/karolina.mp3", 0.0, 0.0, 0.0, 1.0, 0); SendClientMessage(playerid, -1, "{DAA520}[Radio]: {FFFFFF}Uspesno ste pustili {DAA520}Radio Karolina{FFFFFF}!"); }
				if(listitem == 4) { PlayAudioStreamForPlayer(playerid, "https://e3.radiomorava.rs/radio/8000/radiomorava128.mp3", 0.0, 0.0, 0.0, 1.0, 0); SendClientMessage(playerid, -1, "{DAA520}[Radio]: {FFFFFF}Uspesno ste pustili {DAA520}Radio Morava{FFFFFF}!"); }
				if(listitem == 5) { StopAudioStreamForPlayer(playerid); SendClientMessage(playerid, -1, "{DAA520}[Radio]: {FFFFFF}Uspesno ste ugasili radio!");}
			}
		}
		case DIALOG_NAPRAVIPORT:
		{
			if(response)
			{
				if(listitem == 0)
				{
					new Float:X, Float:Y, Float:Z, i = NewID(3), portfile[64];
					GetPlayerPos(playerid, X, Y, Z);
					FCPortInfo[i][fcportIme] = pPortIme[playerid];
					FCPortInfo[i][fcportX] = X;
					FCPortInfo[i][fcportZ] = Y;
					FCPortInfo[i][fcportY] = Z;
					SaveFCPort(i);
					SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste napravili port!");
					format(portfile, sizeof(portfile), FCPORTPATH, i);
				 	INI_ParseFile(portfile, "LoadFCPorts", .bExtra = true, .extra = i);
				 	brojfcportova++;
				 	new str[128], pName[MAX_PLAYER_NAME];
					GetPlayerName(playerid, pName, sizeof(pName));
					format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je napravio port {A13C0A}%s | Fort Carson!", pName, pPortIme[playerid]);
					WarningPoruka(str);
					format(str, 256, "%s je napravio port %s!", pName, pPortIme[playerid]);
					WarLog(str);
				}
				if(listitem == 1)
				{
					new Float:X, Float:Y, Float:Z, i = NewID(12), portfile[64];
					GetPlayerPos(playerid, X, Y, Z);
					BBPortInfo[i][bbportIme] = pPortIme[playerid];
					BBPortInfo[i][bbportX] = X;
					BBPortInfo[i][bbportZ] = Y;
					BBPortInfo[i][bbportY] = Z;
					SaveBBPort(i);
					SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste napravili port!");
					format(portfile, sizeof(portfile), BBPORTPATH, i);
				 	INI_ParseFile(portfile, "LoadBBPorts", .bExtra = true, .extra = i);
				 	brojbbportova++;
				 	new str[128], pName[MAX_PLAYER_NAME];
					GetPlayerName(playerid, pName, sizeof(pName));
					format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je napravio port {A13C0A}%s! | Blueberry", pName, pPortIme[playerid]);
					WarningPoruka(str);
					format(str, 256, "%s je napravio port %s!", pName, pPortIme[playerid]);
					WarLog(str);
				}
				if(listitem == 2)
				{
					new Float:X, Float:Y, Float:Z, i = NewID(13), portfile[64];
					GetPlayerPos(playerid, X, Y, Z);
					JBPortInfo[i][jbportIme] = pPortIme[playerid];
					JBPortInfo[i][jbportX] = X;
					JBPortInfo[i][jbportZ] = Y;
					JBPortInfo[i][jbportY] = Z;
					SaveJBPort(i);
					SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste napravili port!");
					format(portfile, sizeof(portfile), JBPORTPATH, i);
				 	INI_ParseFile(portfile, "LoadJBPorts", .bExtra = true, .extra = i);
				 	brojjbportova++;
				 	new str[128], pName[MAX_PLAYER_NAME];
					GetPlayerName(playerid, pName, sizeof(pName));
					format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je napravio port {A13C0A}%s! | Poslovi", pName, pPortIme[playerid]);
					WarningPoruka(str);
					format(str, 256, "%s je napravio port %s!", pName, pPortIme[playerid]);
					WarLog(str);
				}
				if(listitem == 3)
				{
					new Float:X, Float:Y, Float:Z, i = NewID(14), portfile[64];
					GetPlayerPos(playerid, X, Y, Z);
					ORGPortInfo[i][orgportIme] = pPortIme[playerid];
					ORGPortInfo[i][orgportX] = X;
					ORGPortInfo[i][orgportZ] = Y;
					ORGPortInfo[i][orgportY] = Z;
					SaveORGPort(i);
					SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste napravili port!");
					format(portfile, sizeof(portfile), ORGPORTPATH, i);
				 	INI_ParseFile(portfile, "LoadORGPorts", .bExtra = true, .extra = i);
				 	brojorgportova++;
				 	new str[128], pName[MAX_PLAYER_NAME];
					GetPlayerName(playerid, pName, sizeof(pName));
					format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je napravio port {A13C0A}%s! | Organizacije", pName, pPortIme[playerid]);
					WarningPoruka(str);
					format(str, 256, "%s je napravio port %s!", pName, pPortIme[playerid]);
					WarLog(str);
				}
				if(listitem == 4)
				{
					new Float:X, Float:Y, Float:Z, i = NewID(16), portfile[64];
					GetPlayerPos(playerid, X, Y, Z);
					OSPortInfo[i][osportIme] = pPortIme[playerid];
					OSPortInfo[i][osportX] = X;
					OSPortInfo[i][osportZ] = Y;
					OSPortInfo[i][osportY] = Z;
					SaveOSPort(i);
					SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste napravili port!");
					format(portfile, sizeof(portfile), OSPORTPATH, i);
				 	INI_ParseFile(portfile, "LoadOSPorts", .bExtra = true, .extra = i);
				 	brojostalihportova++;
				 	new str[128], pName[MAX_PLAYER_NAME];
					GetPlayerName(playerid, pName, sizeof(pName));
					format(str, 256, "{FFFFFF}Admin{A13C0A} %s {FFFFFF}je napravio port {A13C0A}%s! | Ostalo", pName, pPortIme[playerid]);
					WarningPoruka(str);
					format(str, 256, "%s je napravio port %s!", pName, pPortIme[playerid]);
					WarLog(str);
				}
			}
		}
	    case DIALOG_GATEPERM:
	    {
	        if(response)
	        {
	            new id = listitem+1;
	            GateInfo[editagate[playerid]][gPerm] = id;
	            if(id == 4)
	            {
	                SPD(playerid, DIALOG_GATEORGID, DIALOG_STYLE_INPUT, "{1985A6}ID Organizacije", "{FFFFFF}Unesite {1985A6}id{FFFFFF} organizacije za gate:", "{1985A6}Potvrdi", "");
	            }
	            else SPD(playerid, DIALOG_GATEINFO, DIALOG_STYLE_MSGBOX, "{1985A6}Info", "{FFFFFF}Da li ste sigurni da zelite da napravite gate?", "{1985A6}Potvrdi", "");
	        }
	    }
	    case DIALOG_ORGINVITE:
	    {
	    	if(response)
	    	{
	    		new pName[MAX_PLAYER_NAME], str[256];
	    		if(pozvanuorg[playerid] == 0) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Niste pozvani u organizaciju!");
				GetPlayerName(playerid, pName, sizeof(pName));
				format(str, 256, "{01610E}[Organizacija]: {FFFFFF}Igrac {01610E}%s {FFFFFF}je prihvatio poziv i postao novi clan vase organizacije!", pName);
				for(new i = 0; i < MAX_PLAYERS; i++)
				{
					if(PlayerInfo[i][pOrg] == pozvanuorg[playerid] && ulogovan[i])
					{
						SCM(i, -1, str);
					}
				}
				PlayerInfo[playerid][pOrg] = pozvanuorg[playerid];
				pozvanuorg[playerid] = 0;
				PlayerInfo[playerid][pRank] = 1;
				SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Cestitamo, uspesno ste prihvatili poziv i postali novi clan organizacije! Zelimo vam ugodnu igru!");
				SetPlayerSkin(playerid, OrgInfo[PlayerInfo[playerid][pOrg]][orgRank1Skin]);
	    	}
	    	else
	    	{
	    		SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Uspesno ste odbili poziv u organizaciju!");
	    		pozvanuorg[playerid] = 0;
	    	}
	    }
	    case DIALOG_GATEORGID:
	    {
	        if(response)
	        {
	            new id = strval(inputtext);
	            GateInfo[editagate[playerid]][gOrgID] = id;
	            SPD(playerid, DIALOG_GATEINFO, DIALOG_STYLE_MSGBOX, "{1985A6}Info", "{FFFFFF}Da li ste sigurni da zelite da napravite gate?", "{1985A6}Potvrdi", "");
	        }
	    }
	    case DIALOG_GATEINFO:
	    {
	        if(response)
	        {
	            gatefaza[playerid] = 2;
	            editing[playerid] = 2;
	            EditObject(playerid, gateObj[editagate[playerid]]);
	            SCM(playerid, -1, "{1985A6}[Server]: {FFFFFF}Postavite gate tako da bude otvoren!");
	        }
	    }
	    case DIALOG_CHANGEORG:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	            	SPD(playerid, DIALOG_COI, DIALOG_STYLE_INPUT, "{1985A6}Ime Organizacije", "{FFFFFF}Unesite novo ime organizacije:", "{FFFFFF}Potvrdi", "{FFFFFF}Odustani");
	            }
	            if(listitem == 1)
	            {
	            	SPD(playerid, DIALOG_COD, DIALOG_STYLE_MSGBOX, "{1985A6}Tip Organizacije", "{FFFFFF}Izaberite tip", "{FFFFFF}Drzavna", "{FFFFFF}Ilegalna");
	            }
	            if(listitem == 2)
	            {
	            	SPD(playerid, DIALOG_OLRN, DIALOG_STYLE_INPUT, "{1985A6}Ime Ranka Lidera", "{FFFFFF}Unesite novo ime ranka lidera:", "{FFFFFF}Potvrdi", "{FFFFFF}Odustani");
	            }
	            if(listitem == 3)
	            {
	            	SPD(playerid, DIALOG_COR1, DIALOG_STYLE_INPUT, "{1985A6}Ime Ranka 1", "{FFFFFF}Unesite novo ime ranka lidera:", "{FFFFFF}Potvrdi", "{FFFFFF}Odustani");
	            }
	            if(listitem == 4)
	            {
	            	SPD(playerid, DIALOG_COR2, DIALOG_STYLE_INPUT, "{1985A6}Ime Ranka 2", "{FFFFFF}Unesite novo ime ranka lidera:", "{FFFFFF}Potvrdi", "{FFFFFF}Odustani");
	            }
	            if(listitem == 5)
	            {
	            	SPD(playerid, DIALOG_COR3, DIALOG_STYLE_INPUT, "{1985A6}Ime Ranka 3", "{FFFFFF}Unesite novo ime ranka lidera:", "{FFFFFF}Potvrdi", "{FFFFFF}Odustani");
	            }
	            if(listitem == 6)
	            {
	            	SPD(playerid, DIALOG_COR4, DIALOG_STYLE_INPUT, "{1985A6}Ime Ranka 4", "{FFFFFF}Unesite novo ime ranka lidera:", "{FFFFFF}Potvrdi", "{FFFFFF}Odustani");
	            }
	            if(listitem == 7)
	            {
	            	SPD(playerid, DIALOG_COR5, DIALOG_STYLE_INPUT, "{1985A6}Ime Ranka 5", "{FFFFFF}Unesite novo ime ranka lidera:", "{FFFFFF}Potvrdi", "{FFFFFF}Odustani");
	            }
	            if(listitem == 8)
	            {
	            	SPD(playerid, DIALOG_COR6, DIALOG_STYLE_INPUT, "{1985A6}Ime Ranka 6", "{FFFFFF}Unesite novo ime ranka lidera:", "{FFFFFF}Potvrdi", "{FFFFFF}Odustani");
	            }
	            if(listitem == 9)
	            {
	            	SPD(playerid, DIALOG_COR7, DIALOG_STYLE_INPUT, "{1985A6}Ime Ranka 7", "{FFFFFF}Unesite novo ime ranka lidera:", "{FFFFFF}Potvrdi", "{FFFFFF}Odustani");
	            }
	            if(listitem == 10)
	            {
	            	SPD(playerid, DIALOG_OLRS, DIALOG_STYLE_INPUT, "{1985A6}ID Leader Skina", "{FFFFFF}Unesite ID leader skina:", "{FFFFFF}Potvrdi", "{FFFFFF}Odustani");
	            }
	            if(listitem == 11)
	            {
	            	SPD(playerid, DIALOG_CORS1, DIALOG_STYLE_INPUT, "{1985A6}ID Rank 1 Skina", "{FFFFFF}Unesite ID rank 1 skina:", "{FFFFFF}Potvrdi", "{FFFFFF}Odustani");
	            }
	            if(listitem == 12)
	            {
	            	SPD(playerid, DIALOG_CORS2, DIALOG_STYLE_INPUT, "{1985A6}ID Rank 2 Skina", "{FFFFFF}Unesite ID rank 2 skina:", "{FFFFFF}Potvrdi", "{FFFFFF}Odustani");
	            }
	            if(listitem == 13)
	            {
	            	SPD(playerid, DIALOG_CORS3, DIALOG_STYLE_INPUT, "{1985A6}ID Rank 3 Skina", "{FFFFFF}Unesite ID rank 3 skina:", "{FFFFFF}Potvrdi", "{FFFFFF}Odustani");
	            }
	            if(listitem == 14)
	            {
	            	SPD(playerid, DIALOG_CORS4, DIALOG_STYLE_INPUT, "{1985A6}ID Rank 4 Skina", "{FFFFFF}Unesite ID rank 4 skina:", "{FFFFFF}Potvrdi", "{FFFFFF}Odustani");
	            }
	            if(listitem == 15)
	            {
	            	SPD(playerid, DIALOG_CORS5, DIALOG_STYLE_INPUT, "{1985A6}ID Rank 5 Skina", "{FFFFFF}Unesite ID rank 5 skina:", "{FFFFFF}Potvrdi", "{FFFFFF}Odustani");
	            }
	            if(listitem == 16)
	            {
	            	SPD(playerid, DIALOG_CORS6, DIALOG_STYLE_INPUT, "{1985A6}ID Rank 6 Skina", "{FFFFFF}Unesite ID rank 6 skina:", "{FFFFFF}Potvrdi", "{FFFFFF}Odustani");
	            }
	            if(listitem == 17)
	            {
	            	SPD(playerid, DIALOG_CORS7, DIALOG_STYLE_INPUT, "{1985A6}ID Rank 7 Skina", "{FFFFFF}Unesite ID rank 7 skina:", "{FFFFFF}Potvrdi", "{FFFFFF}Odustani");
	            }
	        }
	    }
	    case DIALOG_COI:
	    {
	        if(response)
	        {
	        	new str[128];
	        	format(str, 128, "%s", inputtext);
	        	OrgInfo[chorg[playerid]][orgIme] = str;
	        	SaveOrg(chorg[playerid]);
	        }
	        SCM(playerid, -1, "{1985A6}[ChangeOrg]: {FFFFFF}Promene su uspesne!");
	        SPD(playerid, DIALOG_CHANGEORG, DIALOG_STYLE_LIST, "{1985A6}Menjanje organizacije", "{FFFFFF}Ime\nTip(Drzavna/Ilegalna)\nIme Lider Ranka\nIme ranka 1\nIme ranka 2\nIme ranka 3\nIme ranka 4\nIme ranka 5\nIme ranka 6\nIme ranka 7\nSkin Lidera\nSkin ranka 1\nSkin ranka 2\nSkin ranka 3\nSkin ranka 4\nSkin ranka 5\nSkin ranka 6\nSkin ranka 7", "Potvrdi", "Odustani");
	 	}
	 	case DIALOG_COD:
	    {
	        if(response)
	        {
	        	OrgInfo[chorg[playerid]][orgDrzavna] = 1;
	        }
	        else
	        {
	        	OrgInfo[chorg[playerid]][orgDrzavna] = 0;
	        }
	        SCM(playerid, -1, "{1985A6}[ChangeOrg]: {FFFFFF}Promene su uspesne!");
	        SPD(playerid, DIALOG_CHANGEORG, DIALOG_STYLE_LIST, "{1985A6}Menjanje organizacije", "{FFFFFF}Ime\nTip(Drzavna/Ilegalna)\nIme Lider Ranka\nIme ranka 1\nIme ranka 2\nIme ranka 3\nIme ranka 4\nIme ranka 5\nIme ranka 6\nIme ranka 7\nSkin Lidera\nSkin ranka 1\nSkin ranka 2\nSkin ranka 3\nSkin ranka 4\nSkin ranka 5\nSkin ranka 6\nSkin ranka 7", "Potvrdi", "Odustani");
	    }
	    case DIALOG_OLRN:
	    {
	        if(response)
	        {
	        	new str[128];
	        	format(str, 128, "%s", inputtext);
	        	OrgInfo[chorg[playerid]][orgLeaderRankName] = str;
	        	SaveOrg(chorg[playerid]);
	        }
	        SCM(playerid, -1, "{1985A6}[ChangeOrg]: {FFFFFF}Promene su uspesne!");
	        SPD(playerid, DIALOG_CHANGEORG, DIALOG_STYLE_LIST, "{1985A6}Menjanje organizacije", "{FFFFFF}Ime\nTip(Drzavna/Ilegalna)\nIme Lider Ranka\nIme ranka 1\nIme ranka 2\nIme ranka 3\nIme ranka 4\nIme ranka 5\nIme ranka 6\nIme ranka 7\nSkin Lidera\nSkin ranka 1\nSkin ranka 2\nSkin ranka 3\nSkin ranka 4\nSkin ranka 5\nSkin ranka 6\nSkin ranka 7", "Potvrdi", "Odustani");
	 	}
	 	case DIALOG_COR1:
	    {
	        if(response)
	        {
	        	new str[128];
	        	format(str, 128, "%s", inputtext);
	        	OrgInfo[chorg[playerid]][orgRank1] = str;
	        	SaveOrg(chorg[playerid]);
	        }
	        SCM(playerid, -1, "{1985A6}[ChangeOrg]: {FFFFFF}Promene su uspesne!");
	        SPD(playerid, DIALOG_CHANGEORG, DIALOG_STYLE_LIST, "{1985A6}Menjanje organizacije", "{FFFFFF}Ime\nTip(Drzavna/Ilegalna)\nIme Lider Ranka\nIme ranka 1\nIme ranka 2\nIme ranka 3\nIme ranka 4\nIme ranka 5\nIme ranka 6\nIme ranka 7\nSkin Lidera\nSkin ranka 1\nSkin ranka 2\nSkin ranka 3\nSkin ranka 4\nSkin ranka 5\nSkin ranka 6\nSkin ranka 7", "Potvrdi", "Odustani");
	 	}
	 	case DIALOG_COR2:
	    {
	        if(response)
	        {
	        	new str[128];
	        	format(str, 128, "%s", inputtext);
	        	OrgInfo[chorg[playerid]][orgRank2] = str;
	        	SaveOrg(chorg[playerid]);
	        }
	        SCM(playerid, -1, "{1985A6}[ChangeOrg]: {FFFFFF}Promene su uspesne!");
	        SPD(playerid, DIALOG_CHANGEORG, DIALOG_STYLE_LIST, "{1985A6}Menjanje organizacije", "{FFFFFF}Ime\nTip(Drzavna/Ilegalna)\nIme Lider Ranka\nIme ranka 1\nIme ranka 2\nIme ranka 3\nIme ranka 4\nIme ranka 5\nIme ranka 6\nIme ranka 7\nSkin Lidera\nSkin ranka 1\nSkin ranka 2\nSkin ranka 3\nSkin ranka 4\nSkin ranka 5\nSkin ranka 6\nSkin ranka 7", "Potvrdi", "Odustani");
	 	}
	 	case DIALOG_COR3:
	    {
	        if(response)
	        {
	        	new str[128];
	        	format(str, 128, "%s", inputtext);
	        	OrgInfo[chorg[playerid]][orgRank3] = str;
	        	SaveOrg(chorg[playerid]);
	        }
	        SCM(playerid, -1, "{1985A6}[ChangeOrg]: {FFFFFF}Promene su uspesne!");
	        SPD(playerid, DIALOG_CHANGEORG, DIALOG_STYLE_LIST, "{1985A6}Menjanje organizacije", "{FFFFFF}Ime\nTip(Drzavna/Ilegalna)\nIme Lider Ranka\nIme ranka 1\nIme ranka 2\nIme ranka 3\nIme ranka 4\nIme ranka 5\nIme ranka 6\nIme ranka 7\nSkin Lidera\nSkin ranka 1\nSkin ranka 2\nSkin ranka 3\nSkin ranka 4\nSkin ranka 5\nSkin ranka 6\nSkin ranka 7", "Potvrdi", "Odustani");
	 	}
	 	case DIALOG_COR4:
	    {
	        if(response)
	        {
	        	new str[128];
	        	format(str, 128, "%s", inputtext);
	        	OrgInfo[chorg[playerid]][orgRank4] = str;
	        	SaveOrg(chorg[playerid]);
	        }
	        SCM(playerid, -1, "{1985A6}[ChangeOrg]: {FFFFFF}Promene su uspesne!");
	        SPD(playerid, DIALOG_CHANGEORG, DIALOG_STYLE_LIST, "{1985A6}Menjanje organizacije", "{FFFFFF}Ime\nTip(Drzavna/Ilegalna)\nIme Lider Ranka\nIme ranka 1\nIme ranka 2\nIme ranka 3\nIme ranka 4\nIme ranka 5\nIme ranka 6\nIme ranka 7\nSkin Lidera\nSkin ranka 1\nSkin ranka 2\nSkin ranka 3\nSkin ranka 4\nSkin ranka 5\nSkin ranka 6\nSkin ranka 7", "Potvrdi", "Odustani");
	 	}
	 	case DIALOG_COR5:
	    {
	        if(response)
	        {
	        	new str[128];
	        	format(str, 128, "%s", inputtext);
	        	OrgInfo[chorg[playerid]][orgRank5] = str;
	        	SaveOrg(chorg[playerid]);
	        }
	        SCM(playerid, -1, "{1985A6}[ChangeOrg]: {FFFFFF}Promene su uspesne!");
	        SPD(playerid, DIALOG_CHANGEORG, DIALOG_STYLE_LIST, "{1985A6}Menjanje organizacije", "{FFFFFF}Ime\nTip(Drzavna/Ilegalna)\nIme Lider Ranka\nIme ranka 1\nIme ranka 2\nIme ranka 3\nIme ranka 4\nIme ranka 5\nIme ranka 6\nIme ranka 7\nSkin Lidera\nSkin ranka 1\nSkin ranka 2\nSkin ranka 3\nSkin ranka 4\nSkin ranka 5\nSkin ranka 6\nSkin ranka 7", "Potvrdi", "Odustani");
	 	}
	 	case DIALOG_COR6:
	    {
	        if(response)
	        {
	        	new str[128];
	        	format(str, 128, "%s", inputtext);
	        	OrgInfo[chorg[playerid]][orgRank6] = str;
	        	SaveOrg(chorg[playerid]);
	        }
	        SCM(playerid, -1, "{1985A6}[ChangeOrg]: {FFFFFF}Promene su uspesne!");
	        SPD(playerid, DIALOG_CHANGEORG, DIALOG_STYLE_LIST, "{1985A6}Menjanje organizacije", "{FFFFFF}Ime\nTip(Drzavna/Ilegalna)\nIme Lider Ranka\nIme ranka 1\nIme ranka 2\nIme ranka 3\nIme ranka 4\nIme ranka 5\nIme ranka 6\nIme ranka 7\nSkin Lidera\nSkin ranka 1\nSkin ranka 2\nSkin ranka 3\nSkin ranka 4\nSkin ranka 5\nSkin ranka 6\nSkin ranka 7", "Potvrdi", "Odustani");
	 	}
	 	case DIALOG_COR7:
	    {
	        if(response)
	        {
	        	new str[128];
	        	format(str, 128, "%s", inputtext);
	        	OrgInfo[chorg[playerid]][orgRank7] = str;
	        	SaveOrg(chorg[playerid]);
	        }
	        SCM(playerid, -1, "{1985A6}[ChangeOrg]: {FFFFFF}Promene su uspesne!");
	        SPD(playerid, DIALOG_CHANGEORG, DIALOG_STYLE_LIST, "{1985A6}Menjanje organizacije", "{FFFFFF}Ime\nTip(Drzavna/Ilegalna)\nIme Lider Ranka\nIme ranka 1\nIme ranka 2\nIme ranka 3\nIme ranka 4\nIme ranka 5\nIme ranka 6\nIme ranka 7\nSkin Lidera\nSkin ranka 1\nSkin ranka 2\nSkin ranka 3\nSkin ranka 4\nSkin ranka 5\nSkin ranka 6\nSkin ranka 7", "Potvrdi", "Odustani");
	 	}
	 	case DIALOG_OLRS:
	    {
	        if(response)
	        {
	        	OrgInfo[chorg[playerid]][orgLeaderSkin] = strval(inputtext);
	        	SaveOrg(chorg[playerid]);
	        }
	        SCM(playerid, -1, "{1985A6}[ChangeOrg]: {FFFFFF}Promene su uspesne!");
	        SPD(playerid, DIALOG_CHANGEORG, DIALOG_STYLE_LIST, "{1985A6}Menjanje organizacije", "{FFFFFF}Ime\nTip(Drzavna/Ilegalna)\nIme Lider Ranka\nIme ranka 1\nIme ranka 2\nIme ranka 3\nIme ranka 4\nIme ranka 5\nIme ranka 6\nIme ranka 7\nSkin Lidera\nSkin ranka 1\nSkin ranka 2\nSkin ranka 3\nSkin ranka 4\nSkin ranka 5\nSkin ranka 6\nSkin ranka 7", "Potvrdi", "Odustani");
	 	}
	 	case DIALOG_CORS1:
	    {
	        if(response)
	        {
	        	OrgInfo[chorg[playerid]][orgRank1Skin] = strval(inputtext);
	        	SaveOrg(chorg[playerid]);
	        }
	        SCM(playerid, -1, "{1985A6}[ChangeOrg]: {FFFFFF}Promene su uspesne!");
	        SPD(playerid, DIALOG_CHANGEORG, DIALOG_STYLE_LIST, "{1985A6}Menjanje organizacije", "{FFFFFF}Ime\nTip(Drzavna/Ilegalna)\nIme Lider Ranka\nIme ranka 1\nIme ranka 2\nIme ranka 3\nIme ranka 4\nIme ranka 5\nIme ranka 6\nIme ranka 7\nSkin Lidera\nSkin ranka 1\nSkin ranka 2\nSkin ranka 3\nSkin ranka 4\nSkin ranka 5\nSkin ranka 6\nSkin ranka 7", "Potvrdi", "Odustani");
	 	}
	 	case DIALOG_CORS2:
	    {
	        if(response)
	        {
	        	OrgInfo[chorg[playerid]][orgRank2Skin] = strval(inputtext);
	        	SaveOrg(chorg[playerid]);
	        }
	        SCM(playerid, -1, "{1985A6}[ChangeOrg]: {FFFFFF}Promene su uspesne!");
	        SPD(playerid, DIALOG_CHANGEORG, DIALOG_STYLE_LIST, "{1985A6}Menjanje organizacije", "{FFFFFF}Ime\nTip(Drzavna/Ilegalna)\nIme Lider Ranka\nIme ranka 1\nIme ranka 2\nIme ranka 3\nIme ranka 4\nIme ranka 5\nIme ranka 6\nIme ranka 7\nSkin Lidera\nSkin ranka 1\nSkin ranka 2\nSkin ranka 3\nSkin ranka 4\nSkin ranka 5\nSkin ranka 6\nSkin ranka 7", "Potvrdi", "Odustani");
	 	}
	 	case DIALOG_CORS3:
	    {
	        if(response)
	        {
	        	OrgInfo[chorg[playerid]][orgRank3Skin] = strval(inputtext);
	        	SaveOrg(chorg[playerid]);
	        }
	        SCM(playerid, -1, "{1985A6}[ChangeOrg]: {FFFFFF}Promene su uspesne!");
	        SPD(playerid, DIALOG_CHANGEORG, DIALOG_STYLE_LIST, "{1985A6}Menjanje organizacije", "{FFFFFF}Ime\nTip(Drzavna/Ilegalna)\nIme Lider Ranka\nIme ranka 1\nIme ranka 2\nIme ranka 3\nIme ranka 4\nIme ranka 5\nIme ranka 6\nIme ranka 7\nSkin Lidera\nSkin ranka 1\nSkin ranka 2\nSkin ranka 3\nSkin ranka 4\nSkin ranka 5\nSkin ranka 6\nSkin ranka 7", "Potvrdi", "Odustani");
	 	}
	 	case DIALOG_CORS4:
	    {
	        if(response)
	        {
	        	OrgInfo[chorg[playerid]][orgRank4Skin] = strval(inputtext);
	        	SaveOrg(chorg[playerid]);
	        }
	        SCM(playerid, -1, "{1985A6}[ChangeOrg]: {FFFFFF}Promene su uspesne!");
	        SPD(playerid, DIALOG_CHANGEORG, DIALOG_STYLE_LIST, "{1985A6}Menjanje organizacije", "{FFFFFF}Ime\nTip(Drzavna/Ilegalna)\nIme Lider Ranka\nIme ranka 1\nIme ranka 2\nIme ranka 3\nIme ranka 4\nIme ranka 5\nIme ranka 6\nIme ranka 7\nSkin Lidera\nSkin ranka 1\nSkin ranka 2\nSkin ranka 3\nSkin ranka 4\nSkin ranka 5\nSkin ranka 6\nSkin ranka 7", "Potvrdi", "Odustani");
	 	}
	 	case DIALOG_CORS5:
	    {
	        if(response)
	        {
	        	OrgInfo[chorg[playerid]][orgRank5Skin] = strval(inputtext);
	        	SaveOrg(chorg[playerid]);
	        }
	        SCM(playerid, -1, "{1985A6}[ChangeOrg]: {FFFFFF}Promene su uspesne!");
	        SPD(playerid, DIALOG_CHANGEORG, DIALOG_STYLE_LIST, "{1985A6}Menjanje organizacije", "{FFFFFF}Ime\nTip(Drzavna/Ilegalna)\nIme Lider Ranka\nIme ranka 1\nIme ranka 2\nIme ranka 3\nIme ranka 4\nIme ranka 5\nIme ranka 6\nIme ranka 7\nSkin Lidera\nSkin ranka 1\nSkin ranka 2\nSkin ranka 3\nSkin ranka 4\nSkin ranka 5\nSkin ranka 6\nSkin ranka 7", "Potvrdi", "Odustani");
	 	}
	 	case DIALOG_CORS6:
	    {
	        if(response)
	        {
	        	OrgInfo[chorg[playerid]][orgRank6Skin] = strval(inputtext);
	        	SaveOrg(chorg[playerid]);
	        }
	        SCM(playerid, -1, "{1985A6}[ChangeOrg]: {FFFFFF}Promene su uspesne!");
	        SPD(playerid, DIALOG_CHANGEORG, DIALOG_STYLE_LIST, "{1985A6}Menjanje organizacije", "{FFFFFF}Ime\nTip(Drzavna/Ilegalna)\nIme Lider Ranka\nIme ranka 1\nIme ranka 2\nIme ranka 3\nIme ranka 4\nIme ranka 5\nIme ranka 6\nIme ranka 7\nSkin Lidera\nSkin ranka 1\nSkin ranka 2\nSkin ranka 3\nSkin ranka 4\nSkin ranka 5\nSkin ranka 6\nSkin ranka 7", "Potvrdi", "Odustani");
	 	}
	 	case DIALOG_CORS7:
	    {
	        if(response)
	        {
	        	OrgInfo[chorg[playerid]][orgRank7Skin] = strval(inputtext);
	        	SaveOrg(chorg[playerid]);
	        }
	        SPD(playerid, DIALOG_CHANGEORG, DIALOG_STYLE_LIST, "{1985A6}Menjanje organizacije", "{FFFFFF}Ime\nTip(Drzavna/Ilegalna)\nIme Lider Ranka\nIme ranka 1\nIme ranka 2\nIme ranka 3\nIme ranka 4\nIme ranka 5\nIme ranka 6\nIme ranka 7\nSkin Lidera\nSkin ranka 1\nSkin ranka 2\nSkin ranka 3\nSkin ranka 4\nSkin ranka 5\nSkin ranka 6\nSkin ranka 7", "Potvrdi", "Odustani");
	 		SCM(playerid, -1, "{1985A6}[ChangeOrg]: {FFFFFF}Promene su uspesne!");
	 	}
	    case DIALOG_DOZVOLE:
	    {
	        if(response)
	        {
	            if(listitem == 0)
	            {
	            	if(PlayerInfo[playerid][pAL] != 0) return SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Vec imate dozvolu za ovu kategoriju!");
	            	if(PlayerInfo[playerid][pLevel] >= 3 && GetPlayerMoney(playerid) < 10000) return SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Nemate dovoljno novca!");
	            	if(PlayerInfo[playerid][pLevel] >= 3) taz_GivePlayerMoney(playerid, -10000);
	            	SCM(playerid, -1, "{1985A6}[Auto Skola]: {FFFFFF}Uspesno ste uplatili polaganje, sada morate da odgovorite tacno na ponudjena pitanja!");
	            	obadirdozvole[playerid] = listitem+1;
	            	if(PlayerInfo[playerid][pLevel] >= 3) {FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=5000;} else {FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=2000;}
	            	SPD(playerid, DIALOG_PITANJE1, DIALOG_STYLE_MSGBOX, "{1985A6}Pitanje", "{FFFFFF}Koja je maksimalna brzina kretanja vozila u naseljenom mestu?", "{FFFFFF}50km/h", "{FFFFFF}80km/h");
	            }
	            if(listitem == 1)
	            {
	            	if(PlayerInfo[playerid][pBL] != 0) return SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Vec imate dozvolu za ovu kategoriju!");
	            	if(PlayerInfo[playerid][pLevel] >= 3 && GetPlayerMoney(playerid) < 20000) return SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Nemate dovoljno novca!");
	            	if(PlayerInfo[playerid][pLevel] >= 3) taz_GivePlayerMoney(playerid, -20000);
	            	SCM(playerid, -1, "{1985A6}[Auto Skola]: {FFFFFF}Uspesno ste uplatili polaganje, sada morate da odgovorite tacno na ponudjena pitanja!");
	            	obadirdozvole[playerid] = listitem+1;
	            	if(PlayerInfo[playerid][pLevel] >= 3) {FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=10000;} else {FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=2000;}
	            	SPD(playerid, DIALOG_PITANJE1, DIALOG_STYLE_MSGBOX, "{1985A6}Pitanje", "{FFFFFF}Koja je maksimalna brzina kretanja vozila u naseljenom mestu?", "{FFFFFF}50km/h", "{FFFFFF}80km/h");
	            }
	            if(listitem == 2)
	            {
	            	if(PlayerInfo[playerid][pCL] != 0) return SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Vec imate dozvolu za ovu kategoriju!");
	            	if(PlayerInfo[playerid][pLevel] >= 3 && GetPlayerMoney(playerid) < 20000) return SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Nemate dovoljno novca!");
	            	if(PlayerInfo[playerid][pLevel] >= 3) taz_GivePlayerMoney(playerid, -20000);
	            	SCM(playerid, -1, "{1985A6}[Auto Skola]: {FFFFFF}Uspesno ste uplatili polaganje, sada morate da odgovorite tacno na ponudjena pitanja!");
	            	obadirdozvole[playerid] = listitem+1;
	            	if(PlayerInfo[playerid][pLevel] >= 3) {FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=10000;} else {FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=2000;}
	            	SPD(playerid, DIALOG_PITANJE1, DIALOG_STYLE_MSGBOX, "{1985A6}Pitanje", "{FFFFFF}Koja je maksimalna brzina kretanja vozila u naseljenom mestu?", "{FFFFFF}50km/h", "{FFFFFF}80km/h");
	            }
	            if(listitem == 3)
	            {
	            	if(PlayerInfo[playerid][pDL] != 0) return SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Vec imate dozvolu za ovu kategoriju!");
	            	if(PlayerInfo[playerid][pLevel] >= 3 && GetPlayerMoney(playerid) < 20000) return SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Nemate dovoljno novca!");
	            	if(PlayerInfo[playerid][pLevel] >= 3) taz_GivePlayerMoney(playerid, -20000);
	            	SCM(playerid, -1, "{1985A6}[Auto Skola]: {FFFFFF}Uspesno ste uplatili polaganje, sada morate da odgovorite tacno na ponudjena pitanja!");
	            	obadirdozvole[playerid] = listitem+1;
	            	if(PlayerInfo[playerid][pLevel] >= 3) {FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=10000;} else {FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=2000;}
	            	SPD(playerid, DIALOG_PITANJE1, DIALOG_STYLE_MSGBOX, "{1985A6}Pitanje", "{FFFFFF}Koja je maksimalna brzina kretanja vozila u naseljenom mestu?", "{FFFFFF}50km/h", "{FFFFFF}80km/h");
	            }
	            if(listitem == 4)
	            {
	            	if(PlayerInfo[playerid][pFL] != 0) return SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Vec imate dozvolu za ovu kategoriju!");
	            	if(PlayerInfo[playerid][pLevel] >= 3 && GetPlayerMoney(playerid) < 15000) return SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Nemate dovoljno novca!");
	            	if(PlayerInfo[playerid][pLevel] >= 3) taz_GivePlayerMoney(playerid, -15000);
	            	SCM(playerid, -1, "{1985A6}[Auto Skola]: {FFFFFF}Uspesno ste uplatili polaganje, sada morate da odgovorite tacno na ponudjena pitanja!");
	            	obadirdozvole[playerid] = listitem+1;
	            	if(PlayerInfo[playerid][pLevel] >= 3) {FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=7500;} else {FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=2000;}
	            	SPD(playerid, DIALOG_PITANJE1, DIALOG_STYLE_MSGBOX, "{1985A6}Pitanje", "{FFFFFF}Koja je maksimalna brzina kretanja vozila u naseljenom mestu?", "{FFFFFF}50km/h", "{FFFFFF}80km/h");
	            }
	            if(listitem == 5)
	            {
	            	if(PlayerInfo[playerid][pLetenjeL] != 0) return SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Vec imate dozvolu za ovu kategoriju!");
	            	if(PlayerInfo[playerid][pLevel] >= 3 && GetPlayerMoney(playerid) < 60000) return SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Nemate dovoljno novca!");
	            	if(PlayerInfo[playerid][pLevel] >= 3) taz_GivePlayerMoney(playerid, -60000);
	            	if(PlayerInfo[playerid][pLevel] >= 3) {FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=30000;} else {FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=2000;}
	            	SCM(playerid, -1, "{1985A6}[Auto Skola]: {FFFFFF}Uspesno ste uplatili polaganje, poslati ste na prakticno polaganje letenja!");
	            	PlayerInfo[playerid][pLetenjeL] = 1;
	            	SavePlayer(playerid);
	            }
	            if(listitem == 6)
	            {
	            	if(PlayerInfo[playerid][pBrodL] != 0) return SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Vec imate dozvolu za ovu kategoriju!");
	            	if(PlayerInfo[playerid][pLevel] >= 3 && GetPlayerMoney(playerid) < 40000) return SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Nemate dovoljno novca!");
	            	if(PlayerInfo[playerid][pLevel] >= 3) taz_GivePlayerMoney(playerid, -40000);
	            	if(PlayerInfo[playerid][pLevel] >= 3) {FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=20000;} else {FirmaInfo[GetPlayerVirtualWorld(playerid)][fiKasa]+=2000;}
	            	SCM(playerid, -1, "{1985A6}[Auto Skola]: {FFFFFF}Uspesno ste platili i dobili dozvolu za plovljenje!");
	            	PlayerInfo[playerid][pBrodL] = 1;
	            	SavePlayer(playerid);
	            }
	            pEnterijerAutoSK[playerid] = GetPlayerVirtualWorld(playerid);
	            FirmaInfo[GetPlayerVirtualWorld(playerid)][fiProdukti]--;
	            SaveFirma(GetPlayerVirtualWorld(playerid));
	        }
	    }
	    case DIALOG_PITANJE1:
	    {
	    	if(response)
	        {
	        	SPD(playerid, DIALOG_PITANJE2, DIALOG_STYLE_MSGBOX, "{1985A6}Pitanje", "{FFFFFF}Koja je maksimalna brzina kretanja vozila van naseljenog mesta?", "{FFFFFF}60km/h", "{FFFFFF}80km/h");
	        }
	        else
	        {
	        	SCM(playerid, COLOR_RED, "[Auto Skola]: {FFFFFF}Pogresno ste odgovorili na pitanje, vise srece na narednom polaganju!");
	        }
	    }
	    case DIALOG_PITANJE2:
	    {
	    	if(!response)
	        {
	        	SPD(playerid, DIALOG_PITANJE3, DIALOG_STYLE_MSGBOX, "{1985A6}Pitanje", "{FFFFFF}Da li smete upravljati motornim vozilom kad ste pod dejstvom alkohola?", "{FFFFFF}Da", "{FFFFFF}Ne");
	        }
	        else
	        {
	        	SCM(playerid, COLOR_RED, "[Auto Skola]: {FFFFFF}Pogresno ste odgovorili na pitanje, vise srece na narednom polaganju!");
	        }
	    }
	    case DIALOG_PITANJE3:
	    {
	    	if(!response)
	        {
	        	SPD(playerid, DIALOG_PITANJE4, DIALOG_STYLE_MSGBOX, "{1985A6}Pitanje", "{FFFFFF}Ako semafor radi, a na istoj raskrsnici policajac regulise saobracaj, koga cete poslusati?", "{FFFFFF}Policajca", "{FFFFFF}Semafor");
	        }
	        else
	        {
	        	SCM(playerid, COLOR_RED, "[Auto Skola]: {FFFFFF}Pogresno ste odgovorili na pitanje, vise srece na narednom polaganju!");
	        }
	    }
	    case DIALOG_PITANJE4:
	    {
	    	if(response)
	        {
	        	SPD(playerid, DIALOG_PITANJE5, DIALOG_STYLE_MSGBOX, "{1985A6}Pitanje", "{FFFFFF}Od koliko godina smete samostalno upravljati motornim vozilom?", "{FFFFFF}17", "{FFFFFF}18");
	        }
	        else
	        {
	        	SCM(playerid, COLOR_RED, "[Auto Skola]: {FFFFFF}Pogresno ste odgovorili na pitanje, vise srece na narednom polaganju!");
	        }
	    }
	    case DIALOG_PITANJE5:
	    {
	    	if(!response)
	        {
	        	SCM(playerid, COLOR_RED, "{1985A6}[Auto Skola]: {FFFFFF}Cestitamo, polozili ste teorijski deo!");
	        	if(obadirdozvole[playerid] != 7 && obadirdozvole[playerid] != 6 && obadirdozvole[playerid] != 4 && obadirdozvole[playerid] != 3)
	        	{
	        		new id = NewID(5);
	        		pKazneni[playerid] = 0;
		        	if(IsPlayerInAnyVehicle(playerid)) return SCM(playerid, COLOR_RED, "[Auto Skola]: {FFFFFF}Ne smete biti u vozilu!");
	        		SetPlayerVirtualWorld(playerid, GetPlayerVirtualWorld(playerid)+playerid);
	        		SetPlayerInterior(playerid, 0);
					polaze[playerid] = 1;
					DestroyVehicle(nenapravljenovozilo[id]);
					if(obadirdozvole[playerid] == 1)
					{
						VoziloInfo[id][vID] = 461;
						pvoz[playerid] = AddStaticVehicle(461, -2083.6194,-119.8316,34.8459,180.0, 1, 1);
					}
					if(obadirdozvole[playerid] == 2)
					{
						VoziloInfo[id][vID] = 410;
						pvoz[playerid] = AddStaticVehicle(410, -2083.6194,-119.8316,34.8459,180.0, 1, 1);
					}
					if(obadirdozvole[playerid] == 5)
					{
						VoziloInfo[id][vID] = 531;
						pvoz[playerid] = AddStaticVehicle(531, -2083.6194,-119.8316,34.8459,180.0, 1, 1);
					}
					SetVehicleVirtualWorld(pvoz[playerid], GetPlayerVirtualWorld(playerid));
					VoziloInfo[id][vOwnable] = 0;
					VoziloInfo[id][vCena] = 0;
					VoziloInfo[id][vAutoskola] = 1;
					VoziloInfo[id][vPosaoID] = 0;
					VoziloInfo[id][vOrgID] = 0;
					VoziloInfo[id][vRent] = 0;
					VoziloInfo[id][vAdmin] = 0;
					VoziloInfo[id][vHelper] = 0;
					VoziloInfo[id][vVip] = 0;
					VoziloInfo[id][vPromoter] = 0;
					VoziloInfo[id][vBoja] = 1;
					VoziloInfo[id][vBoja2] = 1;
					VoziloInfo[id][vDozvola] = 0;
					VoziloInfo[id][vX] = -2083.6194;
					VoziloInfo[id][vY] = -119.8316;
					VoziloInfo[id][vZ] = 34.8459;
					SaveVozilo(id);
					StaviLabel(id, pvoz[playerid]);
					SCM(playerid, -1, "{1985A6}[Auto Skola]: {FFFFFF}Uspesno ste prebaceni na poligon, pratite markere kako bi polozili!");
					SCM(playerid, -1, "{1985A6}[Auto Skola]: {FFFFFF}Pazite da ne ostetite vozilo previse inace padate ispit!");
					taz_SetPlayerCheckpoint(playerid, -2083.6140,-136.4295,34.8454, 4.0);
					taz_SetPlayerPos(playerid, -2083.6194,-119.8316,34.8459);
					PutPlayerInVehicle(playerid, pvoz[playerid], 0);
					SetCameraBehindPlayer(playerid);
				}
				if(obadirdozvole[playerid] == 4)
				{
					SCM(playerid, -1, "{1985A6}[Auto Skola]: {FFFFFF}Uspesno ste platili i dobili dozvolu za autobus!");
	            	PlayerInfo[playerid][pDL] = 1;
	            	SavePlayer(playerid);
				}
				if(obadirdozvole[playerid] == 3)
				{
					SCM(playerid, -1, "{DAA520}[Auto Skola]: {FFFFFF}Izadjite iz auto skole i udjite u jedno od vozila za polaganje kako bi nastavili polaganje!");
					ppolaze[playerid] = 1;
					taz_SetPlayerCheckpoint(playerid, -75.8343,1363.3492,9.8693, 4.0);
				}
	        }
	        else
	        {
	        	SCM(playerid, COLOR_RED, "[Auto Skola]: {FFFFFF}Pogresno ste odgovorili na pitanje, vise srece na narednom polaganju!");
	        }
	    }
	    case DIALOG_PORT:
	    {
	    	
	        if(response)
	        {
	        	if(listitem == 0) 
	        	{ 
	        		if(brojfcportova < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Portovi jos nisu napravljeni!");
					new string[2048], text[128];
					for(new i = 1; i <= brojfcportova; i++)
					{
					    format(text, sizeof(text), "{1985A6}[{FFFFFF}%d{1985A6}] - {FFFFFF}%s\n", i, FCPortInfo[i][fcportIme]);
					    strcat(string, text);
					}
	        		ShowPlayerDialog(playerid, DIALOG_PORTFC, DIALOG_STYLE_LIST, "{1985A6}Port - Fort Carson", string, "{1985A6}Izaberi", "{1985A6}Odustani"); 
	        	}
	        	else if (listitem == 1)
	        	{ 
	        		if(brojbbportova < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Portovi jos nisu napravljeni!");
					new string[2048], text[128];
					for(new i = 1; i <= brojbbportova; i++)
					{
					    format(text, sizeof(text), "{1985A6}[{FFFFFF}%d{1985A6}] - {FFFFFF}%s\n", i, BBPortInfo[i][bbportIme]);
					    strcat(string, text);
					}
	        		ShowPlayerDialog(playerid, DIALOG_PORTBB, DIALOG_STYLE_LIST, "{1985A6}Port - Blueberry", string, "{1985A6}Izaberi", "{1985A6}Odustani"); 
	        	}
	        	else if (listitem == 2)
	        	{ 
	        		if(brojjbportova < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Portovi jos nisu napravljeni!");
					new string[2048], text[128];
					for(new i = 1; i <= brojjbportova; i++)
					{
					    format(text, sizeof(text), "{1985A6}[{FFFFFF}%d{1985A6}] - {FFFFFF}%s\n", i, JBPortInfo[i][jbportIme]);
					    strcat(string, text);
					}
	        		ShowPlayerDialog(playerid, DIALOG_PORTJB, DIALOG_STYLE_LIST, "{1985A6}Port - Poslovi", string, "{1985A6}Izaberi", "{1985A6}Odustani"); 
	        	}
	        	else if (listitem == 3)
	        	{ 
	        		if(brojorgportova < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Portovi jos nisu napravljeni!");
					new string[2048], text[128];
					for(new i = 1; i <= brojorgportova; i++)
					{
					    format(text, sizeof(text), "{1985A6}[{FFFFFF}%d{1985A6}] - {FFFFFF}%s\n", i, ORGPortInfo[i][orgportIme]);
					    strcat(string, text);
					}
	        		ShowPlayerDialog(playerid, DIALOG_PORTORG, DIALOG_STYLE_LIST, "{1985A6}Port - Organizacije", string, "{1985A6}Izaberi", "{1985A6}Odustani"); 
	        	}
	        	else
	        	{ 
	        		if(brojostalihportova < 1) return SCM(playerid, COLOR_RED, "[Server]: {FFFFFF}Portovi jos nisu napravljeni!");
					new string[2048], text[128];
					for(new i = 1; i <= brojostalihportova; i++)
					{
					    format(text, sizeof(text), "{1985A6}[{FFFFFF}%d{1985A6}] - {FFFFFF}%s\n", i, OSPortInfo[i][osportIme]);
					    strcat(string, text);
					}
	        		ShowPlayerDialog(playerid, DIALOG_PORTOST, DIALOG_STYLE_LIST, "{1985A6}Port - Ostalo", string, "{1985A6}Izaberi", "{1985A6}Odustani"); 
	        	}
	        }
	    }
	    case DIALOG_VIPPORT:
	    {
	    	if(response)
	    	{
	    		new id = listitem+1, string[128];
	            if(IsPlayerInAnyVehicle(playerid))
	            {
	                SetVehiclePos(GetPlayerVehicleID(playerid), VipPortInfo[id][vipportX], VipPortInfo[id][vipportY], VipPortInfo[id][vipportZ]);
	                PutPlayerInVehicle(playerid, GetPlayerVehicleID(playerid), 0);
	            }
	            else
	            {
	                taz_SetPlayerPos(playerid, VipPortInfo[id][vipportX], VipPortInfo[id][vipportY], VipPortInfo[id][vipportZ]);
	            }
	            format(string, sizeof(string), "{1985A6}[Server]: {FFFFFF}Uspesno ste se portovali na lokaciju {1985A6}%s!", VipPortInfo[id][vipportIme]);
	            SCM(playerid, -1, string);
	            new str[128], pName[MAX_PLAYER_NAME];
				GetPlayerName(playerid, pName, sizeof(pName));
				format(str, 256, "{A13C0A}%s {FFFFFF}se teleportovao na lokaciju %s! [vip port]", pName, VipPortInfo[id][vipportIme]);
				WarningPoruka(str);
				format(str, 256, "%s se teleportovao na lokaciju %s! [vip port]", pName, VipPortInfo[id][vipportIme]);
				WarLog(str);
			}
	    }
	    case DIALOG_PROMPORT:
	    {
	    	if(response)
	    	{
	    		new id = listitem+1, string[128];
	            if(IsPlayerInAnyVehicle(playerid))
	            {
	                SetVehiclePos(GetPlayerVehicleID(playerid), PromPortInfo[id][promportX], PromPortInfo[id][promportY], PromPortInfo[id][promportZ]);
	                PutPlayerInVehicle(playerid, GetPlayerVehicleID(playerid), 0);
	            }
	            else
	            {
	                taz_SetPlayerPos(playerid, PromPortInfo[id][promportX], PromPortInfo[id][promportY], PromPortInfo[id][promportZ]);
	            }
	            format(string, sizeof(string), "{1985A6}[Server]: {FFFFFF}Uspesno ste se portovali na lokaciju {1985A6}%s!", PromPortInfo[id][promportIme]);
	            SCM(playerid, -1, string);
	            new str[128], pName[MAX_PLAYER_NAME];
				GetPlayerName(playerid, pName, sizeof(pName));
				format(str, 256, "{A13C0A}%s {FFFFFF}se teleportovao na lokaciju %s! [vip port]", pName, PromPortInfo[id][promportIme]);
				WarningPoruka(str);
				format(str, 256, "%s se teleportovao na lokaciju %s! [vip port]", pName, PromPortInfo[id][promportIme]);
				WarLog(str);
			}
	    }
	    case DIALOG_PORTFC:
	    {
	    	if(response)
	    	{
	    		new id = listitem+1, string[128];
	            if(IsPlayerInAnyVehicle(playerid))
	            {
	                SetVehiclePos(GetPlayerVehicleID(playerid), FCPortInfo[id][fcportX], FCPortInfo[id][fcportY], FCPortInfo[id][fcportZ]);
	                PutPlayerInVehicle(playerid, GetPlayerVehicleID(playerid), 0);
	            }
	            else
	            {
	                taz_SetPlayerPos(playerid, FCPortInfo[id][fcportX], FCPortInfo[id][fcportY], FCPortInfo[id][fcportZ]);
	            }
	            format(string, sizeof(string), "{1985A6}[Server]: {FFFFFF}Uspesno ste se portovali na lokaciju {1985A6}%s!", FCPortInfo[id][fcportIme]);
	            SCM(playerid, -1, string);
	            new str[128], pName[MAX_PLAYER_NAME];
				GetPlayerName(playerid, pName, sizeof(pName));
				format(str, 256, "{A13C0A}%s {FFFFFF}se teleportovao na lokaciju %s!", pName, FCPortInfo[id][fcportIme]);
				WarningPoruka(str);
				format(str, 256, "%s se teleportovao na lokaciju %s!", pName, FCPortInfo[id][fcportIme]);
				WarLog(str);
			}
	    }
	    case DIALOG_PORTBB:
	    {
	    	if(response)
	    	{
	    		new id = listitem+1, string[128];
	            if(IsPlayerInAnyVehicle(playerid))
	            {
	                SetVehiclePos(GetPlayerVehicleID(playerid), BBPortInfo[id][bbportX], BBPortInfo[id][bbportY], BBPortInfo[id][bbportZ]);
	                PutPlayerInVehicle(playerid, GetPlayerVehicleID(playerid), 0);
	            }
	            else
	            {
	                taz_SetPlayerPos(playerid, BBPortInfo[id][bbportX], BBPortInfo[id][bbportY], BBPortInfo[id][bbportZ]);
	            }
	            format(string, sizeof(string), "{1985A6}[Server]: {FFFFFF}Uspesno ste se portovali na likaciju {1985A6}%s!", BBPortInfo[id][bbportIme]);
	            SCM(playerid, -1, string);
	            new str[128], pName[MAX_PLAYER_NAME];
				GetPlayerName(playerid, pName, sizeof(pName));
				format(str, 256, "{A13C0A}%s {FFFFFF}se teleportovao na lokaciju %s!", pName, BBPortInfo[id][bbportIme]);
				WarningPoruka(str);
				format(str, 256, "%s se teleportovao na lokaciju %s!", pName, BBPortInfo[id][bbportIme]);
				WarLog(str);
			}
	    }
	    case DIALOG_PORTJB:
	    {
	    	if(response)
	    	{
	    		new id = listitem+1, string[128];
	            if(IsPlayerInAnyVehicle(playerid))
	            {
	                SetVehiclePos(GetPlayerVehicleID(playerid), JBPortInfo[id][jbportX], JBPortInfo[id][jbportY], JBPortInfo[id][jbportZ]);
	                PutPlayerInVehicle(playerid, GetPlayerVehicleID(playerid), 0);
	            }
	            else
	            {
	                taz_SetPlayerPos(playerid, JBPortInfo[id][jbportX], JBPortInfo[id][jbportY], JBPortInfo[id][jbportZ]);
	            }
	            format(string, sizeof(string), "{1985A6}[Server]: {FFFFFF}Uspesno ste se portovali na likaciju {1985A6}%s!", JBPortInfo[id][jbportIme]);
	            SCM(playerid, -1, string);
	            new str[128], pName[MAX_PLAYER_NAME];
				GetPlayerName(playerid, pName, sizeof(pName));
				format(str, 256, "{A13C0A}%s {FFFFFF}se teleportovao na lokaciju %s!", pName, JBPortInfo[id][jbportIme]);
				WarningPoruka(str);
				format(str, 256, "%s se teleportovao na lokaciju %s!", pName, JBPortInfo[id][jbportIme]);
				WarLog(str);
			}
	    }
	    case DIALOG_PORTORG:
	    {
	    	if(response)
	    	{
	    		new id = listitem+1, string[128];
	            if(IsPlayerInAnyVehicle(playerid))
	            {
	                SetVehiclePos(GetPlayerVehicleID(playerid), ORGPortInfo[id][orgportX], ORGPortInfo[id][orgportY], ORGPortInfo[id][orgportZ]);
	                PutPlayerInVehicle(playerid, GetPlayerVehicleID(playerid), 0);
	            }
	            else
	            {
	                taz_SetPlayerPos(playerid, ORGPortInfo[id][orgportX], ORGPortInfo[id][orgportY], ORGPortInfo[id][orgportZ]);
	            }
	            format(string, sizeof(string), "{1985A6}[Server]: {FFFFFF}Uspesno ste se portovali na likaciju {1985A6}%s!", ORGPortInfo[id][orgportIme]);
	            SCM(playerid, -1, string);
	            new str[128], pName[MAX_PLAYER_NAME];
				GetPlayerName(playerid, pName, sizeof(pName));
				format(str, 256, "{A13C0A}%s {FFFFFF}se teleportovao na lokaciju %s!", pName, ORGPortInfo[id][orgportIme]);
				WarningPoruka(str);
				format(str, 256, "%s se teleportovao na lokaciju %s!", pName, ORGPortInfo[id][orgportIme]);
				WarLog(str);
			}
	    }
	    case DIALOG_PORTOST:
	    {
	    	if(response)
	    	{
	    		new id = listitem+1, string[128];
	            if(IsPlayerInAnyVehicle(playerid))
	            {
	                SetVehiclePos(GetPlayerVehicleID(playerid), OSPortInfo[id][osportX], OSPortInfo[id][osportY], OSPortInfo[id][osportZ]);
	                PutPlayerInVehicle(playerid, GetPlayerVehicleID(playerid), 0);
	            }
	            else
	            {
	                taz_SetPlayerPos(playerid, OSPortInfo[id][osportX], OSPortInfo[id][osportY], OSPortInfo[id][osportZ]);
	            }
	            format(string, sizeof(string), "{1985A6}[Server]: {FFFFFF}Uspesno ste se portovali na likaciju {1985A6}%s!", OSPortInfo[id][osportIme]);
	            SCM(playerid, -1, string);
	            new str[128], pName[MAX_PLAYER_NAME];
				GetPlayerName(playerid, pName, sizeof(pName));
				format(str, 256, "{A13C0A} %s {FFFFFF}se teleportovao na lokaciju %s!", pName, OSPortInfo[id][osportIme]);
				WarningPoruka(str);
				format(str, 256, "%s se teleportovao na lokaciju %s!", pName, OSPortInfo[id][osportIme]);
				WarLog(str);
			}
	    }
	    case DIALOG_BUSVOZAC:
	    {
	        if(response)
	        {
	            vrstaposla[playerid] = listitem+1;
	            SCM(playerid, -1, "{DAA520}[Posao]: {FFFFFF}Uspesno ste pokrenuli posao vozaca autobusa! Pratite lokacije na mapi kako bi prevezli putnike!");
				radi[playerid] = 1;
				zarada[playerid] = 0;
				pJobProgress[playerid] = 0;
				taz_SetPlayerCheckpoint(playerid, -155.0154,1201.9047,19.5938, 4.0);
	        }
	    }
	    case DIALOG_AUTOMAT:
	    {
	        if(response)
	        {
	            new id = listitem+1, string[128];
	            if(id == 1)
	            {
	            	if(GetPlayerMoney(playerid) < 50) return SCM(playerid, COLOR_RED, "[Automat]: {FFFFFF}Nemate dovoljno novca kod sebe!");
	            	format(string, sizeof(string), "{1985A6}[Automat]: {FFFFFF}Uspesno ste kupili i pojeli {1985A6}snickers cokoladicu{FFFFFF} i sada ste manje gladni!");
	            	taz_GivePlayerMoney(playerid, -50);
	            	if(PlayerInfo[playerid][pGlad] < 75)
	            	{PlayerInfo[playerid][pGlad] += 25;}
	            	else
	            	{PlayerInfo[playerid][pGlad] = 99;}
	            	ApplyAnimation(playerid,"VENDING","vend_eat1_P",4.1,0, 0, 0, 0, 4330, 1);
	            }
	            if(id == 2)
	            {
	            	if(GetPlayerMoney(playerid) < 40) return SCM(playerid, COLOR_RED, "[Automat]: {FFFFFF}Nemate dovoljno novca kod sebe!");
	            	format(string, sizeof(string), "{1985A6}[Automat]: {FFFFFF}Uspesno ste kupili i pojeli {1985A6}kesicu cipsa{FFFFFF} i sada ste manje gladni!");
	            	taz_GivePlayerMoney(playerid, -40);
	            	if(PlayerInfo[playerid][pGlad] < 75)
	            	{PlayerInfo[playerid][pGlad] += 25;}
	            	else
	            	{PlayerInfo[playerid][pGlad] = 99;}
	            	ApplyAnimation(playerid,"VENDING","vend_eat1_P",4.1,0, 0, 0, 0, 4330, 1);
	            }
	            if(id == 3)
	            {
	            	if(GetPlayerMoney(playerid) < 60) return SCM(playerid, COLOR_RED, "[Automat]: {FFFFFF}Nemate dovoljno novca kod sebe!");
	            	format(string, sizeof(string), "{1985A6}[Automat]: {FFFFFF}Uspesno ste kupili i pojeli {1985A6}kikiriki{FFFFFF} i sada ste manje gladni!");
	            	taz_GivePlayerMoney(playerid, -60);
	            	if(PlayerInfo[playerid][pGlad] < 75)
	            	{PlayerInfo[playerid][pGlad] += 25;}
	            	else
	            	{PlayerInfo[playerid][pGlad] = 99;}
	            	ApplyAnimation(playerid,"VENDING","vend_eat1_P",4.1,0, 0, 0, 0, 4330, 1);
	            }
	            if(id == 4)
	            {
	            	if(GetPlayerMoney(playerid) < 65) return SCM(playerid, COLOR_RED, "[Automat]: {FFFFFF}Nemate dovoljno novca kod sebe!");
	            	format(string, sizeof(string), "{1985A6}[Automat]: {FFFFFF}Uspesno ste kupili i pojeli {1985A6}jaffa kolacice{FFFFFF} i sada ste manje gladni!");
	            	taz_GivePlayerMoney(playerid, -65);
	            	if(PlayerInfo[playerid][pGlad] < 75)
	            	{PlayerInfo[playerid][pGlad] += 25;}
	            	else
	            	{PlayerInfo[playerid][pGlad] = 99;}
	            	ApplyAnimation(playerid,"VENDING","vend_eat1_P",4.1,0, 0, 0, 0, 4330, 1);
	            }
	            if(id == 5)
	            {
	            	if(GetPlayerMoney(playerid) < 20) return SCM(playerid, COLOR_RED, "[Automat]: {FFFFFF}Nemate dovoljno novca kod sebe!");
	            	format(string, sizeof(string), "{1985A6}[Automat]: {FFFFFF}Uspesno ste kupili i popili {1985A6}flasicu vode{FFFFFF} i sada ste manje zedni!");
	            	taz_GivePlayerMoney(playerid, -20);
	            	if(PlayerInfo[playerid][pZedj] < 75)
	            	{PlayerInfo[playerid][pZedj] += 25;}
	            	else
	            	{PlayerInfo[playerid][pZedj] = 99;}
	            	ApplyAnimation(playerid,"VENDING","VEND_Drink2_P",4.1,0, 0, 0, 0, 3330, 1);
	            }
	            if(id == 6)
	            {
	            	if(GetPlayerMoney(playerid) < 65) return SCM(playerid, COLOR_RED, "[Automat]: {FFFFFF}Nemate dovoljno novca kod sebe!");
	            	format(string, sizeof(string), "{1985A6}[Automat]: {FFFFFF}Uspesno ste kupili i popili {1985A6}koka kolu{FFFFFF} i sada ste manje zedni!");
	            	taz_GivePlayerMoney(playerid, -65);
	            	if(PlayerInfo[playerid][pZedj] < 75)
	            	{PlayerInfo[playerid][pZedj] += 25;}
	            	else
	            	{PlayerInfo[playerid][pZedj] = 99;}
	            	ApplyAnimation(playerid,"VENDING","VEND_Drink2_P",4.1,0, 0, 0, 0, 3330, 1);
	            }
	            if(id == 7)
	            {
	            	if(GetPlayerMoney(playerid) < 60) return SCM(playerid, COLOR_RED, "[Automat]: {FFFFFF}Nemate dovoljno novca kod sebe!");
	            	format(string, sizeof(string), "{1985A6}[Automat]: {FFFFFF}Uspesno ste kupili i popili {1985A6}fantu{FFFFFF} i sada ste manje zedni!");
	            	taz_GivePlayerMoney(playerid, -60);
	            	if(PlayerInfo[playerid][pZedj] < 75)
	            	{PlayerInfo[playerid][pZedj] += 25;}
	            	else
	            	{PlayerInfo[playerid][pZedj] = 99;}
	            	ApplyAnimation(playerid,"VENDING","VEND_Drink2_P",4.1,0, 0, 0, 0, 3330, 1);
	            }
	            SCM(playerid, -1, string);
	        }
	    }
	    case DIALOG_GPS:
	    {
	        if(response)
	        {
	            new id = listitem+1, string[128];
	            taz_SetPlayerCheckpoint(playerid, GPSInfo[id][gX], GPSInfo[id][gY], GPSInfo[id][gZ], 5.0);
	            format(string, sizeof(string), "{1985A6}[Server]: {FFFFFF}Uspesno ste oznacili lokaciju {1985A6}%s {FFFFFF}na mapi putem GPS-a!", GPSInfo[id][gpsIme]);
	            SCM(playerid, -1, string);
	        }
	    }
	    case DIALOG_REGISTER:
	    {
		    if(!response) return Kick(playerid);
		    if(response)
		    {
		        if(!strlen(inputtext)) return ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "{FFFFFF}Register", "{FFFFFF}Unesite vasu lozinku.\nLozinka mora bit minimalno {1985A6}8 {FFFFFF}karaktera dugacka!", "Registruj se", "Odustani");
		        if(strlen(inputtext) < 8) return ShowPlayerDialog(playerid, DIALOG_REGISTER, DIALOG_STYLE_PASSWORD, "{FFFFFF}Register", "{FFFFFF}Unesite vasu lozinku.\nLozinka mora bit minimalno {1985A6}8 {FFFFFF}karaktera dugacka!", "Registruj se", "Odustani");
		        new INI:File = INI_Open(UserPath(playerid));
				INI_SetTag(File, "data");
				INI_WriteInt(File, "Lozinka", udb_hash(inputtext));
				INI_WriteInt(File, "Novac", 25000);
				INI_WriteInt(File, "Level", 2);
				INI_WriteInt(File, "Respekti", 0);
				INI_WriteInt(File, "Admin", 0);
				INI_WriteInt(File, "Helper", 0);
				INI_WriteInt(File, "Pasos", 0);
				INI_WriteInt(File, "NeededRep", 8);
				INI_WriteInt(File, "Posao", 0);
				INI_WriteInt(File, "Banka", 15000);
				INI_WriteInt(File, "Plata", 0);
				INI_WriteInt(File, "DoPlate", 60);
				INI_WriteInt(File, "Leader", 0);
				INI_WriteInt(File, "Racun", 0);
				INI_WriteInt(File, "Rate", 0);
				INI_WriteInt(File, "Kredit", 0);
				INI_WriteInt(File, "Kuca", 9999);
				INI_WriteInt(File, "NagradniPoeni", 0);
				INI_WriteInt(File, "Tutorijal", 0);
				INI_WriteInt(File, "Skin", 26);
				INI_WriteInt(File, "Glad", 25);
				INI_WriteInt(File, "Zedj", 25);
				INI_WriteInt(File, "DoPlate", 60);
				INI_WriteInt(File, "Telefon", 0);
				INI_WriteInt(File, "BrojTelefona", 0);
				INI_Close(File);
				INI_ParseFile(UserPath(playerid), "LoadUser_%s", .bExtra=true, .extra=playerid);
				ShowPlayerDialog(playerid, DIALOG_POL, DIALOG_STYLE_MSGBOX, "{1985A6}Pol", "{FFFFFF}Molimo vas, izaberite vas pol:", "Musko", "Zensko");
		    }
	    }
	    case DIALOG_POL:
	    {
	    	if(!response)
	    	{
	    		PlayerInfo[playerid][pPol] = 2;
	    	}
		    if(response)
		    {
		    	PlayerInfo[playerid][pPol] = 1;
		    }
		    ShowPlayerDialog(playerid, DIALOG_GODINE, DIALOG_STYLE_INPUT, "{1985A6}Godine", "{FFFFFF}Molimo vas unesite koliko godina imate:", "Potvrdi", "");
		    SavePlayer(playerid);
	    }
	    case DIALOG_GODINE:
	    {
	    	if(strval(inputtext) < 1 && strval(inputtext) > 100) return ShowPlayerDialog(playerid, DIALOG_GODINE, DIALOG_STYLE_INPUT, "{1985A6}Godine", "{FFFFFF}Molimo vas unesite koliko godina imate:", "Potvrdi", "");
		    PlayerInfo[playerid][pGodine] = strval(inputtext);
		    if(PlayerInfo[playerid][pPol] == 2)
		    {
		    	PlayerTextDrawSetPreviewModel(playerid, REGTD25[playerid], 131);
		    	PlayerTextDrawSetPreviewModel(playerid, REGTD26[playerid], 12);
		    	PlayerTextDrawSetPreviewModel(playerid, REGTD27[playerid], 141);
		    	PlayerTextDrawSetString(playerid, REGTD22[playerid], "farmerka");
		    	PlayerTextDrawSetString(playerid, REGTD23[playerid], "gradjanka");
		    	PlayerTextDrawSetString(playerid, REGTD24[playerid], "biznismenka");
		    }
		    PlayerTextDrawShow(playerid, REGTD11[playerid]);
		    PlayerTextDrawShow(playerid, REGTD18[playerid]);
		    PlayerTextDrawShow(playerid, REGTD19[playerid]);
		    PlayerTextDrawShow(playerid, REGTD20[playerid]);
		    PlayerTextDrawShow(playerid, REGTD21[playerid]);
		    PlayerTextDrawShow(playerid, REGTD22[playerid]);
		    PlayerTextDrawShow(playerid, REGTD23[playerid]);
		    PlayerTextDrawShow(playerid, REGTD24[playerid]);
		    PlayerTextDrawShow(playerid, REGTD25[playerid]);
		    PlayerTextDrawShow(playerid, REGTD26[playerid]);
		    PlayerTextDrawShow(playerid, REGTD27[playerid]);
		    PlayerTextDrawShow(playerid, REGTD28[playerid]);
		    PlayerTextDrawShow(playerid, REGTD29[playerid]);
		    PlayerTextDrawShow(playerid, REGTD30[playerid]);
		    PlayerTextDrawShow(playerid, REGTD31[playerid]);
		    PlayerTextDrawShow(playerid, REGTD32[playerid]);
		    PlayerTextDrawShow(playerid, REGTD33[playerid]);
		    PlayerTextDrawShow(playerid, REGTD34[playerid]);
		    PlayerTextDrawShow(playerid, REGTD35[playerid]);
		    PlayerTextDrawShow(playerid, REGTD36[playerid]);
		    PlayerTextDrawShow(playerid, REGTD37[playerid]);
		    PlayerTextDrawShow(playerid, REGTD38[playerid]);
		    PlayerTextDrawShow(playerid, REGTD39[playerid]);
		    SelectTextDraw(playerid, 0xFFFFFFFF);
	    }
	    case DIALOG_LOGIN:
	    {
	        if(!response) return Kick(playerid);
		    if(response)
		    {
		        if(udb_hash(inputtext) == PlayerInfo[playerid][pLozinka])
		        {
		        	new pName[MAX_PLAYER_NAME], string[128], ip[64];
		        	GetPlayerIp(playerid, ip, 64);
		            INI_ParseFile(UserPath(playerid), "LoadUser_%s", .bExtra=true, .extra=playerid);
		            taz_GivePlayerMoney(playerid, PlayerInfo[playerid][pNovac]);
		            KillTimer(logintimer[playerid]);
		            ClearChat(playerid);
					GetPlayerName(playerid, pName, sizeof(pName));
					format(string, 128, "Igrac {755600}%s {FFFFFF}se upravo povezao na server! IP: {755600}%s", pName, ip);
					LoginPoruka(string);
					format(string, 128, "Igrac %s se upravo povezao na server! IP: %s", pName, ip);
					LoginLog(string);
					FadeAlpha[playerid] = 0;
    				FadeTimer[playerid] = SetTimerEx("FadeStep", 35, true, "i", playerid);
    				pFlyingTimer[playerid] = SetTimerEx("CamInterp", 1900, false, "u", playerid);
					SetTimerEx("UnFade", 2000, false, "i", playerid);
    				PlayerTextDrawShow(playerid, BlackScreenTD[playerid]);
    				PlayerTextDrawHide(playerid,LoadingTextdraw[playerid][12]);
		        }
		        else
		        {
		        	new str[1024], year, mounth, day, pime[MAX_PLAYER_NAME], rank[64];
			    	GetPlayerName(playerid, pime, sizeof(pime));
					getdate(year, mounth, day);
					format(rank, 64, "Nijedna");
					if(PlayerInfo[playerid][pPromoter] == 1) format(rank, 64, "Promoter");
					if(PlayerInfo[playerid][pHelper] > 0) format(rank, 64, "Helper");
					if(PlayerInfo[playerid][pAdmin] > 0 && PlayerInfo[playerid][pAdmin] < 5) format(rank, 64, "Admin");
					if(PlayerInfo[playerid][pAdmin] == 5) format(rank, 64, "Head Admin");
					if(PlayerInfo[playerid][pAdmin] == 6) format(rank, 64, "Direktor");
					if(PlayerInfo[playerid][pAdmin] == 7) format(rank, 64, "Generalni Direktor");
					if(PlayerInfo[playerid][pAdmin] == 8) format(rank, 64, "Suvlasnik");
					if(PlayerInfo[playerid][pAdmin] == 9) format(rank, 64, "Vlasnik");
					if(PlayerInfo[playerid][pAdmin] == 10) format(rank, 64, "Predsednica");
					if(PlayerInfo[playerid][pAdmin] == 1337) format(rank, 64, "Skripter");
		            format(str, 1024, "{FFFFFF}\nDobrodosli na {1985A6}PerfectCrime!\n\n{FFFFFF}Ime i Prezime: {1985A6}%s\n{FFFFFF}Datum: {1985A6}%d/{1985A6}%d/{1985A6}%d\n{FFFFFF}Nivo: {1985A6}%d\n{FFFFFF}Nagradni poeni: {1985A6}%d\n{FFFFFF}Specijalna pozicija: {1985A6}%s\n\n{FFFFFF}Imate 30 sekundi da unesete lozinku!:", pime, day, mounth, year, PlayerInfo[playerid][pLevel], PlayerInfo[playerid][pNagradniPoeni], rank);
		    		ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "{FFFFFF}Login", str, "Prijavi se", "Odustani");
		        }
		        return 1;
		    }
	    }
	    case DIALOG_ORGIME:
	    {
	        if(!response)
	        {
	            DestroyPickup(orgPickup[editaorg[playerid]]);
	            SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Prekinuli ste pravljenje organizacije!");
	            editaorg[playerid] = -1;
	        }
	        if(response)
	        {
	            new ime[128];
	            format(ime, sizeof(ime), "%s", inputtext);
	            OrgInfo[editaorg[playerid]][orgIme] = ime;
	            ShowPlayerDialog(playerid, DIALOG_ORGDRZAVNA, DIALOG_STYLE_MSGBOX, "{1985A6}Vrsta organizacije", "{FFFFFF}Izaberite vrstu organizacije!", "Drzavna", "Ilegalna");
	        }
		}
		case DIALOG_ORGDRZAVNA:
		{
		    if(!response)
		    {
		        OrgInfo[editaorg[playerid]][orgDrzavna] = 0;
		        ShowPlayerDialog(playerid, DIALOG_ORGRANK1, DIALOG_STYLE_INPUT, "{1985A6}Imena rankova", "{FFFFFF}Unesite ime za Rank 1", "Potvrdi", "Odustani");
		    }
		    if(response)
		    {
		        OrgInfo[editaorg[playerid]][orgDrzavna] = 1;
		        ShowPlayerDialog(playerid, DIALOG_ORGRANK1, DIALOG_STYLE_INPUT, "{1985A6}Imena rankova", "{FFFFFF}Unesite ime za Rank 1", "Potvrdi", "Odustani");
		    }
		}
		case DIALOG_ORGRANK1:
		{
		    if(!response)
	        {
	            DestroyPickup(orgPickup[editaorg[playerid]]);
	            SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Prekinuli ste pravljenje organizacije!");
	            editaorg[playerid] = -1;
	        }
	        if(response)
	        {
	            new string[128];
	            format(string, sizeof(string), "%s", inputtext);
	            OrgInfo[editaorg[playerid]][orgRank1] = string;
	            ShowPlayerDialog(playerid, DIALOG_ORGRANK2, DIALOG_STYLE_INPUT, "{1985A6}Imena rankova", "{FFFFFF}Unesite ime za Rank 2", "Potvrdi", "Odustani");
	        }
		}
		case DIALOG_ORGRANK2:
		{
		    if(!response)
	        {
	            DestroyPickup(orgPickup[editaorg[playerid]]);
	            SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Prekinuli ste pravljenje organizacije!");
	            editaorg[playerid] = -1;
	        }
	        if(response)
	        {
	            new string[128];
	            format(string, sizeof(string), "%s", inputtext);
	            OrgInfo[editaorg[playerid]][orgRank2] = string;
	            ShowPlayerDialog(playerid, DIALOG_ORGRANK3, DIALOG_STYLE_INPUT, "{1985A6}Imena rankova", "{FFFFFF}Unesite ime za Rank 3", "Potvrdi", "Odustani");
	        }
		}
		case DIALOG_ORGRANK3:
		{
		    if(!response)
	        {
	            DestroyPickup(orgPickup[editaorg[playerid]]);
	            SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Prekinuli ste pravljenje organizacije!");
	            editaorg[playerid] = -1;
	        }
	        if(response)
	        {
	            new string[128];
	            format(string, sizeof(string), "%s", inputtext);
	            OrgInfo[editaorg[playerid]][orgRank3] = string;
	            ShowPlayerDialog(playerid, DIALOG_ORGRANK4, DIALOG_STYLE_INPUT, "{1985A6}Imena rankova", "{FFFFFF}Unesite ime za Rank 4", "Potvrdi", "Odustani");
	        }
		}
		case DIALOG_ORGRANK4:
		{
		    if(!response)
	        {
	            DestroyPickup(orgPickup[editaorg[playerid]]);
	            SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Prekinuli ste pravljenje organizacije!");
	            editaorg[playerid] = -1;
	        }
	        if(response)
	        {
	            new string[128];
	            format(string, sizeof(string), "%s", inputtext);
	            OrgInfo[editaorg[playerid]][orgRank4] = string;
	            ShowPlayerDialog(playerid, DIALOG_ORGRANK5, DIALOG_STYLE_INPUT, "{1985A6}Imena rankova", "{FFFFFF}Unesite ime za Rank 5", "Potvrdi", "Odustani");
	        }
		}
		case DIALOG_ORGRANK5:
		{
		    if(!response)
	        {
	            DestroyPickup(orgPickup[editaorg[playerid]]);
	            SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Prekinuli ste pravljenje organizacije!");
	            editaorg[playerid] = -1;
	        }
	        if(response)
	        {
	            new string[128];
	            format(string, sizeof(string), "%s", inputtext);
	            OrgInfo[editaorg[playerid]][orgRank5] = string;
	            ShowPlayerDialog(playerid, DIALOG_ORGRANK6, DIALOG_STYLE_INPUT, "{1985A6}Imena rankova", "{FFFFFF}Unesite ime za Rank 6", "Potvrdi", "Odustani");
	        }
		}
		case DIALOG_ORGRANK6:
		{
		    if(!response)
	        {
	            DestroyPickup(orgPickup[editaorg[playerid]]);
	            SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Prekinuli ste pravljenje organizacije!");
	            editaorg[playerid] = -1;
	        }
	        if(response)
	        {
	            new string[128];
	            format(string, sizeof(string), "%s", inputtext);
	            OrgInfo[editaorg[playerid]][orgRank6] = string;
	            ShowPlayerDialog(playerid, DIALOG_ORGRANK7, DIALOG_STYLE_INPUT, "{1985A6}Imena rankova", "{FFFFFF}Unesite ime za Rank 7", "Potvrdi", "Odustani");
	        }
		}
		case DIALOG_ORGRANK7:
		{
		    if(!response)
	        {
	            DestroyPickup(orgPickup[editaorg[playerid]]);
	            SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Prekinuli ste pravljenje organizacije!");
	            editaorg[playerid] = -1;
	        }
	        if(response)
	        {
	            new string[128], infostring[512], drz[128], i = editaorg[playerid];
	            if(OrgInfo[i][orgDrzavna] == 0)
	            {
	                format(drz, sizeof(drz), "Ilegalna");
	            }
	            else
	            {
	                format(drz, sizeof(drz), "Drzavna");
	            }
	            format(string, sizeof(string), "%s", inputtext);
	            format(infostring, sizeof(infostring), "{1985A6}Da li ste sigurni da zelite da napravite organizaciju?\n{FFFFFF}Ime: {1985A6}%s\n{FFFFFF}Vrsta: {1985A6}%s", OrgInfo[i][orgIme], drz);
	            OrgInfo[editaorg[playerid]][orgRank7] = string;
	            ShowPlayerDialog(playerid, DIALOG_ORGINFO, DIALOG_STYLE_MSGBOX, "{1985A6}Potvrda", infostring, "Potvrdi", "Odustani");
	        }
		}
		case DIALOG_ORGINFO:
		{
		    if(!response)
	        {
	            DestroyPickup(orgPickup[editaorg[playerid]]);
	            SCM(playerid, COLOR_RED, "{1985A6}[Server]: {FFFFFF}Prekinuli ste pravljenje organizacije!");
	            editaorg[playerid] = -1;
	        }
	        if(response)
	        {
				new i = editaorg[playerid], string[128];
				SCM(playerid, COLOR_BLUE, "{1985A6}[Server]: {FFFFFF}Uspesno ste napravili organizaciju!");
				SaveOrg(i);
        		format(string, sizeof(string), "{1985A6}[ {FFFFFF}%s {1985A6}]\n{FFFFFF}Leader: {1985A6}%s\n{FFFFFF}Pritisnite {1985A6}ENTER {FFFFFF}da udjete!\nAdresa: {1985A6}%d", OrgInfo[i][orgIme], OrgInfo[i][orgLeader], i);
        		orgLabel[i] = Create3DTextLabel(string, COLOR_BLACK, OrgInfo[i][orgX], OrgInfo[i][orgY], OrgInfo[i][orgZ], 20.0, 0, 0);
        		editaorg[playerid] = -1;
	        }
		}
	}
	return 1;
}

public OnPlayerClickPlayer(playerid, clickedplayerid, source)
{
	return 1;
}

public OnPlayerClickMap(playerid, Float:fX, Float:fY, Float:fZ)
{
	pWaypoint[playerid][0] = fX;
	pWaypoint[playerid][1] = fY;
	pWaypoint[playerid][2] = fZ;
    return 1;
}

public OnPlayerClickTextDraw(playerid, Text:clickedid)
{
    if(clickedid == StatsTextdrawPublic[61])
    {
    	for(new i = 0; i < 62; i++)
		{
			TextDrawHideForPlayer(playerid, StatsTextdrawPublic[i]);
		}
		for(new i = 0; i < 32; i++)
		{
			PlayerTextDrawHide(playerid, StatsTextdrawPlayer[playerid][i]);
		}
        CancelSelectTextDraw(playerid);
        return 1;
    }
    return 0;
}

public OnPlayerClickPlayerTextDraw(playerid, PlayerText:playertextid)
{
	if(playertextid == SalonTD9[playerid])
	{
		new str[128], kat[16];
		if(pKatalog[playerid] != 1)
		{
			pKatalog[playerid]--;
		}
		else
		{
			pKatalog[playerid] = 52;
		}
		new i = SalonskaVozila[pKatalog[playerid]-1][0];
		PlayerTextDrawSetString(playerid, SalonTD3[playerid], ImenaVozila[i-400]);
		format(str, 128, "Cena:~b~ %d", SalonskaVozila[pKatalog[playerid]-1][1]);
		PlayerTextDrawSetString(playerid, SalonTD4[playerid], str);
		if(SalonskaVozila[pKatalog[playerid]-1][2] == 1) format(kat, 16, "A");
		if(SalonskaVozila[pKatalog[playerid]-1][2] == 2) format(kat, 16, "B");
		if(SalonskaVozila[pKatalog[playerid]-1][2] == 5) format(kat, 16, "F");
		format(str, 128, "Kategorija:~b~ %s", kat);
		PlayerTextDrawSetString(playerid, SalonTD5[playerid], str);
		format(str, 128, "Preostalo:~b~ %d", zalihevozila[pKatalog[playerid]-1]);
		PlayerTextDrawSetString(playerid, SalonTD6[playerid], str);
		DestroyVehicle(pSalonVozilo[playerid]);
		pSalonVozilo[playerid] = AddStaticVehicle(SalonskaVozila[pKatalog[playerid]-1][0], -348.2014, 1950.7007, 59.3392, 180.0000, 1, 1);
		SetVehicleVirtualWorld(pSalonVozilo[playerid], GetPlayerVirtualWorld(playerid));
	}
	if(playertextid == SalonTD8[playerid])
	{
		new str[128], kat[16];
		if(pKatalog[playerid] != 52)
		{
			pKatalog[playerid]++;
		}
		else
		{
			pKatalog[playerid] = 1;
		}
		new i = SalonskaVozila[pKatalog[playerid]-1][0];
		PlayerTextDrawSetString(playerid, SalonTD3[playerid], ImenaVozila[i-400]);
		format(str, 128, "Cena:~b~ %d", SalonskaVozila[pKatalog[playerid]-1][1]);
		PlayerTextDrawSetString(playerid, SalonTD4[playerid], str);
		if(SalonskaVozila[pKatalog[playerid]-1][2] == 1) format(kat, 16, "A");
		if(SalonskaVozila[pKatalog[playerid]-1][2] == 2) format(kat, 16, "B");
		if(SalonskaVozila[pKatalog[playerid]-1][2] == 5) format(kat, 16, "F");
		format(str, 128, "Kategorija:~b~ %s", kat);
		PlayerTextDrawSetString(playerid, SalonTD5[playerid], str);
		format(str, 128, "Preostalo:~b~ %d", zalihevozila[pKatalog[playerid]-1]);
		PlayerTextDrawSetString(playerid, SalonTD6[playerid], str);
		DestroyVehicle(pSalonVozilo[playerid]);
		pSalonVozilo[playerid] = AddStaticVehicle(SalonskaVozila[pKatalog[playerid]-1][0], -348.2014, 1950.7007, 59.3392, 180.0000, 1, 1);
		SetVehicleVirtualWorld(pSalonVozilo[playerid], GetPlayerVirtualWorld(playerid));
	}
	if(playertextid == SalonTD7[playerid])
	{
		new str[128], str2[256], voz;
		if(GetPlayerMoney(playerid) < SalonskaVozila[pKatalog[playerid]-1][1]) return SCM(playerid, COLOR_RED, "[Salon Vozila]: {FFFFFF}Nemate dovoljno novca!");
		if(PlayerInfo[playerid][pLevel] < 5) return SCM(playerid, COLOR_RED, "[Salon Vozila]: {FFFFFF}Morate biti najmanje level 5 kako bi kupili vozilo!");
		if(PlayerInfo[playerid][pVozilo1] != 0 && PlayerInfo[playerid][pVozilo2] != 0 && PlayerInfo[playerid][pVozilo3] != 0 && PlayerInfo[playerid][pVozilo4] != 0 && PlayerInfo[playerid][pVozilo5] != 0) return SCM(playerid, COLOR_RED, "[Salon Vozila]: {FFFFFF}Svi slotovi za vozila su vam trenutno zauzeti!");
		DestroyVehicle(pSalonVozilo[playerid]);
		voz = AddStaticVehicle(SalonskaVozila[pKatalog[playerid]-1][0], -3122.87036, 1042.63818, 1.69223, 0.0, 1, 1);
		VoziloInfo[voz][vID] = SalonskaVozila[pKatalog[playerid]-1][0];
		VoziloInfo[voz][vOwnable] = 1;
		GetPlayerName(playerid, str, 128);
		VoziloInfo[voz][vOwner] = str;
		VoziloInfo[voz][vCena] = SalonskaVozila[pKatalog[playerid]-1][1];
		VoziloInfo[voz][vAutoskola] = 0;
		VoziloInfo[voz][vPosaoID] = 0;
		VoziloInfo[voz][vOrgID] = 0;
		VoziloInfo[voz][vRent] = 0;
		VoziloInfo[voz][vAdmin] = 0;
		VoziloInfo[voz][vHelper] = 0;
		VoziloInfo[voz][vVip] = 0;
		VoziloInfo[voz][vPromoter] = 0;
		VoziloInfo[voz][vSalon] = 0;
		VoziloInfo[voz][vBoja] = 1;
		VoziloInfo[voz][vBoja2] = 1;
		VoziloInfo[voz][vPainJob] = -1;
		VoziloInfo[voz][vUSalonu] = 1;
		VoziloInfo[voz][vDozvola] = SalonskaVozila[pKatalog[playerid]-1][2];
		VoziloInfo[voz][vX] = -3122.87036;
		VoziloInfo[voz][vY] = 1042.63818;
		VoziloInfo[voz][vZ] = 1.69223;
		if(PlayerInfo[playerid][pVozilo1] == 0) { PlayerInfo[playerid][pVozilo1] = voz; }
		else if(PlayerInfo[playerid][pVozilo2] == 0) { PlayerInfo[playerid][pVozilo2] = voz; }
		else if(PlayerInfo[playerid][pVozilo3] == 0) { PlayerInfo[playerid][pVozilo3] = voz; }
		else if(PlayerInfo[playerid][pVozilo4] == 0) { PlayerInfo[playerid][pVozilo4] = voz; }
		else { PlayerInfo[playerid][pVozilo5] = voz; }
		format(str2, 150, "{1985A6}[Salon Vozila]: {FFFFFF}Cestitamo, uspesno ste kupili vozilo marke {1985A6}%s{FFFFFF}, izadjite do garaze i tamo ga preuzmite!", ImenaVozila[SalonskaVozila[pKatalog[playerid]-1][0]-400]);
		SCM(playerid, -1, str2);
		GivePlayerMoney(playerid, -SalonskaVozila[pKatalog[playerid]-1][1]);
		SavePlayer(playerid);
		SaveVozilo(voz);
		SalonTDSakrij(playerid);
		PrikaziTD(playerid);
		CancelSelectTextDraw(playerid);
		pKatalog[playerid] = 1;
		taz_SetPlayerPos(playerid, 111.5714,1053.4357,13.7996);
		SetCameraBehindPlayer(playerid);
		SetPlayerVirtualWorld(playerid, 0);
	}
	if(playertextid == REGTD22[playerid])
	{
		TogglePlayerSpectating(playerid, true);
		SelectTextDraw(playerid, 0xFFFFFFFF);
		SakrijRegTD(playerid);
		PokaziGrad(playerid, 1);
		PlayerInfo[playerid][pKlasa] = 1;
		PlayerInfo[playerid][pSkin] = 131;
		PlayerInfo[playerid][pGrad] = 1;
		SavePlayer(playerid);
		pIzborGrada[playerid] = 1;
		ClearChat(playerid);
		SCM(playerid, -1, "{1985A6}[Izbor Grada]: {FFFFFF}Molimo vas, izaberite drzavu i grad u kom zelite da zivite!");
		SetPlayerWeather(playerid, 0);
	}
	if(playertextid == REGTD23[playerid])
	{
		TogglePlayerSpectating(playerid, true);
		SelectTextDraw(playerid, 0xFFFFFFFF);
		SakrijRegTD(playerid);
		PokaziGrad(playerid, 1);
		PlayerInfo[playerid][pKlasa] = 2;
		PlayerInfo[playerid][pSkin] = 12;
		PlayerInfo[playerid][pGrad] = 1;
		SavePlayer(playerid);
		pIzborGrada[playerid] = 1;
		ClearChat(playerid);
		SCM(playerid, -1, "{1985A6}[Izbor Grada]: {FFFFFF}Molimo vas, izaberite drzavu i grad u kom zelite da zivite!");
		SetPlayerWeather(playerid, 0);
	}
	if(playertextid == REGTD24[playerid])
	{
		TogglePlayerSpectating(playerid, true);
		SelectTextDraw(playerid, 0xFFFFFFFF);
		SakrijRegTD(playerid);
		PokaziGrad(playerid, 1);
		PlayerInfo[playerid][pKlasa] = 3;
		PlayerInfo[playerid][pSkin] = 141;
		PlayerInfo[playerid][pGrad] = 1;
		SavePlayer(playerid);
		pIzborGrada[playerid] = 1;
		ClearChat(playerid);
		SCM(playerid, -1, "{1985A6}[Izbor Grada]: {FFFFFF}Molimo vas, izaberite drzavu i grad u kom zelite da zivite!");
		SetPlayerWeather(playerid, 0);
	}
	if(playertextid == IzborSelaTD7[playerid])
	{
		PokaziGrad(playerid, 3);
		PlayerInfo[playerid][pGrad] = pIzborGrada[playerid];
	}
	if(playertextid == IzborSelaTD8[playerid])
	{
		if(pIzborGrada[playerid] == 1)
		{
			pIzborGrada[playerid] = 2;
		}
		else
		{
			pIzborGrada[playerid] = 1;
		}
		PokaziGrad(playerid, pIzborGrada[playerid]);
		PlayerInfo[playerid][pGrad] = pIzborGrada[playerid];
	}
	if(playertextid == IzborSelaTD9[playerid])
	{
		if(pIzborGrada[playerid] == 1)
		{
			pIzborGrada[playerid] = 2;
		}
		else
		{
			pIzborGrada[playerid] = 1;
		}
		PokaziGrad(playerid, pIzborGrada[playerid]);
		PlayerInfo[playerid][pGrad] = pIzborGrada[playerid];
	}
	return 0;
}
forward LoadUser_data(playerid,name[],value[]);
public LoadUser_data(playerid,name[],value[])
{
	INI_Int("Lozinka",PlayerInfo[playerid][pLozinka]);
	INI_Int("Novac",PlayerInfo[playerid][pNovac]);
	INI_Int("Level",PlayerInfo[playerid][pLevel]);
	INI_Int("Respekti",PlayerInfo[playerid][pRespekti]);
	INI_Int("Admin",PlayerInfo[playerid][pAdmin]);
	INI_Int("Helper",PlayerInfo[playerid][pHelper]);
	INI_Int("Pasos",PlayerInfo[playerid][pPasos]);
	INI_Int("NeededRep",PlayerInfo[playerid][pNeededRep]);
	INI_Int("Posao",PlayerInfo[playerid][pPosao]);
	INI_Int("Leader",PlayerInfo[playerid][pLeader]);
	INI_Int("Org", PlayerInfo[playerid][pOrg]);
	INI_Int("Rank", PlayerInfo[playerid][pRank]);
	INI_Int("Racun",PlayerInfo[playerid][pRacun]);
	INI_Int("Banka",PlayerInfo[playerid][pBanka]);
	INI_Int("Zlato",PlayerInfo[playerid][pZlato]);
	INI_Int("Plata",PlayerInfo[playerid][pPlata]);
	INI_Int("DoPlate",PlayerInfo[playerid][pDoPlate]);
 	INI_Int("Pol", PlayerInfo[playerid][pPol]);
 	INI_Int("Godine", PlayerInfo[playerid][pGodine]);
 	INI_Int("Klasa", PlayerInfo[playerid][pKlasa]);
	INI_Int("Kredit",PlayerInfo[playerid][pKredit]);
	INI_Int("Kuca",PlayerInfo[playerid][pKuca]);
	INI_Int("Ban",PlayerInfo[playerid][pBan]);
	INI_String("BanRazlog",PlayerInfo[playerid][pBanRazlog], 128);
	INI_Int("Promoter",PlayerInfo[playerid][pPromoter]);
	INI_Int("NagradniPoeni",PlayerInfo[playerid][pNagradniPoeni]);
	INI_Int("Tutorijal",PlayerInfo[playerid][pTutorijal]);
	INI_Int("Skin",PlayerInfo[playerid][pSkin]);
	INI_Int("Racuni",PlayerInfo[playerid][pRacuni]);
 	INI_Int("Vikendica", PlayerInfo[playerid][pVikendica]);
 	INI_Int("Firma", PlayerInfo[playerid][pFirma]);
 	INI_Int("Imanje", PlayerInfo[playerid][pImanje]);
 	INI_Int("Vozilo1", PlayerInfo[playerid][pVozilo1]);
 	INI_Int("Vozilo2", PlayerInfo[playerid][pVozilo2]);
 	INI_Int("Vozilo3", PlayerInfo[playerid][pVozilo3]);
 	INI_Int("Vozilo4", PlayerInfo[playerid][pVozilo4]);
 	INI_Int("Vozilo5", PlayerInfo[playerid][pVozilo5]);
 	INI_Int("Glad", PlayerInfo[playerid][pGlad]);
 	INI_Int("Zedj", PlayerInfo[playerid][pZedj]);
 	INI_Int("AL", PlayerInfo[playerid][pAL]);
 	INI_Int("BL", PlayerInfo[playerid][pBL]);
 	INI_Int("CL", PlayerInfo[playerid][pCL]);
 	INI_Int("DL", PlayerInfo[playerid][pDL]);
 	INI_Int("FL", PlayerInfo[playerid][pFL]);
 	INI_Int("LetenjeL", PlayerInfo[playerid][pLetenjeL]);
 	INI_Int("BrodL", PlayerInfo[playerid][pBrodL]);
 	INI_Int("GunL", PlayerInfo[playerid][pGunL]);
 	INI_Int("Vip", PlayerInfo[playerid][pVip]);
 	INI_Int("VipDani", PlayerInfo[playerid][pVipDani]);
 	INI_Int("Penzija", PlayerInfo[playerid][pPenzija]);
 	INI_Int("Potrosio", PlayerInfo[playerid][pPotrosio]);
 	INI_Int("Poslovi", PlayerInfo[playerid][pPoslovi]);
 	INI_Int("SatiIgranja", PlayerInfo[playerid][pSatiIgranja]);
 	INI_Int("KupljenaVozila", PlayerInfo[playerid][pKupljenaVozila]);
 	INI_Int("Uhapsio", PlayerInfo[playerid][pUhapsio]);
 	INI_Int("Opljackao", PlayerInfo[playerid][pOpljackao]);
 	INI_Int("Grad", PlayerInfo[playerid][pGrad]);
 	INI_String("Verzija", PlayerInfo[playerid][pVerzija], 64);
 	INI_Int("Asklist", PlayerInfo[playerid][pAsklist]);
 	INI_Int("Telefon", PlayerInfo[playerid][pTelefon]);
 	INI_Int("BrojTelefona", PlayerInfo[playerid][pBrojTelefona]);
 	INI_Int("FonKredit", PlayerInfo[playerid][pFonKredit]);
 	INI_Int("SemeDroge", PlayerInfo[playerid][pSemeDroge]);
 	INI_Int("Marihuana", PlayerInfo[playerid][pMarihuana]);
 	INI_Int("JailTime", PlayerInfo[playerid][pJailTime]);
 	INI_Int("JailPlace", PlayerInfo[playerid][pJailPlace]);
 	INI_Int("Tickets", PlayerInfo[playerid][pTickets]);
 	lastmoney[playerid] = PlayerInfo[playerid][pNovac];
 	newmoney[playerid] = PlayerInfo[playerid][pNovac];
 	pmoneytokens[playerid] = 5;
	return 1;
}


forward PosaljiPoruku();
public PosaljiPoruku()
{
	for( new i = 0; i < MAX_PLAYERS; i++ )
	{
		if(PlayerInfo[i][pTutorijal] == 1)
		{
		    new RandomPoruka = random(sizeof(NasumicnePoruke));
			TextDrawSetString(Textdraw9, NasumicnePoruke[RandomPoruka]);
			TextDrawShowForPlayer(i, Textdraw9);
		}
	}
	return 1;
}

forward PayDay();
public PayDay()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(ulogovan[i] == 1)
		{

			SavePlayer(i);

			if(PlayerInfo[i][pGlad] > 0 && !IsPlayerPaused(i))
			{
				PlayerInfo[i][pGlad]--;
			}
			if(PlayerInfo[i][pGlad] <= 0 && !IsPlayerPaused(i))
			{
				new Float:hlth;
				SCM(i, COLOR_RED, "[Glad]: {FFFFFF}Postali ste previse gladni, morate pod hitno jesti! Sve dok ste veoma gladni, gubicete health na svakih 60 sekundi...");
				GetPlayerHealth(i, hlth);
				SetPlayerHealth(i, hlth-5);
			}

			if(PlayerInfo[i][pZedj] > 0 && !IsPlayerPaused(i))
			{
				PlayerInfo[i][pZedj]--;
			}
			if(PlayerInfo[i][pZedj] <= 0 && !IsPlayerPaused(i))
			{
				new Float:hlth;
				SCM(i, COLOR_RED, "[Zedj]: {FFFFFF}Postali ste previse zedni, morate pod hitno popiti vodu! Sve dok ste veoma zedni, gubicete health na svakih 60 sekundi...");
				GetPlayerHealth(i, hlth);
				SetPlayerHealth(i, hlth-10);
			}


			PlayerInfo[i][pDoPlate]--;
			if(PlayerInfo[i][pDoPlate] <= 0)
			{
				PlayerInfo[i][pSatiIgranja]++;
				PlayerInfo[i][pDoPlate]=60;
				PlayerInfo[i][pRespekti]+=100;
				if(PlayerInfo[i][pAdmin] > 0 || PlayerInfo[i][pHelper] > 0) PlayerInfo[i][pRespekti]+=70;
				if(PlayerInfo[i][pVip] > 0) PlayerInfo[i][pRespekti]+=50;
				if(PlayerInfo[i][pOrg] > 0 || PlayerInfo[i][pLeader] > 0) PlayerInfo[i][pRespekti]+=50;
				if(PlayerInfo[i][pPromoter] > 0) PlayerInfo[i][pRespekti]+=50;

				if(PlayerInfo[i][pRacun] == 1)
				{
					PlayerInfo[i][pBanka]+=PlayerInfo[i][pPlata];
					PlayerInfo[i][pBanka]+=500;
					new string[512];
					format(string, sizeof(string), "{FFFFFF}Plata vam je legla na bankvni racun!\n\nPlata: {1985A6}$%d\n{FFFFFF}Bonus: {1985A6}$500\n{FFFFFF}Racuni: {1985A6}$%d\n{FFFFFF}Novo stanje: {1985A6}$%d\n{FFFFFF}Iskustvo: {1985A6}%d/%d\n\n{FFFFFF}Hvala vam za igranje na serveru,\nvas {1985A6}PerfectCrime {FFFFFF}Admin tim!", PlayerInfo[i][pPlata], PlayerInfo[i][pRacuni], PlayerInfo[i][pBanka], PlayerInfo[i][pRespekti], PlayerInfo[i][pNeededRep]);
					SPD(i, DIALOG_PLATA, DIALOG_STYLE_MSGBOX, "{FFFFFF}Plata", string, "Ok", "");
					PlayerInfo[i][pPlata]=0;
				}
				else
				{
					SCM(i, COLOR_RED, "[BANK]: {FFFFFF}Niste u mogucnosti da primite platu i bonus, prvo morate otvoriti bankovni racun!");
					SCM(i, COLOR_RED, "[BANK]: {FFFFFF}Dobili ste respect poene za vreme igranja, ali da bi primili platu morate otvoriti bankovni racun!");
				}
				if(PlayerInfo[i][pRespekti] >= PlayerInfo[i][pNeededRep])
				{
					new string[256], razlika;
					razlika = PlayerInfo[i][pRespekti] - PlayerInfo[i][pNeededRep];
				    PlayerInfo[i][pRespekti] = razlika;
				    PlayerInfo[i][pLevel]++;
			     	PlayerInfo[i][pNeededRep]=((PlayerInfo[i][pLevel]*2+6)*100);
			     	format(string, sizeof(string), "PAYDAY: {FFFFFF}Cestitamo, postali ste level {1985A6}%d{FFFFFF}! Sada vam je potrebno {1985A6}%d {FFFFFF}xp za sledeci nivo!", PlayerInfo[i][pLevel], PlayerInfo[i][pNeededRep]);
			     	SCM(i, COLOR_GREEN, string);
			     	SCM(i, COLOR_GREEN, "PAYDAY: {FFFFFF}Za jos jednu uspesnu godinu radnog staza dobili ste nagradu od $20000!");
			     	taz_GivePlayerMoney(i, 20000);
				}
				if(PlayerInfo[i][pRate] > 0)
				{
				    new oduzmi;
				    PlayerInfo[i][pRate]--;
				    oduzmi=PlayerInfo[i][pKredit]/10;
			        PlayerInfo[i][pBanka]-=oduzmi;
			        if(PlayerInfo[i][pRate] == 0)
			        {
			            PlayerInfo[i][pKredit] = 0;
			        }
			        SCM(i, COLOR_BLUE, "{1985A6}[BANK]: {FFFFFF}Sa bankovnog racuna vam je skinuta rata kredita!");
				}
			}
		}
	}
	return 1;
}
forward RespawnVozila();
public RespawnVozila()
{
    for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(IsPlayerInAnyVehicle(i))
	    {
	        new vehid = GetPlayerVehicleID(i);
	        excludedveh[vehid] = 1;
	    }
	}
	for(new i = 0; i < MAX_VEHICLES; i++)
	{
	    if(excludedveh[i] == 0)
	    {
	        SetVehicleToRespawn(i);
	    }
	    else
	    {
	        excludedveh[i] = 0;
	 	}
	}
	SendClientMessageToAll(COLOR_ORANGE, "{1985A6}[AutoRespawn]: {FFFFFF}Vozila su uspesno respawnovana. AutoRespawn je na svakih pola sata!");
	return 1;
}
forward rst();
public rst()
{
	SendRconCommand("gmx");
	return 1;
}
forward RentTimer();
public RentTimer()
{
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
	    if(renta[i] != -1)
	    {
	        rentvreme[i]--;
	        if(rentvreme[i] <= 0)
	        {
	            new vehid = renta[i];
	            SetVehicleToRespawn(vehid);
	            rented[vehid] = 0;
	            renta[i] = -1;
	            SCM(i, COLOR_RED, "[RENT]: {FFFFFF}Vreme renta vam je isteklo!");
	        }
	    }
	}
	return 1;
}

forward LoadHouses(id, name[], value[]);
public LoadHouses(id, name[], value[])
{
	INI_String("Owner", HouseInfo[id][hOwner], 128);
	INI_Int("Owned", HouseInfo[id][hOwned]);
	INI_Int("Cena", HouseInfo[id][hCena]);
	INI_Int("Level", HouseInfo[id][hLevel]);
	INI_Int("Neaktivnost", HouseInfo[id][hNeaktivnost]);
	INI_Int("Tip", HouseInfo[id][hTip]);
	INI_Float("X", HouseInfo[id][hX]);
	INI_Float("Y", HouseInfo[id][hY]);
	INI_Float("Z", HouseInfo[id][hZ]);
	INI_Int("Sef", HouseInfo[id][hSef]);
	INI_Int("Zakljucana", HouseInfo[id][hZakljucana]);
	return true;
}
forward LoadImanje(id, name[], value[]);
public LoadImanje(id, name[], value[])
{
	INI_String("Owner", ImanjeInfo[id][iOwner], 128);
	INI_Int("Owned", ImanjeInfo[id][iOwned]);
	INI_Int("Cena", ImanjeInfo[id][iCena]);
	INI_Int("Level", ImanjeInfo[id][iLevel]);
	INI_Int("Neaktivnost", ImanjeInfo[id][iNeaktivnost]);
	INI_Int("Precnik", ImanjeInfo[id][iPrecnik]);
	INI_Float("X", ImanjeInfo[id][iX]);
	INI_Float("Y", ImanjeInfo[id][iY]);
	INI_Float("Z", ImanjeInfo[id][iZ]);
	INI_Int("BrojStabala", ImanjeInfo[id][iBrojStabala]);
	return true;
}
forward LoadBroj(id, name[], value[]);
public LoadBroj(id, name[], value[])
{
	INI_String("Vlasnik", BrojInfo[id][bVlasnik], 128);
	return true;
}
forward LoadGaraze(id, name[], value[]);
public LoadGaraze(id, name[], value[])
{
	INI_Float("X", GarazaInfo[id][gaX]);
	INI_Float("Y", GarazaInfo[id][gaY]);
	INI_Float("Z", GarazaInfo[id][gaZ]);
	INI_Int("House", GarazaInfo[id][gaHouse]);
	return true;
}

forward LoadTocilica(id, name[], value[]);
public LoadTocilica(id, name[], value[])
{
	INI_Float("X", TocilicaInfo[id][tX]);
	INI_Float("Y", TocilicaInfo[id][tY]);
	INI_Float("Z", TocilicaInfo[id][tZ]);
	INI_Int("Firma", TocilicaInfo[id][tFirma]);
	return true;
}

forward LoadFirme(id, name[], value[]);
public LoadFirme(id, name[], value[])
{
	INI_String("Owner", FirmaInfo[id][fiOwner], 128);
	INI_Int("Owned", FirmaInfo[id][fiOwned]);
	INI_Int("Cena", FirmaInfo[id][fiCena]);
	INI_Int("Level", FirmaInfo[id][fiLevel]);
	INI_Int("Neaktivnost", FirmaInfo[id][fiNeaktivnost]);
	INI_Int("Tip", FirmaInfo[id][fiTip]);
	INI_Float("X", FirmaInfo[id][fiX]);
	INI_Float("Y", FirmaInfo[id][fiY]);
	INI_Float("Z", FirmaInfo[id][fiZ]);
	INI_Int("Kasa", FirmaInfo[id][fiKasa]);
	INI_Int("Produkti", FirmaInfo[id][fiProdukti]);
	return true;
}

forward InteriorTimer(playerid);
public InteriorTimer(playerid)
{
	TogglePlayerControllable(playerid, 0);
	GameTextForPlayer(playerid, "UCITAVANJE OBJEKATA...", 3000, 3);
	SetTimerEx("InteriorTimer2", 4000, false, "i", playerid);
	return 1;
}
forward InteriorTimer2(playerid);
public InteriorTimer2(playerid)
{
	TogglePlayerControllable(playerid, 1);
	return 1;
}

stock IsAPlane(carid2)
{
	new carid = GetVehicleModel(carid2);
	if(carid == 592 || carid == 577 || carid == 511 || carid == 512 || carid == 593 || carid == 520 || carid == 553 || carid == 476 || carid == 519 || carid == 460 || carid == 513) return 1;
	return 0;
}

stock IsABoat(carid)
{
	new modelid = GetVehicleModel(carid);
	if(modelid == 430 || modelid == 446 || modelid == 452 || modelid == 453 || modelid == 454 || modelid == 472 || modelid == 473 || modelid == 484 || modelid == 493 || modelid == 595)
	{
		return 1;
	}
	return 0;
}


stock taz_SetPlayerCheckpoint(playerid, Float:X, Float:Y, Float:Z, Float:radius)
{
	SetPlayerCheckpoint(playerid, X, Y, Z, radius);
	CPIgraca[playerid][0] = X;
	CPIgraca[playerid][1] = Y;
	CPIgraca[playerid][2] = Z;
}

stock taz_DisablePlayerCheckpoint(playerid)
{
	DisablePlayerCheckpoint(playerid);
	CPIgraca[playerid][0] = 0;
	CPIgraca[playerid][1] = 0;
	CPIgraca[playerid][2] = 0;
}

stock SendMes(Float:Radius, playerid, color, const str[])
{
	new Float:PosX, Float:PosY, Float:PosZ;
	GetPlayerPos(playerid, PosX, PosY, PosZ);
	foreach(Player, i)
	{
	    if(IsPlayerInRangeOfPoint(i, Radius, PosX, PosY, PosZ))
	    {
	        SCM(i, color, str);
	    }
	}
	return false;
}

stock PrikaziTutorijal(playerid)
{
	PlayerInfo[playerid][pTutorijal] = 0;
	if(TutorijalProgres[playerid] == 0)
	{
		TutorijalProgres[playerid]++;
		TogglePlayerSpectating(playerid, true);
		ClearChat(playerid); 
		SCM(playerid, COLOR_RED, "{FFFFFF}======================={1985A6}[ FORT CARSON ]{FFFFFF}========================");
		SCM(playerid, COLOR_RED, "{FFFFFF}Dobrodosli u {1985A6}Fort Carson{FFFFFF}!");
		SCM(playerid, COLOR_RED, "{1985A6}Fort Carson {FFFFFF}je gradic u kom se odvija glavna radnja servera.");
		SCM(playerid, COLOR_RED, "{FFFFFF}Nalazi se nadomak pustinje, a u gradu je sve na dohvat ruke!");
		SCM(playerid, COLOR_RED, "{FFFFFF}=============================================================");
		SetPlayerCameraPos(playerid, -1.1858, 1347.5892, 80.7845);
		SetPlayerCameraLookAt(playerid, -0.9456, 1346.6146, 80.4596);
		InterpolateCameraPos(playerid, -1.1858, 1347.5892, 80.7845, -392.9354, 1001.1954, 66.1591, 10000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, -0.9456, 1346.6146, 80.4596, -391.9656, 1001.4518, 65.9142, 10000, CAMERA_MOVE);
		SetTimerEx("TutDalje", 12000, false, "i", playerid);
	}
	else if(TutorijalProgres[playerid] == 1)
	{
		TutorijalProgres[playerid]++;
		ClearChat(playerid); 
		SCM(playerid, COLOR_RED, "{FFFFFF}Prelazimo na sledecu stavku tutorijala...");
		SetPlayerCameraPos(playerid, -392.9354, 1001.1954, 66.1591);
		SetPlayerCameraLookAt(playerid, -391.9656, 1001.4518, 65.9142);
		InterpolateCameraPos(playerid,-392.9354, 1001.1954, 66.1591, -176.9495, 1075.9735, 36.7720, 7000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, -391.9656, 1001.4518, 65.9142, -177.6063, 1076.7306, 36.6021, 7000, CAMERA_MOVE);
		SetTimerEx("TutDalje", 7000, false, "i", playerid);
	}
	else if(TutorijalProgres[playerid] == 2)
	{
		TutorijalProgres[playerid]++;
		TogglePlayerSpectating(playerid, true);
		ClearChat(playerid); 
		SCM(playerid, COLOR_RED, "{FFFFFF}========================={1985A6}[ OPSTINA ]{FFFFFF}===========================");
		SCM(playerid, COLOR_RED, "{1985A6}Opstina {FFFFFF}je najvaznije mesto za svakog igraca.");
		SCM(playerid, COLOR_RED, "{FFFFFF}U njoj pravite pasos, dajete otkaz i vrsite ostale bitne stvari...");
		SCM(playerid, COLOR_RED, "{FFFFFF}Nalazi se u samom centru gradica i radi 24/7!");
		SCM(playerid, COLOR_RED, "{FFFFFF}=============================================================");
		SetPlayerCameraPos(playerid, -176.9495, 1075.9735, 36.7720);
		SetPlayerCameraLookAt(playerid, -177.6063, 1076.7306, 36.6021);
		InterpolateCameraPos(playerid, -176.9495, 1075.9735, 36.7720, -188.6100, 1134.8822, 21.7775, 10000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, -177.6063, 1076.7306, 36.6021, -189.4377, 1134.3167, 21.7826, 10000, CAMERA_MOVE);
		SetTimerEx("TutDalje", 12000, false, "i", playerid);
	}
	else if(TutorijalProgres[playerid] == 3)
	{
		TutorijalProgres[playerid]++;
		ClearChat(playerid); 
		SCM(playerid, COLOR_RED, "{FFFFFF}Prelazimo na sledecu stavku tutorijala...");
		SetPlayerCameraPos(playerid,-188.6100, 1134.8822, 21.7775);
		SetPlayerCameraLookAt(playerid, -189.4377, 1134.3167, 21.7826);
		InterpolateCameraPos(playerid,-188.6100, 1134.8822, 21.7775, -221.6569, 1034.7513, 33.6058, 7000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, -189.4377, 1134.3167, 21.7826, -221.4771, 1033.7646, 33.3409, 7000, CAMERA_MOVE);
		SetTimerEx("TutDalje", 7000, false, "i", playerid);
	}
	else if(TutorijalProgres[playerid] == 4)
	{
		TutorijalProgres[playerid]++;
		TogglePlayerSpectating(playerid, true);
		ClearChat(playerid); 
		SCM(playerid, COLOR_RED, "{FFFFFF}====================={1985A6}[ SHERIFF DEPARTMENT ]{FFFFFF}=====================");
		SCM(playerid, COLOR_RED, "{1985A6}Sheriff {FFFFFF}je drzavna organizacija koje vam pruza bezbednost.");
		SCM(playerid, COLOR_RED, "{FFFFFF}Serifi su tu da se pobrinu za bilo kakav prekrsaj.");
		SCM(playerid, COLOR_RED, "{FFFFFF}Ako vam je potrebna njihova pomoc, pozovite {1985A6}/call 111");
		SCM(playerid, COLOR_RED, "{FFFFFF}===============================================================");
		SetPlayerCameraPos(playerid, -221.6569, 1034.7513, 33.6058);
		SetPlayerCameraLookAt(playerid, -221.4771, 1033.7646, 33.3409);
		InterpolateCameraPos(playerid, -221.6569, 1034.7513, 33.6058, -192.7987, 967.8314, 22.0887, 10000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, -221.4771, 1033.7646, 33.3409, -193.6012, 968.4330, 21.9987, 10000, CAMERA_MOVE);
		SetTimerEx("TutDalje", 12000, false, "i", playerid);
	}
	else if(TutorijalProgres[playerid] == 5)
	{
		TutorijalProgres[playerid]++;
		ClearChat(playerid); 
		SCM(playerid, COLOR_RED, "{FFFFFF}Prelazimo na sledecu stavku tutorijala...");
		SetPlayerCameraPos(playerid,-192.7987, 967.8314, 22.0887);
		SetPlayerCameraLookAt(playerid,-193.6012, 968.4330, 21.9987);
		InterpolateCameraPos(playerid,-192.7987, 967.8314, 22.0887, -267.7325, 1023.6559, 26.2398, 7000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, -193.6012, 968.4330, 21.9987, -268.7251, 1023.7983, 26.0849, 7000, CAMERA_MOVE);
		SetTimerEx("TutDalje", 7000, false, "i", playerid);
	}
	else if(TutorijalProgres[playerid] == 6)
	{
		TutorijalProgres[playerid]++;
		TogglePlayerSpectating(playerid, true);
		ClearChat(playerid); 
		SCM(playerid, COLOR_RED, "{FFFFFF}========================={1985A6}[ BOLNICA ]{FFFFFF}=========================");
		SCM(playerid, COLOR_RED, "{1985A6}Bolnica {FFFFFF}je mesto namenjeno vasem zdravlju.");
		SCM(playerid, COLOR_RED, "{FFFFFF}Svaki put kada hitna dodje po vas, lecicete se ovde!");
		SCM(playerid, COLOR_RED, "{FFFFFF}Usluge bolnice su povoljne i uvek dostupne.");
		SCM(playerid, COLOR_RED, "{FFFFFF}=============================================================");
		SetPlayerCameraPos(playerid, -267.7325, 1023.6559, 26.2398);
		SetPlayerCameraLookAt(playerid, -268.7251, 1023.7983, 26.0849);
		InterpolateCameraPos(playerid, -267.7325, 1023.6559, 26.2398, -316.8494, 1086.7694, 23.2375, 10000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, -268.7251, 1023.7983, 26.0849, -316.8345, 1085.7668, 23.1676, 10000, CAMERA_MOVE);
		SetTimerEx("TutDalje", 12000, false, "i", playerid);
	}
	else if(TutorijalProgres[playerid] == 7)
	{
		TutorijalProgres[playerid]++;
		ClearChat(playerid); 
		SCM(playerid, COLOR_RED, "{FFFFFF}Prelazimo na sledecu stavku tutorijala...");
		SetPlayerCameraPos(playerid,-316.8494, 1086.7694, 23.2375);
		SetPlayerCameraLookAt(playerid,-316.8345, 1085.7668, 23.1676);
		InterpolateCameraPos(playerid,-316.8494, 1086.7694, 23.2375, -194.9713, 1148.7469, 20.1303, 7000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, -316.8345, 1085.7668, 23.1676, -194.1453, 1148.1783, 20.2104, 7000, CAMERA_MOVE);
		SetTimerEx("TutDalje", 7000, false, "i", playerid);
	}
	else if(TutorijalProgres[playerid] == 8)
	{
		TutorijalProgres[playerid]++;
		TogglePlayerSpectating(playerid, true);
		ClearChat(playerid); 
		SCM(playerid, COLOR_RED, "{FFFFFF}========================={1985A6}[ BANKA ]{FFFFFF}=========================");
		SCM(playerid, COLOR_RED, "{1985A6}Banka {FFFFFF}se brine o vama i vasoj zaradi.");
		SCM(playerid, COLOR_RED, "{FFFFFF}U banci mozete podici kredit, a takodje i cuvati novac.");
		SCM(playerid, COLOR_RED, "{FFFFFF}Banka vam je uvek na raspolaganju u teskim trenucima.");
		SCM(playerid, COLOR_RED, "{FFFFFF}===========================================================");
		SetPlayerCameraPos(playerid, -194.9713, 1148.7469, 20.1303);
		SetPlayerCameraLookAt(playerid, -194.1453, 1148.1783, 20.2104);
		InterpolateCameraPos(playerid, -194.9713, 1148.7469, 20.1303, -196.7088, 1112.7836, 23.1301, 10000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, -194.1453, 1148.1783, 20.2104, -196.0627, 1113.5507, 23.0502, 10000, CAMERA_MOVE);
		SetTimerEx("TutDalje", 12000, false, "i", playerid);
	}
	else if(TutorijalProgres[playerid] == 9)
	{
		TutorijalProgres[playerid]++;
		ClearChat(playerid); 
		SCM(playerid, COLOR_RED, "{FFFFFF}Prelazimo na sledecu stavku tutorijala...");
		SetPlayerCameraPos(playerid,-196.7088, 1112.7836, 23.1301);
		SetPlayerCameraLookAt(playerid,-196.0627, 1113.5507, 23.0502);
		InterpolateCameraPos(playerid,-196.7088, 1112.7836, 23.1301, -296.7778, 807.5746, 16.4559, 12000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, -196.0627, 1113.5507, 23.0502, -297.5770, 808.1771, 16.4061, 12000, CAMERA_MOVE);
		SetTimerEx("TutDalje", 13000, false, "i", playerid);
	}
	else if(TutorijalProgres[playerid] == 10)
	{
		TutorijalProgres[playerid]++;
		TogglePlayerSpectating(playerid, true);
		ClearChat(playerid); 
		SCM(playerid, COLOR_RED, "{FFFFFF}========================={1985A6}[ GUN SHOP ]{FFFFFF}=========================");
		SCM(playerid, COLOR_RED, "{FFFFFF}Najnoviji {1985A6}Gun Shop {FFFFFF}opremljen je najboljom opremom za sve prilike.");
		SCM(playerid, COLOR_RED, "{FFFFFF}Gun Shop poseduje Target Range u kom mozete vezbati vase vestine.");
		SCM(playerid, COLOR_RED, "{FFFFFF}Omogucite sebi vecu bezbednost uz povoljne cene raznog naoruzanja!");
		SCM(playerid, COLOR_RED, "{FFFFFF}==============================================================");
		SetPlayerCameraPos(playerid, -296.7778, 807.5746, 16.4559);
		SetPlayerCameraLookAt(playerid, -297.5770, 808.1771, 16.4061);
		InterpolateCameraPos(playerid, -296.7778, 807.5746, 16.4559, -307.2730, 848.1068, 17.7145, 10000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, -297.5770, 808.1771, 16.4061, -307.9969, 847.4158, 17.5396, 10000, CAMERA_MOVE);
		SetTimerEx("TutDalje", 12000, false, "i", playerid);
	}
	else if(TutorijalProgres[playerid] == 11)
	{
		TutorijalProgres[playerid]++;
		ClearChat(playerid); 
		SCM(playerid, COLOR_RED, "{FFFFFF}Prelazimo na sledecu stavku tutorijala...");
		SetPlayerCameraPos(playerid,-307.2730, 848.1068, 17.7145);
		SetPlayerCameraLookAt(playerid, -307.9969, 847.4158, 17.5396);
		InterpolateCameraPos(playerid,-307.2730, 848.1068, 17.7145, 172.9556, 1229.0145, 90.8270, 12000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, -307.9969, 847.4158, 17.5396, 172.1449, 1228.4283, 89.8821, 12000, CAMERA_MOVE);
		SetTimerEx("TutDalje", 13000, false, "i", playerid);
	}
	else
	{
		TutorijalProgres[playerid]++;
		TogglePlayerSpectating(playerid, true);
		ClearChat(playerid); 
		SCM(playerid, COLOR_RED, "{FFFFFF}========================={1985A6}[ SPAWN ]{FFFFFF}=========================");
		SCM(playerid, COLOR_RED, "{1985A6}Spawn {FFFFFF}je mesto na kom ce se vas igrac stvoriti za par trenutaka.");
		SCM(playerid, COLOR_RED, "{FFFFFF}Zivecete u ovom hotelu sve dok ne kupite svoju kucu/stan/vikendicu.");
		SCM(playerid, COLOR_RED, "{FFFFFF}Ako vam je potreban prevoz, uzmite rent ili pozovite taxi!");
		SCM(playerid, COLOR_RED, "{FFFFFF}Za kraj, zelimo vam puno srece i srecnog igranja, vas {1985A6}PerfectCrime {FFFFFF}Admin tim!");
		SCM(playerid, COLOR_RED, "{FFFFFF}===========================================================");
		SetPlayerCameraPos(playerid, 172.9556, 1229.0145, 90.8270);
		SetPlayerCameraLookAt(playerid, 172.1449, 1228.4283, 89.8821);
		InterpolateCameraPos(playerid, 172.9556, 1229.0145, 90.8270, 82.8689, 1177.6044, 25.2561, 15000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, 172.1449, 1228.4283, 89.8821, 81.9618, 1177.1821, 24.9562, 15000, CAMERA_MOVE);
		SetTimerEx("TutDalje", 20000, false, "i", playerid);
	}
}

forward TutDalje(playerid);
public TutDalje(playerid)
{
	if(TutorijalProgres[playerid] == 13)
	{
		Registracija(playerid);
		ulogovan[playerid] = 1;
	}
	else
	{
		PrikaziTutorijal(playerid);
	}
	return 1;
}

stock Registracija(playerid)
{
	new pName[MAX_PLAYER_NAME], string[128], ip[64];
	GetPlayerIp(playerid, ip, 64);
	PlayerInfo[playerid][pBanka] = 0;
	TogglePlayerSpectating(playerid, false);
	SpawnPlayer(playerid);
	taz_GivePlayerMoney(playerid, 20000);
	SetCameraBehindPlayer(playerid);
	PlayerInfo[playerid][pLevel] = 1;
	PlayerInfo[playerid][pTutorijal] = 1;
	SavePlayer(playerid);
	ClearChat(playerid);
	SCM(playerid, COLOR_RED, "{FFFFFF}Cestitamo, uspesno ste zavrsili tutorijal i registrovali vas nalog!");
	SCM(playerid, COLOR_RED, "{FFFFFF}Ako vam je potrebna pomoc oko komandi, koristite {1985A6}/help.");
	SCM(playerid, COLOR_RED, "{FFFFFF}Ako vam je potrebna pomoc od helpera, pozovite ga na {1985A6}/askq!");
	SCM(playerid, COLOR_RED, "{FFFFFF}Zelimo vam da uzivate u iskustvu koje vam pruza nas server, vas {1985A6}PerfectCrime {FFFFFF}Admin tim!");
	GetPlayerName(playerid, pName, sizeof(pName));
	format(string, 128, "Igrac {755600}%s {FFFFFF}se upravo registrovao na server! Ponudite mu pomoc! IP: {755600}%s", pName, ip);
	RegPoruka(string);
	format(string, 128, "Igrac %s se upravo registrovao na server! IP: %s", pName, ip);
	RegLog(string);
}

forward TDUpdate();
public TDUpdate()
{
	new br = BrojIgraca();

	//VREME
	new string[128], year, mounth, day, hours, minutes, sec;
	getdate(year, mounth, day), gettime(hours, minutes, sec);
	format(string, sizeof(string), "%s%d/%s%d/%s%d", ((day < 10) ? ("0") : ("")), day, ((mounth < 10) ? ("0") : ("")), mounth, ((year < 10) ? ("0") : ("")), year);
	TextDrawSetString(Textdraw6, string);
	format(string, sizeof(string), "%s%d:%s%d", ((hours < 10) ? ("0") : ("")), hours, ((minutes < 10) ? ("0") : ("")), minutes);
	TextDrawSetString(Textdraw5, string);
	SetWorldTime(hours);
	format(string, 128, "Online: %d", br);
	TextDrawSetString(Textdraw8, string);
	format(string, 128, "Rekord: %d", rekord);
	TextDrawSetString(Textdraw11, string);

	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		new str[16];
		if(PlayerInfo[i][pGlad] < 100) format(str, 16, "~w~%d%", PlayerInfo[i][pGlad]);
		if(PlayerInfo[i][pGlad] < 50) format(str, 16, "~y~%d%", PlayerInfo[i][pGlad]);
		if(PlayerInfo[i][pGlad] < 10) format(str, 16, "~r~%d%", PlayerInfo[i][pGlad]);
		PlayerTextDrawSetString(i, Textdrawp0[i], str);
		if(PlayerInfo[i][pZedj] < 100) format(str, 16, "~w~%d%", PlayerInfo[i][pZedj]);
		if(PlayerInfo[i][pZedj] < 50) format(str, 16, "~y~%d%", PlayerInfo[i][pZedj]);
		if(PlayerInfo[i][pZedj] < 10) format(str, 16, "~r~%d%", PlayerInfo[i][pZedj]);
		PlayerTextDrawSetString(i, Textdrawp1[i], str);

		PlayerTextDrawSetPreviewModel(i, Textdrawp6[i], GetPlayerSkin(i));

		new bankastring[128];
		format(bankastring, sizeof(bankastring), "$%d", PlayerInfo[i][pBanka]);
		PlayerTextDrawSetString(i, Textdrawp3[i], bankastring);
		format(bankastring, sizeof(bankastring), "%dg", PlayerInfo[i][pZlato]);
		PlayerTextDrawSetString(i, Textdrawp4[i], bankastring);
		format(bankastring, sizeof(bankastring), "$%d", PlayerInfo[i][pPlata]);
		PlayerTextDrawSetString(i, Textdrawp5[i], bankastring);
		format(bankastring, sizeof(bankastring), "%d min", PlayerInfo[i][pDoPlate]);
		PlayerTextDrawSetString(i, Textdrawp2[i], bankastring);

		SetPlayerScore(i, PlayerInfo[i][pLevel]);
	}

	if(br > rekord)
	{
		format(string, sizeof(string), "{1985A6}[Rekord]: {FFFFFF}Uspesno je oboren rekord sa {1985A6}%d {FFFFFF}na {1985A6}%d {FFFFFF}online igraca!", rekord, br);
		for(new i = 0; i < MAX_PLAYERS; i++)
		{
			if(ulogovan[i] == 1)
			{
				SCM(i, -1, string);
			}
		}
		rekord = br;
		SacuvajStatistiku();
	}

}


forward CarUpdate(playerid);
public CarUpdate(playerid)
{
	if(IsPlayerInAnyVehicle(playerid))
	{
	    new vehid = GetPlayerVehicleID(playerid);
	    new modelid = GetVehicleModel(vehid);
	    new Float:speed = GetSpeed(playerid);
	    new Float:hp;
	    GetVehicleHealth(vehid, hp);
	    new ime[128], hps[128], speeds[128], fuel[128];
	    format(ime, sizeof(ime), "%s", ImenaVozila[modelid-400]);
	    format(hps, sizeof(hps), "hp:%d.0", floatround(hp, floatround_round));
	    format(speeds, sizeof(speeds), "%dkm/h", floatround(speed, floatround_round));
	    format(fuel, sizeof(fuel), "%dl", VehInfo[vehid][vFuel]);

	    PlayerTextDrawSetString(playerid, BrzinomerTD[playerid][10], "Benzin");
	    PlayerTextDrawSetString(playerid, BrzinomerTD[playerid][11], fuel);
	    PlayerTextDrawSetString(playerid, BrzinomerTD[playerid][12], ime);
	    PlayerTextDrawSetString(playerid, BrzinomerTD[playerid][9], speeds);

	    if(ppolaze[playerid] == 1 && speed >=80)
	    {
	    	pKazneni[playerid]++;
	    	SCM(playerid, COLOR_RED, "[Auto Skola]: {FFFFFF}Prekoracili ste brzinu, dobili ste kazneni poen!");
	    	if(pKazneni[playerid]>=10)
	    	{
	    		RemovePlayerFromVehicle(playerid);
				ClearAnimations(playerid);
				TogglePlayerControllable(playerid, 1);
				SetVehicleToRespawn(vehid);
				obadirdozvole[playerid] = 0;
				SCM(playerid, COLOR_RED, "[Auto Skola]: {FFFFFF}Nazalost, skupili ste previse kaznenih poena, ispit je prekinut!");
				ppolaze[playerid] = 0;
	    	}
	    }
	}
	return 1;
}
forward LoginTimer(playerid);
public LoginTimer(playerid)
{
	SCM(playerid, COLOR_RED, "[PC]: {FFFFFF}Niste se prijavili na vreme, izbaceni ste sa servera!");
	Kick(playerid);
	return 1;
}
forward ZatvoriVipGate();
public ZatvoriVipGate()
{
	MoveDynamicObject(vipgate, 1108.47034, -1741.14038, 15.23720, 2.0, 0.00000, -1.00000, 90.00000);
	return 1;
}
forward UpaliAuto(playerid);
public UpaliAuto(playerid)
{
	new broj;
	broj = random(4);
	if(broj == 1)
	{
	    GameTextForPlayer(playerid, "~r~Motor se nije upalio!", 3000, 3);
	    TogglePlayerControllable(playerid, 1);
	    new str[128], name[MAX_PLAYER_NAME];
	    GetPlayerName(playerid, name, sizeof(name));
	    format(str, sizeof(str), "{CF80A9}* %s ne uspeva da upali motor.", name);
		SendMes(20.0, playerid, COLOR_RED, str);
	}
	else
	{
	    new vehid = GetPlayerVehicleID(playerid);
	    GameTextForPlayer(playerid, "~g~Motor se uspesno upalio!", 3000, 3);
	    TogglePlayerControllable(playerid, 1);
	    VehInfo[vehid][vEngine] = 1;
     	SetVehicleParamsEx(vehid, VehInfo[vehid][vEngine], VehInfo[vehid][vLights], VehInfo[vehid][vAlarm], VehInfo[vehid][vDoor], VehInfo[vehid][vBonnet], VehInfo[vehid][vBonnet], VehInfo[vehid][vObj]);
     	new str[128], name[MAX_PLAYER_NAME];
     	GetPlayerName(playerid, name, sizeof(name));
	    format(str, sizeof(str), "{CF80A9}* %s je uspesno upalio motor.", name);
		SendMes(20.0, playerid, COLOR_RED, str);
	}
	return 1;
}
forward Fuel();
public Fuel()
{
	for(new i = 0; i < MAX_PROMOTERS; i++)
	{
	    new id = GetPlayerID(PromoterInfo[i][promName]), str[128];
	    format(str, 128, "Niko");
	    if(id == -1)
	    {
	        if(strcmp(PromoterInfo[i][promName], str))
	        {
	            PromoterInfo[i][promNeaktivnost]++;
	        }
	    }
	    SavePromoter(i);
	}
	for(new i = 0; i < MAX_VEHICLES; i++)
	{
	    if(VehInfo[i][vEngine] == 1 && VoziloInfo[i][vRent] != 1 && VoziloInfo[i][vAdmin] != 1 && VoziloInfo[i][vAutoskola] != 1 && VoziloInfo[i][vHelper] != 1 && VoziloInfo[i][vVip] != 1 && VoziloInfo[i][vPromoter] != 1 )
	    {
	        VehInfo[i][vFuel]--;
	        if(VehInfo[i][vFuel] <= 0)
	        {
	            VehInfo[i][vEngine] = 0;
	            SetVehicleParamsEx(i, VehInfo[i][vEngine], VehInfo[i][vLights], VehInfo[i][vAlarm], VehInfo[i][vDoor], VehInfo[i][vBonnet], VehInfo[i][vBonnet], VehInfo[i][vObj]);
	        }
	        VoziloInfo[i][vGorivo] = VehInfo[i][vFuel];
	    }
	}
	for(new i = 0; i < MAX_ADMINS; i++)
	{
	    new id = GetPlayerID(AdminInfo[i][aName]);
	    if(id == -1)
	    {
			new str[128];
			format(str, 128, "Niko");
			if(!strcmp(str, AdminInfo[i][aName])){}
			else
			{
			    AdminInfo[i][aNeaktivnost]++;
			}
	    }
	    else
	    {
	        if(IsPlayerConnected(GetPlayerID(AdminInfo[i][aName])) && pADuty[id] == 1)
	        {
	            AdminInfo[i][aDuty]++;
	        }
	    }
	    SaveAdmin(i);
	}
	for(new i = 0; i < MAX_HELPERS; i++)
	{
	    new id = GetPlayerID(HelperInfo[i][hlName]);
	    if(id == -1)
	    {
			new str[128];
			format(str, 128, "Niko");
			if(!strcmp(str, HelperInfo[i][hlName])){}
			else
			{
			    HelperInfo[i][hlNeaktivnost]++;
			}
	    }
	    else
	    {
	        if(pADuty[id] == 1)
	        {
	            HelperInfo[i][hlDuty]++;
	        }
	    }
	    SaveHelper(i);
	}
	return 1;
}
forward LoadOrgs(id, name[], value[]);
public LoadOrgs(id, name[], value[])
{
	INI_String("Ime", OrgInfo[id][orgIme], 128);
	INI_String("Leader", OrgInfo[id][orgLeader], 128);
	INI_Int("LeaderNeaktivnost", OrgInfo[id][orgLeaderNeaktivnost]);
	INI_Int("LeaderSkin", OrgInfo[id][orgLeaderSkin]);
	INI_String("Member1", OrgInfo[id][orgMember1], 128);
	INI_String("Member2", OrgInfo[id][orgMember2], 128);
	INI_String("Member3", OrgInfo[id][orgMember3], 128);
	INI_String("Member4", OrgInfo[id][orgMember4], 128);
	INI_String("Member5", OrgInfo[id][orgMember5], 128);
	INI_String("Member6", OrgInfo[id][orgMember6], 128);
	INI_String("Member7", OrgInfo[id][orgMember7], 128);
	INI_String("Member8", OrgInfo[id][orgMember8], 128);
	INI_String("Member9", OrgInfo[id][orgMember9], 128);
	INI_String("Member10", OrgInfo[id][orgMember10], 128);
	INI_String("Member11", OrgInfo[id][orgMember11], 128);
	INI_String("Member12", OrgInfo[id][orgMember12], 128);
	INI_String("Member13", OrgInfo[id][orgMember13], 128);
	INI_String("Member14", OrgInfo[id][orgMember14], 128);
	INI_String("Member15", OrgInfo[id][orgMember15], 128);
	INI_String("Member16", OrgInfo[id][orgMember16], 128);
	INI_String("Member17", OrgInfo[id][orgMember17], 128);
	INI_String("Member18", OrgInfo[id][orgMember18], 128);
	INI_String("Member19", OrgInfo[id][orgMember19], 128);
	INI_String("Member20", OrgInfo[id][orgMember20], 128);
	INI_Int("SefMoney", OrgInfo[id][orgSefMoney]);
	INI_Int("SefMats", OrgInfo[id][orgSefMats]);
	INI_Int("SefDroga", OrgInfo[id][orgSefDrugs]);
	INI_Int("Drzavna", OrgInfo[id][orgDrzavna]);
	INI_String("Rank1", OrgInfo[id][orgRank1], 128);
	INI_String("Rank2", OrgInfo[id][orgRank2], 128);
	INI_String("Rank3", OrgInfo[id][orgRank3], 128);
	INI_String("Rank4", OrgInfo[id][orgRank4], 128);
	INI_String("Rank5", OrgInfo[id][orgRank5], 128);
	INI_String("Rank6", OrgInfo[id][orgRank6], 128);
	INI_String("Rank7", OrgInfo[id][orgRank7], 128);
	INI_Int("Rank1Skin", OrgInfo[id][orgRank1Skin]);
	INI_Int("Rank2Skin", OrgInfo[id][orgRank2Skin]);
	INI_Int("Rank3Skin", OrgInfo[id][orgRank3Skin]);
	INI_Int("Rank4Skin", OrgInfo[id][orgRank4Skin]);
	INI_Int("Rank5Skin", OrgInfo[id][orgRank5Skin]);
	INI_Int("Rank6Skin", OrgInfo[id][orgRank6Skin]);
	INI_Int("Rank7Skin", OrgInfo[id][orgRank7Skin]);
	INI_String("LeaderRankName", OrgInfo[id][orgLeaderRankName], 128);
	INI_Float("X", OrgInfo[id][orgX]);
	INI_Float("Y", OrgInfo[id][orgY]);
	INI_Float("Z", OrgInfo[id][orgZ]);
	return 1;
}
forward LoadAutomat(id, name[], value[]);
public LoadAutomat(id, name[], value[])
{
	INI_Float("X", AutomatInfo[id][aX]);
	INI_Float("Y", AutomatInfo[id][aY]);
	INI_Float("Z", AutomatInfo[id][aZ]);
	return 1;
}

forward UcitajStatistiku(name[], value[]);
public UcitajStatistiku(name[], value[])
{
	new str[64];
	INI_Int("Rekord", rekord);
	INI_Int("FCR", fcr);
	INI_Int("BBR", bbr);
	for(new i = 0; i < 52; i++)
 	{
 		format(str, 64, "zalihevozila%d", i);
 		INI_Int(str, zalihevozila[i]);
 	}
	return 1;
}

forward LoadVozila(id, name[], value[]);
public LoadVozila(id, name[], value[])
{
	INI_Int("ID", VoziloInfo[id][vID]);
	INI_Int("Ownable", VoziloInfo[id][vOwnable]);
	INI_String("Owner", VoziloInfo[id][vOwner], 128);
	INI_Int("Cena", VoziloInfo[id][vCena]);
	INI_Int("Neaktivnost", VoziloInfo[id][vNeaktivnost]);
	INI_Int("Registracija", VoziloInfo[id][vRegistracija]);
	INI_Int("Autoskola", VoziloInfo[id][vAutoskola]);
	INI_Int("PosaoID", VoziloInfo[id][vPosaoID]);
	INI_Int("OrgID", VoziloInfo[id][vOrgID]);
	INI_Int("Rent", VoziloInfo[id][vRent]);
	INI_Int("Admin", VoziloInfo[id][vAdmin]);
	INI_Int("Helper", VoziloInfo[id][vHelper]);
	INI_Int("Vip", VoziloInfo[id][vVip]);
	INI_Int("Promoter", VoziloInfo[id][vPromoter]);
	INI_Int("Salon", VoziloInfo[id][vSalon]);
	INI_Int("Boja", VoziloInfo[id][vBoja]);
	INI_Int("Boja2", VoziloInfo[id][vBoja2]);
	INI_Int("USalonu", VoziloInfo[id][vUSalonu]);
	INI_Int("Gorivo", VoziloInfo[id][vGorivo]);
	INI_Float("X", VoziloInfo[id][vX]);
	INI_Float("Y", VoziloInfo[id][vY]);
	INI_Float("Z", VoziloInfo[id][vZ]);
	INI_Float("Rot", VoziloInfo[id][vRot]);
	INI_Int("Dozvola", VoziloInfo[id][vDozvola]);
	INI_Int("Spoiler", VoziloInfo[id][vSpoiler]);
	INI_Int("Hood", VoziloInfo[id][vHood]);
	INI_Int("Roof", VoziloInfo[id][vRoof]);
	INI_Int("SideSkirt", VoziloInfo[id][vSideSkirt]);
	INI_Int("Lamps", VoziloInfo[id][vLamps]);
	INI_Int("Nitro", VoziloInfo[id][vNitro]);
	INI_Int("Exhaust", VoziloInfo[id][vExhaust]);
	INI_Int("Wheels", VoziloInfo[id][vWheels]);
	INI_Int("Hydraulics", VoziloInfo[id][vHydraulics]);
	INI_Int("FrontBumper", VoziloInfo[id][vFrontBumper]);
	INI_Int("RearBumper", VoziloInfo[id][vRearBumper]);
	INI_Int("VentRight", VoziloInfo[id][vVentRight]);
	INI_Int("VentLeft", VoziloInfo[id][vVentLeft]);
	INI_Int("PainJob", VoziloInfo[id][vPainJob]);
	INI_Int("Event", VoziloInfo[id][vEvent]);
	return 1;
}
forward PrikaziTD(playerid);
public PrikaziTD(playerid)
{
	TextDrawShowForPlayer(playerid, Textdraw0);
	TextDrawShowForPlayer(playerid, Textdraw1);
	TextDrawShowForPlayer(playerid, Textdraw2);
	TextDrawShowForPlayer(playerid, Textdraw3);
	TextDrawShowForPlayer(playerid, Textdraw4);
	TextDrawShowForPlayer(playerid, Textdraw5);
	TextDrawShowForPlayer(playerid, Textdraw6);
	TextDrawShowForPlayer(playerid, Textdraw7);
	TextDrawShowForPlayer(playerid, Textdraw8);
	TextDrawShowForPlayer(playerid, Textdraw9);
	TextDrawShowForPlayer(playerid, Textdraw10);
	TextDrawShowForPlayer(playerid, Textdraw11);
	TextDrawShowForPlayer(playerid, Textdraw12);
	TextDrawShowForPlayer(playerid, Textdraw13);
	TextDrawShowForPlayer(playerid, Textdraw14);
	TextDrawShowForPlayer(playerid, Textdraw15);
	TextDrawShowForPlayer(playerid, Textdraw16);
	TextDrawShowForPlayer(playerid, Textdraw17);
	TextDrawShowForPlayer(playerid, Textdraw18);
	TextDrawShowForPlayer(playerid, Textdraw19);
	TextDrawShowForPlayer(playerid, Textdraw20);
	TextDrawShowForPlayer(playerid, Textdraw21);
	TextDrawShowForPlayer(playerid, Textdraw22);
	TextDrawShowForPlayer(playerid, Textdraw23);
	TextDrawShowForPlayer(playerid, Textdraw24);
	TextDrawShowForPlayer(playerid, Textdraw25);
	TextDrawShowForPlayer(playerid, Textdraw26);
	TextDrawShowForPlayer(playerid, Textdraw27);
	TextDrawShowForPlayer(playerid, Textdraw28);
	TextDrawShowForPlayer(playerid, Textdraw29);
	TextDrawShowForPlayer(playerid, Textdraw30);
	TextDrawShowForPlayer(playerid, Textdraw31);
	TextDrawShowForPlayer(playerid, Textdraw32);
	TextDrawShowForPlayer(playerid, Textdraw33);
	TextDrawShowForPlayer(playerid, Textdraw34);
	TextDrawShowForPlayer(playerid, Textdraw35);
	TextDrawShowForPlayer(playerid, Textdraw36);
	TextDrawShowForPlayer(playerid, Textdraw37);
	TextDrawShowForPlayer(playerid, Textdraw38);
	TextDrawShowForPlayer(playerid, Textdraw39);
	TextDrawShowForPlayer(playerid, Textdraw40);
	TextDrawShowForPlayer(playerid, Textdraw41);
	TextDrawShowForPlayer(playerid, Textdraw42);
	TextDrawShowForPlayer(playerid, Textdraw43);

	PlayerTextDrawShow(playerid, Textdrawp0[playerid]);
	PlayerTextDrawShow(playerid, Textdrawp1[playerid]);
	PlayerTextDrawShow(playerid, Textdrawp2[playerid]);
	PlayerTextDrawShow(playerid, Textdrawp3[playerid]);
	PlayerTextDrawShow(playerid, Textdrawp4[playerid]);
	PlayerTextDrawShow(playerid, Textdrawp5[playerid]);
	PlayerTextDrawShow(playerid, Textdrawp6[playerid]);
	return 1;
}
forward SakrijTD(playerid);
public SakrijTD(playerid)
{
	TextDrawHideForPlayer(playerid, Textdraw0);
	TextDrawHideForPlayer(playerid, Textdraw1);
	TextDrawHideForPlayer(playerid, Textdraw2);
	TextDrawHideForPlayer(playerid, Textdraw3);
	TextDrawHideForPlayer(playerid, Textdraw4);
	TextDrawHideForPlayer(playerid, Textdraw5);
	TextDrawHideForPlayer(playerid, Textdraw6);
	TextDrawHideForPlayer(playerid, Textdraw7);
	TextDrawHideForPlayer(playerid, Textdraw8);
	TextDrawHideForPlayer(playerid, Textdraw9);
	TextDrawHideForPlayer(playerid, Textdraw10);
	TextDrawHideForPlayer(playerid, Textdraw11);
	TextDrawHideForPlayer(playerid, Textdraw12);
	TextDrawHideForPlayer(playerid, Textdraw13);
	TextDrawHideForPlayer(playerid, Textdraw14);
	TextDrawHideForPlayer(playerid, Textdraw15);
	TextDrawHideForPlayer(playerid, Textdraw16);
	TextDrawHideForPlayer(playerid, Textdraw17);
	TextDrawHideForPlayer(playerid, Textdraw18);
	TextDrawHideForPlayer(playerid, Textdraw19);
	TextDrawHideForPlayer(playerid, Textdraw20);
	TextDrawHideForPlayer(playerid, Textdraw21);
	TextDrawHideForPlayer(playerid, Textdraw22);
	TextDrawHideForPlayer(playerid, Textdraw23);
	TextDrawHideForPlayer(playerid, Textdraw24);
	TextDrawHideForPlayer(playerid, Textdraw25);
	TextDrawHideForPlayer(playerid, Textdraw26);
	TextDrawHideForPlayer(playerid, Textdraw27);
	TextDrawHideForPlayer(playerid, Textdraw28);
	TextDrawHideForPlayer(playerid, Textdraw29);
	TextDrawHideForPlayer(playerid, Textdraw30);
	TextDrawHideForPlayer(playerid, Textdraw31);
	TextDrawHideForPlayer(playerid, Textdraw32);
	TextDrawHideForPlayer(playerid, Textdraw33);
	TextDrawHideForPlayer(playerid, Textdraw34);
	TextDrawHideForPlayer(playerid, Textdraw35);
	TextDrawHideForPlayer(playerid, Textdraw36);
	TextDrawHideForPlayer(playerid, Textdraw37);
	TextDrawHideForPlayer(playerid, Textdraw38);
	TextDrawHideForPlayer(playerid, Textdraw39);
	TextDrawHideForPlayer(playerid, Textdraw40);
	TextDrawHideForPlayer(playerid, Textdraw41);
	TextDrawHideForPlayer(playerid, Textdraw42);
	TextDrawHideForPlayer(playerid, Textdraw43);

	PlayerTextDrawHide(playerid, Textdrawp0[playerid]);
	PlayerTextDrawHide(playerid, Textdrawp1[playerid]);
	PlayerTextDrawHide(playerid, Textdrawp2[playerid]);
	PlayerTextDrawHide(playerid, Textdrawp3[playerid]);
	PlayerTextDrawHide(playerid, Textdrawp4[playerid]);
	PlayerTextDrawHide(playerid, Textdrawp5[playerid]);
	PlayerTextDrawHide(playerid, Textdrawp6[playerid]);
	return 1;
}

forward SalonTDPrikazi(playerid);
public SalonTDPrikazi(playerid)
{
	PlayerTextDrawShow(playerid, SalonTD[playerid]);
	PlayerTextDrawShow(playerid, SalonTD1[playerid]);
	PlayerTextDrawShow(playerid, SalonTD2[playerid]);
	PlayerTextDrawShow(playerid, SalonTD3[playerid]);
	PlayerTextDrawShow(playerid, SalonTD4[playerid]);
	PlayerTextDrawShow(playerid, SalonTD5[playerid]);
	PlayerTextDrawShow(playerid, SalonTD6[playerid]);
	PlayerTextDrawShow(playerid, SalonTD9[playerid]);
	PlayerTextDrawShow(playerid, SalonTD7[playerid]);
	PlayerTextDrawShow(playerid, SalonTD8[playerid]);
	return 1;
}

forward SalonTDSakrij(playerid);
public SalonTDSakrij(playerid)
{
	PlayerTextDrawHide(playerid, SalonTD[playerid]);
	PlayerTextDrawHide(playerid, SalonTD1[playerid]);
	PlayerTextDrawHide(playerid, SalonTD2[playerid]);
	PlayerTextDrawHide(playerid, SalonTD3[playerid]);
	PlayerTextDrawHide(playerid, SalonTD4[playerid]);
	PlayerTextDrawHide(playerid, SalonTD5[playerid]);
	PlayerTextDrawHide(playerid, SalonTD6[playerid]);
	PlayerTextDrawHide(playerid, SalonTD7[playerid]);
	PlayerTextDrawHide(playerid, SalonTD8[playerid]);
	PlayerTextDrawHide(playerid, SalonTD9[playerid]);
	return 1;
}
forward LoadOSPorts(id, name[], value[]);
public LoadOSPorts(id, name[], value[])
{
	INI_String("Ime", OSPortInfo[id][osportIme], 32);
	INI_Float("X", OSPortInfo[id][osportX]);
	INI_Float("Y", OSPortInfo[id][osportY]);
	INI_Float("Z", OSPortInfo[id][osportZ]);
	return 1;
}
forward LoadFCPorts(id, name[], value[]);
public LoadFCPorts(id, name[], value[])
{
	INI_String("Ime", FCPortInfo[id][fcportIme], 32);
	INI_Float("X", FCPortInfo[id][fcportX]);
	INI_Float("Y", FCPortInfo[id][fcportY]);
	INI_Float("Z", FCPortInfo[id][fcportZ]);
	return 1;
}
forward LoadVipPorts(id, name[], value[]);
public LoadVipPorts(id, name[], value[])
{
	INI_String("Ime", VipPortInfo[id][vipportIme], 32);
	INI_Float("X", VipPortInfo[id][vipportX]);
	INI_Float("Y", VipPortInfo[id][vipportY]);
	INI_Float("Z", VipPortInfo[id][vipportZ]);
	return 1;
}
forward LoadPromPorts(id, name[], value[]);
public LoadPromPorts(id, name[], value[])
{
	INI_String("Ime", PromPortInfo[id][promportIme], 32);
	INI_Float("X", PromPortInfo[id][promportX]);
	INI_Float("Y", PromPortInfo[id][promportY]);
	INI_Float("Z", PromPortInfo[id][promportZ]);
	return 1;
}
forward LoadBBPorts(id, name[], value[]);
public LoadBBPorts(id, name[], value[])
{
	INI_String("Ime", BBPortInfo[id][bbportIme], 32);
	INI_Float("X", BBPortInfo[id][bbportX]);
	INI_Float("Y", BBPortInfo[id][bbportY]);
	INI_Float("Z", BBPortInfo[id][bbportZ]);
	return 1;
}
forward LoadJBPorts(id, name[], value[]);
public LoadJBPorts(id, name[], value[])
{
	INI_String("Ime", JBPortInfo[id][jbportIme], 32);
	INI_Float("X", JBPortInfo[id][jbportX]);
	INI_Float("Y", JBPortInfo[id][jbportY]);
	INI_Float("Z", JBPortInfo[id][jbportZ]);
	return 1;
}
forward LoadORGPorts(id, name[], value[]);
public LoadORGPorts(id, name[], value[])
{
	INI_String("Ime", ORGPortInfo[id][orgportIme], 32);
	INI_Float("X", ORGPortInfo[id][orgportX]);
	INI_Float("Y", ORGPortInfo[id][orgportY]);
	INI_Float("Z", ORGPortInfo[id][orgportZ]);
	return 1;
}

forward LoadGPS(id, name[], value[]);
public LoadGPS(id, name[], value[])
{
	INI_String("Ime", GPSInfo[id][gpsIme], 128);
	INI_Float("X", GPSInfo[id][gX]);
	INI_Float("Y", GPSInfo[id][gY]);
	INI_Float("Z", GPSInfo[id][gZ]);
	return 1;
}
forward RefreshPickupLabel(id, tip);
public RefreshPickupLabel(id, tip)
{
	if(id == 0)
	{
	    if(tip == 1)
	    {
		    for(new i = 0; i <= MAX_HOUSES; i++)
		    {
		        DestroyPickup(hPickup[i]);
		        DestroyDynamic3DTextLabel(hLabel[i]);
		        if(HouseInfo[i][hOwned] == 0)
				{
				    new string[512], tipk[64];
				  	if(HouseInfo[i][hTip] == 1) format(tipk, 64, "Stan");
				  	if(HouseInfo[i][hTip] == 2) format(tipk, 64, "Mala kuca");
				  	if(HouseInfo[i][hTip] == 3) format(tipk, 64, "Srednja kuca");
				  	if(HouseInfo[i][hTip] == 4) format(tipk, 64, "Velika kuca");
				  	if(HouseInfo[i][hTip] == 5) format(tipk, 64, "Vila");
				    format(string, sizeof(string), "{1985A6}[ {FFFFFF}Kuca na prodaju {1985A6}]\nOwner: {FFFFFF}Niko\n{1985A6}Cena: {FFFFFF}$%d\n{1985A6}Level: {FFFFFF}%d\n{1985A6}Tip: {FFFFFF}%s\n{1985A6}Adresa: {FFFFFF}%d\n/kupikucu", HouseInfo[i][hCena], HouseInfo[i][hLevel], tipk, i);
				    hPickup[i] = CreatePickup(1273, 1, HouseInfo[i][hX], HouseInfo[i][hY], HouseInfo[i][hZ]);
				    hLabel[i] = CreateDynamic3DTextLabel(string, COLOR_WHITE, HouseInfo[i][hX]+0.1, HouseInfo[i][hY], HouseInfo[i][hZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
				}
				else
				{
				    new string[512], tipk[64];
				  	if(HouseInfo[i][hTip] == 1) format(tipk, 64, "Stan");
				  	if(HouseInfo[i][hTip] == 2) format(tipk, 64, "Mala kuca");
				  	if(HouseInfo[i][hTip] == 3) format(tipk, 64, "Srednja kuca");
				  	if(HouseInfo[i][hTip] == 4) format(tipk, 64, "Velika kuca");
				  	if(HouseInfo[i][hTip] == 5) format(tipk, 64, "Vila");
				    format(string, sizeof(string), "{1985A6}[ {FFFFFF}Kupljena kuca {1985A6}]\nOwner: {FFFFFF}%s\n{1985A6}Cena: {FFFFFF}$%d\n{1985A6}Level: {FFFFFF}%d\n{1985A6}Tip: {FFFFFF}%s\n{1985A6}Adresa: {FFFFFF}%d", HouseInfo[i][hOwner], HouseInfo[i][hCena], HouseInfo[i][hLevel], tipk, i);
				    hPickup[i] = CreatePickup(1272, 1, HouseInfo[i][hX], HouseInfo[i][hY], HouseInfo[i][hZ]);
				    hLabel[i] = CreateDynamic3DTextLabel(string, COLOR_WHITE, HouseInfo[i][hX]+0.1, HouseInfo[i][hY], HouseInfo[i][hZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
				}
		    }
	    }
	    if(tip == 2)
	    {
		    for(new i = 0; i <= MAX_ORGS; i++)
		    {
		        DestroyPickup(orgPickup[i]);
		        Delete3DTextLabel(orgLabel[i]);
		        new string[128];
	        	format(string, sizeof(string), "{1985A6}[ {FFFFFF}%s {1985A6}]\n{FFFFFF}Leader: {1985A6}%s\n{FFFFFF}Pritisnite {1985A6}ENTER {FFFFFF}da udjete!\nAdresa: {1985A6}%d", OrgInfo[i][orgIme], OrgInfo[i][orgLeader], i);
	        	orgLabel[i] = Create3DTextLabel(string, COLOR_BLACK, OrgInfo[i][orgX], OrgInfo[i][orgY], OrgInfo[i][orgZ], 20.0, 0, 0);
	        	orgPickup[i] = CreatePickup(19132, 1, OrgInfo[i][orgX], OrgInfo[i][orgY], OrgInfo[i][orgZ]);
		    }
	    }
	}
	else
	{
	    if(tip == 1)
		{
		    DestroyPickup(hPickup[id]);
      		DestroyDynamic3DTextLabel(hLabel[id]);
      		if(HouseInfo[id][hOwned] == 0)
			{
			  	new string[512], tipk[64];
			  	if(HouseInfo[id][hTip] == 1) format(tipk, 64, "Stan");
			  	if(HouseInfo[id][hTip] == 2) format(tipk, 64, "Mala kuca");
			  	if(HouseInfo[id][hTip] == 3) format(tipk, 64, "Srednja kuca");
			  	if(HouseInfo[id][hTip] == 4) format(tipk, 64, "Velika kuca");
			  	if(HouseInfo[id][hTip] == 5) format(tipk, 64, "Vila");
			  	format(string, sizeof(string), "{1985A6}[ {FFFFFF}Kuca na prodaju {1985A6}]\nOwner: {FFFFFF}Niko\n{1985A6}Cena: {FFFFFF}$%d\n{1985A6}Level: {FFFFFF}%d\n{1985A6}Tip: {FFFFFF}%s\n{1985A6}Adresa: {FFFFFF}%d\n/kupikucu", HouseInfo[id][hCena], HouseInfo[id][hLevel], tipk, id);
			  	hPickup[id] = CreatePickup(1273, 1, HouseInfo[id][hX], HouseInfo[id][hY], HouseInfo[id][hZ]);
			  	hLabel[id] = CreateDynamic3DTextLabel(string, COLOR_WHITE, HouseInfo[id][hX]+0.1, HouseInfo[id][hY], HouseInfo[id][hZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
			}
			else
			{
			  	new string[512], tipk[64];
			  	if(HouseInfo[id][hTip] == 1) format(tipk, 64, "Stan");
			  	if(HouseInfo[id][hTip] == 2) format(tipk, 64, "Mala kuca");
			  	if(HouseInfo[id][hTip] == 3) format(tipk, 64, "Srednja kuca");
			  	if(HouseInfo[id][hTip] == 4) format(tipk, 64, "Velika kuca");
			  	if(HouseInfo[id][hTip] == 5) format(tipk, 64, "Vila");
			  	format(string, sizeof(string), "{1985A6}[ {FFFFFF}Kupljena kuca {1985A6}]\nOwner: {FFFFFF}%s\n{1985A6}Cena: {FFFFFF}$%d\n{1985A6}Level: {FFFFFF}%d\n{1985A6}Tip: {FFFFFF}%s\n{1985A6}Adresa: {FFFFFF}%d", HouseInfo[id][hOwner], HouseInfo[id][hCena], HouseInfo[id][hLevel], tipk, id);
			  	hPickup[id] = CreatePickup(1272, 1, HouseInfo[id][hX], HouseInfo[id][hY], HouseInfo[id][hZ]);
			  	hLabel[id] = CreateDynamic3DTextLabel(string, COLOR_WHITE, HouseInfo[id][hX]+0.1, HouseInfo[id][hY], HouseInfo[id][hZ], 10.0, INVALID_PLAYER_ID, INVALID_VEHICLE_ID, 0, 0, 0);
			}
		}
		if(tip == 2)
		{
		    DestroyPickup(orgPickup[id]);
      		Delete3DTextLabel(orgLabel[id]);
      		new string[128];
	     	format(string, sizeof(string), "{1985A6}[ {FFFFFF}%s {1985A6}]\n{FFFFFF}Leader: {1985A6}%s\n{FFFFFF}Pritisnite {1985A6}ENTER {FFFFFF}da udjete!\nAdresa: {1985A6}%d", OrgInfo[id][orgIme], OrgInfo[id][orgLeader], id);
	     	orgLabel[id] = Create3DTextLabel(string, COLOR_BLACK, OrgInfo[id][orgX], OrgInfo[id][orgY], OrgInfo[id][orgZ], 20.0, 0, 0);
	     	orgPickup[id] = CreatePickup(19132, 1, OrgInfo[id][orgX], OrgInfo[id][orgY], OrgInfo[id][orgZ]);
		}
	}
	return 1;
}
forward LoadAdmins(id, name[], value[]);
public LoadAdmins(id, name[], value[])
{
	INI_String("Name", AdminInfo[id][aName], 128);
	INI_Int("Neaktivnost", AdminInfo[id][aNeaktivnost]);
	INI_Int("Duty", AdminInfo[id][aDuty]);
	return 1;
}

forward LoadHelpers(id, name[], value[]);
public LoadHelpers(id, name[], value[])
{
	INI_String("Name", HelperInfo[id][hlName], 128);
	INI_Int("Neaktivnost", HelperInfo[id][hlNeaktivnost]);
	INI_Int("Duty", HelperInfo[id][hlDuty]);
	return 1;
}

forward LoadGates(id, name[], value[]);
public LoadGates(id, name[], value[])
{
	INI_Int("ObjID", GateInfo[id][gObjID]);
	INI_Float("X", GateInfo[id][gX]);
	INI_Float("Y", GateInfo[id][gY]);
	INI_Float("Z", GateInfo[id][gZ]);
	INI_Float("RX", GateInfo[id][gRX]);
	INI_Float("RY", GateInfo[id][gRY]);
	INI_Float("RZ", GateInfo[id][gRZ]);
	INI_Float("OX", GateInfo[id][gOX]);
	INI_Float("OY", GateInfo[id][gOY]);
	INI_Float("OZ", GateInfo[id][gOZ]);
	INI_Float("ORX", GateInfo[id][gORX]);
	INI_Float("ORY", GateInfo[id][gORY]);
	INI_Float("ORZ", GateInfo[id][gORZ]);
	INI_Int("OrgID", GateInfo[id][gOrgID]);
	INI_Int("Perm", GateInfo[id][gPerm]);
	return 1;
}
forward OtvoriGate(id);
public OtvoriGate(id)
{
	MoveDynamicObject(gate[id], GateInfo[id][gOX], GateInfo[id][gOY], GateInfo[id][gOZ], 5, GateInfo[id][gORX], GateInfo[id][gORY], GateInfo[id][gORZ]);
	SetTimerEx("ZatvoriGate", 7000, false, "i", id);
	return 1;
}
forward OtvoriNaplatniGate(id);
public OtvoriNaplatniGate(id)
{
	MoveDynamicObject(gate[id], GateInfo[id][gOX], GateInfo[id][gOY], GateInfo[id][gOZ], 0.1, GateInfo[id][gORX], GateInfo[id][gORY], GateInfo[id][gORZ]);
	SetTimerEx("ZatvoriNaplatniGate", 7000, false, "i", id);
	return 1;
}
forward ZatvoriGate(id);
public ZatvoriGate(id)
{
	MoveDynamicObject(gate[id], GateInfo[id][gX], GateInfo[id][gY], GateInfo[id][gZ], 5, GateInfo[id][gRX], GateInfo[id][gRY], GateInfo[id][gRZ]);
	return 1;
}
forward ZatvoriNaplatniGate(id);
public ZatvoriNaplatniGate(id)
{
	MoveDynamicObject(gate[id], GateInfo[id][gX], GateInfo[id][gY], GateInfo[id][gZ], 0.1, GateInfo[id][gRX], GateInfo[id][gRY], GateInfo[id][gRZ]);
	return 1;
}
forward BanMessage(playerid);
public BanMessage(playerid)
{
	new reason[128];
	format(reason, sizeof(reason), "Razlog: {1985A6}%s", PlayerInfo[playerid][pBanRazlog]);
	if(PlayerInfo[playerid][pBan] == 101)
	{
	    ClearChat(playerid);
	    SCM(playerid, -1, "========================={1985A6}[ BAN ]{FFFFFF}=========================");
	    SCM(playerid, -1, "Banovani ste sa servera! Trajanje bana: {1985A6}Zauvek.");
	    SCM(playerid, -1, reason);
	    SCM(playerid, -1, "Ako mislite da je ovo greska, prijavite je na {1985A6}forum!");
	    SCM(playerid, -1, "Link: {1985A6}www.pc-rp.com/forum");
	    SCM(playerid, -1, "=========================================================");
	    SetTimerEx("KickPlayer", 500, false, "i", playerid);
	}
	else
	{
	    ClearChat(playerid);
	    new poruka[128];
	    format(poruka, sizeof(poruka), "Banovani ste sa servera! Trajanje bana: {1985A6}%d dana.", PlayerInfo[playerid][pBan]);
	    SCM(playerid, -1, "========================={1985A6}[ BAN ]{FFFFFF}=========================");
	    SCM(playerid, -1, poruka);
	    SCM(playerid, -1, reason);
	    SCM(playerid, -1, "Ako mislite da je ovo greska, prijavite je na {1985A6}forum!");
	    SCM(playerid, -1, "Link: {1985A6}www.pc-rp.com/forum");
	    SCM(playerid, -1, "=========================================================");
	    SetTimerEx("KickPlayer", 500, false, "i", playerid);
	}
	return 1;
}
forward KickPlayer(id);
public KickPlayer(id)
{
	Kick(id);
	return 1;
}
forward LoadPromoters(id, name[], value[]);
public LoadPromoters(id, name[], value[])
{
	INI_String("Name", PromoterInfo[id][promName], 128);
	INI_Int("Neaktivnost", PromoterInfo[id][promNeaktivnost]);
	return 1;
}

forward NagradnaPoruka();
public NagradnaPoruka()
{
	new str[64], string[128];
	igraTraje = 1;
	for(new i = 0; i < 8; i++)
	{
	    new chr = random(sizeof(NasumicniKarakter));
	    strcat(str, NasumicniKarakter[chr]);
	}
	nagradnaPoruka = str;
	format(string, sizeof(string), "{1985A6}Nagradna igra: {FFFFFF}Igrac koji prvi ukuca {1985A6}%s {FFFFFF}dobija $1000 i nagradni poen!", nagradnaPoruka);
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(ulogovan[i] == 1)
		{
			SCM(i, -1, string);
		}
	}
	return 1;
}
forward PrikaziUvod(playerid);
public PrikaziUvod(playerid)
{
	if(UvodProgres[playerid] == 0)
	{
		TogglePlayerSpectating(playerid, true);
		UvodProgres[playerid]++;
		ClearChat(playerid);
		SCM(playerid, -1, "{8A8A8A}[Monolog vaseg karaktera]");
		SCM(playerid, -1, "{FFFFFF}Zivot u {1985A6}Liberty City{FFFFFF} me je iscrpeo... Moja proslost od tamo me izludjuje!");
		SCM(playerid, -1, "{FFFFFF}Nadam se da cu u novoj sredini pronaci nov zivot, novog sebe...");
		SCM(playerid, -1, "{FFFFFF}Zato sam i odlucio da se doselim u {1985A6}San Andreas{FFFFFF}, daleko je od moje proslosti...");
		SetTimerEx("PrikaziUvod", 15000, false, "i", playerid);
		SetPlayerCameraPos(playerid, 1348.0231, 1672.2528, 70.7148);
		SetPlayerCameraLookAt(playerid, 1347.2183, 1671.6495, 70.5451);
		InterpolateCameraPos(playerid, 1348.0231, 1672.2528, 70.7148, 1348.023, 1672.252, 70.714, 9000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, 1347.2183, 1671.6495, 70.5451, 1347.218, 1671.649, 70.545, 9000, CAMERA_MOVE);
	}
	else if(UvodProgres[playerid] == 1)
	{
		TogglePlayerSpectating(playerid, true);
		UvodProgres[playerid]++;
		ClearChat(playerid);
		SCM(playerid, -1, "{8A8A8A}[Monolog vaseg karaktera]");
		SCM(playerid, -1, "{FFFFFF}Konacno, slecem u {1985A6}San Andreas{FFFFFF}!");
		SCM(playerid, -1, "{FFFFFF}Nadam se da cu ovde pronaci svoju srecu i nov zivot, negde van grada...");
		SetPlayerCameraPos(playerid, 1348.0231, 1672.2528, 70.7148);
		SetPlayerCameraLookAt(playerid, 1347.2183, 1671.6495, 70.5451);
		InterpolateCameraPos(playerid, 1348.0231, 1672.2528, 70.7148, 1348.0231, 1672.2528, 70.7148, 9000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, 1347.2183, 1671.6495, 70.5451, 1348.7863, 1672.9081, 70.4501, 9000, CAMERA_MOVE);
		uvodAvion[playerid] = CreatePlayerObject(playerid, 1681, 1477.52942, 2055.96375, 65.08910, 15.00000, 0.00000, 180.00000, 300.0);
		MovePlayerObject(playerid, uvodAvion[playerid], 1477.52942, 1685.96375, 11.98240, 27.0, 0.00000, 0.00000, 180.00000);
		SetTimerEx("PrikaziUvod", 13000, false, "i", playerid);
	}
	else if(UvodProgres[playerid] == 2)
	{
		DestroyPlayerObject(playerid, uvodAvion[playerid]);
		TogglePlayerSpectating(playerid, true);
		UvodProgres[playerid]++;
		ClearChat(playerid);
		SCM(playerid, -1, "{8A8A8A}[Monolog vaseg karaktera]");
		SCM(playerid, -1, "{FFFFFF}Jos uvek se dvoumim gde bih mogao da pronadjem svoj mir...");
		SCM(playerid, -1, "{FFFFFF}Ne zelim veliki grad, zelim sto dalje od istog, sto dalje od problema...");
		SetPlayerCameraPos(playerid, 1457.7267, 1749.9481, 21.3399);
		SetPlayerCameraLookAt(playerid, 1457.8746, 1748.9521, 21.2401);
		InterpolateCameraPos(playerid, 1457.7267, 1749.9481, 21.3399, 1413.7125, 1550.0629, 33.2630, 15000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, 1457.8746, 1748.9521, 21.2401, 1414.3982, 1549.3241, 33.0532, 15000, CAMERA_MOVE);
		uvodAvion[playerid] = CreatePlayerObject(playerid, 1681, 1477.52942, 1705.96375, 11.98240, 0.00000, 0.00000, 180.00000, 300.0);
		MovePlayerObject(playerid, uvodAvion[playerid], 1477.52942, 1305.96375, 11.98240, 15.0, 0.00000, 0.00000, 180.00000);
		SetTimerEx("PrikaziUvod", 20000, false, "i", playerid);
	}
	else if(UvodProgres[playerid] == 3)
	{
		DestroyPlayerObject(playerid, uvodAvion[playerid]);
		TogglePlayerSpectating(playerid, true);
		UvodProgres[playerid]++;
		ClearChat(playerid);
		SCM(playerid, -1, "{8A8A8A}[Monolog vaseg karaktera]");
		SCM(playerid, -1, "{FFFFFF}Poneo sam jako malo stvari i novca, hteo sam sto pre da odem iz {1985A6}Liberty City-a{FFFFFF}!");
		SCM(playerid, -1, "{FFFFFF}Srecom, postoji par motela po okolnim selima koji mi mogu biti privremeni dom dok ne stanem na noge...");
		SetPlayerCameraPos(playerid, -1863.1470, 57.0256, 157.6715);
		SetPlayerCameraLookAt(playerid, -1863.8123, 57.7723, 157.4370);
		InterpolateCameraPos(playerid, -1863.1470, 57.0256, 157.6715, -1863.1470, 57.0256, 157.6715, 15000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, -1863.8123, 57.7723, 157.4370, -1863.7740, 57.8046, 157.3970, 15000, CAMERA_MOVE);
		SetTimerEx("PrikaziUvod", 20000, false, "i", playerid);
	}
	else if(UvodProgres[playerid] == 4)
	{
		TogglePlayerSpectating(playerid, true);
		UvodProgres[playerid]++;
		ClearChat(playerid);
		SCM(playerid, -1, "{8A8A8A}[Monolog vaseg karaktera]");
		SCM(playerid, -1, "{FFFFFF}Nova drzava, novi ja...");
		SCM(playerid, -1, "{FFFFFF}Koliko god ovo bezanje od starog zivota bilo neophodno, skupo me je kostalo!");
		SCM(playerid, -1, "{FFFFFF}Treba mi novi identitet, moracu ponovo da otvaram pasos, pravim licnu i bankovni racun, sve ispocetka...");
		SCM(playerid, -1, "{FFFFFF}Ali nema veze, sve ima svoju cenu, pa tako i novi pocetak!");
		SetPlayerCameraPos(playerid, 1757.9456, 1343.4266, 25.7660);
		SetPlayerCameraLookAt(playerid, 1757.0912, 1343.9445, 25.6552);
		InterpolateCameraPos(playerid, 1757.9456, 1343.4266, 25.7660, 1758.0027, 1343.4706, 24.9260, 20000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, 1757.0912, 1343.9445, 25.6552, 1757.4337, 1344.2920, 24.7553, 20000, CAMERA_MOVE);
		SetTimerEx("PrikaziUvod", 20000, false, "i", playerid);
	}
	else if(UvodProgres[playerid] == 5)
	{
		TogglePlayerSpectating(playerid, true);
		UvodProgres[playerid]++;
		ClearChat(playerid);
		SCM(playerid, -1, "{8A8A8A}[Monolog vaseg karaktera]");
		SCM(playerid, -1, "{FFFFFF}Mislim da sam pronasao pravo mesto za novi zivot!");
		SCM(playerid, -1, "{FFFFFF}Mozda gresim, ali {1985A6}Fort Carson {FFFFFF}mi deluje kao idealno mesto za miran zivot!");
		SCM(playerid, -1, "{FFFFFF}Na kraju krajeva, nemam sta da izgubim, {1985A6}Liberty City{FFFFFF} me je vec dovoljno unistio...");
		SetPlayerCameraPos(playerid, 1319.9171, 1060.4930, 90.0595);
		SetPlayerCameraLookAt(playerid, 1320.4003, 1061.3784, 89.8446);
		InterpolateCameraPos(playerid, 1319.9171, 1060.4930, 90.0595, -1.1858, 1347.5892, 80.7845, 20000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, 1320.4003, 1061.3784, 89.8446, -0.9456, 1346.6146, 80.4596, 20000, CAMERA_MOVE);
		SetTimerEx("PrikaziUvod", 25000, false, "i", playerid);
	}
	else if(UvodProgres[playerid] == 6)
	{
		UvodProgres[playerid]++;
		ClearChat(playerid);
		SCM(playerid, -1, "{FFFFFF}Doselili ste se u {1985A6}Fort Carson, {FFFFFF}cestitamo!");
		SCM(playerid, -1, "{FFFFFF}Kako bi razumeli i lakse shvatili radnju, sprovescemo vas kroz tutorijal!");
		SCM(playerid, -1, "{FFFFFF}Tutorijal nece trajati dugo, ali je neophodan kako bi bolje razumeli pricu vaseg karaktera!");
		SCM(playerid, -1, "{FFFFFF}Tutorijal ce vam takodje pomoci da lakse razumete lokacije i svrhu istih.");
		SCM(playerid, -1, "{FFFFFF}Hvala vam sto ste postali deo naseg community-a, a sada, predjimo na tutorijal...");
		SetTimerEx("PrikaziUvod", 15000, false, "i", playerid);
	}
	else
	{
		PrikaziTutorijal(playerid);
	}
	return 1;
}

forward PostarTimer(playerid);
public PostarTimer(playerid)
{
	if(pJobProgress[playerid] < 10)
	{
		PostarCP(playerid);
		SCM(playerid, -1, "{DAA520}[Postar]: {FFFFFF}Uspesno ste obavili dostavu!");
		GameTextForPlayer(playerid, "~g~Dostava uspesno obavljena!", 3000, 3);
		TogglePlayerControllable(playerid, 1);
	}
	else
	{
		new rnd = random(500), str[256];
		SCM(playerid, -1, "{DAA520}[Postar]: {FFFFFF}Uspesno ste obavili dostavu!");
		pJobProgress[playerid] = 0;
		format(str, 256, "{FFFFFF}Uspesno ste zavrsili posao!\n\nZarada: {1985A6}$%d\n{FFFFFF}Bonus: {1985A6}$%d\n\n{FFFFFF}Ukupno: {1985A6}$%d", POSTARPLATA, rnd, POSTARPLATA+rnd);
		PlayerInfo[playerid][pPlata]+=POSTARPLATA;
		PlayerInfo[playerid][pPlata]+=rnd;
		ShowPlayerDialog(playerid, DIALOG_GOTOVPOSAO, DIALOG_STYLE_MSGBOX, "{FFFFFF}Posao zavrsen", str, "U redu", "");
		SCM(playerid, -1, "{DAA520}[Postar]: {FFFFFF}Uspesno ste zavrsili posao, novac vam je dodat na platu!");
		PlayerInfo[playerid][pPoslovi]++;
		TogglePlayerControllable(playerid, 1);
	}
	return 1;
}
forward BusVozacTimer(playerid);
public BusVozacTimer(playerid)
{
	if(vrstaposla[playerid] == 1)
	{
		if(pJobProgress[playerid] > 0 && pJobProgress[playerid] < 5)
		{
			new str[256], rnd = 15+random(4);
			format(str, 256, "{DAA520}[Bus Vozac]: {FFFFFF}U atubus je uslo %d novih putnika i zaradili ste $%d na konacnu zaradu od prodaje karata!", rnd, rnd*40);
			zarada[playerid]+=rnd*40;
			SCM(playerid, -1, str);
			GameTextForPlayer(playerid, "~g~Putnici su uspesno usli/izasli!", 3000, 3);
			TogglePlayerControllable(playerid, 1);
		}
		if(pJobProgress[playerid] == 1)
		{
			taz_SetPlayerCheckpoint(playerid, -320.1570,1082.0464,19.5877, 4.0);
		}
		else if(pJobProgress[playerid] == 2)
		{
			taz_SetPlayerCheckpoint(playerid, -51.8069,950.4916,19.5274, 4.0);
		}
		else if(pJobProgress[playerid] == 3)
		{
			taz_SetPlayerCheckpoint(playerid, 32.8441,1119.5325,19.5938, 4.0);
		}
		else if(pJobProgress[playerid] == 4)
		{
			taz_SetPlayerCheckpoint(playerid, -155.0154,1201.9047,19.5938, 4.0);
		}
		else if(pJobProgress[playerid] == 5)
		{
			new str[256];
			new rnd = random(400);
			SCM(playerid, -1, "{DAA520}[Bus Vozac]: {FFFFFF}Uspesno ste zavrsili voznju!");
			pJobProgress[playerid] = 0;
			format(str, 256, "{FFFFFF}Uspesno ste zavrsili posao!\n\nZarada: {1985A6}$%d\n{FFFFFF}Bonus: {1985A6}$%d\n\n{FFFFFF}Ukupno: {1985A6}$%d", zarada[playerid], rnd, zarada[playerid]+rnd);
			PlayerInfo[playerid][pPlata]+=zarada[playerid];
			PlayerInfo[playerid][pPlata]+=rnd;
			ShowPlayerDialog(playerid, DIALOG_GOTOVPOSAO, DIALOG_STYLE_MSGBOX, "{1985A6}Posao zavrsen", str, "U redu", "");
			SCM(playerid, -1, "{DAA520}[Bus Vozac]: {FFFFFF}Uspesno ste zavrsili posao, novac vam je dodat na platu!");
			TogglePlayerControllable(playerid, 1);
			zarada[playerid] = 0;
			PlayerInfo[playerid][pPoslovi]++;
			radi[playerid] = 0;
		}
	}
	if(vrstaposla[playerid] == 2)
	{
		if(pJobProgress[playerid] > 0 && pJobProgress[playerid] < 5)
		{
			new str[256], rnd = 15+random(4);
			format(str, 256, "{DAA520}[Bus Vozac]: {FFFFFF}U atubus je uslo %d novih putnika i zaradili ste $%d na konacnu zaradu od prodaje karata!", rnd, rnd*90);
			zarada[playerid]+=rnd*90;
			SCM(playerid, -1, str);
			GameTextForPlayer(playerid, "~g~Putnici su uspesno usli/izasli!", 3000, 3);
			TogglePlayerControllable(playerid, 1);
		}
		if(pJobProgress[playerid] == 1)
		{
			taz_SetPlayerCheckpoint(playerid, -785.6497,1579.2950,26.9654, 4.0);
		}
		else if(pJobProgress[playerid] == 2)
		{
			taz_SetPlayerCheckpoint(playerid, -1475.0867,2667.9404,55.6875, 4.0);
		}
		else if(pJobProgress[playerid] == 3)
		{
			taz_SetPlayerCheckpoint(playerid, -222.3974,2698.3635,62.5391, 4.0);
		}
		else if(pJobProgress[playerid] == 4)
		{
			taz_SetPlayerCheckpoint(playerid, -155.0154,1201.9047,19.5938, 4.0);
		}
		else if(pJobProgress[playerid] == 5)
		{
			new str[256];
			new rnd = random(1000);
			SCM(playerid, -1, "{DAA520}[Bus Vozac]: {FFFFFF}Uspesno ste zavrsili voznju!");
			pJobProgress[playerid] = 0;
			format(str, 256, "{FFFFFF}Uspesno ste zavrsili posao!\n\nZarada: {1985A6}$%d\n{FFFFFF}Bonus: {1985A6}$%d\n\n{FFFFFF}Ukupno: {1985A6}$%d", zarada[playerid], rnd, zarada[playerid]+rnd);
			PlayerInfo[playerid][pPlata]+=zarada[playerid];
			PlayerInfo[playerid][pPlata]+=rnd;
			ShowPlayerDialog(playerid, DIALOG_GOTOVPOSAO, DIALOG_STYLE_MSGBOX, "{1985A6}Posao zavrsen", str, "U redu", "");
			SCM(playerid, -1, "{DAA520}[Bus Vozac]: {FFFFFF}Uspesno ste zavrsili posao, novac vam je dodat na platu!");
			TogglePlayerControllable(playerid, 1);
			zarada[playerid] = 0;
			radi[playerid] = 0;
			PlayerInfo[playerid][pPoslovi]++;
		}
	}
	if(vrstaposla[playerid] == 3)
	{
		if(pJobProgress[playerid] > 0 && pJobProgress[playerid] < 5)
		{
			new str[256], rnd = 15+random(4);
			format(str, 256, "{DAA520}[Bus Vozac]: {FFFFFF}U atubus je uslo %d novih putnika i zaradili ste $%d na konacnu zaradu od prodaje karata!", rnd, rnd*90);
			zarada[playerid]+=rnd*90;
			SCM(playerid, -1, str);
			GameTextForPlayer(playerid, "~g~Putnici su uspesno usli/izasli!", 3000, 3);
			TogglePlayerControllable(playerid, 1);
		}
		if(pJobProgress[playerid] == 1)
		{
			taz_SetPlayerCheckpoint(playerid, 228.6390,-128.1448,1.4297, 4.0);
		}
		else if(pJobProgress[playerid] == 2)
		{
			taz_SetPlayerCheckpoint(playerid, 1307.9545,283.4883,19.4063, 4.0);
		}
		else if(pJobProgress[playerid] == 3)
		{
			taz_SetPlayerCheckpoint(playerid, 2435.5603,38.2943,26.3359, 4.0);
		}
		else if(pJobProgress[playerid] == 4)
		{
			taz_SetPlayerCheckpoint(playerid, -155.0154,1201.9047,19.5938, 4.0);
		}
		else if(pJobProgress[playerid] == 5)
		{
			new str[256];
			new rnd = random(1000);
			SCM(playerid, -1, "{DAA520}[Bus Vozac]: {FFFFFF}Uspesno ste zavrsili voznju!");
			pJobProgress[playerid] = 0;
			format(str, 256, "{FFFFFF}Uspesno ste zavrsili posao!\n\nZarada: {1985A6}$%d\n{FFFFFF}Bonus: {1985A6}$%d\n\n{FFFFFF}Ukupno: {1985A6}$%d", zarada[playerid], rnd, zarada[playerid]+rnd);
			PlayerInfo[playerid][pPlata]+=zarada[playerid];
			PlayerInfo[playerid][pPlata]+=rnd;
			ShowPlayerDialog(playerid, DIALOG_GOTOVPOSAO, DIALOG_STYLE_MSGBOX, "{1985A6}Posao zavrsen", str, "U redu", "");
			SCM(playerid, -1, "{DAA520}[Bus Vozac]: {FFFFFF}Uspesno ste zavrsili posao, novac vam je dodat na platu!");
			TogglePlayerControllable(playerid, 1);
			PlayerInfo[playerid][pPoslovi]++;
			zarada[playerid] = 0;
			radi[playerid] = 0;
		}
	}
	if(vrstaposla[playerid] == 4)
	{
		if(pJobProgress[playerid] > 0 && pJobProgress[playerid] < 5)
		{
			new str[256], rnd = 15+random(5);
			format(str, 256, "{DAA520}[Bus Vozac]: {FFFFFF}U atubus je uslo %d novih putnika i zaradili ste $%d na konacnu zaradu od prodaje karata!", rnd, rnd*160);
			zarada[playerid]+=rnd*180;
			SCM(playerid, -1, str);
			GameTextForPlayer(playerid, "~g~Putnici su uspesno usli/izasli!", 3000, 3);
			TogglePlayerControllable(playerid, 1);
		}
		if(pJobProgress[playerid] == 1)
		{
			taz_SetPlayerCheckpoint(playerid, -1967.9021,352.1545,34.1850, 4.0);
		}
		else if(pJobProgress[playerid] == 2)
		{
			taz_SetPlayerCheckpoint(playerid, -2723.7417,419.0850,4.1469, 4.0);
		}
		else if(pJobProgress[playerid] == 3)
		{
			taz_SetPlayerCheckpoint(playerid, -1973.4656,-861.5504,32.0234, 4.0);
		}
		else if(pJobProgress[playerid] == 4)
		{
			taz_SetPlayerCheckpoint(playerid, -155.0154,1201.9047,19.5938, 4.0);
		}
		else if(pJobProgress[playerid] == 5)
		{
			new str[256];
			new rnd = 1000+random(2000);
			SCM(playerid, -1, "{DAA520}[Bus Vozac]: {FFFFFF}Uspesno ste zavrsili voznju!");
			pJobProgress[playerid] = 0;
			format(str, 256, "{FFFFFF}Uspesno ste zavrsili posao!\n\nZarada: {1985A6}$%d\n{FFFFFF}Bonus: {1985A6}$%d\n\n{FFFFFF}Ukupno: {1985A6}$%d", zarada[playerid], rnd, zarada[playerid]+rnd);
			PlayerInfo[playerid][pPlata]+=zarada[playerid];
			PlayerInfo[playerid][pPlata]+=rnd;
			ShowPlayerDialog(playerid, DIALOG_GOTOVPOSAO, DIALOG_STYLE_MSGBOX, "{1985A6}Posao zavrsen", str, "U redu", "");
			SCM(playerid, -1, "{DAA520}[Bus Vozac]: {FFFFFF}Uspesno ste zavrsili posao, novac vam je dodat na platu!");
			TogglePlayerControllable(playerid, 1);
			PlayerInfo[playerid][pPoslovi]++;
			zarada[playerid] = 0;
			radi[playerid] = 0;
		}
	}
	if(vrstaposla[playerid] == 5)
	{
		if(pJobProgress[playerid] > 0 && pJobProgress[playerid] < 5)
		{
			new str[256], rnd = 15+random(5);
			format(str, 256, "{DAA520}[Bus Vozac]: {FFFFFF}U atubus je uslo %d novih putnika i zaradili ste $%d na konacnu zaradu od prodaje karata!", rnd, rnd*160);
			zarada[playerid]+=rnd*180;
			SCM(playerid, -1, str);
			GameTextForPlayer(playerid, "~g~Putnici su uspesno usli/izasli!", 3000, 3);
			TogglePlayerControllable(playerid, 1);
		}
		if(pJobProgress[playerid] == 1)
		{
			taz_SetPlayerCheckpoint(playerid, 1409.7559,-937.0704,35.3675, 4.0);
		}
		else if(pJobProgress[playerid] == 2)
		{
			taz_SetPlayerCheckpoint(playerid, 1425.6355,-1735.7847,13.3828, 4.0);
		}
		else if(pJobProgress[playerid] == 3)
		{
			taz_SetPlayerCheckpoint(playerid, 2247.8835,-1387.5541,23.8299, 4.0);
		}
		else if(pJobProgress[playerid] == 4)
		{
			taz_SetPlayerCheckpoint(playerid, -155.0154,1201.9047,19.5938, 4.0);
		}
		else if(pJobProgress[playerid] == 5)
		{
			new str[256];
			new rnd = 1000+random(2000);
			SCM(playerid, -1, "{DAA520}[Bus Vozac]: {FFFFFF}Uspesno ste zavrsili voznju!");
			pJobProgress[playerid] = 0;
			format(str, 256, "{FFFFFF}Uspesno ste zavrsili posao!\n\nZarada: {1985A6}$%d\n{FFFFFF}Bonus: {1985A6}$%d\n\n{FFFFFF}Ukupno: {1985A6}$%d", zarada[playerid], rnd, zarada[playerid]+rnd);
			PlayerInfo[playerid][pPlata]+=zarada[playerid];
			PlayerInfo[playerid][pPlata]+=rnd;
			ShowPlayerDialog(playerid, DIALOG_GOTOVPOSAO, DIALOG_STYLE_MSGBOX, "{1985A6}Posao zavrsen", str, "U redu", "");
			SCM(playerid, -1, "{DAA520}[Bus Vozac]: {FFFFFF}Uspesno ste zavrsili posao, novac vam je dodat na platu!");
			TogglePlayerControllable(playerid, 1);
			PlayerInfo[playerid][pPoslovi]++;
			zarada[playerid] = 0;
			radi[playerid] = 0;
		}
	}
	if(vrstaposla[playerid] == 6)
	{
		if(pJobProgress[playerid] > 0 && pJobProgress[playerid] < 5)
		{
			new str[256], rnd = 15+random(5);
			format(str, 256, "{DAA520}[Bus Vozac]: {FFFFFF}U atubus je uslo %d novih putnika i zaradili ste $%d na konacnu zaradu od prodaje karata!", rnd, rnd*160);
			zarada[playerid]+=rnd*180;
			SCM(playerid, -1, str);
			GameTextForPlayer(playerid, "~g~Putnici su uspesno usli/izasli!", 3000, 3);
			TogglePlayerControllable(playerid, 1);
		}
		if(pJobProgress[playerid] == 1)
		{
			taz_SetPlayerCheckpoint(playerid, 2074.4136,1317.6512,10.6719, 4.0);
		}
		else if(pJobProgress[playerid] == 2)
		{
			taz_SetPlayerCheckpoint(playerid, 2850.9097,2068.6919,10.6719, 4.0);
		}
		else if(pJobProgress[playerid] == 3)
		{
			taz_SetPlayerCheckpoint(playerid, 1452.9651,2716.3220,10.671, 4.0);
		}
		else if(pJobProgress[playerid] == 4)
		{
			taz_SetPlayerCheckpoint(playerid, -155.0154,1201.9047,19.5938, 4.0);
		}
		else if(pJobProgress[playerid] == 5)
		{
			new str[256];
			new rnd = 1000+random(2000);
			SCM(playerid, -1, "{DAA520}[Bus Vozac]: {FFFFFF}Uspesno ste zavrsili voznju!");
			pJobProgress[playerid] = 0;
			format(str, 256, "{FFFFFF}Uspesno ste zavrsili posao!\n\nZarada: {1985A6}$%d\n{FFFFFF}Bonus: {1985A6}$%d\n\n{FFFFFF}Ukupno: {1985A6}$%d", zarada[playerid], rnd, zarada[playerid]+rnd);
			PlayerInfo[playerid][pPlata]+=zarada[playerid];
			PlayerInfo[playerid][pPlata]+=rnd;
			ShowPlayerDialog(playerid, DIALOG_GOTOVPOSAO, DIALOG_STYLE_MSGBOX, "{1985A6}Posao zavrsen", str, "U redu", "");
			SCM(playerid, -1, "{DAA520}[Bus Vozac]: {FFFFFF}Uspesno ste zavrsili posao, novac vam je dodat na platu!");
			TogglePlayerControllable(playerid, 1);
			zarada[playerid] = 0;
			PlayerInfo[playerid][pPoslovi]++;
			radi[playerid] = 0;
		}
	}
	return 1;
}
forward PilotTimer(playerid);
public PilotTimer(playerid)
{
	if(pJobProgress[playerid] == 2)
	{
		taz_SetPlayerCheckpoint(playerid, 1986.5685,-2493.8423,13.5391, 7.0);
		GameTextForPlayer(playerid, "~g~Putnici su uspesno usli/izasli!", 3000, 3);
		TogglePlayerControllable(playerid, 1);
	}
	if(pJobProgress[playerid] == 3)
	{
		taz_SetPlayerCheckpoint(playerid, 1477.4677,1702.1085,10.8203, 7.0);
		GameTextForPlayer(playerid, "~g~Putnici su uspesno usli/izasli!", 3000, 3);
		TogglePlayerControllable(playerid, 1);
	}
	if(pJobProgress[playerid] == 4)
	{
		new rnd = random(600), str[256];
		pJobProgress[playerid] = 0;
		format(str, 256, "{FFFFFF}Uspesno ste zavrsili posao!\n\nZarada: {1985A6}$%d\n{FFFFFF}Bonus: {1985A6}$%d\n\n{FFFFFF}Ukupno: {1985A6}$%d", 5400, rnd, 5400+rnd);
		PlayerInfo[playerid][pPlata]+=5400;
		PlayerInfo[playerid][pPlata]+=rnd;
		ShowPlayerDialog(playerid, DIALOG_GOTOVPOSAO, DIALOG_STYLE_MSGBOX, "{1985A6}Posao zavrsen", str, "U redu", "");
		SCM(playerid, -1, "{DAA520}[Pilot]: {FFFFFF}Uspesno ste zavrsili posao, novac vam je dodat na platu!");
		TogglePlayerControllable(playerid, 1);
		PlayerInfo[playerid][pPoslovi]++;
		radi[playerid] = 0;
		pJobProgress[playerid] = 0;
	}
	return 1;
}

forward PizzaTimer(playerid);
public PizzaTimer(playerid)
{
	new rnd = random(200), str[256];
	pJobProgress[playerid] = 0;
	format(str, 256, "{FFFFFF}Uspesno ste zavrsili posao!\n\nZarada: {1985A6}$%d\n{FFFFFF}Baksis: {1985A6}$%d\n\n{FFFFFF}Ukupno: {1985A6}$%d", 900, rnd, 900+rnd);
	PlayerInfo[playerid][pPlata]+=850;
	PlayerInfo[playerid][pPlata]+=rnd;
	ShowPlayerDialog(playerid, DIALOG_GOTOVPOSAO, DIALOG_STYLE_MSGBOX, "{1985A6}Posao zavrsen", str, "U redu", "");
	SCM(playerid, -1, "{DAA520}[Pizza Dostavljac]: {FFFFFF}Uspesno ste zavrsili posao, novac vam je dodat na platu!");
	TogglePlayerControllable(playerid, 1);
	radi[playerid] = 0;
	pJobProgress[playerid] = 0;
	PlayerInfo[playerid][pPoslovi]++;
	return 1;
}

forward DostavljacDelovaTimer(playerid);
public DostavljacDelovaTimer(playerid)
{
	if(pJobProgress[playerid] == 2)
	{
		dft[playerid][0] = CreateDynamicObject(3577,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
	    AttachDynamicObjectToVehicle(dft[playerid][0], dftvozilo[playerid], 0.000, 0.670, 0.460, 0.000, 0.000, 0.000);
	    dft[playerid][1] = CreateDynamicObject(2991,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
	    AttachDynamicObjectToVehicle(dft[playerid][1], dftvozilo[playerid], -0.461, -3.032, 0.310, 0.000, 0.000, -90.099);
	    SCM(playerid, -1, "{DAA520}[Dostavljac Delova]: {FFFFFF}Uspesno ste pokupili prvi deo delova, sada otidjite po drugi!");
	    taz_SetPlayerCheckpoint(playerid, -180.9729,-278.5791,2.0546, 7.0);
	    GameTextForPlayer(playerid, "~g~Utovar uspesno obavljen!", 3000, 3);
	    TogglePlayerControllable(playerid, 1);
	}
	else if (pJobProgress[playerid] == 3)
	{
		dft[playerid][2] = CreateDynamicObject(19917,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
	    AttachDynamicObjectToVehicle(dft[playerid][2], dftvozilo[playerid], 1.040, -1.460, -0.210, 0.000, 0.000, 0.000);
	    dft[playerid][3] = CreateDynamicObject(1096,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
	    AttachDynamicObjectToVehicle(dft[playerid][3], dftvozilo[playerid], 0.700, -2.500, 0.210, 0.000, 0.000, 0.000);
	    dft[playerid][4] = CreateDynamicObject(1096,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
	    AttachDynamicObjectToVehicle(dft[playerid][4], dftvozilo[playerid], 0.950, -2.480, 0.200, 0.000, 0.000, 0.000);
	    dft[playerid][5] = CreateDynamicObject(3632,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
	    AttachDynamicObjectToVehicle(dft[playerid][5], dftvozilo[playerid], 0.940, -3.300, 0.219, 0.000, 0.000, 0.000);
	    dft[playerid][6] = CreateDynamicObject(3632,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
	    AttachDynamicObjectToVehicle(dft[playerid][6], dftvozilo[playerid], 0.960, -4.051, 0.220, 0.000, 0.000, 0.000);
	    dft[playerid][7] = CreateDynamicObject(3632,0.0,0.0,-1000.0,0.0,0.0,0.0,-1,-1,-1,300.0,300.0);
	    AttachDynamicObjectToVehicle(dft[playerid][7], dftvozilo[playerid], 0.960, -4.781, 0.210, 0.000, 0.000, 0.000);
	    SCM(playerid, -1, "{DAA520}[Dostavljac Delova]: {FFFFFF}Uspesno ste pokupili delove, sada ih odvezite do radionice kod salona vozila!");
	    taz_SetPlayerCheckpoint(playerid, 103.4086,1081.4135,14.2317, 7.0);
	    TogglePlayerControllable(playerid, 1);
	    GameTextForPlayer(playerid, "~g~Utovar uspesno obavljen!", 3000, 3);
	}
	else
	{
		new rnd = random(2000), str[256];
		pJobProgress[playerid] = 0;
		format(str, 256, "{FFFFFF}Uspesno ste zavrsili posao!\n\nZarada: {1985A6}$%d\n{FFFFFF}Baksis: {1985A6}$%d\n\n{FFFFFF}Ukupno: {1985A6}$%d", 23000, rnd, 23000+rnd);
		PlayerInfo[playerid][pPlata]+=23000;
		PlayerInfo[playerid][pPlata]+=rnd;
		ShowPlayerDialog(playerid, DIALOG_GOTOVPOSAO, DIALOG_STYLE_MSGBOX, "{1985A6}Posao zavrsen", str, "U redu", "");
		SCM(playerid, -1, "{DAA520}[Dostavljac Delova]: {FFFFFF}Uspesno ste zavrsili posao, novac vam je dodat na platu!");
		TogglePlayerControllable(playerid, 1);
		radi[playerid] = 0;
		pJobProgress[playerid] = 0;
		PlayerInfo[playerid][pPoslovi]++;
		for(new i = 0; i < 8; i++)
		{
			DestroyDynamicObject(dft[playerid][i]);
		}
	}
	return 1;
}

forward RandomWeather();
public RandomWeather()
{
	new i = random(10);
	//trenutnoVreme = i;
	SetWeather(i);
	if(i == 0)
	{
		SCMTA(COLOR_GREEN, "[Vremenska Prognoza]: Vreme je trenutno suncano, bez oblacnosti!");
	}
	if(i == 1)
	{
		SCMTA(COLOR_GREEN, "[Vremenska Prognoza]: Vreme je trenutno suncano, primetna je niska oblacnost!");
	}
	if(i == 2)
	{
		SCMTA(COLOR_GREEN, "[Vremenska Prognoza]: Vreme je trenutno poprilicno suncano, bez oblacnosti!");
	}
	if(i == 3)
	{
		SCMTA(COLOR_GREEN, "[Vremenska Prognoza]: Vreme je trenutno poprilicno suncano, primetna je niska oblacnost!");
	}
	if(i == 4)
	{
		SCMTA(COLOR_GREEN, "[Vremenska Prognoza]: Vreme je pomalo oblacno, primetna je povisena vlaznost vazduha!");
	}
	if(i == 5)
	{
		SCMTA(COLOR_GREEN, "[Vremenska Prognoza]: Vreme je trenutno suncano, primetna je niska oblacnost!");
	}
	if(i == 6)
	{
		SCMTA(COLOR_GREEN, "[Vremenska Prognoza]: Vreme je trenutno suncano, primetna je niska maglovitost! Vozite oprezno!");
	}
	if(i == 7)
	{
		SCMTA(COLOR_GREEN, "[Vremenska Prognoza]: Vreme je osrednje oblacno, moguce su kise!");
	}
	if(i == 8)
	{
		SCMTA(COLOR_GREEN, "[Vremenska Prognoza]: Vreme je veoma oblacno, moguca je pojava kise i jakih oluja!");
	}
	if(i == 9)
	{
		SCMTA(COLOR_GREEN, "[Vremenska Prognoza]: Vreme je veoma maglovito, temperatura je niska! Vozite oprezno!");
	}
	return 1;
}

forward MasinovodjaTimer(playerid);
public MasinovodjaTimer(playerid)
{
	if(pJobProgress[playerid] > 0 && pJobProgress[playerid] < 7)
	{
		new str[256], rnd = 15+random(4);
		format(str, 256, "{DAA520}[Masinovodja]: {FFFFFF}U vagone je uslo %d novih putnika i zaradili ste $%d na konacnu zaradu od prodaje karata!", rnd, rnd*120);
		zarada[playerid]+=rnd*120;
		SCM(playerid, -1, str);
		GameTextForPlayer(playerid, "~g~Putnici su uspesno usli/izasli!", 3000, 3);
		TogglePlayerControllable(playerid, 1);
	}
	if(pJobProgress[playerid] == 1)
	{
		taz_SetPlayerCheckpoint(playerid, 1449.0957,2632.2500,12.1939, 5.0);
	}
	else if(pJobProgress[playerid] == 2)
	{
		taz_SetPlayerCheckpoint(playerid, 2864.7500,1260.5732,12.1939, 5.0);
	}
	else if(pJobProgress[playerid] == 3)
	{
		taz_SetPlayerCheckpoint(playerid, 1714.3241,-1953.7026,14.9439, 5.0);
	}
	else if(pJobProgress[playerid] == 4)
	{
		taz_SetPlayerCheckpoint(playerid, 795.6608,-1349.4519,-0.0691, 5.0);
	}
	else if(pJobProgress[playerid] == 5)
	{
		taz_SetPlayerCheckpoint(playerid, -1943.6735,149.3696,27.0689, 5.0);
	}
	else if(pJobProgress[playerid] == 6)
	{
		taz_SetPlayerCheckpoint(playerid, 6.6124,1293.4175,19.4590, 5.0);
	}
	else if(pJobProgress[playerid] == 7)
	{
		new str[256];
		new rnd = random(1000);
		SCM(playerid, -1, "{DAA520}[Masinovodja]: {FFFFFF}Uspesno ste zavrsili prevoz putnika!");
		pJobProgress[playerid] = 0;
		format(str, 256, "{FFFFFF}Uspesno ste zavrsili posao!\n\nZarada: {1985A6}$%d\n{FFFFFF}Bonus: {1985A6}$%d\n\n{FFFFFF}Ukupno: {1985A6}$%d", zarada[playerid], rnd, zarada[playerid]+rnd);
		PlayerInfo[playerid][pPlata]+=zarada[playerid];
		PlayerInfo[playerid][pPlata]+=rnd;
		PlayerInfo[playerid][pPoslovi]++;
		ShowPlayerDialog(playerid, DIALOG_GOTOVPOSAO, DIALOG_STYLE_MSGBOX, "{1985A6}Posao zavrsen", str, "U redu", "");
		SCM(playerid, -1, "{DAA520}[Masinovodja]: {FFFFFF}Uspesno ste zavrsili posao, novac vam je dodat na platu!");
		TogglePlayerControllable(playerid, 1);
		zarada[playerid] = 0;
		new i = pvoz[playerid];
		radi[playerid] = 0;
		DestroyVehicle(i);
		VoziloInfo[i][vID] = 0;
		VoziloInfo[i][vOwnable] = 0;
		VoziloInfo[i][vCena] = 0;
		VoziloInfo[i][vAutoskola] = 0;
		VoziloInfo[i][vPosaoID] = 0;
		VoziloInfo[i][vOrgID] = 0;
		VoziloInfo[i][vRent] = 0;
		VoziloInfo[i][vAdmin] = 0;
		VoziloInfo[i][vVip] = 0;
		VoziloInfo[i][vPromoter] = 0;
		VoziloInfo[i][vBoja] = 0;
		VoziloInfo[i][vBoja2] = 0;
		VoziloInfo[i][vDozvola] = 0;
		VoziloInfo[i][vID] = 0;
		VoziloInfo[i][vX] = 0;
		VoziloInfo[i][vY] = 0;
		VoziloInfo[i][vZ] = 0;
		new vfile[64];
		format(vfile, 64, VEHPATH, i);
		fremove(vfile);
		nenapravljenovozilo[i] = AddStaticVehicle(411, -3122.87036, 1042.63818, 1.69223, 0.0, 1, 1);
		pvoz[playerid] = -1;
		SetCameraBehindPlayer(playerid);
	}
	return 1;
}
forward KamiondzijaTimer(playerid);
public KamiondzijaTimer(playerid)
{
	if(pJobProgress[playerid] == 1)
	{
		GameTextForPlayer(playerid, "~g~Roba uspesno istovarena!", 3000, 3);
		SCM(playerid, -1, "{DAA520}[Kamiondzija]: {FFFFFF}Roba je uspesno istovarena, vratite se nazad u firmu kako bi zavrsili posao!");
		TogglePlayerControllable(playerid, 1);
		taz_SetPlayerCheckpoint(playerid, -832.9705,1435.3113,13.7548, 5.0);
	}
	return 1;
}

forward SkupljacTimer(playerid);
public SkupljacTimer(playerid)
{
	new str[256];
	GameTextForPlayer(playerid, "~g~Sirovine su predate!", 3000, 3);
	SCM(playerid, -1, "{DAA520}[Skupljac Sekundarnih Sirovina]: {FFFFFF}Sirovine su predate na reciklazu!");
	format(str, 128, "{DAA520}[SSS]: {FFFFFF}Za %d kilograma plastike ste zaradili $%d, a za %d grama aluminijuma ste zaradili $%d!", pPlastika[playerid], pPlastika[playerid]*70, pAluminijum[playerid], pAluminijum[playerid] * 5);
	SCM(playerid, -1, str);
	radi[playerid] = 0;
	pJobProgress[playerid] = 0;
	format(str, 256, "{FFFFFF}Uspesno ste zavrsili posao!\n\nZarada: {1985A6}$%d\n{FFFFFF}Bonus: {1985A6}$%d\n\n{FFFFFF}Ukupno: {1985A6}$%d", pPlastika[playerid]*70 + pAluminijum[playerid] * 5, 0, pPlastika[playerid]*70 + pAluminijum[playerid] * 5);
	PlayerInfo[playerid][pPlata]+=pPlastika[playerid]*70 + pAluminijum[playerid] * 5;
	ShowPlayerDialog(playerid, DIALOG_GOTOVPOSAO, DIALOG_STYLE_MSGBOX, "{1985A6}Posao zavrsen", str, "U redu", "");
	PlayerInfo[playerid][pPoslovi]++;
	SCM(playerid, -1, "{DAA520}[Skupljac Sekundarnih Sirovina]: {FFFFFF}Uspesno ste zavrsili posao, novac vam je dodat na platu!");
	TogglePlayerControllable(playerid, 1);
	return 1;
}

forward LogisticarTimer(playerid);
public LogisticarTimer(playerid)
{
	if(pJobProgress[playerid] == 1)
	{
		GameTextForPlayer(playerid, "~g~Roba uspesno utovarena!", 3000, 3);
		SCM(playerid, -1, "{DAA520}[Logisticar]: {FFFFFF}Roba je uspesno utovarena, odvezite je na oznacene adrese!");
		TogglePlayerControllable(playerid, 1);
		new i = random(24);
		logisticarZarada[playerid] = 0;
	    taz_SetPlayerCheckpoint(playerid, LogisticarKucaPos[i][0],LogisticarKucaPos[i][1],LogisticarKucaPos[i][2], 5.0);
	    pJobProgress[playerid] ++;
	}
	else if(pJobProgress[playerid] == 2)
	{
		new Float:razdaljina = 0, Float:X, Float:Y, Float:Z, str[128];
		GameTextForPlayer(playerid, "~g~Roba uspesno istovarena!", 3000, 3);
		GetPlayerPos(playerid, X, Y, Z);
		razdaljina = floatsqroot(floatpower((X-LogisticarPos[logisticarID[playerid]][0]), 2) + floatpower((Y-LogisticarPos[logisticarID[playerid]][1]), 2));
		format(str, 128, "{DAA520}[Logisticar]: {FFFFFF}Roba je uspesno istvarena, za razdaljinu od %d metara ste zaradili $%d!", floatround(razdaljina, floatround_ceil), floatround(razdaljina, floatround_ceil));
		SCM(playerid, -1, str);
		logisticarZarada[playerid] += floatround(razdaljina, floatround_ceil);
		TogglePlayerControllable(playerid, 1);
		new i = random(24);
	    taz_SetPlayerCheckpoint(playerid, LogisticarKucaPos[i][0],LogisticarKucaPos[i][1],LogisticarKucaPos[i][2], 5.0);
	    pJobProgress[playerid] ++;
	}
	else if(pJobProgress[playerid] == 3)
	{
		new Float:razdaljina = 0, Float:X, Float:Y, Float:Z, str[128];
		GameTextForPlayer(playerid, "~g~Roba uspesno istovarena!", 3000, 3);
		GetPlayerPos(playerid, X, Y, Z);
		razdaljina = floatsqroot(floatpower((X-LogisticarPos[logisticarID[playerid]][0]), 2) + floatpower((Y-LogisticarPos[logisticarID[playerid]][1]), 2));
		format(str, 128, "{DAA520}[Logisticar]: {FFFFFF}Roba je uspesno istvarena, za razdaljinu od %d metara ste zaradili $%d!", floatround(razdaljina, floatround_ceil), floatround(razdaljina, floatround_ceil));
		SCM(playerid, -1, str);
		logisticarZarada[playerid] += floatround(razdaljina, floatround_ceil);
		TogglePlayerControllable(playerid, 1);
		new i = random(24);
	    taz_SetPlayerCheckpoint(playerid, LogisticarKucaPos[i][0],LogisticarKucaPos[i][1],LogisticarKucaPos[i][2], 5.0);
	    pJobProgress[playerid] ++;
	}
	else if(pJobProgress[playerid] == 4)
	{
		new Float:razdaljina = 0, Float:X, Float:Y, Float:Z, str[128];
		GameTextForPlayer(playerid, "~g~Roba uspesno istovarena!", 3000, 3);
		GetPlayerPos(playerid, X, Y, Z);
		razdaljina = floatsqroot(floatpower((X-LogisticarPos[logisticarID[playerid]][0]), 2) + floatpower((Y-LogisticarPos[logisticarID[playerid]][1]), 2));
		format(str, 128, "{DAA520}[Logisticar]: {FFFFFF}Roba je uspesno istvarena, za razdaljinu od %d metara ste zaradili $%d!", floatround(razdaljina, floatround_ceil), floatround(razdaljina, floatround_ceil));
		SCM(playerid, -1, str);
		logisticarZarada[playerid] += floatround(razdaljina, floatround_ceil);
		TogglePlayerControllable(playerid, 1);
		new i = random(24);
	    taz_SetPlayerCheckpoint(playerid, LogisticarKucaPos[i][0],LogisticarKucaPos[i][1],LogisticarKucaPos[i][2], 5.0);
	    pJobProgress[playerid] ++;
	}
	else if(pJobProgress[playerid] == 5)
	{
		new str[256];
		GameTextForPlayer(playerid, "~g~Roba uspesno istovarena!", 3000, 3);
		SCM(playerid, -1, "{DAA520}[Logisticar]: {FFFFFF}Roba je uspesno istvarena!");
		new Float:razdaljina = 0, Float:X, Float:Y, Float:Z;
		GameTextForPlayer(playerid, "~g~Roba uspesno istovarena!", 3000, 3);
		GetPlayerPos(playerid, X, Y, Z);
		razdaljina = floatsqroot(floatpower((X-LogisticarPos[logisticarID[playerid]][0]), 2) + floatpower((Y-LogisticarPos[logisticarID[playerid]][1]), 2));
		format(str, 128, "{DAA520}[Logisticar]: {FFFFFF}Roba je uspesno istvarena, za razdaljinu od %d metara ste zaradili $%d!", floatround(razdaljina, floatround_ceil), floatround(razdaljina, floatround_ceil));
		SCM(playerid, -1, str);
		logisticarZarada[playerid] += floatround(razdaljina, floatround_ceil);
		TogglePlayerControllable(playerid, 1);
		new rnd = random(1000);
		radi[playerid] = 0;
		pJobProgress[playerid] = 0;
		format(str, 256, "{FFFFFF}Uspesno ste zavrsili posao!\n\nZarada: {1985A6}$%d\n{FFFFFF}Bonus: {1985A6}$%d\n\n{FFFFFF}Ukupno: {1985A6}$%d", logisticarZarada[playerid], rnd, logisticarZarada[playerid]+rnd);
		PlayerInfo[playerid][pPlata]+=logisticarZarada[playerid];
		PlayerInfo[playerid][pPlata]+=rnd;
		ShowPlayerDialog(playerid, DIALOG_GOTOVPOSAO, DIALOG_STYLE_MSGBOX, "{1985A6}Posao zavrsen", str, "U redu", "");
		PlayerInfo[playerid][pPoslovi]++;
		SCM(playerid, -1, "{DAA520}[Logisticar]: {FFFFFF}Uspesno ste zavrsili posao, novac vam je dodat na platu!");
		TogglePlayerControllable(playerid, 1);
	}
	return 1;
}

forward IstovarKamenja(playerid);
public IstovarKamenja(playerid)
{
	GameTextForPlayer(playerid, "~g~Kamenje uspesno istovareno!", 3000, 3);
	SCM(playerid, -1, "{DAA520}[Prevoznik Kamenja]: {FFFFFF}Kamenje je uspesno istovareno, vratite se nazad u firmu kako bi zavrsili posao!");
	TogglePlayerControllable(playerid, 1);
	taz_SetPlayerCheckpoint(playerid, 369.9400,985.3505,30.0176, 5.0);
	return 1;
}

forward PrevoznikNovcaTimer(playerid);
public PrevoznikNovcaTimer(playerid)
{
	if(pJobProgress[playerid] == 0)
	{
		GameTextForPlayer(playerid, "~g~Novac uspesno utovaren!", 3000, 3);
		SCM(playerid, -1, "{DAA520}[Dostavljac Novca]: {FFFFFF}Novac je uspesno utovaren, sada ga odvezite u podzemni ulaz Los Santos Banke!");
		TogglePlayerControllable(playerid, 1);
		taz_SetPlayerCheckpoint(playerid, 1520.3601,-1464.0621,9.0264, 5.0);
	}
	if(pJobProgress[playerid] == 1)
	{
		GameTextForPlayer(playerid, "~g~Novac uspesno istovaren!", 3000, 3);
		SCM(playerid, -1, "{DAA520}[Dostavljac Novca]: {FFFFFF}Novac je uspesno istovaren, sada se vratite u firmu kako bi bili isplaceni!");
		TogglePlayerControllable(playerid, 1);
		taz_SetPlayerCheckpoint(playerid, -143.6930,1123.3723,19.8095, 5.0);
	}
	pJobProgress[playerid]++;
	return 1;
}

stock WarningPoruka(string[])
{
	new str[256];
	format(str, 256, "{A13C0A}[Warning]: {FFFFFF}%s", string);
	for(new i=0; i<= GetPlayerPoolSize(); i++)
	{
		if(ulogovan[i] == 1)
		{
			if(PlayerInfo[i][pAdmin] > 0)
			{
				SCM(i, -1, str);
			}
		}
	}
}

stock AdminPoruka(string[])
{
	new str[256];
	format(str, 256, "{A13C0A}[Admin]: {FFFFFF}%s", string);
	for(new i=0; i<= GetPlayerPoolSize(); i++)
	{
		if(ulogovan[i] == 1)
		{
			if(PlayerInfo[i][pAdmin] > 0)
			{
				SCM(i, -1, str);
			}
		}
	}
}

stock WarLog(string[])
{
	new entry[256], h, m, s;
	gettime(h,m,s);
	format(entry, sizeof(entry), "[%d:%d:%d] %s\n",h,m,s,string);
	new File:hFile;
	hFile = fopen("logovi/warning.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

stock LoginLog(string[])
{
	new entry[128], h, m, s;
	gettime(h,m,s);
	format(entry, sizeof(entry), "[%d:%d:%d] %s\n",h,m,s,string);
	new File:hFile;
	hFile = fopen("logovi/login.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

stock RegLog(string[])
{
	new entry[128], h, m, s;
	gettime(h,m,s);
	format(entry, sizeof(entry), "[%d:%d:%d] %s\n",h,m,s,string);
	new File:hFile;
	hFile = fopen("logovi/register.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

stock RegPoruka(string[])
{
	new str[256];
	format(str, 256, "{755600}[Registracija]: {FFFFFF}%s", string);
	for(new i=0; i<= GetPlayerPoolSize(); i++)
	{
		if(ulogovan[i] == 1)
		{
			if(PlayerInfo[i][pAdmin] > 0 || PlayerInfo[i][pHelper] > 0)
			{
				SCM(i, -1, str);
			}
		}
	}
}

stock LoginPoruka(string[])
{
	new str[128];
	format(str, 128, "{755600}[Login]: {FFFFFF}%s", string);
	for(new i=0; i<= GetPlayerPoolSize(); i++)
	{
		if(ulogovan[i] == 1)
		{
			if(PlayerInfo[i][pAdmin] > 0 || PlayerInfo[i][pHelper] > 0)
			{
				SCM(i, -1, str);
			}
		}
	}
}
stock DisconnectPoruka(string[])
{
	new str[128];
	format(str, 128, "{A10202}[Disconnect]: {FFFFFF}%s", string);
	for(new i=0; i<= GetPlayerPoolSize(); i++)
	{
		if(ulogovan[i] == 1)
		{
			if(PlayerInfo[i][pAdmin] > 0 || PlayerInfo[i][pHelper] > 0)
			{
				SCM(i, -1, str);
			}
		}
	}
}
stock GetNameEx(playerid)
{
	new name[24];
	GetPlayerName(playerid,name,24);
	return name;
}

stock BrojIgraca()
{
	new br = 0;
	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(ulogovan[i] == 1)
		{
			br++;
		}
	}
	return br;
}
stock SakrijRegTD(playerid)
{
	PlayerTextDrawHide(playerid, REGTDPRVI[playerid]);
	PlayerTextDrawHide(playerid, REGTD0[playerid]);
	PlayerTextDrawHide(playerid, REGTD1[playerid]);
	PlayerTextDrawHide(playerid, REGTD2[playerid]);
	PlayerTextDrawHide(playerid, REGTD3[playerid]);
	PlayerTextDrawHide(playerid, REGTD4[playerid]);
	PlayerTextDrawHide(playerid, REGTD5[playerid]);
	PlayerTextDrawHide(playerid, REGTD6[playerid]);
	PlayerTextDrawHide(playerid, REGTD7[playerid]);
	PlayerTextDrawHide(playerid, REGTD8[playerid]);
	PlayerTextDrawHide(playerid, REGTD9[playerid]);
	PlayerTextDrawHide(playerid, REGTD10[playerid]);
	PlayerTextDrawHide(playerid, REGTD11[playerid]);
	PlayerTextDrawHide(playerid, REGTD12[playerid]);
	PlayerTextDrawHide(playerid, REGTD13[playerid]);
	PlayerTextDrawHide(playerid, REGTD14[playerid]);
	PlayerTextDrawHide(playerid, REGTD15[playerid]);
	PlayerTextDrawHide(playerid, REGTD16[playerid]);
	PlayerTextDrawHide(playerid, REGTD17[playerid]);
	PlayerTextDrawHide(playerid, REGTD18[playerid]);
	PlayerTextDrawHide(playerid, REGTD19[playerid]);
	PlayerTextDrawHide(playerid, REGTD20[playerid]);
	PlayerTextDrawHide(playerid, REGTD21[playerid]);
	PlayerTextDrawHide(playerid, REGTD22[playerid]);
	PlayerTextDrawHide(playerid, REGTD23[playerid]);
	PlayerTextDrawHide(playerid, REGTD24[playerid]);
	PlayerTextDrawHide(playerid, REGTD25[playerid]);
	PlayerTextDrawHide(playerid, REGTD26[playerid]);
	PlayerTextDrawHide(playerid, REGTD27[playerid]);
	PlayerTextDrawHide(playerid, REGTD28[playerid]);
	PlayerTextDrawHide(playerid, REGTD29[playerid]);
	PlayerTextDrawHide(playerid, REGTD30[playerid]);
	PlayerTextDrawHide(playerid, REGTD31[playerid]);
	PlayerTextDrawHide(playerid, REGTD32[playerid]);
	PlayerTextDrawHide(playerid, REGTD33[playerid]);
	PlayerTextDrawHide(playerid, REGTD34[playerid]);
	PlayerTextDrawHide(playerid, REGTD35[playerid]);
	PlayerTextDrawHide(playerid, REGTD36[playerid]);
	PlayerTextDrawHide(playerid, REGTD37[playerid]);
	PlayerTextDrawHide(playerid, REGTD38[playerid]);
	PlayerTextDrawHide(playerid, REGTD39[playerid]);
}

stock AC_Log(string[])
{
	new entry[128], h, m, s;
	gettime(h,m,s);
	format(entry, sizeof(entry), "[%d:%d:%d] %s\n",h,m,s,string);
	new File:hFile;
	hFile = fopen("logovi/anticheat.log", io_append);
	fwrite(hFile, entry);
	fclose(hFile);
}

stock AC_Poruka(string[])
{
	new str[128];
	format(str, 128, "{A13C0A}[ANTI-CHEAT]: {FFFFFF}%s", string);
	for(new i=0; i<= GetPlayerPoolSize(); i++)
	{
		if(ulogovan[i] == 1)
		{
			if(PlayerInfo[i][pAdmin] > 0)
			{
				SCM(i, -1, str);
			}
		}
	}
}

stock AC_Kick(playerid, id)
{
	new string[256], string2[1024], pName[MAX_PLAYER_NAME], d, m, y, h, minute, s;
	gettime(h, minute, s);
	getdate(y, m, d);
	GetPlayerName(playerid, pName, sizeof(pName));
	ClearChat(playerid);
	if(id == 1)
	{
		format(string, 256, "Igrac {A13C0A}%s {FFFFFF}je kickovan zbog sumnje da korsti {A13C0A}Money Hack!", pName);
		AC_Poruka(string);
		format(string, 256, "Igrac %s je kickovan zbog sumnje da korsti Money Hack!", pName);
		AC_Log(string);
		format(string2, 1024, "{FFFFFF}Vas nick: {A13C0A}%s\n{FFFFFF}Datum i vreme: {A13C0A}%d/%d/%d %d:%d:%d\n\n{FFFFFF}Izbaceni ste sa servera!\nSumnja: {A13C0A}Money Hack\n\n{FFFFFF}Ukoliko smatrate da je ovo greska\nprilozite zalbu sa slikom (F8)\nna nasem forumu!\n{A13C0A}www.perfectcrime-rp.com", pName, d,m,y,h,minute,s);
		SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Izbaceni ste sa servera zbog sumnje da koristite Money Hack!");
		SavePlayer(playerid);
	}
	/*if(id == 2)
	{
		format(string, 256, "Igrac {A13C0A}%s {FFFFFF}je kickovan zbog sumnje da korsti {A13C0A}Teleport Hack!", pName);
		AC_Poruka(string);
		format(string, 256, "Igrac %s je kickovan zbog sumnje da korsti Teleport Hack!", pName);
		AC_Log(string);
		format(string2, 1024, "{FFFFFF}Vas nick: {A13C0A}%s\n{FFFFFF}Datum i vreme: {A13C0A}%d/%d/%d %d:%d:%d\n\n{FFFFFF}Izbaceni ste sa servera!\nSumnja: {A13C0A}Teleport Hack\n\n{FFFFFF}Ukoliko smatrate da je ovo greska\nprilozite zalbu sa slikom (F8)\nna nasem forumu!\n{A13C0A}www.perfectcrime-rp.com", pName, d,m,y,h,minute,s);
		SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Izbaceni ste sa servera zbog sumnje da koristite Teleport Hack!");
		SavePlayer(playerid);
	}*/
	if(id == 3)
	{
		format(string, 256, "Igrac {A13C0A}%s {FFFFFF}je kickovan zbog sumnje da korsti {A13C0A}Weapon Hack!", pName);
		AC_Poruka(string);
		format(string, 256, "Igrac %s je kickovan zbog sumnje da korsti Weapon Hack!", pName);
		AC_Log(string);
		format(string2, 1024, "{FFFFFF}Vas nick: {A13C0A}%s\n{FFFFFF}Datum i vreme: {A13C0A}%d/%d/%d %d:%d:%d\n\n{FFFFFF}Izbaceni ste sa servera!\nSumnja: {A13C0A}Weapon Hack\n\n{FFFFFF}Ukoliko smatrate da je ovo greska\nprilozite zalbu sa slikom (F8)\nna nasem forumu!\n{A13C0A}www.perfectcrime-rp.com", pName, d,m,y,h,minute,s);
		SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Izbaceni ste sa servera zbog sumnje da koristite Weapon Hack!");
		SavePlayer(playerid);
	}
	if(id == 4)
	{
		format(string, 256, "Igrac {A13C0A}%s {FFFFFF}je kickovan zbog sumnje da korsti {A13C0A}Speed Hack!", pName);
		AC_Poruka(string);
		format(string, 256, "Igrac %s je kickovan zbog sumnje da korsti Speed Hack!", pName);
		AC_Log(string);
		format(string2, 1024, "{FFFFFF}Vas nick: {A13C0A}%s\n{FFFFFF}Datum i vreme: {A13C0A}%d/%d/%d %d:%d:%d\n\n{FFFFFF}Izbaceni ste sa servera!\nSumnja: {A13C0A}Speed Hack\n\n{FFFFFF}Ukoliko smatrate da je ovo greska\nprilozite zalbu sa slikom (F8)\nna nasem forumu!\n{A13C0A}www.perfectcrime-rp.com", pName, d,m,y,h,minute,s);
		SendClientMessage(playerid, COLOR_RED, "[Server]: {FFFFFF}Izbaceni ste sa servera zbog sumnje da koristite Speed Hack!");
		SavePlayer(playerid);
	}
	ShowPlayerDialog(playerid, DIALOG_ACKICK, DIALOG_STYLE_MSGBOX, "{A13C0A}AntiCheat", string2, "{FFFFFF}U redu", "");
	SetTimerEx("KickPlayer", 700, false, "i", playerid);
}

forward CilivAttackDM(playerid);
public CilivAttackDM(playerid)
{
	TogglePlayerControllable(playerid, true);
	ClearAnimations(playerid, 1);
	return 1;
}

forward AntiCheatTimer();
public AntiCheatTimer()
{

	for(new i = 0; i < MAX_PLAYERS; i++)
	{
		if(ulogovan[i] == 1)
		{
			if(IsPlayerPaused(i))
			{
				SetPlayerChatBubble(i, "{374A32}[ KORISTI ESC MENI ]", -1, 30.0, 1001);
			}
			else
			{
				UpdateBubble(i);
			}
			if(PlayerInfo[i][pAdmin] < 1)
			{
				newmoney[i] = GetPlayerMoney(i);
				if(lastmoney[i] != newmoney[i])
				{
					if(pmoneytokens[i] == 0)
					{
						taz_GivePlayerMoney(i, (lastmoney[i]-newmoney[i]));
						SavePlayer(i);
						AC_Kick(i, 1);
					}
					else
					{
						pmoneytokens[i] = 0;
						lastmoney[i] = newmoney[i];
					}
				}

				GetPlayerPos(i, newX[i], newY[i], newZ[i]);
				if((floatabs(oldX[i]-newX[i])) > 50 || (floatabs(oldY[i]-newY[i])) > 50 || (floatabs(oldX[i]-newX[i])) > 50)
				{
					if(ppostokens[i] == 0)
					{
						SavePlayer(i);
						AC_Kick(i, 2);
					}
					else
					{
						ppostokens[i] = 0;
					}
				}
				oldX[i] = newX[i];
				oldY[i] = newY[i];
				oldZ[i] = newZ[i];

				for(new n = 0; n < 13; n++)
				{
					GetPlayerWeaponData(i, n, newGun[i][n], newAmmo[i][n]);
					if(((oldGun[i][n] != newGun[i][n]) || (oldAmmo[i][n] <= newAmmo[i][n])) && newGun[i][n] != 0)
					{
						if(PlayerInfo[i][pLevel] < 3) { SavePlayer(i); AC_Kick(i, 3); }
						if(pweptokens[i] != 0)
						{
							oldGun[i][n] = newGun[i][n];
							oldAmmo[i][n] = newAmmo[i][n];
							pweptokens[i] = 0;
						}
						else
						{
							SavePlayer(i);
							AC_Kick(i, 3);
						}
					}
				}
				
				if(GetPlayerSpeed(i) >= 50 && GetPlayerState(i) == PLAYER_STATE_ONFOOT)
				{
					SavePlayer(i);
					AC_Kick(i, 4);
				}
			}
			
		}
	}
	return 1;
}

stock taz_GivePlayerMoney(playerid, kolicina)
{
	GivePlayerMoney(playerid, kolicina);
	pmoneytokens[playerid] = 5;
	if(kolicina < 0)
	{
		PlayerInfo[playerid][pPotrosio] -= kolicina;
	}
}

stock taz_GivePlayerWeapon(playerid, weaponid, ammo)
{
	GivePlayerWeapon(playerid, weaponid, ammo);
	pweptokens[playerid] = 5;
}

stock taz_ResetPlayerWeapons(playerid)
{
	ResetPlayerWeapons(playerid);
	pweptokens[playerid] = 5;
}

stock taz_SetPlayerPos(playerid, Float:X, Float:Y, Float:Z)
{
	SetPlayerPos(playerid, X, Y, Z);
	ppostokens[playerid] = 5;
}

forward load_containers(id, name[], value[]);
public load_containers(id, name[], value[]) {

    INI_Float("X", KontejnerInfo[ id ][ koX ]);
    INI_Float("Y", KontejnerInfo[ id ][ koY ]);
    INI_Float("Z", KontejnerInfo[ id ][ koZ ]);
    INI_Float("rX", KontejnerInfo[ id ][ koRotX ]);
    INI_Float("rY", KontejnerInfo[ id ][ koRotY ]);
    INI_Float("rZ", KontejnerInfo[ id ][ koRotZ ]);
    return true;
}
forward searching_container( playerid );
public searching_container( playerid )
{
	new broj = random(12) + 1;
	if(broj == 1)
	{
	    new rand = random(500) + 200;
        GivePlayerMoney(playerid, rand);
        new str[128];
        format(str, sizeof(str), "Pretrazili ste kontejner i nasli ste %d dolara.", rand);
        SCM(playerid, -1, str);
 	}
 	if(broj == 2)
	{
	    new rand = random(800) + 400;
        GivePlayerMoney(playerid, rand);
        new str[128];
        format(str, sizeof(str), "Pretrazili ste kontejner i nasli ste %d dolara.", rand);
        SCM(playerid, -1, str);
 	}
 	if(broj == 3)
	{
        PlayerInfo[playerid][pZlato] += 1;
        new str[128];
        format(str, sizeof(str), "Pretrazili ste kontejner i nasli ste gram zlata.");
        SCM(playerid, -1, str);
 	}
 	if(broj == 4)
	{
	    taz_GivePlayerWeapon(playerid, 12, 1);
	    SCM(playerid, -1, "Pretrazili ste kontejner i u njemu nasli dildo.");
 	}
 	if(broj == 5)
	{
	    taz_GivePlayerWeapon(playerid, 1, 1);
	    SCM(playerid, -1, "Pretrazili ste kontejner i u njemu nasli boxer.");
 	}
 	if(broj == 6)
	{
	    SCM(playerid, -1, "Pretrazili ste kontejner i u njemu niste nasli nista!");
 	}
 	if(broj == 7)
	{
	    taz_GivePlayerWeapon(playerid, 2, 1);
	    SCM(playerid, -1, "Pretrazili ste kontejner i u njemu nasli golf stap.");
 	}
 	if(broj == 8)
	{
	    taz_GivePlayerWeapon(playerid, 5, 1);
	    SCM(playerid, -1, "Pretrazili ste kontejner i u njemu nasli bejzbol palicu.");
 	}
 	if(broj == 9)
	{
	    taz_GivePlayerWeapon(playerid, 14, 10);
	    SCM(playerid, -1, "Pretrazili ste kontejner i u njemu nasli cvece.");
 	}
 	if(broj == 10 || broj == 11 || broj == 12)
	{
	    new rand = random(600) + 300;
        GivePlayerMoney(playerid, rand);
        new str[128];
        format(str, sizeof(str), "Pretrazili ste kontejner i nasli ste %d dolara.", rand);
        SCM(playerid, -1, str);
 	}
    k_pretrazen[playerid] = 0;
    GameTextForPlayer( playerid, "~y~PRETRAZIVANJE ZAVRSENO..", 3000, 3 );
    TogglePlayerControllable( playerid, 1 );
    ClearAnimations(playerid, 1);
    return 1;
}

forward Filluj(playerid);
public Filluj(playerid)
{
	new name[MAX_PLAYER_NAME], str[128], lit;
	lit = 60-VehInfo[GetPlayerVehicleID(playerid)][vFuel];
	taz_GivePlayerMoney(playerid, -(lit*30));
	format(str, sizeof(str), "{1985A6}[Fuel]: {FFFFFF}Uspesno ste sipali %d litara goriva i to vas je kostalo $%d!", lit, lit*30);
	SCM(playerid, -1, str);
	GetPlayerName(playerid, name, sizeof(name));
	format(str, sizeof(str), "{8C4D85}* %s sipa gorivo u vozilo marke %s.", name, ImenaVozila[GetVehicleModel(GetPlayerVehicleID(playerid))-400]);
	SendMes(20.0, playerid, COLOR_RED, str);
	VehInfo[GetPlayerVehicleID(playerid)][vFuel] = 60;
	VoziloInfo[GetPlayerVehicleID(playerid)][vGorivo] = 60;
	SaveVozilo(GetPlayerVehicleID(playerid));
	return 1;
}

stock PokaziGrad(playerid, i)
{
	new str[128];
	if(i == 1)
	{
		PrikaziTDSelo(playerid);
		SetPlayerCameraPos(playerid, -249.5303, 1311.7217, 63.0799);
		SetPlayerCameraLookAt(playerid, -249.0248, 1312.5831, 63.0352);
		InterpolateCameraPos(playerid, -249.5303, 1311.7217, 63.0799, -271.5242, 1291.9683, 68.1720, 8000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, -249.0248, 1312.5831, 63.0352, -270.9004, 1291.1885, 67.9574, 8000, CAMERA_MOVE);
		PlayerTextDrawSetString(playerid, IzborSelaTD4[playerid], "Fort Carson");
		format(str, 128, "Broj stanovnika: ~g~%d", fcr);
		PlayerTextDrawSetString(playerid, IzborSelaTD5[playerid], str);
		PlayerTextDrawSetString(playerid, IzborSelaTD6[playerid], "Drzavljanstvo: ~b~Las Venturas");

	}
	if(i == 2)
	{
		SetPlayerCameraPos(playerid, 1490.0583, 386.7784, 61.3590);
		SetPlayerCameraLookAt(playerid, 1490.7631, 387.4929, 61.1889);
		InterpolateCameraPos(playerid, 1490.0583, 386.7784, 61.3590, 1459.6877, 400.9625, 56.9179, 8000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, 1490.7631, 387.4929, 61.1889, 1458.8849, 400.3605, 56.6879, 8000, CAMERA_MOVE);
		PlayerTextDrawSetString(playerid, IzborSelaTD4[playerid], "Blueberry");
		format(str, 128, "Broj stanovnika: ~g~%d", bbr);
		PlayerTextDrawSetString(playerid, IzborSelaTD5[playerid], str);
		PlayerTextDrawSetString(playerid, IzborSelaTD6[playerid], "Drzavljanstvo: ~b~Los Santos");
	}
	if(i == 3)
	{
		SakrijTDSelo(playerid);
		TogglePlayerSpectating(playerid, true);
		SetPlayerCameraPos(playerid, 1734.1237, -1815.2443, 167.8269);
		SetPlayerCameraLookAt(playerid, 1733.3126, -1814.6517, 167.3868);
		PlayerInfo[playerid][pGrad] = pIzborGrada[playerid];
		ClearChat(playerid);
		SCM(playerid, -1, "{FFFFFF}Dobrodosli na {1985A6}PerfectCrime: Reborn {FFFFFF}- novu epohu nase price!");
		SCM(playerid, -1, "{FFFFFF}Od {1985A6}2019{FFFFFF}, pa do danas, prica vaseg igraca bila je u velikomo gradu!");
		SCM(playerid, -1, "{FFFFFF}Za obnovu naseg servera, odlucili smo da uvedemo pricu igraca kroz vizuelne cutscene i tekstove!");
		SCM(playerid, -1, "{FFFFFF}Od sada, vas karakter u igrici ima svoju pricu koju vi vremenom oblikujete!");
		SCM(playerid, -1, "{FFFFFF}Za pocetak, vas character bezi od svoje proslosti, u potrazi za novim zivotom, a na vama je kako ce se njegov zivot dalje odvijati!");
		SCM(playerid, -1, "{FFFFFF}Za koji trenutak ce vam biti pokazana uvodna cutscena, posle koje ce vam sve biti jasnije!");
		SCM(playerid, -1, "{FFFFFF}I za sam kraj, zelimo vam zabavnu i uspesnu igru na nasem serveru, vas {1985A6}PerfectCrime {FFFFFF}Admin tim!");
		InterpolateCameraPos(playerid, 1734.1237, -1815.2443, 167.8269, 1348.0231, 1672.2528, 70.7148, 40000, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, 1733.3126, -1814.6517, 167.3868, 1347.2183, 1671.6495, 70.5451, 40000, CAMERA_MOVE);
		SetTimerEx("PrikaziUvod", 50000, false, "i", playerid);
		if(PlayerInfo[playerid][pGrad] == 1)
			{ fcr++; SacuvajStatistiku(); }
		else
			{ bbr++; SacuvajStatistiku(); }
		SavePlayer(playerid);
	}
}

stock PrikaziTDSelo(playerid)
{
	PlayerTextDrawShow(playerid, IzborSelaTD0[playerid]);
	PlayerTextDrawShow(playerid, IzborSelaTD1[playerid]);
	PlayerTextDrawShow(playerid, IzborSelaTD2[playerid]);
	PlayerTextDrawShow(playerid, IzborSelaTD3[playerid]);
	PlayerTextDrawShow(playerid, IzborSelaTD4[playerid]);
	PlayerTextDrawShow(playerid, IzborSelaTD5[playerid]);
	PlayerTextDrawShow(playerid, IzborSelaTD6[playerid]);
	PlayerTextDrawShow(playerid, IzborSelaTD7[playerid]);
	PlayerTextDrawShow(playerid, IzborSelaTD8[playerid]);
	PlayerTextDrawShow(playerid, IzborSelaTD9[playerid]);
}
stock SakrijTDSelo(playerid)
{
	PlayerTextDrawHide(playerid, IzborSelaTD0[playerid]);
	PlayerTextDrawHide(playerid, IzborSelaTD1[playerid]);
	PlayerTextDrawHide(playerid, IzborSelaTD2[playerid]);
	PlayerTextDrawHide(playerid, IzborSelaTD3[playerid]);
	PlayerTextDrawHide(playerid, IzborSelaTD4[playerid]);
	PlayerTextDrawHide(playerid, IzborSelaTD5[playerid]);
	PlayerTextDrawHide(playerid, IzborSelaTD6[playerid]);
	PlayerTextDrawHide(playerid, IzborSelaTD7[playerid]);
	PlayerTextDrawHide(playerid, IzborSelaTD8[playerid]);
	PlayerTextDrawHide(playerid, IzborSelaTD9[playerid]);
}

forward CivilAttackDM(playerid);
public CivilAttackDM(playerid)
{
	TogglePlayerControllable(playerid, true);
	return 1;
}

stock PrikaziLicnu(playerid)
{
	if(gledalicnu[playerid] == 0)
	{
		PlayerTextDrawShow(playerid, StatsTD0[playerid]);
		PlayerTextDrawShow(playerid, StatsTD1[playerid]);
		PlayerTextDrawShow(playerid, StatsTD2[playerid]);
		PlayerTextDrawShow(playerid, StatsTD3[playerid]);
		PlayerTextDrawShow(playerid, StatsTD4[playerid]);
		PlayerTextDrawShow(playerid, StatsTD5[playerid]);
		PlayerTextDrawShow(playerid, StatsTD6[playerid]);
		PlayerTextDrawShow(playerid, StatsTD7[playerid]);
		PlayerTextDrawShow(playerid, StatsTD8[playerid]);
		PlayerTextDrawShow(playerid, StatsTD9[playerid]);
		PlayerTextDrawShow(playerid, StatsTD10[playerid]);
		PlayerTextDrawShow(playerid, StatsTD11[playerid]);
		PlayerTextDrawShow(playerid, StatsTD12[playerid]);
		PlayerTextDrawShow(playerid, StatsTD13[playerid]);
		PlayerTextDrawShow(playerid, StatsTD14[playerid]);
		PlayerTextDrawShow(playerid, StatsTD15[playerid]);
		PlayerTextDrawShow(playerid, StatsTD16[playerid]);
		PlayerTextDrawShow(playerid, StatsTD17[playerid]);
		PlayerTextDrawShow(playerid, StatsTD18[playerid]);
		PlayerTextDrawShow(playerid, StatsTD19[playerid]);
		PlayerTextDrawShow(playerid, StatsTD20[playerid]);
		PlayerTextDrawShow(playerid, StatsTD21[playerid]);
		PlayerTextDrawShow(playerid, StatsTD22[playerid]);
		PlayerTextDrawShow(playerid, StatsTD23[playerid]);
		PlayerTextDrawShow(playerid, StatsTD24[playerid]);
		PlayerTextDrawShow(playerid, StatsTD25[playerid]);
		PlayerTextDrawShow(playerid, StatsTD26[playerid]);
		PlayerTextDrawShow(playerid, StatsTD27[playerid]);
		PlayerTextDrawShow(playerid, StatsTD28[playerid]);
		PlayerTextDrawShow(playerid, StatsTD29[playerid]);
		PlayerTextDrawShow(playerid, StatsTD30[playerid]);
		PlayerTextDrawShow(playerid, StatsTD31[playerid]);
		PlayerTextDrawShow(playerid, StatsTD32[playerid]);
		PlayerTextDrawShow(playerid, StatsTD33[playerid]);
		PlayerTextDrawShow(playerid, StatsTD34[playerid]);
		PlayerTextDrawShow(playerid, StatsTD35[playerid]);
		PlayerTextDrawShow(playerid, StatsTD36[playerid]);
		PlayerTextDrawShow(playerid, StatsTD37[playerid]);
		PlayerTextDrawShow(playerid, StatsTD38[playerid]);
		PlayerTextDrawShow(playerid, StatsTD39[playerid]);
		PlayerTextDrawShow(playerid, StatsTD40[playerid]);
		PlayerTextDrawShow(playerid, StatsTD41[playerid]);
		PlayerTextDrawShow(playerid, StatsTD42[playerid]);
		PlayerTextDrawShow(playerid, StatsTD43[playerid]);
		PlayerTextDrawShow(playerid, StatsTD44[playerid]);
		PlayerTextDrawShow(playerid, StatsTD45[playerid]);
		PlayerTextDrawShow(playerid, StatsTD46[playerid]);
		gledalicnu[playerid] = 1;
	}
	else
	{
		gledalicnu[playerid] = 0;
		PlayerTextDrawHide(playerid, StatsTD0[playerid]);
		PlayerTextDrawHide(playerid, StatsTD1[playerid]);
		PlayerTextDrawHide(playerid, StatsTD2[playerid]);
		PlayerTextDrawHide(playerid, StatsTD3[playerid]);
		PlayerTextDrawHide(playerid, StatsTD4[playerid]);
		PlayerTextDrawHide(playerid, StatsTD5[playerid]);
		PlayerTextDrawHide(playerid, StatsTD6[playerid]);
		PlayerTextDrawHide(playerid, StatsTD7[playerid]);
		PlayerTextDrawHide(playerid, StatsTD8[playerid]);
		PlayerTextDrawHide(playerid, StatsTD9[playerid]);
		PlayerTextDrawHide(playerid, StatsTD10[playerid]);
		PlayerTextDrawHide(playerid, StatsTD11[playerid]);
		PlayerTextDrawHide(playerid, StatsTD12[playerid]);
		PlayerTextDrawHide(playerid, StatsTD13[playerid]);
		PlayerTextDrawHide(playerid, StatsTD14[playerid]);
		PlayerTextDrawHide(playerid, StatsTD15[playerid]);
		PlayerTextDrawHide(playerid, StatsTD16[playerid]);
		PlayerTextDrawHide(playerid, StatsTD17[playerid]);
		PlayerTextDrawHide(playerid, StatsTD18[playerid]);
		PlayerTextDrawHide(playerid, StatsTD19[playerid]);
		PlayerTextDrawHide(playerid, StatsTD20[playerid]);
		PlayerTextDrawHide(playerid, StatsTD21[playerid]);
		PlayerTextDrawHide(playerid, StatsTD22[playerid]);
		PlayerTextDrawHide(playerid, StatsTD23[playerid]);
		PlayerTextDrawHide(playerid, StatsTD24[playerid]);
		PlayerTextDrawHide(playerid, StatsTD25[playerid]);
		PlayerTextDrawHide(playerid, StatsTD26[playerid]);
		PlayerTextDrawHide(playerid, StatsTD27[playerid]);
		PlayerTextDrawHide(playerid, StatsTD28[playerid]);
		PlayerTextDrawHide(playerid, StatsTD29[playerid]);
		PlayerTextDrawHide(playerid, StatsTD30[playerid]);
		PlayerTextDrawHide(playerid, StatsTD31[playerid]);
		PlayerTextDrawHide(playerid, StatsTD32[playerid]);
		PlayerTextDrawHide(playerid, StatsTD33[playerid]);
		PlayerTextDrawHide(playerid, StatsTD34[playerid]);
		PlayerTextDrawHide(playerid, StatsTD35[playerid]);
		PlayerTextDrawHide(playerid, StatsTD36[playerid]);
		PlayerTextDrawHide(playerid, StatsTD37[playerid]);
		PlayerTextDrawHide(playerid, StatsTD38[playerid]);
		PlayerTextDrawHide(playerid, StatsTD39[playerid]);
		PlayerTextDrawHide(playerid, StatsTD40[playerid]);
		PlayerTextDrawHide(playerid, StatsTD41[playerid]);
		PlayerTextDrawHide(playerid, StatsTD42[playerid]);
		PlayerTextDrawHide(playerid, StatsTD43[playerid]);
		PlayerTextDrawHide(playerid, StatsTD44[playerid]);
		PlayerTextDrawHide(playerid, StatsTD45[playerid]);
		PlayerTextDrawHide(playerid, StatsTD46[playerid]);
	}
}

forward CamInterp(playerid);
public CamInterp(playerid)
{
	TogglePlayerSpectating(playerid, true);
	SetPlayerCameraPos(playerid, 1744.5845, 1446.5759, 41.3498);
	SetPlayerCameraLookAt(playerid, 1743.5801, 1446.5543, 41.0797);
	InterpolateCameraPos(playerid, 1744.5845, 1446.5759, 41.3498, 1913.4048, 1446.7810, 410.5465, 4300, CAMERA_MOVE);
	InterpolateCameraLookAt(playerid, 1743.5801, 1446.5543, 41.0797, 1912.4000, 1446.7786, 403.5514, 4300, CAMERA_MOVE);
    pFlyingTimer[playerid] = SetTimerEx("CamInterp2", 4500, false, "i", playerid);
	return 1;
}
forward CamInterp2(playerid);
public CamInterp2(playerid)
{
	if(PlayerInfo[playerid][pGrad] == 1)
	{
		SetPlayerCameraPos(playerid, 1913.4048, 1446.7810, 410.5465);
		SetPlayerCameraLookAt(playerid, 1912.4000, 1446.7786, 403.5514);
		InterpolateCameraPos(playerid, 1913.4048, 1446.7810, 410.5465, 83.1792, 1168.8965, 210.3393, 4300, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, 1912.4000, 1446.7786, 403.5514, 82.1741, 1168.8926, 204.4996, 4300, CAMERA_MOVE);
	}
	else
	{
		SetPlayerCameraPos(playerid, 1913.4048, 1446.7810, 410.5465);
		SetPlayerCameraLookAt(playerid, 1912.4000, 1446.7786, 403.5514);
		InterpolateCameraPos(playerid, 1913.4048, 1446.7810, 410.5465, 1215.5734, 278.0742, 214.6810, 4300, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, 1912.4000, 1446.7786, 403.5514, 1215.9606, 279.0027, 205.3615, 4300, CAMERA_MOVE);
	}
    pFlyingTimer[playerid] = SetTimerEx("CamInterp3", 4500, false, "i", playerid);
	return 1;
}
forward CamInterp3(playerid);
public CamInterp3(playerid)
{
	if(PlayerInfo[playerid][pGrad] == 1)
	{
		SetPlayerCameraPos(playerid, 83.1792, 1168.8965, 210.3393);
		SetPlayerCameraLookAt(playerid, 82.1741, 1168.8926, 204.4996);
		InterpolateCameraPos(playerid, 83.1792, 1168.8965, 210.3393, 55.8133,1167.2178,18.6641, 3500, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, 82.1741, 1168.8926, 204.4996, 55.8133,1167.2178,8.6641, 3500, CAMERA_MOVE);
	}
	else
	{
		SetPlayerCameraPos(playerid, 1215.5734, 278.0742, 214.6810);
		SetPlayerCameraLookAt(playerid, 1215.9606, 279.0027, 205.3615);
		InterpolateCameraPos(playerid, 1215.5734, 278.0742, 214.6810, 1226.9680,311.4328,19.7578, 3500, CAMERA_MOVE);
		InterpolateCameraLookAt(playerid, 1215.9606, 279.0027, 205.3615, 1226.9680,311.4328,9.7578, 3500, CAMERA_MOVE);
	}
	FadeAlpha[playerid] = 0;
	SetTimerEx("ZapocniFade", 1000, false, "i", playerid);
	SetTimerEx("UnFade", 2600, false, "i", playerid);
    pFlyingTimer[playerid] = SetTimerEx("FinallySpawnPlayer", 2600, false, "i", playerid);
	return 1;
}

forward UpdateLoadingBar(playerid);
public UpdateLoadingBar(playerid)
{
	if(pBarValue[playerid] < 500) 
	{ pBarValue[playerid]+=8; SetPlayerProgressBarValue(playerid, LoadingProgressBar[playerid][0], pBarValue[playerid]); }
	else
	{
		new str[1024], year, mounth, day, pime[MAX_PLAYER_NAME], rank[64];
	    GetPlayerName(playerid, pime, sizeof(pime));
		getdate(year, mounth, day);
		format(rank, 64, "Nijedna");
		if(PlayerInfo[playerid][pPromoter] == 1) format(rank, 64, "Promoter");
		if(PlayerInfo[playerid][pHelper] > 0) format(rank, 64, "Helper");
		if(PlayerInfo[playerid][pAdmin] > 0 && PlayerInfo[playerid][pAdmin] < 5) format(rank, 64, "Admin");
		if(PlayerInfo[playerid][pAdmin] == 5) format(rank, 64, "Head Admin");
		if(PlayerInfo[playerid][pAdmin] == 6) format(rank, 64, "Direktor");
		if(PlayerInfo[playerid][pAdmin] == 7) format(rank, 64, "Generalni Direktor");
		if(PlayerInfo[playerid][pAdmin] == 8) format(rank, 64, "Suvlasnik");
		if(PlayerInfo[playerid][pAdmin] == 9) format(rank, 64, "Vlasnik");
		if(PlayerInfo[playerid][pAdmin] == 10) format(rank, 64, "Predsednica");
		if(PlayerInfo[playerid][pAdmin] == 1337) format(rank, 64, "Skripter");
	    format(str, 1024, "{FFFFFF}\nDobrodosli na {1985A6}PerfectCrime!\n\n{FFFFFF}Ime i Prezime: {1985A6}%s\n{FFFFFF}Datum: {1985A6}%d/{1985A6}%d/{1985A6}%d\n{FFFFFF}Nivo: {1985A6}%d\n{FFFFFF}Nagradni poeni: {1985A6}%d\n{FFFFFF}Specijalna pozicija: {1985A6}%s\n\n{FFFFFF}Imate 30 sekundi da unesete lozinku!:", pime, day, mounth, year, PlayerInfo[playerid][pLevel], PlayerInfo[playerid][pNagradniPoeni], rank);
		DestroyPlayerProgressBar(playerid, LoadingProgressBar[playerid][0]);
		ShowPlayerDialog(playerid, DIALOG_LOGIN, DIALOG_STYLE_PASSWORD, "{FFFFFF}Login", str, "Prijavi se", "Odustani");
		logintimer[playerid] = SetTimerEx("LoginTimer", 30000, false, "i", playerid);
		KillTimer(pBarTimer[playerid]);
		ClearChat(playerid);
	}
	return 1;
}

forward SmrtTimer(playerid);
public SmrtTimer(playerid)
{
	if(pDeathSecs[playerid] > 0)
	{
		new str[100];
		format(str, 100, "~w~Iskrvaricete za ~r~%d ~w~sekundi!", pDeathSecs[playerid]);
		GameTextForPlayer(playerid, str, 1000, 3);
	}
	else
	{
		KillTimer(pDeathTimer[playerid]);
		pDeathSecs[playerid] = 0;
		ClearChat(playerid);
		SCM(playerid, COLOR_RED, "[Povreda]: {FFFFFF}Prebaceni ste u operacionu salu, uskoro cete biti izleceni!");
		PlayerTextDrawBoxColor(playerid, DeathTD[playerid], 0xFFFFFFFF);
		PlayerTextDrawShow(playerid, DeathTD[playerid]);
		SetTimerEx("Operacija", 60000, false, "u", playerid);
		TogglePlayerSpectating(playerid, true);
	}
	return 1;
}

forward Operacija(playerid);
public Operacija(playerid)
{
	PlayerTextDrawBoxColor(playerid, DeathTD[playerid], 0xFF000077);
	PlayerTextDrawHide(playerid, DeathTD[playerid]);
	TogglePlayerSpectating(playerid, false);
	if(PlayerInfo[playerid][pGrad] == 1)
	{SetSpawnInfo(playerid, 0, PlayerInfo[playerid][pSkin], 55.8133,1167.2178,18.6641, 270, 0, 0, 0, 0, 0, 0);}
	else
	{SetSpawnInfo(playerid, 0, PlayerInfo[playerid][pSkin], 1241.5402,326.4240,19.7555,180.0, 0, 0, 0, 0, 0, 0);}
	SCM(playerid, COLOR_RED, "[Bolnica]: {FFFFFF}Operacija je uspesno zavrsena, naplaceno vam je $7.000!");
	taz_GivePlayerMoney(playerid, -7000);
	return 1;
}

forward StartEvent();
public StartEvent()
{
	eventPoceo = true;
	return 1;
}

forward EndEvent();
public EndEvent()
{
	eventTraje = false;
	KillTimer(eventPocetakTimer);
	for(new i = 0; i < MAX_EVENT_SLOTS; i++)
	{
		SpawnPlayer(listaIgracaUEventu[i]);
		SCM(listaIgracaUEventu[i], COLOR_RED, "Admin je prekinuo event i zbog toga ste izbaceni iz istog!");
	}
	return 1;
}

forward PrekiniPoziv(playerid);
public PrekiniPoziv(playerid)
{
	pCall[pPozivalac[playerid]] = -1;
	SCM(pPozivalac[playerid], -1, "Igrac se nije javio na telefon, poziv je prekinut!");
	SCM(playerid, -1, "Niste se na vreme javili na telefon, poziv je prekinut!");
	new str[128], name[MAX_PLAYER_NAME];
	
	GetPlayerName(playerid, name, sizeof(name));
	format(str, sizeof(str), "{CF80A9}* %s-u je prestao da zvoni telefon.", name);
 	SendMes(20.0, playerid, COLOR_RED, str);
	ApplyAnimation(playerid, "PED", "PHONE_OUT", 4.1, false, true, true, false, 1, 1);
 	
 	GetPlayerName(pPozivalac[playerid], name, sizeof(name));
	format(str, sizeof(str), "{CF80A9}* %s je prestao da poziva igraca telefonom.", name);
 	SendMes(20.0, pPozivalac[playerid], COLOR_RED, str);
	ApplyAnimation(pPozivalac[playerid], "PED", "PHONE_OUT", 4.1, false, true, true, false, 1, 1);
 	
	pPozivalac[playerid] = -1;
	return 1;
}
forward TelefonAnim(playerid);
public TelefonAnim(playerid)
{
	ApplyAnimation(playerid, "PED", "PHONE_TALK", 3.0, true, true, true, false, 1, 1);
	return 1;
}
forward PlacanjePutarine(playerid, gateid);
public PlacanjePutarine(playerid, gateid)
{
	TogglePlayerControllable(playerid, 1);
	otvaraGate[playerid] = -1;
	OtvoriNaplatniGate(gateid);
	taz_GivePlayerMoney(playerid, -200);
	GameTextForPlayer(playerid, "~g~Putarina placena!", 2500, 3);
	return 1;
}

forward UpdateTDSkin(playerid);
public UpdateTDSkin(playerid)
{
	PlayerTextDrawSetPreviewModel(playerid, Textdrawp6[playerid], GetPlayerSkin(playerid));
	PlayerTextDrawShow(playerid, Textdrawp6[playerid]);
	return 1;
}

forward WantedPoruka(playerid);
public WantedPoruka(playerid)
{
	return 1;
}
forward UzimaSirovine(playerid, kid);
public UzimaSirovine(playerid, kid)
{
	new str[256], pls = 10 + random(3), alm = 200 + random(100);
	TogglePlayerControllable(playerid, 1);
	pNosiSmece[playerid] = true;
	pPlastika[playerid] += pls;
	pAluminijum[playerid] += alm;
	if(pPlastika[playerid] > 200) { pPlastika[playerid] = 200; }
	if(pAluminijum[playerid] > 4000) { pAluminijum[playerid] = 4000; }
	format(str, 256, "[SSS]: {FFFFFF}U kontejneru ste pronasli {DAA520}%d {FFFFFF}kilograma plastike i {DAA520}%d {FFFFFF}grama aluminijuma!", pls, alm);
	SCM(playerid, 0xDAA520FF, str);
	format(str, 256, "[SSS]: {FFFFFF}Ukupno imate {DAA520}%d {FFFFFF}kilograma plastike i {DAA520}%d grama aluminijuma!", pPlastika[playerid], pAluminijum[playerid] );
	SCM(playerid, 0xDAA520FF, str);
	SCM(playerid, 0xDAA520FF, "[SSS]: {FFFFFF}Da ubacite dzak u vozilo, ukucajte {DAA520}/ubacisirovine!");
	if(pPlastika[playerid] == 200 && pAluminijum[playerid] == 4000) SCM(playerid, -1, "{DAA520}[SSS]: {FFFFFF}Nakupili ste maksimalnu masu sirovina, odnesite je na reciklazu! (/zavrsiposao)");
	SetPlayerSpecialAction(playerid, SPECIAL_ACTION_CARRY);
	SetPlayerAttachedObject(playerid, 1, 1265, 14, 0.45, -0.4, 0.10, 100.0, -17.0, -10.0, 1.0, 1.0, 1.0);
	ApplyAnimation(playerid, "CARRY", "liftup105", 4.1, 0, 1, 1, 0, 1, 1);
	pJobProgress[playerid] = kid;
	return 1;
}
forward JailTimer(playerid);
public JailTimer(playerid)
{
	new str[80];
	format(str, 80, "~r~U zatvoru ste jos: ~w~%d sekundi", PlayerInfo[playerid][pJailTime]);
	PlayerInfo[playerid][pJailTime]--;
	GameTextForPlayer(playerid, str, 1000, 3);
	if(PlayerInfo[playerid][pJailTime] <= 0)
	{
		OslobodiIzJail(playerid);
		SendClientMessage(playerid, -1, "{DAA520}[Jail]: {FFFFFF}Zatvorska kazna vam se upravo zavrsila, pusteni ste na slobodu.");
	}
	return 1;
}
stock OslobodiIzJail(playerid)
{
	KillTimer(pJailTimer[playerid]);
	if(PlayerInfo[playerid][pJailPlace] == 0)
	{ taz_SetPlayerPos(playerid, OrgInfo[1][orgX], OrgInfo[1][orgY], OrgInfo[1][orgZ]); }
	else if(PlayerInfo[playerid][pJailPlace] == 1)
	{ taz_SetPlayerPos(playerid, OrgInfo[2][orgX], OrgInfo[2][orgY], OrgInfo[2][orgZ]); }
	else
	{
		taz_SetPlayerPos(playerid, 171.0269, 1912.8392, 18.2950);
	}
	SetPlayerInterior(playerid, 0);
	pUJailu[playerid] = 0;
	SavePlayer(playerid);
}
stock ZatvoriUJail(playerid, placeid, trajanje)
{
	if(placeid == 0) { SetSpawnInfo(playerid, 0, PlayerInfo[playerid][pSkin], 269.1466, 89.6520, 1001.0641, 270, 0, 0, 0, 0, 0, 0); SetPlayerInterior(playerid, 6); }
	else if(placeid == 1) { SetSpawnInfo(playerid, 0, PlayerInfo[playerid][pSkin], 223.5584, 114.6579, 999.0126, 270, 0, 0, 0, 0, 0, 0); SetPlayerInterior(playerid, 10); }
	else { SetSpawnInfo(playerid, 0, PlayerInfo[playerid][pSkin], 196.3977, 1898.5800, 17.6473, 0, 0, 0, 0, 0, 0, 0); SetPlayerInterior(playerid, 0); }
	PlayerInfo[playerid][pJailTime] = trajanje;
	PlayerInfo[playerid][pJailPlace] = placeid;
	pJailTimer[playerid] = SetTimerEx("JailTimer", 1000, true, "i", playerid);
	pUJailu[playerid] = 1;
	SpawnPlayer(playerid);
	SavePlayer(playerid);
}
forward UnFadeStep(playerid);
public UnFadeStep(playerid)
{
	if(FadeAlpha[playerid] <= 0)
	{
		FadeAlpha[playerid] = 0;
		KillTimer(FadeTimer[playerid]);
		return 1;
	}
	FadeAlpha[playerid] -= 12;
	if(FadeAlpha[playerid] < 0) FadeAlpha[playerid] = 0;

	PlayerTextDrawBoxColor(playerid, BlackScreenTD[playerid], FadeAlpha[playerid]);
    PlayerTextDrawShow(playerid, BlackScreenTD[playerid]);
	return 1;
}
forward FadeStep(playerid);
public FadeStep(playerid)
{
	if(FadeAlpha[playerid] >= 255)
	{
	 	FadeAlpha[playerid] = 255;
		KillTimer(FadeTimer[playerid]);
		return 1;
	}
	FadeAlpha[playerid] += 12;
	if(FadeAlpha[playerid] > 255) FadeAlpha[playerid] = 255;

	PlayerTextDrawBoxColor(playerid, BlackScreenTD[playerid], FadeAlpha[playerid]);
    PlayerTextDrawShow(playerid, BlackScreenTD[playerid]);
	return 1;
}
forward UnFade(playerid);
public UnFade(playerid)
{
	TogglePlayerSpectating(playerid, false);
	SakrijLoadingTD(playerid);
	FadeAlpha[playerid] = 255;
    if(FadeTimer[playerid]) KillTimer(FadeTimer[playerid]);
    FadeTimer[playerid] = SetTimerEx("UnFadeStep", 35, true, "i", playerid);
	return 1;
}
forward FinallySpawnPlayer(playerid);
public FinallySpawnPlayer(playerid)
{
	SCM(playerid, -1, "{FFFFFF}Dobrodosli na {1985A6}PerfectCrime!");
	new str[128], year, mounth, day, hour, minute, second, pime[MAX_PLAYER_NAME], rank[64];
	GetPlayerName(playerid, pime, sizeof(pime));
	getdate(year, mounth, day);
	gettime(hour, minute, second);
	format(rank, 64, "Nijedna");
	if(PlayerInfo[playerid][pPromoter] == 1) format(rank, 64, "Promoter");
	if(PlayerInfo[playerid][pHelper] > 0) format(rank, 64, "Helper");
	if(PlayerInfo[playerid][pAdmin] > 0 && PlayerInfo[playerid][pAdmin] < 5) format(rank, 64, "Admin");
	if(PlayerInfo[playerid][pAdmin] == 5) format(rank, 64, "Head Admin");
	if(PlayerInfo[playerid][pAdmin] == 6) format(rank, 64, "Direktor");
	if(PlayerInfo[playerid][pAdmin] == 7) format(rank, 64, "Generalni Direktor");
	if(PlayerInfo[playerid][pAdmin] == 8) format(rank, 64, "Suvlasnik");
	if(PlayerInfo[playerid][pAdmin] == 9) format(rank, 64, "Vlasnik");
	if(PlayerInfo[playerid][pAdmin] == 10) format(rank, 64, "Predsednica");
	if(PlayerInfo[playerid][pAdmin] == 1337) format(rank, 64, "Skripter");
	format(str, 128, "{FFFFFF}Nick: {1985A6}%s", pime);
	SCM(playerid, -1, str);
	format(str, 128, "{FFFFFF}Vreme logina: {1985A6}%d/%d/%d %d:%d:%d", day, mounth, year, hour, minute, second);
	SCM(playerid, -1, str);
	format(str, 128, "{FFFFFF}Specijalna pozicija: {1985A6}%s", rank);
	SCM(playerid, -1, str);
	SCM(playerid, -1, "Zelimo vam ugodnu igru na serveru, vas {1985A6}PerfectCrime {FFFFFF}Admin team!");
	ulogovan[playerid] = 1;
	TogglePlayerSpectating(playerid, false);
	SpawnPlayer(playerid);
	new bool:pronadjen = false;
	for(new i = 0; i < MAX_ADMINS; i++)
	{
		if(!strcmp(AdminInfo[i][aName], pime))
		{
			pronadjen = true;
			break;
		}
	}
	if(!pronadjen)
	{
		PlayerInfo[playerid][pAdmin] = 0;
		SavePlayer(playerid);
		SCM(playerid, COLOR_RED, "Ne nalazite se na zvanicnoj listi admina, skinut vam je admin!");
	}
	return 1;
}
forward ZapocniFade(playerid);
public ZapocniFade(playerid)
{
	FadeTimer[playerid] = SetTimerEx("FadeStep", 35, true, "i", playerid);
	return 1;
}
forward TazTimer(playerid);
public TazTimer(playerid)
{
	pTazed[playerid] = 0;
	if(pCuffed[playerid] == 0)
	{
		TogglePlayerControllable(playerid, 1);
		ClearAnimations(playerid);
		GameTextForPlayer(playerid, "Prosao vam je taz efekat", 3000, 3);
	}
	return 1;
}
forward OslobodiSe(playerid);
public OslobodiSe(playerid)
{
	if(pCuffed[playerid] != 0)
	{
		TogglePlayerControllable(playerid, 1);
		pCuffed[playerid] = 0;
		ClearAnimations(playerid);
		SetPlayerSpecialAction(playerid, SPECIAL_ACTION_NONE);
		GameTextForPlayer(playerid, "~g~Lisice su pukle, oslobodili ste se", 3000, 3);
		new str[128], name[MAX_PLAYER_NAME];
		GetPlayerName(playerid, name, sizeof(name));
		format(str, sizeof(str), "{CF80A9}* %s lomi lisice i oslobadja se.", name);
		SendMes(20.0, playerid, COLOR_RED, str);
		SetPlayerAmmo(playerid, WEAPON_SILENCED, 0);
		KillTimer(pDragTimer[playerid]);
		if(pDragged[playerid] != -1)
		{
			pDragging[pDragged[playerid]] = -1;
		}
	}
	return 1;
}
forward Vucenje(id, playerid);
public Vucenje(id, playerid)
{
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(playerid, X,Y,Z);
	taz_SetPlayerPos(id, X+0.3,Y+0.3,Z);
	return 1;
}

forward Tracking(id, playerid);
public Tracking(id, playerid)
{
	new Float:X, Float:Y, Float:Z;
	GetPlayerPos(id, X,Y,Z);
	DisablePlayerCheckpoint(playerid);
	SetPlayerCheckpoint(playerid,X,Y,Z, 2.0);
	return 1;
}